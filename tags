!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
A	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^CDialogAgent& CDialogAgent::A(const char *lpszDialogAgentPath, ...) {$/;"	f	class:CDialogAgent	signature:(const char *lpszDialogAgentPath, ...)
A	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^CDialogAgent& CDialogAgent::A(string sDialogAgentPath) {$/;"	f	class:CDialogAgent	signature:(string sDialogAgentPath)
A	DMCore/Agents/DialogAgents/DialogAgent.h	/^	CDialogAgent& A(const char* lpszDialogAgentPath, ...);$/;"	p	class:CDialogAgent	access:public	signature:(const char* lpszDialogAgentPath, ...)
A	DMCore/Agents/DialogAgents/DialogAgent.h	/^	CDialogAgent& A(string sDialogAgentPath);$/;"	p	class:CDialogAgent	access:public	signature:(string sDialogAgentPath)
ABSTRACT_CONCEPT	DMCore/Concepts/Concept.h	143;"	d
ACCEPT	DMCore/Grounding/GroundingActions/GAAccept.h	96;"	d
ACTION_FAILED	DMCore/Core.h	77;"	d
ACTION_SUCCESS	DMCore/Core.h	75;"	d
ALIGN_CENTER	spdlog/fmt/bundled/format.h	/^    ALIGN_DEFAULT, ALIGN_LEFT, ALIGN_RIGHT, ALIGN_CENTER, ALIGN_NUMERIC$/;"	e	enum:fmt::Alignment
ALIGN_DEFAULT	spdlog/fmt/bundled/format.h	/^    ALIGN_DEFAULT, ALIGN_LEFT, ALIGN_RIGHT, ALIGN_CENTER, ALIGN_NUMERIC$/;"	e	enum:fmt::Alignment
ALIGN_LEFT	spdlog/fmt/bundled/format.h	/^    ALIGN_DEFAULT, ALIGN_LEFT, ALIGN_RIGHT, ALIGN_CENTER, ALIGN_NUMERIC$/;"	e	enum:fmt::Alignment
ALIGN_NUMERIC	spdlog/fmt/bundled/format.h	/^    ALIGN_DEFAULT, ALIGN_LEFT, ALIGN_RIGHT, ALIGN_CENTER, ALIGN_NUMERIC$/;"	e	enum:fmt::Alignment
ALIGN_RIGHT	spdlog/fmt/bundled/format.h	/^    ALIGN_DEFAULT, ALIGN_LEFT, ALIGN_RIGHT, ALIGN_CENTER, ALIGN_NUMERIC$/;"	e	enum:fmt::Alignment
ALL_GROUNDING_ACTIONS	DMCore/Grounding/GroundingActions/AllGroundingActions.h	85;"	d
ALL_GROUNDING_MODEL_TYPES	DMCore/Grounding/GroundingModels/AllGroundingModels.h	71;"	d
ARCHITECTURE_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	372;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	375;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	378;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	381;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	384;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	387;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	390;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	395;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	398;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	401;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	405;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	367;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	370;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	373;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	376;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	379;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	382;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	385;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	390;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	393;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	396;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	400;"	d	file:
ASK_REPEAT	DMCore/Grounding/GroundingActions/GAAskRepeat.h	116;"	d
ASK_REPHRASE	DMCore/Grounding/GroundingActions/GAAskRephrase.h	116;"	d
ASK_SHORT_ANSWER_AND_REPROMPT	DMCore/Grounding/GroundingActions/GAAskShortAnswerAndReprompt.h	118;"	d
ASK_SHORT_ANSWER_AND_WHAT_CAN_I_SAY	DMCore/Grounding/GroundingActions/GAAskShortAnswerAndWhatCanISay.h	115;"	d
ASK_STARTOVER	DMCore/Grounding/GroundingActions/GAAskStartOver.h	107;"	d
AVAILABLE	DialogTask/DialogTask.h	243;"	d
A_formatter	spdlog/details/pattern_formatter_impl.h	/^class A_formatter:public flag_formatter$/;"	c	namespace:spdlog::details	inherits:flag_formatter
AcquireNextEvent	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^void CDMCoreAgent::AcquireNextEvent() {$/;"	f	class:CDMCoreAgent	signature:()
AcquireNextEvent	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	void AcquireNextEvent();$/;"	p	class:CDMCoreAgent	access:public	signature:()
ActionIsAvailable	DMCore/Grounding/GroundingModels/GMRequestAgent_LR.cpp	/^bool CGMRequestAgent_LR::ActionIsAvailable(int iActionIndex) {$/;"	f	class:CGMRequestAgent_LR	signature:(int iActionIndex)
ActionIsAvailable	DMCore/Grounding/GroundingModels/GMRequestAgent_LR.h	/^    virtual bool ActionIsAvailable(int iActionIndex);$/;"	p	class:CGMRequestAgent_LR	access:protected	signature:(int iActionIndex)
Add	DMCore/Grounding/GroundingUtils.cpp	/^void CState::Add(STRING2STRING s2s) {$/;"	f	class:CState	signature:(STRING2STRING s2s)
Add	DMCore/Grounding/GroundingUtils.h	/^    void Add(STRING2STRING s2s);$/;"	p	class:CState	access:public	signature:(STRING2STRING s2s)
AddCondition	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.cpp	/^void CGMState::AddCondition(CCondition &cCondition) {$/;"	f	class:CGMState	signature:(CCondition &cCondition)
AddCondition	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.h	/^	void AddCondition(CCondition &cCondition);$/;"	p	class:CGMState	access:public	signature:(CCondition &cCondition)
AddHyp	DMCore/Concepts/ArrayConcept.cpp	/^int CArrayConcept::AddHyp(CHyp* pAHyp) {$/;"	f	class:CArrayConcept	signature:(CHyp* pAHyp)
AddHyp	DMCore/Concepts/ArrayConcept.h	/^    virtual int AddHyp(CHyp* pAHyp);$/;"	p	class:CArrayConcept	access:public	signature:(CHyp* pAHyp)
AddHyp	DMCore/Concepts/Concept.cpp	/^int CConcept::AddHyp(CHyp* pAHyp) {$/;"	f	class:CConcept	signature:(CHyp* pAHyp)
AddHyp	DMCore/Concepts/Concept.h	/^    virtual int AddHyp(CHyp* pAHyp);$/;"	p	class:CConcept	access:public	signature:(CHyp* pAHyp)
AddHyp	DMCore/Concepts/FrameConcept.cpp	/^int CFrameConcept::AddHyp(CHyp* pAHyp) {$/;"	f	class:CFrameConcept	signature:(CHyp* pAHyp)
AddHyp	DMCore/Concepts/FrameConcept.h	/^    virtual int AddHyp(CHyp* pAHyp);$/;"	p	class:CFrameConcept	access:public	signature:(CHyp* pAHyp)
AddLoggingStream	DMCore/Log.cpp	/^void AddLoggingStream(string sStreamName, string sColorMap, $/;"	f	signature:(string sStreamName, string sColorMap, bool bDisplayed, bool bEnabled)
AddLoggingStream	DMCore/Log.h	/^void AddLoggingStream(string sStreamName, $/;"	p	signature:(string sStreamName, string sColorMap = Ó, bool bDisplayed = true, bool bEnabled = true)
AddNewHyp	DMCore/Concepts/ArrayConcept.cpp	/^int CArrayConcept::AddNewHyp() {$/;"	f	class:CArrayConcept	signature:()
AddNewHyp	DMCore/Concepts/ArrayConcept.h	/^    virtual int AddNewHyp();$/;"	p	class:CArrayConcept	access:public	signature:()
AddNewHyp	DMCore/Concepts/Concept.cpp	/^int CConcept::AddNewHyp() {$/;"	f	class:CConcept	signature:()
AddNewHyp	DMCore/Concepts/Concept.h	/^    virtual int AddNewHyp();$/;"	p	class:CConcept	access:public	signature:()
AddNewHyp	DMCore/Concepts/FrameConcept.cpp	/^int CFrameConcept::AddNewHyp() {$/;"	f	class:CFrameConcept	signature:()
AddNewHyp	DMCore/Concepts/FrameConcept.h	/^    virtual int AddNewHyp();$/;"	p	class:CFrameConcept	access:public	signature:()
AddNewHyp	DMCore/Concepts/StructConcept.cpp	/^int CStructConcept::AddNewHyp() {$/;"	f	class:CStructConcept	signature:()
AddNewHyp	DMCore/Concepts/StructConcept.h	/^    virtual int AddNewHyp();$/;"	p	class:CStructConcept	access:public	signature:()
AddNewPartialHyp	DMCore/Concepts/Concept.cpp	/^int CConcept::AddNewPartialHyp() {$/;"	f	class:CConcept	signature:()
AddNewPartialHyp	DMCore/Concepts/Concept.h	/^	virtual int AddNewPartialHyp();$/;"	p	class:CConcept	access:public	signature:()
AddNewPartialHyp	DMCore/Concepts/StructConcept.cpp	/^int CStructConcept::AddNewPartialHyp() {$/;"	f	class:CStructConcept	signature:()
AddNewPartialHyp	DMCore/Concepts/StructConcept.h	/^    virtual int AddNewPartialHyp();$/;"	p	class:CStructConcept	access:public	signature:()
AddNullHyp	DMCore/Concepts/ArrayConcept.cpp	/^int CArrayConcept::AddNullHyp() {$/;"	f	class:CArrayConcept	signature:()
AddNullHyp	DMCore/Concepts/ArrayConcept.h	/^    virtual int AddNullHyp();$/;"	p	class:CArrayConcept	access:public	signature:()
AddNullHyp	DMCore/Concepts/Concept.cpp	/^int CConcept::AddNullHyp() {$/;"	f	class:CConcept	signature:()
AddNullHyp	DMCore/Concepts/Concept.h	/^    virtual int AddNullHyp();$/;"	p	class:CConcept	access:public	signature:()
AddNullHyp	DMCore/Concepts/FrameConcept.cpp	/^int CFrameConcept::AddNullHyp() {$/;"	f	class:CFrameConcept	signature:()
AddNullHyp	DMCore/Concepts/FrameConcept.h	/^    virtual int AddNullHyp();$/;"	p	class:CFrameConcept	access:public	signature:()
AddNullHyp	DMCore/Concepts/StructConcept.cpp	/^int CStructConcept::AddNullHyp() {$/;"	f	class:CStructConcept	signature:()
AddNullHyp	DMCore/Concepts/StructConcept.h	/^    virtual int AddNullHyp();$/;"	p	class:CStructConcept	access:public	signature:()
AddNullPartialHyp	DMCore/Concepts/Concept.cpp	/^int CConcept::AddNullPartialHyp() {$/;"	f	class:CConcept	signature:()
AddNullPartialHyp	DMCore/Concepts/Concept.h	/^	virtual int AddNullPartialHyp();$/;"	p	class:CConcept	access:public	signature:()
AddNullPartialHyp	DMCore/Concepts/StructConcept.cpp	/^int CStructConcept::AddNullPartialHyp() {$/;"	f	class:CStructConcept	signature:()
AddNullPartialHyp	DMCore/Concepts/StructConcept.h	/^    virtual int AddNullPartialHyp();$/;"	p	class:CStructConcept	access:public	signature:()
AddOutput	DMCore/Agents/CoreAgents/OutputManagerAgent.cpp	/^unsigned int COutputHistory::AddOutput(COutput* pOutput, string sUtterance) {$/;"	f	class:COutputHistory	signature:(COutput* pOutput, string sUtterance)
AddOutput	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^	unsigned int AddOutput(COutput* pOutput, string sUtterance);$/;"	p	class:COutputHistory	access:public	signature:(COutput* pOutput, string sUtterance)
AddPartialHyp	DMCore/Concepts/Concept.cpp	/^int CConcept::AddPartialHyp(CHyp* pAHyp) {$/;"	f	class:CConcept	signature:(CHyp* pAHyp)
AddPartialHyp	DMCore/Concepts/Concept.h	/^	virtual int AddPartialHyp(CHyp* pAHyp);$/;"	p	class:CConcept	access:public	signature:(CHyp* pAHyp)
AddSubAgent	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^void CDialogAgent::AddSubAgent(CDialogAgent* pdaWho, CDialogAgent* pdaWhere, $/;"	f	class:CDialogAgent	signature:(CDialogAgent* pdaWho, CDialogAgent* pdaWhere, TAddSubAgentMethod asamMethod)
AddSubAgent	DMCore/Agents/DialogAgents/DialogAgent.h	/^	void AddSubAgent(CDialogAgent* pdaWho, CDialogAgent* pdaWhere, $/;"	p	class:CDialogAgent	access:public	signature:(CDialogAgent* pdaWho, CDialogAgent* pdaWhere, TAddSubAgentMethod asamMethod)
AgentFactory	DMCore/Agents/Agent.cpp	/^CAgent* CAgent::AgentFactory(string sAName, string sAConfiguration) {$/;"	f	class:CAgent	signature:(string sAName, string sAConfiguration)
AgentFactory	DMCore/Agents/Agent.h	/^	static CAgent* AgentFactory(string sAName, string sAConfiguration);$/;"	p	class:CAgent	access:public	signature:(string sAName, string sAConfiguration)
AgentFactory	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^CAgent* CDMCoreAgent::AgentFactory(string sAName, string sAConfiguration) {$/;"	f	class:CDMCoreAgent	signature:(string sAName, string sAConfiguration)
AgentFactory	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	static CAgent* AgentFactory(string sAName, string sAConfiguration);$/;"	p	class:CDMCoreAgent	access:public	signature:(string sAName, string sAConfiguration)
AgentFactory	DMCore/Agents/CoreAgents/DTTManagerAgent.cpp	/^CAgent* CDTTManagerAgent::AgentFactory(string sAName, string sAConfiguration) {$/;"	f	class:CDTTManagerAgent	signature:(string sAName, string sAConfiguration)
AgentFactory	DMCore/Agents/CoreAgents/DTTManagerAgent.h	/^	static CAgent* AgentFactory(string sAName, string sAConfiguration);$/;"	p	class:CDTTManagerAgent	access:public	signature:(string sAName, string sAConfiguration)
AgentFactory	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^CAgent* CGroundingManagerAgent::AgentFactory(string sAName, string sAConfiguration) {$/;"	f	class:CGroundingManagerAgent	signature:(string sAName, string sAConfiguration)
AgentFactory	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^	static CAgent* AgentFactory(string sAName, string sAConfiguration);$/;"	p	class:CGroundingManagerAgent	access:public	signature:(string sAName, string sAConfiguration)
AgentFactory	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.cpp	/^CAgent* CInteractionEventManagerAgent::AgentFactory(string sAName,$/;"	f	class:CInteractionEventManagerAgent	signature:(string sAName, string sAConfiguration)
AgentFactory	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.h	/^	static CAgent* AgentFactory(string sAName, string sAConfiguration);$/;"	p	class:CInteractionEventManagerAgent	access:public	signature:(string sAName, string sAConfiguration)
AgentFactory	DMCore/Agents/CoreAgents/OutputManagerAgent.cpp	/^CAgent* COutputManagerAgent::AgentFactory(string sAName, string sAConfiguration) {$/;"	f	class:COutputManagerAgent	signature:(string sAName, string sAConfiguration)
AgentFactory	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^	static CAgent* AgentFactory(string sAName, string sAConfiguration);$/;"	p	class:COutputManagerAgent	access:public	signature:(string sAName, string sAConfiguration)
AgentFactory	DMCore/Agents/CoreAgents/StateManagerAgent.cpp	/^CAgent* CStateManagerAgent::AgentFactory(string sAName, string sAConfiguration) {$/;"	f	class:CStateManagerAgent	signature:(string sAName, string sAConfiguration)
AgentFactory	DMCore/Agents/CoreAgents/StateManagerAgent.h	/^	static CAgent* AgentFactory(string sAName, string sAConfiguration);$/;"	p	class:CStateManagerAgent	access:public	signature:(string sAName, string sAConfiguration)
AgentFactory	DMCore/Agents/CoreAgents/TrafficManagerAgent.cpp	/^CAgent* CTrafficManagerAgent::AgentFactory(string sAName, $/;"	f	class:CTrafficManagerAgent	signature:(string sAName, string sAConfiguration)
AgentFactory	DMCore/Agents/CoreAgents/TrafficManagerAgent.h	/^	static CAgent* AgentFactory(string sAName, string sAConfiguration);$/;"	p	class:CTrafficManagerAgent	access:public	signature:(string sAName, string sAConfiguration)
AgentFactory	DMCore/Agents/DialogAgents/BasicAgents/DialogAgency.cpp	/^CAgent* CDialogAgency::AgentFactory(string sAName, string sAConfiguration) {$/;"	f	class:CDialogAgency	signature:(string sAName, string sAConfiguration)
AgentFactory	DMCore/Agents/DialogAgents/BasicAgents/DialogAgency.h	/^	static CAgent* AgentFactory(string sAName, string sAConfiguration);$/;"	p	class:CDialogAgency	access:public	signature:(string sAName, string sAConfiguration)
AgentFactory	DMCore/Agents/DialogAgents/BasicAgents/MAExecute.cpp	/^CAgent* CMAExecute::AgentFactory(string sAName, string sAConfiguration) {$/;"	f	class:CMAExecute	signature:(string sAName, string sAConfiguration)
AgentFactory	DMCore/Agents/DialogAgents/BasicAgents/MAExecute.h	/^	static CAgent* AgentFactory(string sAName, string sAConfiguration);$/;"	p	class:CMAExecute	access:public	signature:(string sAName, string sAConfiguration)
AgentFactory	DMCore/Agents/DialogAgents/BasicAgents/MAExpect.cpp	/^CAgent* CMAExpect::AgentFactory(string sAName, string sAConfiguration) {$/;"	f	class:CMAExpect	signature:(string sAName, string sAConfiguration)
AgentFactory	DMCore/Agents/DialogAgents/BasicAgents/MAExpect.h	/^	static CAgent* AgentFactory(string sAName, string sAConfiguration);$/;"	p	class:CMAExpect	access:public	signature:(string sAName, string sAConfiguration)
AgentFactory	DMCore/Agents/DialogAgents/BasicAgents/MAInform.cpp	/^CAgent* CMAInform::AgentFactory(string sAName, string sAConfiguration) {$/;"	f	class:CMAInform	signature:(string sAName, string sAConfiguration)
AgentFactory	DMCore/Agents/DialogAgents/BasicAgents/MAInform.h	/^	static CAgent* AgentFactory(string sAName, string sAConfiguration);$/;"	p	class:CMAInform	access:public	signature:(string sAName, string sAConfiguration)
AgentFactory	DMCore/Agents/DialogAgents/BasicAgents/MARequest.cpp	/^CAgent* CMARequest::AgentFactory(string sAName, string sAConfiguration) {$/;"	f	class:CMARequest	signature:(string sAName, string sAConfiguration)
AgentFactory	DMCore/Agents/DialogAgents/BasicAgents/MARequest.h	/^	static CAgent* AgentFactory(string sAName, string sAConfiguration);$/;"	p	class:CMARequest	access:public	signature:(string sAName, string sAConfiguration)
AgentFactory	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^CAgent* CDialogAgent::AgentFactory(string sAName, string sAConfiguration) {$/;"	f	class:CDialogAgent	signature:(string sAName, string sAConfiguration)
AgentFactory	DMCore/Agents/DialogAgents/DialogAgent.h	/^	static CAgent* AgentFactory(string sAName, string sAConfiguration);$/;"	p	class:CDialogAgent	access:public	signature:(string sAName, string sAConfiguration)
AgentIsActive	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^bool CDMCoreAgent::AgentIsActive(CDialogAgent* pdaDialogAgent) {$/;"	f	class:CDMCoreAgent	signature:(CDialogAgent* pdaDialogAgent)
AgentIsActive	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	bool AgentIsActive(CDialogAgent* pdaDialogAgent);$/;"	p	class:CDMCoreAgent	access:public	signature:(CDialogAgent* pdaDialogAgent)
AgentIsInFocus	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^bool CDMCoreAgent::AgentIsInFocus(CDialogAgent* pdaDialogAgent) {$/;"	f	class:CDMCoreAgent	signature:(CDialogAgent* pdaDialogAgent)
AgentIsInFocus	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^    bool AgentIsInFocus(CDialogAgent* pdaDialogAgent);$/;"	p	class:CDMCoreAgent	access:public	signature:(CDialogAgent* pdaDialogAgent)
AgentsHash	DMCore/Agents/Registry.h	/^	TAgentsHash AgentsHash;		$/;"	m	class:CRegistry	access:private
AgentsRegistry	DMCore/Agents/Registry.cpp	/^CRegistry AgentsRegistry;$/;"	v
AgentsTypeHash	DMCore/Agents/Registry.h	/^	TAgentsTypeHash AgentsTypeHash; $/;"	m	class:CRegistry	access:private
AlignSpec	spdlog/fmt/bundled/format.h	/^    AlignSpec(unsigned width, wchar_t fill, Alignment align = ALIGN_DEFAULT)$/;"	f	struct:fmt::AlignSpec	access:public	signature:(unsigned width, wchar_t fill, Alignment align = ALIGN_DEFAULT)
AlignSpec	spdlog/fmt/bundled/format.h	/^struct AlignSpec: WidthSpec$/;"	s	namespace:fmt	inherits:WidthSpec
AlignTypeSpec	spdlog/fmt/bundled/format.h	/^    AlignTypeSpec(unsigned width, wchar_t fill): AlignSpec(width, fill)$/;"	f	struct:fmt::AlignTypeSpec	access:public	signature:(unsigned width, wchar_t fill)
AlignTypeSpec	spdlog/fmt/bundled/format.h	/^struct AlignTypeSpec: AlignSpec$/;"	s	namespace:fmt	inherits:AlignSpec
Alignment	spdlog/fmt/bundled/format.h	/^enum Alignment$/;"	g	namespace:fmt
AppendToS2S	Utils/Utils.cpp	/^void AppendToS2S(STRING2STRING& rs2sInto, STRING2STRING& rs2sFrom) {$/;"	f	signature:(STRING2STRING& rs2sInto, STRING2STRING& rs2sFrom)
AppendToS2S	Utils/Utils.h	/^void AppendToS2S(STRING2STRING& rs2sInto, STRING2STRING& rs2sFrom);$/;"	p	signature:(STRING2STRING& rs2sInto, STRING2STRING& rs2sFrom)
Arg	spdlog/fmt/bundled/format.h	/^    typedef internal::Arg Arg;$/;"	t	class:fmt::ArgVisitor	access:private
Arg	spdlog/fmt/bundled/format.h	/^struct Arg: Value$/;"	s	namespace:fmt::internal	inherits:Value
ArgArray	spdlog/fmt/bundled/format.h	/^struct ArgArray<N, false\/*IsPacked*\/>$/;"	s	namespace:fmt
ArgConverter	spdlog/fmt/bundled/printf.h	/^    ArgConverter(internal::Arg &arg, wchar_t type)$/;"	f	class:fmt::internal::ArgConverter	access:public	signature:(internal::Arg &arg, wchar_t type)
ArgConverter	spdlog/fmt/bundled/printf.h	/^class ArgConverter: public ArgVisitor<ArgConverter<T>, void>$/;"	c	namespace:fmt::internal	inherits:ArgVisitor
ArgFormatter	spdlog/fmt/bundled/format.h	/^    ArgFormatter(BasicFormatter<Char> &formatter,$/;"	f	class:fmt::ArgFormatter	access:public	signature:(BasicFormatter<Char> &formatter, FormatSpec &spec, const Char *fmt)
ArgFormatter	spdlog/fmt/bundled/format.h	/^class ArgFormatter: public BasicArgFormatter<ArgFormatter<Char>, Char>$/;"	c	namespace:fmt	inherits:BasicArgFormatter
ArgFormatterBase	spdlog/fmt/bundled/format.h	/^    ArgFormatterBase(BasicWriter<Char> &w, FormatSpec &s)$/;"	f	class:fmt::internal::ArgFormatterBase	access:public	signature:(BasicWriter<Char> &w, FormatSpec &s)
ArgFormatterBase	spdlog/fmt/bundled/format.h	/^class ArgFormatterBase: public ArgVisitor<Impl, void>$/;"	c	namespace:fmt::internal	inherits:ArgVisitor
ArgList	spdlog/fmt/bundled/format.h	/^    ArgList(): types_(0)$/;"	f	class:fmt::ArgList	access:public	signature:()
ArgList	spdlog/fmt/bundled/format.h	/^    ArgList(ULongLong types, const internal::Arg *args)$/;"	f	class:fmt::ArgList	access:public	signature:(ULongLong types, const internal::Arg *args)
ArgList	spdlog/fmt/bundled/format.h	/^    ArgList(ULongLong types, const internal::Value *values)$/;"	f	class:fmt::ArgList	access:public	signature:(ULongLong types, const internal::Value *values)
ArgList	spdlog/fmt/bundled/format.h	/^class ArgList$/;"	c	namespace:fmt
ArgMap	spdlog/fmt/bundled/format.h	/^class ArgMap$/;"	c	namespace:fmt::internal
ArgType	spdlog/fmt/bundled/format.h	/^    ArgType(): type(0)$/;"	f	struct:fmt::ArgType	access:public	signature:()
ArgType	spdlog/fmt/bundled/format.h	/^    ArgType(const T &arg) : type(make_type(arg))$/;"	f	struct:fmt::ArgType	access:public	signature:(const T &arg)
ArgType	spdlog/fmt/bundled/format.h	/^struct ArgType$/;"	s	namespace:fmt
ArgVisitor	spdlog/fmt/bundled/format.h	/^class ArgVisitor$/;"	c	namespace:fmt
ArrayWriter	spdlog/fmt/bundled/format.h	/^typedef BasicArrayWriter<char> ArrayWriter;$/;"	t
BELIEFUPDATING_STREAM	DMCore/Log.h	108;"	d
BINDING_FILTER	DialogTask/DialogTask.h	174;"	d
BLACK	spdlog/fmt/bundled/format.h	/^    BLACK, RED, GREEN, YELLOW, BLUE, MAGENTA, CYAN, WHITE$/;"	e	enum:Color
BLOCK	DMCore/Agents/DialogAgents/DialogAgent.h	753;"	d
BLUE	spdlog/fmt/bundled/format.h	/^    BLACK, RED, GREEN, YELLOW, BLUE, MAGENTA, CYAN, WHITE$/;"	e	enum:Color
BOLD	spdlog/sinks/wincolor_sink.h	/^    const WORD BOLD = FOREGROUND_INTENSITY;$/;"	m	class:spdlog::sinks::wincolor_sink	access:public
BOOL	spdlog/fmt/bundled/format.h	/^        INT, UINT, LONG_LONG, ULONG_LONG, BOOL, CHAR, LAST_INTEGER_TYPE = CHAR,$/;"	e	enum:fmt::internal::Value::Type
BOOL_ITEM	DialogTask/DialogTask.h	194;"	d
BOOL_SYSTEM_CONCEPT	DialogTask/DialogTask.h	205;"	d
BOOL_USER_CONCEPT	DialogTask/DialogTask.h	216;"	d
BUFFER_SIZE	spdlog/fmt/bundled/format.h	/^        BUFFER_SIZE = std::numeric_limits<ULongLong>::digits10 + 3$/;"	e	enum:FormatInt::__anon30
B_formatter	spdlog/details/pattern_formatter_impl.h	/^class B_formatter:public flag_formatter$/;"	c	namespace:spdlog::details	inherits:flag_formatter
Base	spdlog/fmt/bundled/printf.h	/^    typedef internal::ArgFormatterBase<Impl, Char> Base;$/;"	t	class:fmt::BasicPrintfArgFormatter	access:private
BasicArgFormatter	spdlog/fmt/bundled/format.h	/^    BasicArgFormatter(BasicFormatter<Char, Impl> &formatter,$/;"	f	class:fmt::BasicArgFormatter	access:public	signature:(BasicFormatter<Char, Impl> &formatter, FormatSpec &spec, const Char *fmt)
BasicArgFormatter	spdlog/fmt/bundled/format.h	/^class BasicArgFormatter: public internal::ArgFormatterBase<Impl, Char>$/;"	c	namespace:fmt	inherits:internal::ArgFormatterBase
BasicArrayWriter	spdlog/fmt/bundled/format.h	/^    BasicArrayWriter(Char *array, std::size_t size)$/;"	f	class:BasicArrayWriter	access:public	signature:(Char *array, std::size_t size)
BasicArrayWriter	spdlog/fmt/bundled/format.h	/^class BasicArrayWriter: public BasicWriter<Char>$/;"	c	inherits:BasicWriter
BasicArrayWriter::BasicArrayWriter	spdlog/fmt/bundled/format.h	/^    BasicArrayWriter(Char *array, std::size_t size)$/;"	f	class:BasicArrayWriter	access:public	signature:(Char *array, std::size_t size)
BasicArrayWriter::BasicWriter	spdlog/fmt/bundled/format.h	/^        : BasicWriter<Char>(buffer_), buffer_(array, SIZE)$/;"	p	class:BasicArrayWriter	access:public	signature:(buffer_)
BasicArrayWriter::buffer_	spdlog/fmt/bundled/format.h	/^        : BasicWriter<Char>(buffer_), buffer_(array, SIZE)$/;"	f	class:BasicArrayWriter	access:public	signature:(array, SIZE)
BasicArrayWriter::buffer_	spdlog/fmt/bundled/format.h	/^    internal::FixedBuffer<Char> buffer_;$/;"	m	class:BasicArrayWriter	access:private
BasicCStringRef	spdlog/fmt/bundled/format.h	/^    BasicCStringRef(const Char *s): data_(s)$/;"	f	class:fmt::BasicCStringRef	access:public	signature:(const Char *s)
BasicCStringRef	spdlog/fmt/bundled/format.h	/^    BasicCStringRef(const std::basic_string<Char> &s): data_(s.c_str())$/;"	f	class:fmt::BasicCStringRef	access:public	signature:(const std::basic_string<Char> &s)
BasicCStringRef	spdlog/fmt/bundled/format.h	/^class BasicCStringRef$/;"	c	namespace:fmt
BasicCharTraits	spdlog/fmt/bundled/format.h	/^class BasicCharTraits$/;"	c	namespace:fmt::internal
BasicData	spdlog/fmt/bundled/format.cc	/^	template struct internal::BasicData<void>;$/;"	m	class:fmt::internal	typeref:struct:fmt::internal::	file:
BasicFormatter	spdlog/fmt/bundled/format.h	/^    BasicFormatter(const ArgList &args, BasicWriter<Char> &w)$/;"	f	class:fmt::BasicFormatter	access:public	signature:(const ArgList &args, BasicWriter<Char> &w)
BasicFormatter	spdlog/fmt/bundled/format.h	/^class BasicFormatter: private internal::FormatterBase$/;"	c	namespace:fmt	inherits:internal::FormatterBase
BasicMemoryWriter	spdlog/fmt/bundled/format.h	/^    BasicMemoryWriter(BasicMemoryWriter &&other)$/;"	f	class:BasicMemoryWriter	access:public	signature:(BasicMemoryWriter &&other)
BasicMemoryWriter	spdlog/fmt/bundled/format.h	/^    explicit BasicMemoryWriter(const Allocator& alloc = Allocator())$/;"	f	class:BasicMemoryWriter	access:public	signature:(const Allocator& alloc = Allocator())
BasicMemoryWriter	spdlog/fmt/bundled/format.h	/^class BasicMemoryWriter: public BasicWriter<Char>$/;"	c	inherits:BasicWriter
BasicMemoryWriter::BasicMemoryWriter	spdlog/fmt/bundled/format.h	/^    BasicMemoryWriter(BasicMemoryWriter &&other)$/;"	f	class:BasicMemoryWriter	access:public	signature:(BasicMemoryWriter &&other)
BasicMemoryWriter::BasicMemoryWriter	spdlog/fmt/bundled/format.h	/^    explicit BasicMemoryWriter(const Allocator& alloc = Allocator())$/;"	f	class:BasicMemoryWriter	access:public	signature:(const Allocator& alloc = Allocator())
BasicMemoryWriter::buffer_	spdlog/fmt/bundled/format.h	/^    internal::MemoryBuffer<Char, internal::INLINE_BUFFER_SIZE, Allocator> buffer_;$/;"	m	class:BasicMemoryWriter	access:private
BasicMemoryWriter::operator =	spdlog/fmt/bundled/format.h	/^    BasicMemoryWriter &operator=(BasicMemoryWriter &&other)$/;"	f	class:BasicMemoryWriter	access:public	signature:(BasicMemoryWriter &&other)
BasicPrintfArgFormatter	spdlog/fmt/bundled/printf.h	/^    BasicPrintfArgFormatter(BasicWriter<Char> &w, FormatSpec &s)$/;"	f	class:fmt::BasicPrintfArgFormatter	access:public	signature:(BasicWriter<Char> &w, FormatSpec &s)
BasicPrintfArgFormatter	spdlog/fmt/bundled/printf.h	/^class BasicPrintfArgFormatter: public internal::ArgFormatterBase<Impl, Char>$/;"	c	namespace:fmt	inherits:internal::ArgFormatterBase
BasicStringRef	spdlog/fmt/bundled/format.h	/^    BasicStringRef(const Char *s)$/;"	f	class:fmt::BasicStringRef	access:public	signature:(const Char *s)
BasicStringRef	spdlog/fmt/bundled/format.h	/^    BasicStringRef(const Char *s, std::size_t size): data_(s), size_(size)$/;"	f	class:fmt::BasicStringRef	access:public	signature:(const Char *s, std::size_t size)
BasicStringRef	spdlog/fmt/bundled/format.h	/^    BasicStringRef(const std::basic_string<Char> &s)$/;"	f	class:fmt::BasicStringRef	access:public	signature:(const std::basic_string<Char> &s)
BasicStringRef	spdlog/fmt/bundled/format.h	/^class BasicStringRef$/;"	c	namespace:fmt
BasicWriter	spdlog/fmt/bundled/format.h	/^        : BasicWriter<Char>(buffer_), buffer_(array, SIZE)$/;"	p	class:BasicArrayWriter	access:public	signature:(buffer_)
BasicWriter	spdlog/fmt/bundled/format.h	/^    explicit BasicWriter(Buffer<Char> &b): buffer_(b)$/;"	f	class:BasicWriter	access:protected	signature:(Buffer<Char> &b)
BasicWriter	spdlog/fmt/bundled/format.h	/^class BasicWriter$/;"	c
BasicWriter::BasicWriter	spdlog/fmt/bundled/format.h	/^    explicit BasicWriter(Buffer<Char> &b): buffer_(b)$/;"	f	class:BasicWriter	access:protected	signature:(Buffer<Char> &b)
BasicWriter::CharPtr	spdlog/fmt/bundled/format.h	/^    typedef typename internal::CharTraits<Char>::CharPtr CharPtr;$/;"	t	class:BasicWriter	access:private
BasicWriter::FMT_DISALLOW_COPY_AND_ASSIGN	spdlog/fmt/bundled/format.h	/^    FMT_DISALLOW_COPY_AND_ASSIGN(BasicWriter);$/;"	p	class:BasicWriter	access:private	signature:(BasicWriter)
BasicWriter::append_float_length	spdlog/fmt/bundled/format.h	/^    void append_float_length(Char *&, T)$/;"	f	class:BasicWriter	access:private	signature:(Char *&, T)
BasicWriter::append_float_length	spdlog/fmt/bundled/format.h	/^    void append_float_length(Char *&format_ptr, long double)$/;"	f	class:BasicWriter	access:private	signature:(Char *&format_ptr, long double)
BasicWriter::buffer_	spdlog/fmt/bundled/format.h	/^    Buffer<Char> &buffer_;$/;"	m	class:BasicWriter	access:private
BasicWriter::c_str	spdlog/fmt/bundled/format.h	/^    const Char *c_str() const$/;"	f	class:BasicWriter	access:public	signature:() const
BasicWriter::fill_padding	spdlog/fmt/bundled/format.h	/^    static CharPtr fill_padding(CharPtr buffer,$/;"	p	class:BasicWriter	access:private	signature:(CharPtr buffer, unsigned total_size, std::size_t content_size, wchar_t fill)
BasicWriter::fill_padding	spdlog/fmt/bundled/format.h	/^BasicWriter<Char>::fill_padding($/;"	f	class:BasicWriter	signature:( CharPtr buffer, unsigned total_size, std::size_t content_size, wchar_t fill)
BasicWriter::get	spdlog/fmt/bundled/format.h	/^    static Char *get(Char *p)$/;"	f	class:BasicWriter	access:private	signature:(Char *p)
BasicWriter::get	spdlog/fmt/bundled/format.h	/^    static Char *get(CharPtr p)$/;"	f	class:BasicWriter	access:private	signature:(CharPtr p)
BasicWriter::grow_buffer	spdlog/fmt/bundled/format.h	/^    CharPtr grow_buffer(std::size_t n)$/;"	f	class:BasicWriter	access:private	signature:(std::size_t n)
BasicWriter::operator <<	spdlog/fmt/bundled/format.h	/^    BasicWriter &operator<<($/;"	f	class:BasicWriter	access:public	signature:( typename internal::WCharHelper<StringRef, Char>::Supported value)
BasicWriter::operator <<	spdlog/fmt/bundled/format.h	/^    BasicWriter &operator<<($/;"	f	class:BasicWriter	access:public	signature:( typename internal::WCharHelper<wchar_t, Char>::Supported value)
BasicWriter::operator <<	spdlog/fmt/bundled/format.h	/^    BasicWriter &operator<<(IntFormatSpec<T, Spec, FillChar> spec)$/;"	f	class:BasicWriter	access:public	signature:(IntFormatSpec<T, Spec, FillChar> spec)
BasicWriter::operator <<	spdlog/fmt/bundled/format.h	/^    BasicWriter &operator<<(LongLong value)$/;"	f	class:BasicWriter	access:public	signature:(LongLong value)
BasicWriter::operator <<	spdlog/fmt/bundled/format.h	/^    BasicWriter &operator<<(ULongLong value)$/;"	f	class:BasicWriter	access:public	signature:(ULongLong value)
BasicWriter::operator <<	spdlog/fmt/bundled/format.h	/^    BasicWriter &operator<<(char value)$/;"	f	class:BasicWriter	access:public	signature:(char value)
BasicWriter::operator <<	spdlog/fmt/bundled/format.h	/^    BasicWriter &operator<<(const StrFormatSpec<StrChar> &spec)$/;"	f	class:BasicWriter	access:public	signature:(const StrFormatSpec<StrChar> &spec)
BasicWriter::operator <<	spdlog/fmt/bundled/format.h	/^    BasicWriter &operator<<(double value)$/;"	f	class:BasicWriter	access:public	signature:(double value)
BasicWriter::operator <<	spdlog/fmt/bundled/format.h	/^    BasicWriter &operator<<(fmt::BasicStringRef<Char> value)$/;"	f	class:BasicWriter	access:public	signature:(fmt::BasicStringRef<Char> value)
BasicWriter::operator <<	spdlog/fmt/bundled/format.h	/^    BasicWriter &operator<<(int value)$/;"	f	class:BasicWriter	access:public	signature:(int value)
BasicWriter::operator <<	spdlog/fmt/bundled/format.h	/^    BasicWriter &operator<<(long double value)$/;"	f	class:BasicWriter	access:public	signature:(long double value)
BasicWriter::operator <<	spdlog/fmt/bundled/format.h	/^    BasicWriter &operator<<(long value)$/;"	f	class:BasicWriter	access:public	signature:(long value)
BasicWriter::operator <<	spdlog/fmt/bundled/format.h	/^    BasicWriter &operator<<(unsigned long value)$/;"	f	class:BasicWriter	access:public	signature:(unsigned long value)
BasicWriter::operator <<	spdlog/fmt/bundled/format.h	/^    BasicWriter &operator<<(unsigned value)$/;"	f	class:BasicWriter	access:public	signature:(unsigned value)
BasicWriter::operator <<	spdlog/fmt/bundled/format.h	/^    void operator<<($/;"	p	class:BasicWriter	access:private	signature:( typename internal::WCharHelper<const wchar_t *, Char>::Unsupported)
BasicWriter::operator <<	spdlog/fmt/bundled/format.h	/^    void operator<<(typename internal::WCharHelper<wchar_t, Char>::Unsupported);$/;"	p	class:BasicWriter	access:private	signature:(typename internal::WCharHelper<wchar_t, Char>::Unsupported)
BasicWriter::prepare_int_buffer	spdlog/fmt/bundled/format.h	/^    CharPtr prepare_int_buffer(unsigned num_digits,$/;"	f	class:BasicWriter	access:private	signature:(unsigned num_digits, const EmptySpec &, const char *prefix, unsigned prefix_size)
BasicWriter::prepare_int_buffer	spdlog/fmt/bundled/format.h	/^    CharPtr prepare_int_buffer(unsigned num_digits,$/;"	p	class:BasicWriter	access:private	signature:(unsigned num_digits, const Spec &spec, const char *prefix, unsigned prefix_size)
BasicWriter::prepare_int_buffer	spdlog/fmt/bundled/format.h	/^BasicWriter<Char>::prepare_int_buffer($/;"	f	class:BasicWriter	signature:( unsigned num_digits, const Spec &spec, const char *prefix, unsigned prefix_size)
BasicWriter::size	spdlog/fmt/bundled/format.h	/^    std::size_t size() const$/;"	f	class:BasicWriter	access:public	signature:() const
BasicWriter::str	spdlog/fmt/bundled/format.h	/^    std::basic_string<Char> str() const$/;"	f	class:BasicWriter	access:public	signature:() const
BasicWriter::write	spdlog/fmt/bundled/format.h	/^    void write(BasicCStringRef<Char> format, ArgList args)$/;"	f	class:BasicWriter	access:public	signature:(BasicCStringRef<Char> format, ArgList args)
BasicWriter::write_decimal	spdlog/fmt/bundled/format.h	/^    void write_decimal(Int value)$/;"	f	class:BasicWriter	access:private	signature:(Int value)
BasicWriter::write_double	spdlog/fmt/bundled/format.h	/^    void write_double(T value, const FormatSpec &spec);$/;"	p	class:BasicWriter	access:private	signature:(T value, const FormatSpec &spec)
BasicWriter::write_double	spdlog/fmt/bundled/format.h	/^void BasicWriter<Char>::write_double(T value, const FormatSpec &spec)$/;"	f	class:BasicWriter	signature:(T value, const FormatSpec &spec)
BasicWriter::write_int	spdlog/fmt/bundled/format.h	/^    void write_int(T value, Spec spec);$/;"	p	class:BasicWriter	access:private	signature:(T value, Spec spec)
BasicWriter::write_int	spdlog/fmt/bundled/format.h	/^void BasicWriter<Char>::write_int(T value, Spec spec)$/;"	f	class:BasicWriter	signature:(T value, Spec spec)
BasicWriter::write_str	spdlog/fmt/bundled/format.h	/^    CharPtr write_str(const StrChar *s, std::size_t size, const AlignSpec &spec);$/;"	p	class:BasicWriter	access:private	signature:(const StrChar *s, std::size_t size, const AlignSpec &spec)
BasicWriter::write_str	spdlog/fmt/bundled/format.h	/^    void write_str(const internal::Arg::StringValue<StrChar> &str,$/;"	p	class:BasicWriter	access:private	signature:(const internal::Arg::StringValue<StrChar> &str, const FormatSpec &spec)
BasicWriter::write_str	spdlog/fmt/bundled/format.h	/^typename BasicWriter<Char>::CharPtr BasicWriter<Char>::write_str($/;"	f	class:BasicWriter	signature:( const StrChar *s, std::size_t size, const AlignSpec &spec)
BasicWriter::write_str	spdlog/fmt/bundled/format.h	/^void BasicWriter<Char>::write_str($/;"	f	class:BasicWriter	signature:( const internal::Arg::StringValue<StrChar> &s, const FormatSpec &spec)
BasicWriter::write_unsigned_decimal	spdlog/fmt/bundled/format.h	/^    Char *write_unsigned_decimal(UInt value, unsigned prefix_size = 0)$/;"	f	class:BasicWriter	access:private	signature:(UInt value, unsigned prefix_size = 0)
BasicWriter::~BasicWriter	spdlog/fmt/bundled/format.h	/^    virtual ~BasicWriter()$/;"	f	class:BasicWriter	access:public	signature:()
Block	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^void CDialogAgent::Block() {$/;"	f	class:CDialogAgent	signature:()
Block	DMCore/Agents/DialogAgents/DialogAgent.h	/^	void Block();$/;"	p	class:CDialogAgent	access:public	signature:()
Bool	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.h	/^		Bool,$/;"	e	enum:CCondition::TValueType
BoolToString	Utils/Utils.cpp	/^string BoolToString(bool bBool) {$/;"	f	signature:(bool bBool)
BoolToString	Utils/Utils.h	/^string BoolToString(bool bBool);$/;"	p	signature:(bool bBool)
BreakSeal	DMCore/Concepts/Concept.cpp	/^void CConcept::BreakSeal() {$/;"	f	class:CConcept	signature:()
BreakSeal	DMCore/Concepts/Concept.h	/^	virtual void BreakSeal();$/;"	p	class:CConcept	access:public	signature:()
BroadcastState	DMCore/Agents/CoreAgents/StateManagerAgent.cpp	/^void CStateManagerAgent::BroadcastState() {$/;"	f	class:CStateManagerAgent	signature:()
BroadcastState	DMCore/Agents/CoreAgents/StateManagerAgent.h	/^  void BroadcastState();$/;"	p	class:CStateManagerAgent	access:public	signature:()
Buffer	spdlog/fmt/bundled/format.h	/^    Buffer(T *ptr = FMT_NULL, std::size_t capacity = 0)$/;"	f	class:fmt::Buffer	access:protected	signature:(T *ptr = FMT_NULL, std::size_t capacity = 0)
Buffer	spdlog/fmt/bundled/format.h	/^class Buffer$/;"	c	namespace:fmt
C	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^CConcept& CDialogAgent::C(const char *lpszConceptPath, ...) {$/;"	f	class:CDialogAgent	signature:(const char *lpszConceptPath, ...)
C	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^CConcept& CDialogAgent::C(string sConceptPath) {	$/;"	f	class:CDialogAgent	signature:(string sConceptPath)
C	DMCore/Agents/DialogAgents/DialogAgent.h	/^	virtual CConcept& C(const char* lpszConceptPath, ...);$/;"	p	class:CDialogAgent	access:public	signature:(const char* lpszConceptPath, ...)
C	DMCore/Agents/DialogAgents/DialogAgent.h	/^	virtual CConcept& C(string sConceptPath);$/;"	p	class:CDialogAgent	access:public	signature:(string sConceptPath)
CALL	DMCore/Agents/DialogAgents/BasicAgents/MAExecute.h	162;"	d
CAN_TRIGGER_DURING_GROUNDING	DMCore/Agents/DialogAgents/DialogAgent.h	673;"	d
CAgent	DMCore/Agents/Agent.cpp	/^CAgent::CAgent(string sAName, string sAConfiguration, string sAType) {$/;"	f	class:CAgent	signature:(string sAName, string sAConfiguration, string sAType)
CAgent	DMCore/Agents/Agent.h	/^	CAgent(string sAName, $/;"	p	class:CAgent	access:public	signature:(string sAName, string sAConfiguration = Ó, string sAType = Ó)
CAgent	DMCore/Agents/Agent.h	/^class CAgent {$/;"	c
CAgent::AgentFactory	DMCore/Agents/Agent.cpp	/^CAgent* CAgent::AgentFactory(string sAName, string sAConfiguration) {$/;"	f	class:CAgent	signature:(string sAName, string sAConfiguration)
CAgent::AgentFactory	DMCore/Agents/Agent.h	/^	static CAgent* AgentFactory(string sAName, string sAConfiguration);$/;"	p	class:CAgent	access:public	signature:(string sAName, string sAConfiguration)
CAgent::CAgent	DMCore/Agents/Agent.cpp	/^CAgent::CAgent(string sAName, string sAConfiguration, string sAType) {$/;"	f	class:CAgent	signature:(string sAName, string sAConfiguration, string sAType)
CAgent::CAgent	DMCore/Agents/Agent.h	/^	CAgent(string sAName, $/;"	p	class:CAgent	access:public	signature:(string sAName, string sAConfiguration = Ó, string sAType = Ó)
CAgent::Create	DMCore/Agents/Agent.cpp	/^void CAgent::Create() {$/;"	f	class:CAgent	signature:()
CAgent::Create	DMCore/Agents/Agent.h	/^	virtual void Create();$/;"	p	class:CAgent	access:public	signature:()
CAgent::GetName	DMCore/Agents/Agent.cpp	/^string CAgent::GetName() {$/;"	f	class:CAgent	signature:()
CAgent::GetName	DMCore/Agents/Agent.h	/^	string GetName();$/;"	p	class:CAgent	access:public	signature:()
CAgent::GetParameterValue	DMCore/Agents/Agent.cpp	/^string CAgent::GetParameterValue(string sSlot) {$/;"	f	class:CAgent	signature:(string sSlot)
CAgent::GetParameterValue	DMCore/Agents/Agent.h	/^	string GetParameterValue(string sParam);$/;"	p	class:CAgent	access:public	signature:(string sParam)
CAgent::GetType	DMCore/Agents/Agent.cpp	/^string CAgent::GetType() {$/;"	f	class:CAgent	signature:()
CAgent::GetType	DMCore/Agents/Agent.h	/^	string GetType();$/;"	p	class:CAgent	access:public	signature:()
CAgent::HasParameter	DMCore/Agents/Agent.cpp	/^bool CAgent::HasParameter(string sParam) {$/;"	f	class:CAgent	signature:(string sParam)
CAgent::HasParameter	DMCore/Agents/Agent.h	/^	bool HasParameter(string sParam);$/;"	p	class:CAgent	access:public	signature:(string sParam)
CAgent::Initialize	DMCore/Agents/Agent.cpp	/^void CAgent::Initialize() {$/;"	f	class:CAgent	signature:()
CAgent::Initialize	DMCore/Agents/Agent.h	/^	virtual void Initialize();$/;"	p	class:CAgent	access:public	signature:()
CAgent::Register	DMCore/Agents/Agent.cpp	/^void CAgent::Register() {$/;"	f	class:CAgent	signature:()
CAgent::Register	DMCore/Agents/Agent.h	/^	virtual void Register();$/;"	p	class:CAgent	access:public	signature:()
CAgent::Reset	DMCore/Agents/Agent.cpp	/^void CAgent::Reset() {$/;"	f	class:CAgent	signature:()
CAgent::Reset	DMCore/Agents/Agent.h	/^	virtual void Reset();$/;"	p	class:CAgent	access:public	signature:()
CAgent::SetConfiguration	DMCore/Agents/Agent.cpp	/^void CAgent::SetConfiguration(STRING2STRING s2sAConfiguration) {$/;"	f	class:CAgent	signature:(STRING2STRING s2sAConfiguration)
CAgent::SetConfiguration	DMCore/Agents/Agent.cpp	/^void CAgent::SetConfiguration(string sConfiguration) {$/;"	f	class:CAgent	signature:(string sConfiguration)
CAgent::SetConfiguration	DMCore/Agents/Agent.h	/^	void SetConfiguration(STRING2STRING s2sAConfiguration);	$/;"	p	class:CAgent	access:public	signature:(STRING2STRING s2sAConfiguration)
CAgent::SetConfiguration	DMCore/Agents/Agent.h	/^	void SetConfiguration(string sConfiguration);$/;"	p	class:CAgent	access:public	signature:(string sConfiguration)
CAgent::SetParameter	DMCore/Agents/Agent.cpp	/^void CAgent::SetParameter(string sParam, string sValue) {$/;"	f	class:CAgent	signature:(string sParam, string sValue)
CAgent::SetParameter	DMCore/Agents/Agent.h	/^	void SetParameter(string sParam, string sValue);$/;"	p	class:CAgent	access:public	signature:(string sParam, string sValue)
CAgent::UnRegister	DMCore/Agents/Agent.cpp	/^void CAgent::UnRegister() {$/;"	f	class:CAgent	signature:()
CAgent::UnRegister	DMCore/Agents/Agent.h	/^	virtual void UnRegister();$/;"	p	class:CAgent	access:public	signature:()
CAgent::s2sConfiguration	DMCore/Agents/Agent.h	/^	STRING2STRING s2sConfiguration;		\/\/ hash of parameters$/;"	m	class:CAgent	access:protected
CAgent::sName	DMCore/Agents/Agent.h	/^	string sName;		\/\/ name of agent$/;"	m	class:CAgent	access:protected
CAgent::sType	DMCore/Agents/Agent.h	/^	string sType;		\/\/ type of agent$/;"	m	class:CAgent	access:protected
CAgent::~CAgent	DMCore/Agents/Agent.cpp	/^CAgent::~CAgent() {$/;"	f	class:CAgent	signature:()
CAgent::~CAgent	DMCore/Agents/Agent.h	/^	virtual ~CAgent();$/;"	p	class:CAgent	access:public	signature:()
CArrayConcept	DMCore/Concepts/ArrayConcept.cpp	/^CArrayConcept::CArrayConcept(string sAName, TConceptSource csAConceptSource): $/;"	f	class:CArrayConcept	signature:(string sAName, TConceptSource csAConceptSource)
CArrayConcept	DMCore/Concepts/ArrayConcept.h	/^	CArrayConcept(string sAName = "NONAME",$/;"	p	class:CArrayConcept	access:public	signature:(string sAName = Ó, TConceptSource csAConceptSource = csUser)
CArrayConcept	DMCore/Concepts/ArrayConcept.h	/^class CArrayConcept: public CConcept {$/;"	c	inherits:CConcept
CArrayConcept::AddHyp	DMCore/Concepts/ArrayConcept.cpp	/^int CArrayConcept::AddHyp(CHyp* pAHyp) {$/;"	f	class:CArrayConcept	signature:(CHyp* pAHyp)
CArrayConcept::AddHyp	DMCore/Concepts/ArrayConcept.h	/^    virtual int AddHyp(CHyp* pAHyp);$/;"	p	class:CArrayConcept	access:public	signature:(CHyp* pAHyp)
CArrayConcept::AddNewHyp	DMCore/Concepts/ArrayConcept.cpp	/^int CArrayConcept::AddNewHyp() {$/;"	f	class:CArrayConcept	signature:()
CArrayConcept::AddNewHyp	DMCore/Concepts/ArrayConcept.h	/^    virtual int AddNewHyp();$/;"	p	class:CArrayConcept	access:public	signature:()
CArrayConcept::AddNullHyp	DMCore/Concepts/ArrayConcept.cpp	/^int CArrayConcept::AddNullHyp() {$/;"	f	class:CArrayConcept	signature:()
CArrayConcept::AddNullHyp	DMCore/Concepts/ArrayConcept.h	/^    virtual int AddNullHyp();$/;"	p	class:CArrayConcept	access:public	signature:()
CArrayConcept::CArrayConcept	DMCore/Concepts/ArrayConcept.cpp	/^CArrayConcept::CArrayConcept(string sAName, TConceptSource csAConceptSource): $/;"	f	class:CArrayConcept	signature:(string sAName, TConceptSource csAConceptSource)
CArrayConcept::CArrayConcept	DMCore/Concepts/ArrayConcept.h	/^	CArrayConcept(string sAName = "NONAME",$/;"	p	class:CArrayConcept	access:public	signature:(string sAName = Ó, TConceptSource csAConceptSource = csUser)
CArrayConcept::ClearCurrentHypSet	DMCore/Concepts/ArrayConcept.cpp	/^void CArrayConcept::ClearCurrentHypSet() {$/;"	f	class:CArrayConcept	signature:()
CArrayConcept::ClearCurrentHypSet	DMCore/Concepts/ArrayConcept.h	/^    virtual void ClearCurrentHypSet();$/;"	p	class:CArrayConcept	access:public	signature:()
CArrayConcept::Clone	DMCore/Concepts/ArrayConcept.cpp	/^CConcept* CArrayConcept::Clone(bool bCloneHistory) {$/;"	f	class:CArrayConcept	signature:(bool bCloneHistory)
CArrayConcept::Clone	DMCore/Concepts/ArrayConcept.h	/^	virtual CConcept* Clone(bool bCloneHistory = true);$/;"	p	class:CArrayConcept	access:public	signature:(bool bCloneHistory = true)
CArrayConcept::ConceptArray	DMCore/Concepts/ArrayConcept.h	/^	vector <CConcept*, allocator <CConcept*> > ConceptArray;$/;"	m	class:CArrayConcept	access:protected
CArrayConcept::CopyCurrentHypSetFrom	DMCore/Concepts/ArrayConcept.cpp	/^void CArrayConcept::CopyCurrentHypSetFrom(CConcept& rAConcept) {$/;"	f	class:CArrayConcept	signature:(CConcept& rAConcept)
CArrayConcept::CopyCurrentHypSetFrom	DMCore/Concepts/ArrayConcept.h	/^    virtual void CopyCurrentHypSetFrom(CConcept& rAConcept);$/;"	p	class:CArrayConcept	access:public	signature:(CConcept& rAConcept)
CArrayConcept::CreateElement	DMCore/Concepts/ArrayConcept.h	/^	virtual CConcept* CreateElement() = 0;$/;"	p	class:CArrayConcept	access:public	signature:()
CArrayConcept::CreateGroundingModel	DMCore/Concepts/ArrayConcept.cpp	/^void CArrayConcept::CreateGroundingModel(string sGroundingModelSpec) {$/;"	f	class:CArrayConcept	signature:(string sGroundingModelSpec)
CArrayConcept::CreateGroundingModel	DMCore/Concepts/ArrayConcept.h	/^    virtual void CreateGroundingModel(string sGroundingModelSpec);$/;"	p	class:CArrayConcept	access:public	signature:(string sGroundingModelSpec)
CArrayConcept::DeclareConcepts	DMCore/Concepts/ArrayConcept.cpp	/^void CArrayConcept::DeclareConcepts($/;"	f	class:CArrayConcept	signature:( TConceptPointersVector& rcpvConcepts, TConceptPointersSet& rcpsExclude)
CArrayConcept::DeclareConcepts	DMCore/Concepts/ArrayConcept.h	/^    virtual void DeclareConcepts($/;"	p	class:CArrayConcept	access:public	signature:( TConceptPointersVector& rcpvConcepts, TConceptPointersSet& rcpsExclude)
CArrayConcept::DeclareGroundingModels	DMCore/Concepts/ArrayConcept.cpp	/^void CArrayConcept::DeclareGroundingModels($/;"	f	class:CArrayConcept	signature:( TGroundingModelPointersVector& rgmpvModels, TGroundingModelPointersSet& rgmpsExclude)
CArrayConcept::DeclareGroundingModels	DMCore/Concepts/ArrayConcept.h	/^    virtual void DeclareGroundingModels($/;"	p	class:CArrayConcept	access:public	signature:( TGroundingModelPointersVector& rgmpvModels, TGroundingModelPointersSet& rgmpsExclude)
CArrayConcept::DeleteAt	DMCore/Concepts/ArrayConcept.cpp	/^void CArrayConcept::DeleteAt(unsigned int iIndex) {$/;"	f	class:CArrayConcept	signature:(unsigned int iIndex)
CArrayConcept::DeleteAt	DMCore/Concepts/ArrayConcept.h	/^	virtual void DeleteAt(unsigned int iIndex);   $/;"	p	class:CArrayConcept	access:public	signature:(unsigned int iIndex)
CArrayConcept::DeleteHyp	DMCore/Concepts/ArrayConcept.cpp	/^void CArrayConcept::DeleteHyp(int iIndex) {$/;"	f	class:CArrayConcept	signature:(int iIndex)
CArrayConcept::DeleteHyp	DMCore/Concepts/ArrayConcept.h	/^	virtual void DeleteHyp(int iIndex);$/;"	p	class:CArrayConcept	access:public	signature:(int iIndex)
CArrayConcept::GetHyp	DMCore/Concepts/ArrayConcept.cpp	/^CHyp* CArrayConcept::GetHyp(int iIndex) {$/;"	f	class:CArrayConcept	signature:(int iIndex)
CArrayConcept::GetHyp	DMCore/Concepts/ArrayConcept.h	/^	virtual CHyp* GetHyp(int iIndex);$/;"	p	class:CArrayConcept	access:public	signature:(int iIndex)
CArrayConcept::GetHypConfidence	DMCore/Concepts/ArrayConcept.cpp	/^float CArrayConcept::GetHypConfidence(int iIndex) {$/;"	f	class:CArrayConcept	signature:(int iIndex)
CArrayConcept::GetHypConfidence	DMCore/Concepts/ArrayConcept.h	/^	virtual float GetHypConfidence(int iIndex);$/;"	p	class:CArrayConcept	access:public	signature:(int iIndex)
CArrayConcept::GetHypIndex	DMCore/Concepts/ArrayConcept.cpp	/^int CArrayConcept::GetHypIndex(CHyp* pHypIndex) {$/;"	f	class:CArrayConcept	signature:(CHyp* pHypIndex)
CArrayConcept::GetHypIndex	DMCore/Concepts/ArrayConcept.h	/^    virtual int GetHypIndex(CHyp* pHyp);$/;"	p	class:CArrayConcept	access:public	signature:(CHyp* pHyp)
CArrayConcept::GetNumHyps	DMCore/Concepts/ArrayConcept.cpp	/^int CArrayConcept::GetNumHyps() {$/;"	f	class:CArrayConcept	signature:()
CArrayConcept::GetNumHyps	DMCore/Concepts/ArrayConcept.h	/^	virtual int GetNumHyps();$/;"	p	class:CArrayConcept	access:public	signature:()
CArrayConcept::GetNumValidHyps	DMCore/Concepts/ArrayConcept.cpp	/^int CArrayConcept::GetNumValidHyps() {$/;"	f	class:CArrayConcept	signature:()
CArrayConcept::GetNumValidHyps	DMCore/Concepts/ArrayConcept.h	/^	virtual int GetNumValidHyps();$/;"	p	class:CArrayConcept	access:public	signature:()
CArrayConcept::GetSize	DMCore/Concepts/ArrayConcept.cpp	/^int CArrayConcept::GetSize() {$/;"	f	class:CArrayConcept	signature:()
CArrayConcept::GetSize	DMCore/Concepts/ArrayConcept.h	/^    virtual int GetSize();$/;"	p	class:CArrayConcept	access:public	signature:()
CArrayConcept::GetTopHyp	DMCore/Concepts/ArrayConcept.cpp	/^CHyp* CArrayConcept::GetTopHyp() {$/;"	f	class:CArrayConcept	signature:()
CArrayConcept::GetTopHyp	DMCore/Concepts/ArrayConcept.h	/^    virtual CHyp* GetTopHyp();$/;"	p	class:CArrayConcept	access:public	signature:()
CArrayConcept::GetTopHypConfidence	DMCore/Concepts/ArrayConcept.cpp	/^float CArrayConcept::GetTopHypConfidence() {$/;"	f	class:CArrayConcept	signature:()
CArrayConcept::GetTopHypConfidence	DMCore/Concepts/ArrayConcept.h	/^    virtual float GetTopHypConfidence();$/;"	p	class:CArrayConcept	access:public	signature:()
CArrayConcept::GetTopHypIndex	DMCore/Concepts/ArrayConcept.cpp	/^int CArrayConcept::GetTopHypIndex() {$/;"	f	class:CArrayConcept	signature:()
CArrayConcept::GetTopHypIndex	DMCore/Concepts/ArrayConcept.h	/^    virtual int GetTopHypIndex();$/;"	p	class:CArrayConcept	access:public	signature:()
CArrayConcept::GetTurnLastUpdated	DMCore/Concepts/ArrayConcept.cpp	/^int CArrayConcept::GetTurnLastUpdated() {$/;"	f	class:CArrayConcept	signature:()
CArrayConcept::GetTurnLastUpdated	DMCore/Concepts/ArrayConcept.h	/^    virtual int GetTurnLastUpdated();$/;"	p	class:CArrayConcept	access:public	signature:()
CArrayConcept::GroundedHypToString	DMCore/Concepts/ArrayConcept.cpp	/^string CArrayConcept::GroundedHypToString() {$/;"	f	class:CArrayConcept	signature:()
CArrayConcept::GroundedHypToString	DMCore/Concepts/ArrayConcept.h	/^	virtual string GroundedHypToString();$/;"	p	class:CArrayConcept	access:public	signature:()
CArrayConcept::HypFactory	DMCore/Concepts/ArrayConcept.cpp	/^CHyp* CArrayConcept::HypFactory() {$/;"	f	class:CArrayConcept	signature:()
CArrayConcept::HypFactory	DMCore/Concepts/ArrayConcept.h	/^    virtual CHyp* HypFactory();$/;"	p	class:CArrayConcept	access:public	signature:()
CArrayConcept::HypSetToString	DMCore/Concepts/ArrayConcept.cpp	/^string CArrayConcept::HypSetToString() {$/;"	f	class:CArrayConcept	signature:()
CArrayConcept::HypSetToString	DMCore/Concepts/ArrayConcept.h	/^	virtual string HypSetToString();$/;"	p	class:CArrayConcept	access:public	signature:()
CArrayConcept::InsertAt	DMCore/Concepts/ArrayConcept.cpp	/^void CArrayConcept::InsertAt(unsigned int iIndex, CConcept &rAConcept) {$/;"	f	class:CArrayConcept	signature:(unsigned int iIndex, CConcept &rAConcept)
CArrayConcept::InsertAt	DMCore/Concepts/ArrayConcept.h	/^	virtual void InsertAt(unsigned int iIndex, CConcept &rAConcept);   $/;"	p	class:CArrayConcept	access:public	signature:(unsigned int iIndex, CConcept &rAConcept)
CArrayConcept::IsUndergoingGrounding	DMCore/Concepts/ArrayConcept.cpp	/^bool CArrayConcept::IsUndergoingGrounding() {$/;"	f	class:CArrayConcept	signature:()
CArrayConcept::IsUndergoingGrounding	DMCore/Concepts/ArrayConcept.h	/^    virtual bool IsUndergoingGrounding();$/;"	p	class:CArrayConcept	access:public	signature:()
CArrayConcept::IsUpdated	DMCore/Concepts/ArrayConcept.cpp	/^bool CArrayConcept::IsUpdated() {$/;"	f	class:CArrayConcept	signature:()
CArrayConcept::IsUpdated	DMCore/Concepts/ArrayConcept.h	/^	virtual bool IsUpdated();$/;"	p	class:CArrayConcept	access:public	signature:()
CArrayConcept::IsValidHyp	DMCore/Concepts/ArrayConcept.cpp	/^bool CArrayConcept::IsValidHyp(int iIndex) {$/;"	f	class:CArrayConcept	signature:(int iIndex)
CArrayConcept::IsValidHyp	DMCore/Concepts/ArrayConcept.h	/^	virtual bool IsValidHyp(int iIndex);$/;"	p	class:CArrayConcept	access:public	signature:(int iIndex)
CArrayConcept::SetChangeNotification	DMCore/Concepts/ArrayConcept.cpp	/^void CArrayConcept::SetChangeNotification($/;"	f	class:CArrayConcept	signature:( bool bAChangeNotification)
CArrayConcept::SetChangeNotification	DMCore/Concepts/ArrayConcept.h	/^	virtual void SetChangeNotification($/;"	p	class:CArrayConcept	access:public	signature:( bool bAChangeNotification = true)
CArrayConcept::SetHistoryConcept	DMCore/Concepts/ArrayConcept.cpp	/^void CArrayConcept::SetHistoryConcept(bool bAHistoryConcept) {$/;"	f	class:CArrayConcept	signature:(bool bAHistoryConcept)
CArrayConcept::SetHistoryConcept	DMCore/Concepts/ArrayConcept.h	/^	virtual void SetHistoryConcept(bool bAHistoryConcept = true);$/;"	p	class:CArrayConcept	access:public	signature:(bool bAHistoryConcept = true)
CArrayConcept::SetHyp	DMCore/Concepts/ArrayConcept.cpp	/^void CArrayConcept::SetHyp(int iIndex, CHyp* pHyp) {$/;"	f	class:CArrayConcept	signature:(int iIndex, CHyp* pHyp)
CArrayConcept::SetHyp	DMCore/Concepts/ArrayConcept.h	/^    virtual void SetHyp(int iIndex, CHyp* pHyp);$/;"	p	class:CArrayConcept	access:public	signature:(int iIndex, CHyp* pHyp)
CArrayConcept::SetName	DMCore/Concepts/ArrayConcept.cpp	/^void CArrayConcept::SetName(string sAName) {$/;"	f	class:CArrayConcept	signature:(string sAName)
CArrayConcept::SetName	DMCore/Concepts/ArrayConcept.h	/^    virtual void SetName(string sAName);$/;"	p	class:CArrayConcept	access:public	signature:(string sAName)
CArrayConcept::SetNullHyp	DMCore/Concepts/ArrayConcept.cpp	/^void CArrayConcept::SetNullHyp(int iIndex) {$/;"	f	class:CArrayConcept	signature:(int iIndex)
CArrayConcept::SetNullHyp	DMCore/Concepts/ArrayConcept.h	/^    virtual void SetNullHyp(int iIndex);$/;"	p	class:CArrayConcept	access:public	signature:(int iIndex)
CArrayConcept::SetOwnerDialogAgent	DMCore/Concepts/ArrayConcept.cpp	/^void CArrayConcept::SetOwnerDialogAgent(CDialogAgent* pADialogAgent) {$/;"	f	class:CArrayConcept	signature:(CDialogAgent* pADialogAgent)
CArrayConcept::SetOwnerDialogAgent	DMCore/Concepts/ArrayConcept.h	/^    virtual void SetOwnerDialogAgent(CDialogAgent* pADialogAgent);$/;"	p	class:CArrayConcept	access:public	signature:(CDialogAgent* pADialogAgent)
CArrayConcept::TopHypToString	DMCore/Concepts/ArrayConcept.cpp	/^string CArrayConcept::TopHypToString() {$/;"	f	class:CArrayConcept	signature:()
CArrayConcept::TopHypToString	DMCore/Concepts/ArrayConcept.h	/^	virtual string TopHypToString();$/;"	p	class:CArrayConcept	access:public	signature:()
CArrayConcept::Update_Calista_CollapseToMode	DMCore/Concepts/ArrayConcept.cpp	/^void CArrayConcept::Update_Calista_CollapseToMode(void* pUpdateData) {$/;"	f	class:CArrayConcept	signature:(void* pUpdateData)
CArrayConcept::Update_Calista_CollapseToMode	DMCore/Concepts/ArrayConcept.h	/^    virtual void Update_Calista_CollapseToMode(void* pUpdateData);$/;"	p	class:CArrayConcept	access:public	signature:(void* pUpdateData)
CArrayConcept::Update_Calista_UpdateWithConcept	DMCore/Concepts/ArrayConcept.cpp	/^void CArrayConcept::Update_Calista_UpdateWithConcept(void* pUpdateData) {$/;"	f	class:CArrayConcept	signature:(void* pUpdateData)
CArrayConcept::Update_Calista_UpdateWithConcept	DMCore/Concepts/ArrayConcept.h	/^    virtual void Update_Calista_UpdateWithConcept(void* pUpdateData);$/;"	p	class:CArrayConcept	access:public	signature:(void* pUpdateData)
CArrayConcept::Update_NPU_AssignFromString	DMCore/Concepts/ArrayConcept.cpp	/^void CArrayConcept::Update_NPU_AssignFromString(void* pUpdateData) {$/;"	f	class:CArrayConcept	signature:(void* pUpdateData)
CArrayConcept::Update_NPU_AssignFromString	DMCore/Concepts/ArrayConcept.h	/^	virtual void Update_NPU_AssignFromString(void* pUpdateData);$/;"	p	class:CArrayConcept	access:public	signature:(void* pUpdateData)
CArrayConcept::Update_NPU_CollapseToMode	DMCore/Concepts/ArrayConcept.cpp	/^void CArrayConcept::Update_NPU_CollapseToMode(void* pUpdateData) {$/;"	f	class:CArrayConcept	signature:(void* pUpdateData)
CArrayConcept::Update_NPU_CollapseToMode	DMCore/Concepts/ArrayConcept.h	/^    virtual void Update_NPU_CollapseToMode(void* pUpdateData);$/;"	p	class:CArrayConcept	access:public	signature:(void* pUpdateData)
CArrayConcept::Update_NPU_UpdateWithConcept	DMCore/Concepts/ArrayConcept.cpp	/^void CArrayConcept::Update_NPU_UpdateWithConcept(void* pUpdateData) {$/;"	f	class:CArrayConcept	signature:(void* pUpdateData)
CArrayConcept::Update_NPU_UpdateWithConcept	DMCore/Concepts/ArrayConcept.h	/^    virtual void Update_NPU_UpdateWithConcept(void* pUpdateData);$/;"	p	class:CArrayConcept	access:public	signature:(void* pUpdateData)
CArrayConcept::operator <	DMCore/Concepts/ArrayConcept.cpp	/^bool CArrayConcept::operator < (CConcept& rAConcept) {$/;"	f	class:CArrayConcept	signature:(CConcept& rAConcept)
CArrayConcept::operator <	DMCore/Concepts/ArrayConcept.h	/^    virtual bool operator < (CConcept& rAConcept);$/;"	p	class:CArrayConcept	access:public	signature:(CConcept& rAConcept)
CArrayConcept::operator <=	DMCore/Concepts/ArrayConcept.cpp	/^bool CArrayConcept::operator <= (CConcept& rAConcept) {$/;"	f	class:CArrayConcept	signature:(CConcept& rAConcept)
CArrayConcept::operator <=	DMCore/Concepts/ArrayConcept.h	/^    virtual bool operator <= (CConcept& rAConcept);$/;"	p	class:CArrayConcept	access:public	signature:(CConcept& rAConcept)
CArrayConcept::operator ==	DMCore/Concepts/ArrayConcept.cpp	/^bool CArrayConcept::operator == (CConcept& rAConcept) {$/;"	f	class:CArrayConcept	signature:(CConcept& rAConcept)
CArrayConcept::operator ==	DMCore/Concepts/ArrayConcept.h	/^    virtual bool operator == (CConcept& rAConcept);$/;"	p	class:CArrayConcept	access:public	signature:(CConcept& rAConcept)
CArrayConcept::operator >	DMCore/Concepts/ArrayConcept.cpp	/^bool CArrayConcept::operator > (CConcept& rAConcept) {$/;"	f	class:CArrayConcept	signature:(CConcept& rAConcept)
CArrayConcept::operator >	DMCore/Concepts/ArrayConcept.h	/^    virtual bool operator > (CConcept& rAConcept);$/;"	p	class:CArrayConcept	access:public	signature:(CConcept& rAConcept)
CArrayConcept::operator >=	DMCore/Concepts/ArrayConcept.cpp	/^bool CArrayConcept::operator >= (CConcept& rAConcept) {$/;"	f	class:CArrayConcept	signature:(CConcept& rAConcept)
CArrayConcept::operator >=	DMCore/Concepts/ArrayConcept.h	/^    virtual bool operator >= (CConcept& rAConcept);$/;"	p	class:CArrayConcept	access:public	signature:(CConcept& rAConcept)
CArrayConcept::operator []	DMCore/Concepts/ArrayConcept.cpp	/^CConcept& CArrayConcept::operator [](int iIndex) {$/;"	f	class:CArrayConcept	signature:(int iIndex)
CArrayConcept::operator []	DMCore/Concepts/ArrayConcept.cpp	/^CConcept& CArrayConcept::operator [](string sIndex) {$/;"	f	class:CArrayConcept	signature:(string sIndex)
CArrayConcept::operator []	DMCore/Concepts/ArrayConcept.h	/^	virtual CConcept& operator [](int iIndex);$/;"	p	class:CArrayConcept	access:public	signature:(int iIndex)
CArrayConcept::operator []	DMCore/Concepts/ArrayConcept.h	/^	virtual CConcept& operator [](string sIndex);$/;"	p	class:CArrayConcept	access:public	signature:(string sIndex)
CArrayConcept::sElementGroundingModelSpec	DMCore/Concepts/ArrayConcept.h	/^	string sElementGroundingModelSpec;$/;"	m	class:CArrayConcept	access:protected
CArrayConcept::~CArrayConcept	DMCore/Concepts/ArrayConcept.cpp	/^CArrayConcept::~CArrayConcept() {$/;"	f	class:CArrayConcept	signature:()
CArrayConcept::~CArrayConcept	DMCore/Concepts/ArrayConcept.h	/^	virtual ~CArrayConcept();$/;"	p	class:CArrayConcept	access:public	signature:()
CBeliefDistribution	DMCore/Grounding/GroundingUtils.cpp	/^CBeliefDistribution::CBeliefDistribution($/;"	f	class:CBeliefDistribution	signature:( CBeliefDistribution& rbdABeliefDistribution)
CBeliefDistribution	DMCore/Grounding/GroundingUtils.cpp	/^CBeliefDistribution::CBeliefDistribution(int iNumEvents) {$/;"	f	class:CBeliefDistribution	signature:(int iNumEvents)
CBeliefDistribution	DMCore/Grounding/GroundingUtils.h	/^    CBeliefDistribution(CBeliefDistribution& rbdABeliefDistribution);$/;"	p	class:CBeliefDistribution	access:public	signature:(CBeliefDistribution& rbdABeliefDistribution)
CBeliefDistribution	DMCore/Grounding/GroundingUtils.h	/^    CBeliefDistribution(int iNumEvents = 0);$/;"	p	class:CBeliefDistribution	access:public	signature:(int iNumEvents = 0)
CBeliefDistribution	DMCore/Grounding/GroundingUtils.h	/^class CBeliefDistribution {$/;"	c
CBeliefDistribution::CBeliefDistribution	DMCore/Grounding/GroundingUtils.cpp	/^CBeliefDistribution::CBeliefDistribution($/;"	f	class:CBeliefDistribution	signature:( CBeliefDistribution& rbdABeliefDistribution)
CBeliefDistribution::CBeliefDistribution	DMCore/Grounding/GroundingUtils.cpp	/^CBeliefDistribution::CBeliefDistribution(int iNumEvents) {$/;"	f	class:CBeliefDistribution	signature:(int iNumEvents)
CBeliefDistribution::CBeliefDistribution	DMCore/Grounding/GroundingUtils.h	/^    CBeliefDistribution(CBeliefDistribution& rbdABeliefDistribution);$/;"	p	class:CBeliefDistribution	access:public	signature:(CBeliefDistribution& rbdABeliefDistribution)
CBeliefDistribution::CBeliefDistribution	DMCore/Grounding/GroundingUtils.h	/^    CBeliefDistribution(int iNumEvents = 0);$/;"	p	class:CBeliefDistribution	access:public	signature:(int iNumEvents = 0)
CBeliefDistribution::GetEpsilonGreedyEvent	DMCore/Grounding/GroundingUtils.cpp	/^int CBeliefDistribution::GetEpsilonGreedyEvent(float fEpsilon) {$/;"	f	class:CBeliefDistribution	signature:(float fEpsilon)
CBeliefDistribution::GetEpsilonGreedyEvent	DMCore/Grounding/GroundingUtils.h	/^    int GetEpsilonGreedyEvent(float fEpsilon);$/;"	p	class:CBeliefDistribution	access:public	signature:(float fEpsilon)
CBeliefDistribution::GetMaxHiBoundEvent	DMCore/Grounding/GroundingUtils.cpp	/^int CBeliefDistribution::GetMaxHiBoundEvent() {$/;"	f	class:CBeliefDistribution	signature:()
CBeliefDistribution::GetMaxHiBoundEvent	DMCore/Grounding/GroundingUtils.h	/^	int GetMaxHiBoundEvent();$/;"	p	class:CBeliefDistribution	access:public	signature:()
CBeliefDistribution::GetModeEvent	DMCore/Grounding/GroundingUtils.cpp	/^int CBeliefDistribution::GetModeEvent() {$/;"	f	class:CBeliefDistribution	signature:()
CBeliefDistribution::GetModeEvent	DMCore/Grounding/GroundingUtils.h	/^    int GetModeEvent();$/;"	p	class:CBeliefDistribution	access:public	signature:()
CBeliefDistribution::GetRandomlyDrawnEvent	DMCore/Grounding/GroundingUtils.cpp	/^int CBeliefDistribution::GetRandomlyDrawnEvent() {$/;"	f	class:CBeliefDistribution	signature:()
CBeliefDistribution::GetRandomlyDrawnEvent	DMCore/Grounding/GroundingUtils.h	/^    int GetRandomlyDrawnEvent();$/;"	p	class:CBeliefDistribution	access:public	signature:()
CBeliefDistribution::GetSoftMaxEvent	DMCore/Grounding/GroundingUtils.cpp	/^int CBeliefDistribution::GetSoftMaxEvent(float fTemperature) {$/;"	f	class:CBeliefDistribution	signature:(float fTemperature)
CBeliefDistribution::GetSoftMaxEvent	DMCore/Grounding/GroundingUtils.h	/^    int GetSoftMaxEvent(float fTemperature);$/;"	p	class:CBeliefDistribution	access:public	signature:(float fTemperature)
CBeliefDistribution::GetValidEventsNumber	DMCore/Grounding/GroundingUtils.cpp	/^int CBeliefDistribution::GetValidEventsNumber() {$/;"	f	class:CBeliefDistribution	signature:()
CBeliefDistribution::GetValidEventsNumber	DMCore/Grounding/GroundingUtils.h	/^    int GetValidEventsNumber();$/;"	p	class:CBeliefDistribution	access:public	signature:()
CBeliefDistribution::HiBound	DMCore/Grounding/GroundingUtils.cpp	/^float& CBeliefDistribution::HiBound(unsigned int iIndex) {$/;"	f	class:CBeliefDistribution	signature:(unsigned int iIndex)
CBeliefDistribution::HiBound	DMCore/Grounding/GroundingUtils.h	/^	float& HiBound(unsigned int iIndex);$/;"	p	class:CBeliefDistribution	access:public	signature:(unsigned int iIndex)
CBeliefDistribution::LowBound	DMCore/Grounding/GroundingUtils.cpp	/^float& CBeliefDistribution::LowBound(unsigned int iIndex) {$/;"	f	class:CBeliefDistribution	signature:(unsigned int iIndex)
CBeliefDistribution::LowBound	DMCore/Grounding/GroundingUtils.h	/^	float& LowBound(unsigned int iIndex);$/;"	p	class:CBeliefDistribution	access:public	signature:(unsigned int iIndex)
CBeliefDistribution::Normalize	DMCore/Grounding/GroundingUtils.cpp	/^void CBeliefDistribution::Normalize() {$/;"	f	class:CBeliefDistribution	signature:()
CBeliefDistribution::Normalize	DMCore/Grounding/GroundingUtils.h	/^    void Normalize();$/;"	p	class:CBeliefDistribution	access:public	signature:()
CBeliefDistribution::Resize	DMCore/Grounding/GroundingUtils.cpp	/^void CBeliefDistribution::Resize(int iNumEvents) {$/;"	f	class:CBeliefDistribution	signature:(int iNumEvents)
CBeliefDistribution::Resize	DMCore/Grounding/GroundingUtils.h	/^    void Resize(int iNumEvents);$/;"	p	class:CBeliefDistribution	access:public	signature:(int iNumEvents)
CBeliefDistribution::Sharpen	DMCore/Grounding/GroundingUtils.h	/^    void Sharpen(float fPower);$/;"	p	class:CBeliefDistribution	access:public	signature:(float fPower)
CBeliefDistribution::operator []	DMCore/Grounding/GroundingUtils.cpp	/^float& CBeliefDistribution::operator[] (unsigned int iIndex) {$/;"	f	class:CBeliefDistribution	signature:(unsigned int iIndex)
CBeliefDistribution::operator []	DMCore/Grounding/GroundingUtils.h	/^    float& operator[] (unsigned int iIndex);$/;"	p	class:CBeliefDistribution	access:public	signature:(unsigned int iIndex)
CBeliefDistribution::vfProbability	DMCore/Grounding/GroundingUtils.h	/^    vector<float> vfProbability;$/;"	m	class:CBeliefDistribution	access:private
CBeliefDistribution::vfProbabilityHiBound	DMCore/Grounding/GroundingUtils.h	/^	vector<float> vfProbabilityHiBound;$/;"	m	class:CBeliefDistribution	access:private
CBeliefDistribution::vfProbabilityLowBound	DMCore/Grounding/GroundingUtils.h	/^	vector<float> vfProbabilityLowBound;$/;"	m	class:CBeliefDistribution	access:private
CBeliefDistribution::~CBeliefDistribution	DMCore/Grounding/GroundingUtils.cpp	/^CBeliefDistribution::~CBeliefDistribution() {$/;"	f	class:CBeliefDistribution	signature:()
CBeliefDistribution::~CBeliefDistribution	DMCore/Grounding/GroundingUtils.h	/^    ~CBeliefDistribution();$/;"	p	class:CBeliefDistribution	access:public	signature:()
CBool	DMCore/Concepts/BoolConcept.h	158;"	d
CBoolConcept	DMCore/Concepts/BoolConcept.cpp	/^CBoolConcept::CBoolConcept(string sAName, TConceptSource csAConceptSource):$/;"	f	class:CBoolConcept	signature:(string sAName, TConceptSource csAConceptSource)
CBoolConcept	DMCore/Concepts/BoolConcept.cpp	/^CBoolConcept::CBoolConcept(string sAName, bool bAValue, float fAConfidence,$/;"	f	class:CBoolConcept	signature:(string sAName, bool bAValue, float fAConfidence, TConceptSource csAConceptSource)
CBoolConcept	DMCore/Concepts/BoolConcept.h	/^	CBoolConcept(string sAName = "NONAME", $/;"	p	class:CBoolConcept	access:public	signature:(string sAName = Ó, TConceptSource csAConceptSource = csUser)
CBoolConcept	DMCore/Concepts/BoolConcept.h	/^	CBoolConcept(string sAName, bool bAValue, float fAConfidence = 1.0,$/;"	p	class:CBoolConcept	access:public	signature:(string sAName, bool bAValue, float fAConfidence = 1.0, TConceptSource csAConceptSource = csUser)
CBoolConcept	DMCore/Concepts/BoolConcept.h	/^class CBoolConcept: public CConcept {$/;"	c	inherits:CConcept
CBoolConcept::CBoolConcept	DMCore/Concepts/BoolConcept.cpp	/^CBoolConcept::CBoolConcept(string sAName, TConceptSource csAConceptSource):$/;"	f	class:CBoolConcept	signature:(string sAName, TConceptSource csAConceptSource)
CBoolConcept::CBoolConcept	DMCore/Concepts/BoolConcept.cpp	/^CBoolConcept::CBoolConcept(string sAName, bool bAValue, float fAConfidence,$/;"	f	class:CBoolConcept	signature:(string sAName, bool bAValue, float fAConfidence, TConceptSource csAConceptSource)
CBoolConcept::CBoolConcept	DMCore/Concepts/BoolConcept.h	/^	CBoolConcept(string sAName = "NONAME", $/;"	p	class:CBoolConcept	access:public	signature:(string sAName = Ó, TConceptSource csAConceptSource = csUser)
CBoolConcept::CBoolConcept	DMCore/Concepts/BoolConcept.h	/^	CBoolConcept(string sAName, bool bAValue, float fAConfidence = 1.0,$/;"	p	class:CBoolConcept	access:public	signature:(string sAName, bool bAValue, float fAConfidence = 1.0, TConceptSource csAConceptSource = csUser)
CBoolConcept::EmptyClone	DMCore/Concepts/BoolConcept.cpp	/^CConcept* CBoolConcept::EmptyClone() {$/;"	f	class:CBoolConcept	signature:()
CBoolConcept::EmptyClone	DMCore/Concepts/BoolConcept.h	/^    virtual CConcept* EmptyClone();$/;"	p	class:CBoolConcept	access:public	signature:()
CBoolConcept::HypFactory	DMCore/Concepts/BoolConcept.cpp	/^CHyp* CBoolConcept::HypFactory() {$/;"	f	class:CBoolConcept	signature:()
CBoolConcept::HypFactory	DMCore/Concepts/BoolConcept.h	/^    virtual CHyp* HypFactory();$/;"	p	class:CBoolConcept	access:public	signature:()
CBoolConcept::operator =	DMCore/Concepts/BoolConcept.cpp	/^CConcept& CBoolConcept::operator = (bool bAValue) {$/;"	f	class:CBoolConcept	signature:(bool bAValue)
CBoolConcept::operator =	DMCore/Concepts/BoolConcept.cpp	/^CConcept& CBoolConcept::operator = (int iAValue) {$/;"	f	class:CBoolConcept	signature:(int iAValue)
CBoolConcept::operator =	DMCore/Concepts/BoolConcept.h	/^	virtual CConcept& operator = (bool bAValue);$/;"	p	class:CBoolConcept	access:public	signature:(bool bAValue)
CBoolConcept::operator =	DMCore/Concepts/BoolConcept.h	/^	virtual CConcept& operator = (int iAValue);$/;"	p	class:CBoolConcept	access:public	signature:(int iAValue)
CBoolConcept::operator bool	DMCore/Concepts/BoolConcept.cpp	/^CBoolConcept::operator bool() {$/;"	f	class:CBoolConcept	signature:()
CBoolConcept::operator bool	DMCore/Concepts/BoolConcept.h	/^	virtual operator bool();$/;"	p	class:CBoolConcept	access:public	signature:()
CBoolConcept::operator int	DMCore/Concepts/BoolConcept.cpp	/^CBoolConcept::operator int() {$/;"	f	class:CBoolConcept	signature:()
CBoolConcept::operator int	DMCore/Concepts/BoolConcept.h	/^    virtual operator int();$/;"	p	class:CBoolConcept	access:public	signature:()
CBoolHyp	DMCore/Concepts/BoolConcept.cpp	/^CBoolHyp::CBoolHyp() {$/;"	f	class:CBoolHyp	signature:()
CBoolHyp	DMCore/Concepts/BoolConcept.cpp	/^CBoolHyp::CBoolHyp(CBoolHyp& rABoolHyp) {$/;"	f	class:CBoolHyp	signature:(CBoolHyp& rABoolHyp)
CBoolHyp	DMCore/Concepts/BoolConcept.cpp	/^CBoolHyp::CBoolHyp(bool bAValue, float fAConfidence) {$/;"	f	class:CBoolHyp	signature:(bool bAValue, float fAConfidence)
CBoolHyp	DMCore/Concepts/BoolConcept.h	/^	CBoolHyp();$/;"	p	class:CBoolHyp	access:public	signature:()
CBoolHyp	DMCore/Concepts/BoolConcept.h	/^	CBoolHyp(CBoolHyp& rABoolValConf);$/;"	p	class:CBoolHyp	access:public	signature:(CBoolHyp& rABoolValConf)
CBoolHyp	DMCore/Concepts/BoolConcept.h	/^	CBoolHyp(bool bAValue, float fAConfidence = 1.0);$/;"	p	class:CBoolHyp	access:public	signature:(bool bAValue, float fAConfidence = 1.0)
CBoolHyp	DMCore/Concepts/BoolConcept.h	/^class CBoolHyp : public CHyp {$/;"	c	inherits:CHyp
CBoolHyp::CBoolHyp	DMCore/Concepts/BoolConcept.cpp	/^CBoolHyp::CBoolHyp() {$/;"	f	class:CBoolHyp	signature:()
CBoolHyp::CBoolHyp	DMCore/Concepts/BoolConcept.cpp	/^CBoolHyp::CBoolHyp(CBoolHyp& rABoolHyp) {$/;"	f	class:CBoolHyp	signature:(CBoolHyp& rABoolHyp)
CBoolHyp::CBoolHyp	DMCore/Concepts/BoolConcept.cpp	/^CBoolHyp::CBoolHyp(bool bAValue, float fAConfidence) {$/;"	f	class:CBoolHyp	signature:(bool bAValue, float fAConfidence)
CBoolHyp::CBoolHyp	DMCore/Concepts/BoolConcept.h	/^	CBoolHyp();$/;"	p	class:CBoolHyp	access:public	signature:()
CBoolHyp::CBoolHyp	DMCore/Concepts/BoolConcept.h	/^	CBoolHyp(CBoolHyp& rABoolValConf);$/;"	p	class:CBoolHyp	access:public	signature:(CBoolHyp& rABoolValConf)
CBoolHyp::CBoolHyp	DMCore/Concepts/BoolConcept.h	/^	CBoolHyp(bool bAValue, float fAConfidence = 1.0);$/;"	p	class:CBoolHyp	access:public	signature:(bool bAValue, float fAConfidence = 1.0)
CBoolHyp::FromString	DMCore/Concepts/BoolConcept.cpp	/^void CBoolHyp::FromString(string sString) {$/;"	f	class:CBoolHyp	signature:(string sString)
CBoolHyp::FromString	DMCore/Concepts/BoolConcept.h	/^	virtual void FromString(string sString);$/;"	p	class:CBoolHyp	access:public	signature:(string sString)
CBoolHyp::ToString	DMCore/Concepts/BoolConcept.cpp	/^string CBoolHyp::ToString() {$/;"	f	class:CBoolHyp	signature:()
CBoolHyp::ToString	DMCore/Concepts/BoolConcept.h	/^	virtual string ToString();$/;"	p	class:CBoolHyp	access:public	signature:()
CBoolHyp::ValueToString	DMCore/Concepts/BoolConcept.cpp	/^string CBoolHyp::ValueToString() {$/;"	f	class:CBoolHyp	signature:()
CBoolHyp::ValueToString	DMCore/Concepts/BoolConcept.h	/^	virtual string ValueToString();$/;"	p	class:CBoolHyp	access:public	signature:()
CBoolHyp::bValue	DMCore/Concepts/BoolConcept.h	/^	bool bValue;                    \/\/ the actual value$/;"	m	class:CBoolHyp	access:protected
CBoolHyp::operator <	DMCore/Concepts/BoolConcept.cpp	/^bool CBoolHyp::operator < (CHyp& rAHyp) {   $/;"	f	class:CBoolHyp	signature:(CHyp& rAHyp)
CBoolHyp::operator <	DMCore/Concepts/BoolConcept.h	/^    virtual bool operator < (CHyp& rAHyp);$/;"	p	class:CBoolHyp	access:public	signature:(CHyp& rAHyp)
CBoolHyp::operator <=	DMCore/Concepts/BoolConcept.cpp	/^bool CBoolHyp::operator <= (CHyp& rAHyp) {   $/;"	f	class:CBoolHyp	signature:(CHyp& rAHyp)
CBoolHyp::operator <=	DMCore/Concepts/BoolConcept.h	/^    virtual bool operator <= (CHyp& rAHyp);$/;"	p	class:CBoolHyp	access:public	signature:(CHyp& rAHyp)
CBoolHyp::operator =	DMCore/Concepts/BoolConcept.cpp	/^CHyp& CBoolHyp::operator = (CHyp& rAHyp) {$/;"	f	class:CBoolHyp	signature:(CHyp& rAHyp)
CBoolHyp::operator =	DMCore/Concepts/BoolConcept.cpp	/^CHyp& CBoolHyp::operator = (bool bAValue) {$/;"	f	class:CBoolHyp	signature:(bool bAValue)
CBoolHyp::operator =	DMCore/Concepts/BoolConcept.h	/^	CHyp& operator = (bool bAValue);$/;"	p	class:CBoolHyp	access:public	signature:(bool bAValue)
CBoolHyp::operator =	DMCore/Concepts/BoolConcept.h	/^	virtual CHyp& operator = (CHyp& rAHyp);$/;"	p	class:CBoolHyp	access:public	signature:(CHyp& rAHyp)
CBoolHyp::operator ==	DMCore/Concepts/BoolConcept.cpp	/^bool CBoolHyp::operator == (CHyp& rAHyp) {$/;"	f	class:CBoolHyp	signature:(CHyp& rAHyp)
CBoolHyp::operator ==	DMCore/Concepts/BoolConcept.h	/^    virtual bool operator == (CHyp& rAHyp);$/;"	p	class:CBoolHyp	access:public	signature:(CHyp& rAHyp)
CBoolHyp::operator >	DMCore/Concepts/BoolConcept.cpp	/^bool CBoolHyp::operator > (CHyp& rAHyp) {   $/;"	f	class:CBoolHyp	signature:(CHyp& rAHyp)
CBoolHyp::operator >	DMCore/Concepts/BoolConcept.h	/^    virtual bool operator > (CHyp& rAHyp);$/;"	p	class:CBoolHyp	access:public	signature:(CHyp& rAHyp)
CBoolHyp::operator >=	DMCore/Concepts/BoolConcept.cpp	/^bool CBoolHyp::operator >= (CHyp& rAHyp) {   $/;"	f	class:CBoolHyp	signature:(CHyp& rAHyp)
CBoolHyp::operator >=	DMCore/Concepts/BoolConcept.h	/^    virtual bool operator >= (CHyp& rAHyp);$/;"	p	class:CBoolHyp	access:public	signature:(CHyp& rAHyp)
CBoolHyp::operator []	DMCore/Concepts/BoolConcept.cpp	/^CHyp* CBoolHyp::operator [] (string sItem) {$/;"	f	class:CBoolHyp	signature:(string sItem)
CBoolHyp::operator []	DMCore/Concepts/BoolConcept.h	/^    virtual CHyp* operator [](string sItem);$/;"	p	class:CBoolHyp	access:public	signature:(string sItem)
CConcept	DMCore/Concepts/Concept.cpp	/^CConcept::CConcept(string sAName, TConceptSource csAConceptSource, $/;"	f	class:CConcept	signature:(string sAName, TConceptSource csAConceptSource, int iACardinality)
CConcept	DMCore/Concepts/Concept.h	/^    CConcept(string sAName = "NONAME", $/;"	p	class:CConcept	access:public	signature:(string sAName = Ó, TConceptSource csAConceptSource = csUser, int iACardinality = DEFAULT_HYPSET_CARDINALITY)
CConcept	DMCore/Concepts/Concept.h	/^class CConcept {$/;"	c
CConcept::AddHyp	DMCore/Concepts/Concept.cpp	/^int CConcept::AddHyp(CHyp* pAHyp) {$/;"	f	class:CConcept	signature:(CHyp* pAHyp)
CConcept::AddHyp	DMCore/Concepts/Concept.h	/^    virtual int AddHyp(CHyp* pAHyp);$/;"	p	class:CConcept	access:public	signature:(CHyp* pAHyp)
CConcept::AddNewHyp	DMCore/Concepts/Concept.cpp	/^int CConcept::AddNewHyp() {$/;"	f	class:CConcept	signature:()
CConcept::AddNewHyp	DMCore/Concepts/Concept.h	/^    virtual int AddNewHyp();$/;"	p	class:CConcept	access:public	signature:()
CConcept::AddNewPartialHyp	DMCore/Concepts/Concept.cpp	/^int CConcept::AddNewPartialHyp() {$/;"	f	class:CConcept	signature:()
CConcept::AddNewPartialHyp	DMCore/Concepts/Concept.h	/^	virtual int AddNewPartialHyp();$/;"	p	class:CConcept	access:public	signature:()
CConcept::AddNullHyp	DMCore/Concepts/Concept.cpp	/^int CConcept::AddNullHyp() {$/;"	f	class:CConcept	signature:()
CConcept::AddNullHyp	DMCore/Concepts/Concept.h	/^    virtual int AddNullHyp();$/;"	p	class:CConcept	access:public	signature:()
CConcept::AddNullPartialHyp	DMCore/Concepts/Concept.cpp	/^int CConcept::AddNullPartialHyp() {$/;"	f	class:CConcept	signature:()
CConcept::AddNullPartialHyp	DMCore/Concepts/Concept.h	/^	virtual int AddNullPartialHyp();$/;"	p	class:CConcept	access:public	signature:()
CConcept::AddPartialHyp	DMCore/Concepts/Concept.cpp	/^int CConcept::AddPartialHyp(CHyp* pAHyp) {$/;"	f	class:CConcept	signature:(CHyp* pAHyp)
CConcept::AddPartialHyp	DMCore/Concepts/Concept.h	/^	virtual int AddPartialHyp(CHyp* pAHyp);$/;"	p	class:CConcept	access:public	signature:(CHyp* pAHyp)
CConcept::BreakSeal	DMCore/Concepts/Concept.cpp	/^void CConcept::BreakSeal() {$/;"	f	class:CConcept	signature:()
CConcept::BreakSeal	DMCore/Concepts/Concept.h	/^	virtual void BreakSeal();$/;"	p	class:CConcept	access:public	signature:()
CConcept::CConcept	DMCore/Concepts/Concept.cpp	/^CConcept::CConcept(string sAName, TConceptSource csAConceptSource, $/;"	f	class:CConcept	signature:(string sAName, TConceptSource csAConceptSource, int iACardinality)
CConcept::CConcept	DMCore/Concepts/Concept.h	/^    CConcept(string sAName = "NONAME", $/;"	p	class:CConcept	access:public	signature:(string sAName = Ó, TConceptSource csAConceptSource = csUser, int iACardinality = DEFAULT_HYPSET_CARDINALITY)
CConcept::Clear	DMCore/Concepts/Concept.cpp	/^void CConcept::Clear() {$/;"	f	class:CConcept	signature:()
CConcept::Clear	DMCore/Concepts/Concept.h	/^    virtual void Clear();$/;"	p	class:CConcept	access:public	signature:()
CConcept::ClearConceptNotificationPointer	DMCore/Concepts/Concept.cpp	/^void CConcept::ClearConceptNotificationPointer() {$/;"	f	class:CConcept	signature:()
CConcept::ClearConceptNotificationPointer	DMCore/Concepts/Concept.h	/^	virtual void ClearConceptNotificationPointer();$/;"	p	class:CConcept	access:public	signature:()
CConcept::ClearCurrentHypSet	DMCore/Concepts/Concept.cpp	/^void CConcept::ClearCurrentHypSet() {$/;"	f	class:CConcept	signature:()
CConcept::ClearCurrentHypSet	DMCore/Concepts/Concept.h	/^    virtual void ClearCurrentHypSet();$/;"	p	class:CConcept	access:public	signature:()
CConcept::ClearCurrentValue	DMCore/Concepts/Concept.cpp	/^void CConcept::ClearCurrentValue() {$/;"	f	class:CConcept	signature:()
CConcept::ClearCurrentValue	DMCore/Concepts/Concept.h	/^    virtual void ClearCurrentValue();$/;"	p	class:CConcept	access:public	signature:()
CConcept::ClearExplicitlyConfirmedHyp	DMCore/Concepts/Concept.cpp	/^void CConcept::ClearExplicitlyConfirmedHyp() {$/;"	f	class:CConcept	signature:()
CConcept::ClearExplicitlyConfirmedHyp	DMCore/Concepts/Concept.h	/^	virtual void ClearExplicitlyConfirmedHyp();$/;"	p	class:CConcept	access:public	signature:()
CConcept::ClearExplicitlyDisconfirmedHyp	DMCore/Concepts/Concept.cpp	/^void CConcept::ClearExplicitlyDisconfirmedHyp() {$/;"	f	class:CConcept	signature:()
CConcept::ClearExplicitlyDisconfirmedHyp	DMCore/Concepts/Concept.h	/^	virtual void ClearExplicitlyDisconfirmedHyp();$/;"	p	class:CConcept	access:public	signature:()
CConcept::ClearHistory	DMCore/Concepts/Concept.cpp	/^void CConcept::ClearHistory() {$/;"	f	class:CConcept	signature:()
CConcept::ClearHistory	DMCore/Concepts/Concept.h	/^    virtual void ClearHistory();$/;"	p	class:CConcept	access:public	signature:()
CConcept::ClearPartialHypSet	DMCore/Concepts/Concept.cpp	/^void CConcept::ClearPartialHypSet() {$/;"	f	class:CConcept	signature:()
CConcept::ClearPartialHypSet	DMCore/Concepts/Concept.h	/^    virtual void ClearPartialHypSet();$/;"	p	class:CConcept	access:public	signature:()
CConcept::ClearWaitingConveyance	DMCore/Concepts/Concept.cpp	/^void CConcept::ClearWaitingConveyance() {$/;"	f	class:CConcept	signature:()
CConcept::ClearWaitingConveyance	DMCore/Concepts/Concept.h	/^    void ClearWaitingConveyance();$/;"	p	class:CConcept	access:public	signature:()
CConcept::Clone	DMCore/Concepts/Concept.cpp	/^CConcept* CConcept::Clone(bool bCloneHistory) {$/;"	f	class:CConcept	signature:(bool bCloneHistory)
CConcept::Clone	DMCore/Concepts/Concept.h	/^	virtual CConcept* Clone(bool bCloneHistory = true);$/;"	p	class:CConcept	access:public	signature:(bool bCloneHistory = true)
CConcept::CopyCurrentHypSetFrom	DMCore/Concepts/Concept.cpp	/^void CConcept::CopyCurrentHypSetFrom(CConcept& rAConcept) {$/;"	f	class:CConcept	signature:(CConcept& rAConcept)
CConcept::CopyCurrentHypSetFrom	DMCore/Concepts/Concept.h	/^    virtual void CopyCurrentHypSetFrom(CConcept& rAConcept);$/;"	p	class:CConcept	access:public	signature:(CConcept& rAConcept)
CConcept::CreateGroundingModel	DMCore/Concepts/Concept.cpp	/^void CConcept::CreateGroundingModel(string sGroundingModelSpec) {$/;"	f	class:CConcept	signature:(string sGroundingModelSpec)
CConcept::CreateGroundingModel	DMCore/Concepts/Concept.h	/^    virtual void CreateGroundingModel(string sGroundingModelSpec);$/;"	p	class:CConcept	access:public	signature:(string sGroundingModelSpec)
CConcept::CreateMergedHistoryConcept	DMCore/Concepts/Concept.cpp	/^CConcept* CConcept::CreateMergedHistoryConcept() {$/;"	f	class:CConcept	signature:()
CConcept::CreateMergedHistoryConcept	DMCore/Concepts/Concept.h	/^    virtual CConcept* CreateMergedHistoryConcept();$/;"	p	class:CConcept	access:public	signature:()
CConcept::DeclareConcepts	DMCore/Concepts/Concept.cpp	/^void CConcept::DeclareConcepts(TConceptPointersVector& rcpvConcepts, $/;"	f	class:CConcept	signature:(TConceptPointersVector& rcpvConcepts, TConceptPointersSet& rcpsExclude)
CConcept::DeclareConcepts	DMCore/Concepts/Concept.h	/^    virtual void DeclareConcepts($/;"	p	class:CConcept	access:public	signature:( TConceptPointersVector& rcpvConcepts, TConceptPointersSet& rcpsExclude)
CConcept::DeclareGroundingModels	DMCore/Concepts/Concept.cpp	/^void CConcept::DeclareGroundingModels($/;"	f	class:CConcept	signature:( TGroundingModelPointersVector& rgmpvModels, TGroundingModelPointersSet& rgmpsExclude)
CConcept::DeclareGroundingModels	DMCore/Concepts/Concept.h	/^    virtual void DeclareGroundingModels($/;"	p	class:CConcept	access:public	signature:( TGroundingModelPointersVector& rgmpvModels, TGroundingModelPointersSet& rgmpsExclude)
CConcept::DeleteAt	DMCore/Concepts/Concept.cpp	/^void CConcept::DeleteAt(unsigned int iIndex) {$/;"	f	class:CConcept	signature:(unsigned int iIndex)
CConcept::DeleteAt	DMCore/Concepts/Concept.h	/^	virtual void DeleteAt(unsigned int iIndex);   $/;"	p	class:CConcept	access:public	signature:(unsigned int iIndex)
CConcept::DeleteHyp	DMCore/Concepts/Concept.cpp	/^void CConcept::DeleteHyp(int iIndex) {$/;"	f	class:CConcept	signature:(int iIndex)
CConcept::DeleteHyp	DMCore/Concepts/Concept.h	/^	virtual void DeleteHyp(int iIndex);$/;"	p	class:CConcept	access:public	signature:(int iIndex)
CConcept::DisableChangeNotification	DMCore/Concepts/Concept.cpp	/^void CConcept::DisableChangeNotification() {$/;"	f	class:CConcept	signature:()
CConcept::DisableChangeNotification	DMCore/Concepts/Concept.h	/^	virtual void DisableChangeNotification();$/;"	p	class:CConcept	access:public	signature:()
CConcept::EmptyClone	DMCore/Concepts/Concept.cpp	/^CConcept* CConcept::EmptyClone() {$/;"	f	class:CConcept	signature:()
CConcept::EmptyClone	DMCore/Concepts/Concept.h	/^    virtual CConcept* EmptyClone();$/;"	p	class:CConcept	access:public	signature:()
CConcept::EnableChangeNotification	DMCore/Concepts/Concept.cpp	/^void CConcept::EnableChangeNotification() {$/;"	f	class:CConcept	signature:()
CConcept::EnableChangeNotification	DMCore/Concepts/Concept.h	/^	virtual void EnableChangeNotification();$/;"	p	class:CConcept	access:public	signature:()
CConcept::Get2ndHypIndex	DMCore/Concepts/Concept.cpp	/^int CConcept::Get2ndHypIndex() {$/;"	f	class:CConcept	signature:()
CConcept::Get2ndHypIndex	DMCore/Concepts/Concept.h	/^	virtual int Get2ndHypIndex();$/;"	p	class:CConcept	access:public	signature:()
CConcept::GetAgentQualifiedName	DMCore/Concepts/Concept.cpp	/^string CConcept::GetAgentQualifiedName() {$/;"	f	class:CConcept	signature:()
CConcept::GetAgentQualifiedName	DMCore/Concepts/Concept.h	/^    string GetAgentQualifiedName();$/;"	p	class:CConcept	access:public	signature:()
CConcept::GetCardinality	DMCore/Concepts/Concept.cpp	/^int CConcept::GetCardinality() {$/;"	f	class:CConcept	signature:()
CConcept::GetCardinality	DMCore/Concepts/Concept.h	/^    virtual int GetCardinality();$/;"	p	class:CConcept	access:public	signature:()
CConcept::GetConceptSource	DMCore/Concepts/Concept.cpp	/^TConceptSource CConcept::GetConceptSource() {$/;"	f	class:CConcept	signature:()
CConcept::GetConceptSource	DMCore/Concepts/Concept.h	/^	virtual TConceptSource GetConceptSource();$/;"	p	class:CConcept	access:public	signature:()
CConcept::GetConceptType	DMCore/Concepts/Concept.cpp	/^TConceptType CConcept::GetConceptType() {$/;"	f	class:CConcept	signature:()
CConcept::GetConceptType	DMCore/Concepts/Concept.h	/^    virtual TConceptType GetConceptType();$/;"	p	class:CConcept	access:public	signature:()
CConcept::GetConceptTypeInfo	DMCore/Concepts/Concept.cpp	/^string CConcept::GetConceptTypeInfo() {$/;"	f	class:CConcept	signature:()
CConcept::GetConceptTypeInfo	DMCore/Concepts/Concept.h	/^	virtual string GetConceptTypeInfo();$/;"	p	class:CConcept	access:public	signature:()
CConcept::GetConfusabilityForHyp	DMCore/Concepts/Concept.cpp	/^float CConcept::GetConfusabilityForHyp(CHyp* pHyp) {$/;"	f	class:CConcept	signature:(CHyp* pHyp)
CConcept::GetConfusabilityForHyp	DMCore/Concepts/Concept.h	/^	virtual float GetConfusabilityForHyp(CHyp* pHyp);$/;"	p	class:CConcept	access:public	signature:(CHyp* pHyp)
CConcept::GetConveyance	DMCore/Concepts/Concept.cpp	/^TConveyance CConcept::GetConveyance() {$/;"	f	class:CConcept	signature:()
CConcept::GetConveyance	DMCore/Concepts/Concept.h	/^	TConveyance GetConveyance();$/;"	p	class:CConcept	access:public	signature:()
CConcept::GetExplicitlyConfirmedHypAsString	DMCore/Concepts/Concept.cpp	/^string CConcept::GetExplicitlyConfirmedHypAsString() {$/;"	f	class:CConcept	signature:()
CConcept::GetExplicitlyConfirmedHypAsString	DMCore/Concepts/Concept.h	/^	virtual string GetExplicitlyConfirmedHypAsString();$/;"	p	class:CConcept	access:public	signature:()
CConcept::GetExplicitlyDisconfirmedHypAsString	DMCore/Concepts/Concept.cpp	/^string CConcept::GetExplicitlyDisconfirmedHypAsString() {$/;"	f	class:CConcept	signature:()
CConcept::GetExplicitlyDisconfirmedHypAsString	DMCore/Concepts/Concept.h	/^	virtual string GetExplicitlyDisconfirmedHypAsString();$/;"	p	class:CConcept	access:public	signature:()
CConcept::GetGroundedFlag	DMCore/Concepts/Concept.cpp	/^bool CConcept::GetGroundedFlag() {$/;"	f	class:CConcept	signature:()
CConcept::GetGroundedFlag	DMCore/Concepts/Concept.h	/^	virtual bool GetGroundedFlag();$/;"	p	class:CConcept	access:public	signature:()
CConcept::GetGroundingModel	DMCore/Concepts/Concept.cpp	/^CGMConcept* CConcept::GetGroundingModel() {$/;"	f	class:CConcept	signature:()
CConcept::GetGroundingModel	DMCore/Concepts/Concept.h	/^    CGMConcept* GetGroundingModel();$/;"	p	class:CConcept	access:public	signature:()
CConcept::GetHistorySize	DMCore/Concepts/Concept.cpp	/^int CConcept::GetHistorySize() {$/;"	f	class:CConcept	signature:()
CConcept::GetHistorySize	DMCore/Concepts/Concept.h	/^    int GetHistorySize();$/;"	p	class:CConcept	access:public	signature:()
CConcept::GetHistoryVersion	DMCore/Concepts/Concept.cpp	/^CConcept& CConcept::GetHistoryVersion(int iIndex) {$/;"	f	class:CConcept	signature:(int iIndex)
CConcept::GetHistoryVersion	DMCore/Concepts/Concept.h	/^    virtual CConcept& GetHistoryVersion(int iIndex);$/;"	p	class:CConcept	access:public	signature:(int iIndex)
CConcept::GetHyp	DMCore/Concepts/Concept.cpp	/^CHyp* CConcept::GetHyp(int iIndex) {$/;"	f	class:CConcept	signature:(int iIndex)
CConcept::GetHyp	DMCore/Concepts/Concept.h	/^	virtual CHyp* GetHyp(int iIndex);$/;"	p	class:CConcept	access:public	signature:(int iIndex)
CConcept::GetHypConfidence	DMCore/Concepts/Concept.cpp	/^float CConcept::GetHypConfidence(int iIndex) {$/;"	f	class:CConcept	signature:(int iIndex)
CConcept::GetHypConfidence	DMCore/Concepts/Concept.h	/^	virtual float GetHypConfidence(int iIndex);$/;"	p	class:CConcept	access:public	signature:(int iIndex)
CConcept::GetHypIndex	DMCore/Concepts/Concept.cpp	/^int CConcept::GetHypIndex(CHyp* pHyp) {$/;"	f	class:CConcept	signature:(CHyp* pHyp)
CConcept::GetHypIndex	DMCore/Concepts/Concept.h	/^    virtual int GetHypIndex(CHyp* pHyp);$/;"	p	class:CConcept	access:public	signature:(CHyp* pHyp)
CConcept::GetInvalidatedFlag	DMCore/Concepts/Concept.cpp	/^bool CConcept::GetInvalidatedFlag() {$/;"	f	class:CConcept	signature:()
CConcept::GetInvalidatedFlag	DMCore/Concepts/Concept.h	/^	virtual bool GetInvalidatedFlag();$/;"	p	class:CConcept	access:public	signature:()
CConcept::GetName	DMCore/Concepts/Concept.cpp	/^string CConcept::GetName() {$/;"	f	class:CConcept	signature:()
CConcept::GetName	DMCore/Concepts/Concept.h	/^	string GetName();$/;"	p	class:CConcept	access:public	signature:()
CConcept::GetNumHyps	DMCore/Concepts/Concept.cpp	/^int CConcept::GetNumHyps() {$/;"	f	class:CConcept	signature:()
CConcept::GetNumHyps	DMCore/Concepts/Concept.h	/^	virtual int GetNumHyps();$/;"	p	class:CConcept	access:public	signature:()
CConcept::GetNumPartialHyps	DMCore/Concepts/Concept.cpp	/^int CConcept::GetNumPartialHyps() {$/;"	f	class:CConcept	signature:()
CConcept::GetNumPartialHyps	DMCore/Concepts/Concept.h	/^	virtual int GetNumPartialHyps();$/;"	p	class:CConcept	access:public	signature:()
CConcept::GetNumValidHyps	DMCore/Concepts/Concept.cpp	/^int CConcept::GetNumValidHyps() {$/;"	f	class:CConcept	signature:()
CConcept::GetNumValidHyps	DMCore/Concepts/Concept.h	/^	virtual int GetNumValidHyps();$/;"	p	class:CConcept	access:public	signature:()
CConcept::GetNumValidPartialHyps	DMCore/Concepts/Concept.cpp	/^int CConcept::GetNumValidPartialHyps() {$/;"	f	class:CConcept	signature:()
CConcept::GetNumValidPartialHyps	DMCore/Concepts/Concept.h	/^	virtual int GetNumValidPartialHyps();$/;"	p	class:CConcept	access:public	signature:()
CConcept::GetOwnerConcept	DMCore/Concepts/Concept.cpp	/^CConcept* CConcept::GetOwnerConcept() {$/;"	f	class:CConcept	signature:()
CConcept::GetOwnerConcept	DMCore/Concepts/Concept.h	/^    CConcept* GetOwnerConcept();$/;"	p	class:CConcept	access:public	signature:()
CConcept::GetOwnerDialogAgent	DMCore/Concepts/Concept.cpp	/^CDialogAgent* CConcept::GetOwnerDialogAgent() {$/;"	f	class:CConcept	signature:()
CConcept::GetOwnerDialogAgent	DMCore/Concepts/Concept.h	/^    CDialogAgent* GetOwnerDialogAgent();$/;"	p	class:CConcept	access:public	signature:()
CConcept::GetPartialHyp	DMCore/Concepts/Concept.cpp	/^CHyp* CConcept::GetPartialHyp(int iIndex) {$/;"	f	class:CConcept	signature:(int iIndex)
CConcept::GetPartialHyp	DMCore/Concepts/Concept.h	/^	virtual CHyp* GetPartialHyp(int iIndex);$/;"	p	class:CConcept	access:public	signature:(int iIndex)
CConcept::GetPriorForHyp	DMCore/Concepts/Concept.cpp	/^float CConcept::GetPriorForHyp(CHyp* pHyp) {$/;"	f	class:CConcept	signature:(CHyp* pHyp)
CConcept::GetPriorForHyp	DMCore/Concepts/Concept.h	/^	virtual float GetPriorForHyp(CHyp* pHyp);$/;"	p	class:CConcept	access:public	signature:(CHyp* pHyp)
CConcept::GetRestoredForGroundingFlag	DMCore/Concepts/Concept.cpp	/^bool CConcept::GetRestoredForGroundingFlag() {$/;"	f	class:CConcept	signature:()
CConcept::GetRestoredForGroundingFlag	DMCore/Concepts/Concept.h	/^	virtual bool GetRestoredForGroundingFlag();$/;"	p	class:CConcept	access:public	signature:()
CConcept::GetSize	DMCore/Concepts/Concept.cpp	/^int CConcept::GetSize() {$/;"	f	class:CConcept	signature:()
CConcept::GetSize	DMCore/Concepts/Concept.h	/^    virtual int GetSize();$/;"	p	class:CConcept	access:public	signature:()
CConcept::GetSmallName	DMCore/Concepts/Concept.cpp	/^string CConcept::GetSmallName() {$/;"	f	class:CConcept	signature:()
CConcept::GetSmallName	DMCore/Concepts/Concept.h	/^	string GetSmallName();$/;"	p	class:CConcept	access:public	signature:()
CConcept::GetTopHyp	DMCore/Concepts/Concept.cpp	/^CHyp* CConcept::GetTopHyp() {$/;"	f	class:CConcept	signature:()
CConcept::GetTopHyp	DMCore/Concepts/Concept.h	/^    virtual CHyp* GetTopHyp();$/;"	p	class:CConcept	access:public	signature:()
CConcept::GetTopHypConfidence	DMCore/Concepts/Concept.cpp	/^float CConcept::GetTopHypConfidence() {$/;"	f	class:CConcept	signature:()
CConcept::GetTopHypConfidence	DMCore/Concepts/Concept.h	/^    virtual float GetTopHypConfidence();$/;"	p	class:CConcept	access:public	signature:()
CConcept::GetTopHypIndex	DMCore/Concepts/Concept.cpp	/^int CConcept::GetTopHypIndex() {$/;"	f	class:CConcept	signature:()
CConcept::GetTopHypIndex	DMCore/Concepts/Concept.h	/^    virtual int GetTopHypIndex();$/;"	p	class:CConcept	access:public	signature:()
CConcept::GetTopPartialHyp	DMCore/Concepts/Concept.cpp	/^CHyp* CConcept::GetTopPartialHyp() {$/;"	f	class:CConcept	signature:()
CConcept::GetTopPartialHyp	DMCore/Concepts/Concept.h	/^	virtual CHyp* GetTopPartialHyp();$/;"	p	class:CConcept	access:public	signature:()
CConcept::GetTopPartialHypConfidence	DMCore/Concepts/Concept.cpp	/^float CConcept::GetTopPartialHypConfidence() {$/;"	f	class:CConcept	signature:()
CConcept::GetTopPartialHypConfidence	DMCore/Concepts/Concept.h	/^	virtual float GetTopPartialHypConfidence();$/;"	p	class:CConcept	access:public	signature:()
CConcept::GetTopPartialHypIndex	DMCore/Concepts/Concept.cpp	/^int CConcept::GetTopPartialHypIndex() {$/;"	f	class:CConcept	signature:()
CConcept::GetTopPartialHypIndex	DMCore/Concepts/Concept.h	/^	virtual int GetTopPartialHypIndex();$/;"	p	class:CConcept	access:public	signature:()
CConcept::GetTurnLastUpdated	DMCore/Concepts/Concept.cpp	/^int CConcept::GetTurnLastUpdated() {$/;"	f	class:CConcept	signature:()
CConcept::GetTurnLastUpdated	DMCore/Concepts/Concept.h	/^    virtual int GetTurnLastUpdated();$/;"	p	class:CConcept	access:public	signature:()
CConcept::GetTurnsSinceLastUpdated	DMCore/Concepts/Concept.cpp	/^int CConcept::GetTurnsSinceLastUpdated() {$/;"	f	class:CConcept	signature:()
CConcept::GetTurnsSinceLastUpdated	DMCore/Concepts/Concept.h	/^    int GetTurnsSinceLastUpdated();$/;"	p	class:CConcept	access:public	signature:()
CConcept::GroundedHypToString	DMCore/Concepts/Concept.cpp	/^string CConcept::GroundedHypToString() {$/;"	f	class:CConcept	signature:()
CConcept::GroundedHypToString	DMCore/Concepts/Concept.h	/^	virtual string GroundedHypToString();$/;"	p	class:CConcept	access:public	signature:()
CConcept::HasPartialHyp	DMCore/Concepts/Concept.cpp	/^bool CConcept::HasPartialHyp() {$/;"	f	class:CConcept	signature:()
CConcept::HasPartialHyp	DMCore/Concepts/Concept.h	/^	virtual bool HasPartialHyp();$/;"	p	class:CConcept	access:public	signature:()
CConcept::HasPartialUpdate	DMCore/Concepts/Concept.cpp	/^bool CConcept::HasPartialUpdate() {$/;"	f	class:CConcept	signature:()
CConcept::HasPartialUpdate	DMCore/Concepts/Concept.h	/^	virtual bool HasPartialUpdate();$/;"	p	class:CConcept	access:public	signature:()
CConcept::HypFactory	DMCore/Concepts/Concept.cpp	/^CHyp* CConcept::HypFactory() {$/;"	f	class:CConcept	signature:()
CConcept::HypFactory	DMCore/Concepts/Concept.h	/^    virtual CHyp* HypFactory();$/;"	p	class:CConcept	access:public	signature:()
CConcept::HypSetToString	DMCore/Concepts/Concept.cpp	/^string CConcept::HypSetToString() {$/;"	f	class:CConcept	signature:()
CConcept::HypSetToString	DMCore/Concepts/Concept.h	/^	virtual string HypSetToString();$/;"	p	class:CConcept	access:public	signature:()
CConcept::InsertAt	DMCore/Concepts/Concept.cpp	/^void CConcept::InsertAt(unsigned int iIndex, CConcept &rAConcept) {$/;"	f	class:CConcept	signature:(unsigned int iIndex, CConcept &rAConcept)
CConcept::InsertAt	DMCore/Concepts/Concept.h	/^	virtual void InsertAt(unsigned int iIndex, CConcept &rAConcept);   $/;"	p	class:CConcept	access:public	signature:(unsigned int iIndex, CConcept &rAConcept)
CConcept::IsAvailable	DMCore/Concepts/Concept.cpp	/^bool CConcept::IsAvailable() {$/;"	f	class:CConcept	signature:()
CConcept::IsAvailable	DMCore/Concepts/Concept.h	/^	virtual bool IsAvailable();$/;"	p	class:CConcept	access:public	signature:()
CConcept::IsAvailableAndGrounded	DMCore/Concepts/Concept.cpp	/^bool CConcept::IsAvailableAndGrounded() {$/;"	f	class:CConcept	signature:()
CConcept::IsAvailableAndGrounded	DMCore/Concepts/Concept.h	/^	virtual bool IsAvailableAndGrounded();$/;"	p	class:CConcept	access:public	signature:()
CConcept::IsGrounded	DMCore/Concepts/Concept.cpp	/^bool CConcept::IsGrounded() {$/;"	f	class:CConcept	signature:()
CConcept::IsGrounded	DMCore/Concepts/Concept.h	/^	virtual bool IsGrounded();$/;"	p	class:CConcept	access:public	signature:()
CConcept::IsHistoryConcept	DMCore/Concepts/Concept.cpp	/^bool CConcept::IsHistoryConcept() {$/;"	f	class:CConcept	signature:()
CConcept::IsHistoryConcept	DMCore/Concepts/Concept.h	/^	virtual bool IsHistoryConcept();$/;"	p	class:CConcept	access:public	signature:()
CConcept::IsInvalidated	DMCore/Concepts/Concept.cpp	/^bool CConcept::IsInvalidated() {$/;"	f	class:CConcept	signature:()
CConcept::IsInvalidated	DMCore/Concepts/Concept.h	/^    virtual bool IsInvalidated();$/;"	p	class:CConcept	access:public	signature:()
CConcept::IsRestoredForGrounding	DMCore/Concepts/Concept.cpp	/^bool CConcept::IsRestoredForGrounding() {$/;"	f	class:CConcept	signature:()
CConcept::IsRestoredForGrounding	DMCore/Concepts/Concept.h	/^    virtual bool IsRestoredForGrounding();$/;"	p	class:CConcept	access:public	signature:()
CConcept::IsSealed	DMCore/Concepts/Concept.cpp	/^bool CConcept::IsSealed() {$/;"	f	class:CConcept	signature:()
CConcept::IsSealed	DMCore/Concepts/Concept.h	/^	virtual bool IsSealed();$/;"	p	class:CConcept	access:public	signature:()
CConcept::IsUndergoingGrounding	DMCore/Concepts/Concept.cpp	/^bool CConcept::IsUndergoingGrounding() {$/;"	f	class:CConcept	signature:()
CConcept::IsUndergoingGrounding	DMCore/Concepts/Concept.h	/^    virtual bool IsUndergoingGrounding();$/;"	p	class:CConcept	access:public	signature:()
CConcept::IsUpdated	DMCore/Concepts/Concept.cpp	/^bool CConcept::IsUpdated() {$/;"	f	class:CConcept	signature:()
CConcept::IsUpdated	DMCore/Concepts/Concept.h	/^    virtual bool IsUpdated();$/;"	p	class:CConcept	access:public	signature:()
CConcept::IsUpdatedAndGrounded	DMCore/Concepts/Concept.cpp	/^bool CConcept::IsUpdatedAndGrounded() {$/;"	f	class:CConcept	signature:()
CConcept::IsUpdatedAndGrounded	DMCore/Concepts/Concept.h	/^    virtual bool IsUpdatedAndGrounded();$/;"	p	class:CConcept	access:public	signature:()
CConcept::IsValidHyp	DMCore/Concepts/Concept.cpp	/^bool CConcept::IsValidHyp(int iIndex) {$/;"	f	class:CConcept	signature:(int iIndex)
CConcept::IsValidHyp	DMCore/Concepts/Concept.h	/^	virtual bool IsValidHyp(int iIndex);$/;"	p	class:CConcept	access:public	signature:(int iIndex)
CConcept::IsValidPartialHyp	DMCore/Concepts/Concept.cpp	/^bool CConcept::IsValidPartialHyp(int iIndex) {$/;"	f	class:CConcept	signature:(int iIndex)
CConcept::IsValidPartialHyp	DMCore/Concepts/Concept.h	/^	bool IsValidPartialHyp(int iIndex);$/;"	p	class:CConcept	access:public	signature:(int iIndex)
CConcept::MarkTurnLastUpdated	DMCore/Concepts/Concept.cpp	/^void CConcept::MarkTurnLastUpdated() {$/;"	f	class:CConcept	signature:()
CConcept::MarkTurnLastUpdated	DMCore/Concepts/Concept.h	/^	virtual void MarkTurnLastUpdated();$/;"	p	class:CConcept	access:public	signature:()
CConcept::MergeHistory	DMCore/Concepts/Concept.cpp	/^void CConcept::MergeHistory() {$/;"	f	class:CConcept	signature:()
CConcept::MergeHistory	DMCore/Concepts/Concept.h	/^    virtual void MergeHistory();$/;"	p	class:CConcept	access:public	signature:()
CConcept::NotifyChange	DMCore/Concepts/Concept.cpp	/^void CConcept::NotifyChange() {$/;"	f	class:CConcept	signature:()
CConcept::NotifyChange	DMCore/Concepts/Concept.h	/^    virtual void NotifyChange();$/;"	p	class:CConcept	access:public	signature:()
CConcept::ReOpen	DMCore/Concepts/Concept.cpp	/^void CConcept::ReOpen() {$/;"	f	class:CConcept	signature:()
CConcept::ReOpen	DMCore/Concepts/Concept.h	/^    virtual void ReOpen();$/;"	p	class:CConcept	access:public	signature:()
CConcept::Restore	DMCore/Concepts/Concept.cpp	/^void CConcept::Restore(int iIndex) {$/;"	f	class:CConcept	signature:(int iIndex)
CConcept::Restore	DMCore/Concepts/Concept.h	/^    virtual void Restore(int iIndex = -1);$/;"	p	class:CConcept	access:public	signature:(int iIndex = -1)
CConcept::Seal	DMCore/Concepts/Concept.cpp	/^void CConcept::Seal() {$/;"	f	class:CConcept	signature:()
CConcept::Seal	DMCore/Concepts/Concept.h	/^	virtual void Seal();$/;"	p	class:CConcept	access:public	signature:()
CConcept::SetCardinality	DMCore/Concepts/Concept.cpp	/^void CConcept::SetCardinality(int iACardinality) {$/;"	f	class:CConcept	signature:(int iACardinality)
CConcept::SetCardinality	DMCore/Concepts/Concept.h	/^    virtual void SetCardinality(int iACardinality);$/;"	p	class:CConcept	access:public	signature:(int iACardinality)
CConcept::SetChangeNotification	DMCore/Concepts/Concept.cpp	/^void CConcept::SetChangeNotification($/;"	f	class:CConcept	signature:( bool bAChangeNotification)
CConcept::SetChangeNotification	DMCore/Concepts/Concept.h	/^	virtual void SetChangeNotification(bool bAChangeNotification = true);$/;"	p	class:CConcept	access:public	signature:(bool bAChangeNotification = true)
CConcept::SetConceptSource	DMCore/Concepts/Concept.cpp	/^void CConcept::SetConceptSource(TConceptSource csAConceptSource) {$/;"	f	class:CConcept	signature:(TConceptSource csAConceptSource)
CConcept::SetConceptSource	DMCore/Concepts/Concept.h	/^	virtual void SetConceptSource(TConceptSource csAConceptSource);$/;"	p	class:CConcept	access:public	signature:(TConceptSource csAConceptSource)
CConcept::SetConceptType	DMCore/Concepts/Concept.cpp	/^void CConcept::SetConceptType(TConceptType ctAConceptType) {$/;"	f	class:CConcept	signature:(TConceptType ctAConceptType)
CConcept::SetConceptType	DMCore/Concepts/Concept.h	/^	virtual void SetConceptType(TConceptType ctAConceptType);$/;"	p	class:CConcept	access:public	signature:(TConceptType ctAConceptType)
CConcept::SetConveyance	DMCore/Concepts/Concept.cpp	/^void CConcept::SetConveyance(TConveyance cAConveyance) {$/;"	f	class:CConcept	signature:(TConveyance cAConveyance)
CConcept::SetConveyance	DMCore/Concepts/Concept.h	/^	virtual void SetConveyance(TConveyance cConveyance);$/;"	p	class:CConcept	access:public	signature:(TConveyance cConveyance)
CConcept::SetExplicitlyConfirmedHyp	DMCore/Concepts/Concept.cpp	/^void CConcept::SetExplicitlyConfirmedHyp(CHyp* pHyp) {$/;"	f	class:CConcept	signature:(CHyp* pHyp)
CConcept::SetExplicitlyConfirmedHyp	DMCore/Concepts/Concept.cpp	/^void CConcept::SetExplicitlyConfirmedHyp(string sAExplicitlyConfirmedHyp) {$/;"	f	class:CConcept	signature:(string sAExplicitlyConfirmedHyp)
CConcept::SetExplicitlyConfirmedHyp	DMCore/Concepts/Concept.h	/^	virtual void SetExplicitlyConfirmedHyp(CHyp* pHyp);$/;"	p	class:CConcept	access:public	signature:(CHyp* pHyp)
CConcept::SetExplicitlyConfirmedHyp	DMCore/Concepts/Concept.h	/^	virtual void SetExplicitlyConfirmedHyp(string sAExplicitlyConfirmedHyp);$/;"	p	class:CConcept	access:public	signature:(string sAExplicitlyConfirmedHyp)
CConcept::SetExplicitlyDisconfirmedHyp	DMCore/Concepts/Concept.cpp	/^void CConcept::SetExplicitlyDisconfirmedHyp(CHyp* pHyp) {$/;"	f	class:CConcept	signature:(CHyp* pHyp)
CConcept::SetExplicitlyDisconfirmedHyp	DMCore/Concepts/Concept.cpp	/^void CConcept::SetExplicitlyDisconfirmedHyp(string sAExplicitlyDisconfirmedHyp) {$/;"	f	class:CConcept	signature:(string sAExplicitlyDisconfirmedHyp)
CConcept::SetExplicitlyDisconfirmedHyp	DMCore/Concepts/Concept.h	/^	virtual void SetExplicitlyDisconfirmedHyp(CHyp* pHyp);$/;"	p	class:CConcept	access:public	signature:(CHyp* pHyp)
CConcept::SetExplicitlyDisconfirmedHyp	DMCore/Concepts/Concept.h	/^	virtual void SetExplicitlyDisconfirmedHyp(string sAExplicitlyDisconfirmedHyp);$/;"	p	class:CConcept	access:public	signature:(string sAExplicitlyDisconfirmedHyp)
CConcept::SetGroundedFlag	DMCore/Concepts/Concept.cpp	/^void CConcept::SetGroundedFlag(bool bAGrounded) {$/;"	f	class:CConcept	signature:(bool bAGrounded)
CConcept::SetGroundedFlag	DMCore/Concepts/Concept.h	/^	virtual void SetGroundedFlag(bool bAGrounded = true);$/;"	p	class:CConcept	access:public	signature:(bool bAGrounded = true)
CConcept::SetHistoryConcept	DMCore/Concepts/Concept.cpp	/^void CConcept::SetHistoryConcept(bool bAHistoryConcept) {$/;"	f	class:CConcept	signature:(bool bAHistoryConcept)
CConcept::SetHistoryConcept	DMCore/Concepts/Concept.h	/^	virtual void SetHistoryConcept(bool bAHistoryConcept = true);$/;"	p	class:CConcept	access:public	signature:(bool bAHistoryConcept = true)
CConcept::SetHyp	DMCore/Concepts/Concept.cpp	/^void CConcept::SetHyp(int iIndex, CHyp* pHyp) {$/;"	f	class:CConcept	signature:(int iIndex, CHyp* pHyp)
CConcept::SetHyp	DMCore/Concepts/Concept.h	/^    virtual void SetHyp(int iIndex, CHyp* pHyp);$/;"	p	class:CConcept	access:public	signature:(int iIndex, CHyp* pHyp)
CConcept::SetHypConfidence	DMCore/Concepts/Concept.cpp	/^void CConcept::SetHypConfidence(int iIndex, float fConfidence) {$/;"	f	class:CConcept	signature:(int iIndex, float fConfidence)
CConcept::SetHypConfidence	DMCore/Concepts/Concept.h	/^	virtual void SetHypConfidence(int iIndex, float fConfidence);$/;"	p	class:CConcept	access:public	signature:(int iIndex, float fConfidence)
CConcept::SetInvalidatedFlag	DMCore/Concepts/Concept.cpp	/^void CConcept::SetInvalidatedFlag(bool bAInvalidated) {$/;"	f	class:CConcept	signature:(bool bAInvalidated)
CConcept::SetInvalidatedFlag	DMCore/Concepts/Concept.h	/^	virtual void SetInvalidatedFlag(bool bAInvalidated = true);$/;"	p	class:CConcept	access:public	signature:(bool bAInvalidated = true)
CConcept::SetName	DMCore/Concepts/Concept.cpp	/^void CConcept::SetName(string sAName) {$/;"	f	class:CConcept	signature:(string sAName)
CConcept::SetName	DMCore/Concepts/Concept.h	/^    virtual void SetName(string sAName);$/;"	p	class:CConcept	access:public	signature:(string sAName)
CConcept::SetNullHyp	DMCore/Concepts/Concept.cpp	/^void CConcept::SetNullHyp(int iIndex) {$/;"	f	class:CConcept	signature:(int iIndex)
CConcept::SetNullHyp	DMCore/Concepts/Concept.h	/^    virtual void SetNullHyp(int iIndex);$/;"	p	class:CConcept	access:public	signature:(int iIndex)
CConcept::SetOwnerConcept	DMCore/Concepts/Concept.cpp	/^void CConcept::SetOwnerConcept(CConcept* pAConcept) {$/;"	f	class:CConcept	signature:(CConcept* pAConcept)
CConcept::SetOwnerConcept	DMCore/Concepts/Concept.h	/^    virtual void SetOwnerConcept(CConcept* pAConcept);$/;"	p	class:CConcept	access:public	signature:(CConcept* pAConcept)
CConcept::SetOwnerDialogAgent	DMCore/Concepts/Concept.cpp	/^void CConcept::SetOwnerDialogAgent(CDialogAgent* pADialogAgent) {$/;"	f	class:CConcept	signature:(CDialogAgent* pADialogAgent)
CConcept::SetOwnerDialogAgent	DMCore/Concepts/Concept.h	/^    virtual void SetOwnerDialogAgent(CDialogAgent* pADialogAgent);$/;"	p	class:CConcept	access:public	signature:(CDialogAgent* pADialogAgent)
CConcept::SetRestoredForGroundingFlag	DMCore/Concepts/Concept.cpp	/^void CConcept::SetRestoredForGroundingFlag(bool bARestoredForGrounding) {$/;"	f	class:CConcept	signature:(bool bARestoredForGrounding)
CConcept::SetRestoredForGroundingFlag	DMCore/Concepts/Concept.h	/^	virtual void SetRestoredForGroundingFlag($/;"	p	class:CConcept	access:public	signature:( bool bARestoredForGrounding = true)
CConcept::SetTurnLastUpdated	DMCore/Concepts/Concept.cpp	/^void CConcept::SetTurnLastUpdated(int iTurn) {$/;"	f	class:CConcept	signature:(int iTurn)
CConcept::SetTurnLastUpdated	DMCore/Concepts/Concept.h	/^    virtual void SetTurnLastUpdated(int iTurn);$/;"	p	class:CConcept	access:public	signature:(int iTurn)
CConcept::SetWaitingConveyance	DMCore/Concepts/Concept.cpp	/^void CConcept::SetWaitingConveyance() {$/;"	f	class:CConcept	signature:()
CConcept::SetWaitingConveyance	DMCore/Concepts/Concept.h	/^    void SetWaitingConveyance();$/;"	p	class:CConcept	access:public	signature:()
CConcept::TopHypToString	DMCore/Concepts/Concept.cpp	/^string CConcept::TopHypToString() {$/;"	f	class:CConcept	signature:()
CConcept::TopHypToString	DMCore/Concepts/Concept.h	/^	virtual string TopHypToString();$/;"	p	class:CConcept	access:public	signature:()
CConcept::Update	DMCore/Concepts/Concept.cpp	/^void CConcept::Update(string sUpdateType, void* pUpdateData) {$/;"	f	class:CConcept	signature:(string sUpdateType, void* pUpdateData)
CConcept::Update	DMCore/Concepts/Concept.h	/^	virtual void Update(string sUpdateType, void* pUpdateData);$/;"	p	class:CConcept	access:public	signature:(string sUpdateType, void* pUpdateData)
CConcept::Update_Calista_AssignFromConcept	DMCore/Concepts/Concept.cpp	/^void CConcept::Update_Calista_AssignFromConcept(void* pUpdateData) {$/;"	f	class:CConcept	signature:(void* pUpdateData)
CConcept::Update_Calista_AssignFromConcept	DMCore/Concepts/Concept.h	/^	virtual void Update_Calista_AssignFromConcept(void* pUpdateData);$/;"	p	class:CConcept	access:public	signature:(void* pUpdateData)
CConcept::Update_Calista_AssignFromString	DMCore/Concepts/Concept.cpp	/^void CConcept::Update_Calista_AssignFromString(void* pUpdateData) {$/;"	f	class:CConcept	signature:(void* pUpdateData)
CConcept::Update_Calista_AssignFromString	DMCore/Concepts/Concept.h	/^	virtual void Update_Calista_AssignFromString(void* pUpdateData);$/;"	p	class:CConcept	access:public	signature:(void* pUpdateData)
CConcept::Update_Calista_CollapseToMode	DMCore/Concepts/Concept.cpp	/^void CConcept::Update_Calista_CollapseToMode(void* pUpdateData) {$/;"	f	class:CConcept	signature:(void* pUpdateData)
CConcept::Update_Calista_CollapseToMode	DMCore/Concepts/Concept.h	/^    virtual void Update_Calista_CollapseToMode(void* pUpdateData);$/;"	p	class:CConcept	access:public	signature:(void* pUpdateData)
CConcept::Update_Calista_UpdateWithConcept	DMCore/Concepts/Concept.cpp	/^void CConcept::Update_Calista_UpdateWithConcept(void* pUpdateData) {$/;"	f	class:CConcept	signature:(void* pUpdateData)
CConcept::Update_Calista_UpdateWithConcept	DMCore/Concepts/Concept.h	/^    virtual void Update_Calista_UpdateWithConcept(void* pUpdateData);$/;"	p	class:CConcept	access:public	signature:(void* pUpdateData)
CConcept::Update_NPU_AssignFromConcept	DMCore/Concepts/Concept.cpp	/^void CConcept::Update_NPU_AssignFromConcept(void* pUpdateData) {$/;"	f	class:CConcept	signature:(void* pUpdateData)
CConcept::Update_NPU_AssignFromConcept	DMCore/Concepts/Concept.h	/^	virtual void Update_NPU_AssignFromConcept(void* pUpdateData);$/;"	p	class:CConcept	access:public	signature:(void* pUpdateData)
CConcept::Update_NPU_AssignFromString	DMCore/Concepts/Concept.cpp	/^void CConcept::Update_NPU_AssignFromString(void* pUpdateData) {$/;"	f	class:CConcept	signature:(void* pUpdateData)
CConcept::Update_NPU_AssignFromString	DMCore/Concepts/Concept.h	/^	virtual void Update_NPU_AssignFromString(void* pUpdateData);$/;"	p	class:CConcept	access:public	signature:(void* pUpdateData)
CConcept::Update_NPU_CollapseToMode	DMCore/Concepts/Concept.cpp	/^void CConcept::Update_NPU_CollapseToMode(void* pUpdateData) {$/;"	f	class:CConcept	signature:(void* pUpdateData)
CConcept::Update_NPU_CollapseToMode	DMCore/Concepts/Concept.h	/^    virtual void Update_NPU_CollapseToMode(void* pUpdateData);$/;"	p	class:CConcept	access:public	signature:(void* pUpdateData)
CConcept::Update_NPU_UpdateWithConcept	DMCore/Concepts/Concept.cpp	/^void CConcept::Update_NPU_UpdateWithConcept(void* pUpdateData) {$/;"	f	class:CConcept	signature:(void* pUpdateData)
CConcept::Update_NPU_UpdateWithConcept	DMCore/Concepts/Concept.h	/^    virtual void Update_NPU_UpdateWithConcept(void* pUpdateData);$/;"	p	class:CConcept	access:public	signature:(void* pUpdateData)
CConcept::Update_PartialFromString	DMCore/Concepts/Concept.cpp	/^void CConcept::Update_PartialFromString(void* pUpdateData) {$/;"	f	class:CConcept	signature:(void* pUpdateData)
CConcept::Update_PartialFromString	DMCore/Concepts/Concept.h	/^	virtual void Update_PartialFromString(void* pUpdateData);$/;"	p	class:CConcept	access:public	signature:(void* pUpdateData)
CConcept::bChangeNotification	DMCore/Concepts/Concept.h	/^	bool bChangeNotification;$/;"	m	class:CConcept	access:protected
CConcept::bGrounded	DMCore/Concepts/Concept.h	/^	bool bGrounded;$/;"	m	class:CConcept	access:protected
CConcept::bHistoryConcept	DMCore/Concepts/Concept.h	/^    bool bHistoryConcept;$/;"	m	class:CConcept	access:protected
CConcept::bInvalidated	DMCore/Concepts/Concept.h	/^    bool bInvalidated;$/;"	m	class:CConcept	access:protected
CConcept::bRestoredForGrounding	DMCore/Concepts/Concept.h	/^    bool bRestoredForGrounding;$/;"	m	class:CConcept	access:protected
CConcept::bSealed	DMCore/Concepts/Concept.h	/^	bool bSealed;$/;"	m	class:CConcept	access:protected
CConcept::bWaitingConveyance	DMCore/Concepts/Concept.h	/^    bool bWaitingConveyance;$/;"	m	class:CConcept	access:protected
CConcept::cConveyance	DMCore/Concepts/Concept.h	/^	TConveyance cConveyance;$/;"	m	class:CConcept	access:protected
CConcept::csConceptSource	DMCore/Concepts/Concept.h	/^	TConceptSource csConceptSource;		$/;"	m	class:CConcept	access:protected
CConcept::ctConceptType	DMCore/Concepts/Concept.h	/^	TConceptType ctConceptType;			$/;"	m	class:CConcept	access:protected
CConcept::iCardinality	DMCore/Concepts/Concept.h	/^    int iCardinality;$/;"	m	class:CConcept	access:protected
CConcept::iNumValidHyps	DMCore/Concepts/Concept.h	/^	int iNumValidHyps;$/;"	m	class:CConcept	access:protected
CConcept::iNumValidPartialHyps	DMCore/Concepts/Concept.h	/^	int iNumValidPartialHyps;$/;"	m	class:CConcept	access:protected
CConcept::iTurnLastUpdated	DMCore/Concepts/Concept.h	/^    int iTurnLastUpdated;$/;"	m	class:CConcept	access:protected
CConcept::operator !=	DMCore/Concepts/Concept.cpp	/^bool CConcept::operator != (CConcept& rAConcept) {$/;"	f	class:CConcept	signature:(CConcept& rAConcept)
CConcept::operator !=	DMCore/Concepts/Concept.h	/^    virtual bool operator != (CConcept& rAConcept);$/;"	p	class:CConcept	access:public	signature:(CConcept& rAConcept)
CConcept::operator <	DMCore/Concepts/Concept.cpp	/^bool CConcept::operator < (CConcept& rAConcept) {$/;"	f	class:CConcept	signature:(CConcept& rAConcept)
CConcept::operator <	DMCore/Concepts/Concept.h	/^    virtual bool operator < (CConcept& rAConcept);$/;"	p	class:CConcept	access:public	signature:(CConcept& rAConcept)
CConcept::operator <=	DMCore/Concepts/Concept.cpp	/^bool CConcept::operator <= (CConcept& rAConcept) {$/;"	f	class:CConcept	signature:(CConcept& rAConcept)
CConcept::operator <=	DMCore/Concepts/Concept.h	/^    virtual bool operator <= (CConcept& rAConcept);$/;"	p	class:CConcept	access:public	signature:(CConcept& rAConcept)
CConcept::operator =	DMCore/Concepts/Concept.cpp	/^CConcept& CConcept::operator = (CConcept& rAConcept) {$/;"	f	class:CConcept	signature:(CConcept& rAConcept)
CConcept::operator =	DMCore/Concepts/Concept.cpp	/^CConcept& CConcept::operator = (bool bAValue) {$/;"	f	class:CConcept	signature:(bool bAValue)
CConcept::operator =	DMCore/Concepts/Concept.cpp	/^CConcept& CConcept::operator = (const char * lpszAValue) {$/;"	f	class:CConcept	signature:(const char * lpszAValue)
CConcept::operator =	DMCore/Concepts/Concept.cpp	/^CConcept& CConcept::operator = (double dAValue) {$/;"	f	class:CConcept	signature:(double dAValue)
CConcept::operator =	DMCore/Concepts/Concept.cpp	/^CConcept& CConcept::operator = (float fAValue) {$/;"	f	class:CConcept	signature:(float fAValue)
CConcept::operator =	DMCore/Concepts/Concept.cpp	/^CConcept& CConcept::operator = (int iAValue) {$/;"	f	class:CConcept	signature:(int iAValue)
CConcept::operator =	DMCore/Concepts/Concept.cpp	/^CConcept& CConcept::operator = (string sAValue) {$/;"	f	class:CConcept	signature:(string sAValue)
CConcept::operator =	DMCore/Concepts/Concept.h	/^	virtual CConcept& operator = (bool bAValue);$/;"	p	class:CConcept	access:public	signature:(bool bAValue)
CConcept::operator =	DMCore/Concepts/Concept.h	/^	virtual CConcept& operator = (const char* lpszAValue);$/;"	p	class:CConcept	access:public	signature:(const char* lpszAValue)
CConcept::operator =	DMCore/Concepts/Concept.h	/^	virtual CConcept& operator = (double dAValue);$/;"	p	class:CConcept	access:public	signature:(double dAValue)
CConcept::operator =	DMCore/Concepts/Concept.h	/^	virtual CConcept& operator = (float fAValue);$/;"	p	class:CConcept	access:public	signature:(float fAValue)
CConcept::operator =	DMCore/Concepts/Concept.h	/^	virtual CConcept& operator = (int iAValue);$/;"	p	class:CConcept	access:public	signature:(int iAValue)
CConcept::operator =	DMCore/Concepts/Concept.h	/^	virtual CConcept& operator = (string sAValue);$/;"	p	class:CConcept	access:public	signature:(string sAValue)
CConcept::operator =	DMCore/Concepts/Concept.h	/^    virtual CConcept& operator = (CConcept& rAConcept);$/;"	p	class:CConcept	access:public	signature:(CConcept& rAConcept)
CConcept::operator ==	DMCore/Concepts/Concept.cpp	/^bool CConcept::operator == (CConcept& rAConcept) {$/;"	f	class:CConcept	signature:(CConcept& rAConcept)
CConcept::operator ==	DMCore/Concepts/Concept.h	/^    virtual bool operator == (CConcept& rAConcept);$/;"	p	class:CConcept	access:public	signature:(CConcept& rAConcept)
CConcept::operator >	DMCore/Concepts/Concept.cpp	/^bool CConcept::operator > (CConcept& rAConcept) {$/;"	f	class:CConcept	signature:(CConcept& rAConcept)
CConcept::operator >	DMCore/Concepts/Concept.h	/^    virtual bool operator > (CConcept& rAConcept);$/;"	p	class:CConcept	access:public	signature:(CConcept& rAConcept)
CConcept::operator >=	DMCore/Concepts/Concept.cpp	/^bool CConcept::operator >= (CConcept& rAConcept) {$/;"	f	class:CConcept	signature:(CConcept& rAConcept)
CConcept::operator >=	DMCore/Concepts/Concept.h	/^    virtual bool operator >= (CConcept& rAConcept);$/;"	p	class:CConcept	access:public	signature:(CConcept& rAConcept)
CConcept::operator []	DMCore/Concepts/Concept.cpp	/^CConcept& CConcept::operator [](const char * lpszIndex) {$/;"	f	class:CConcept	signature:(const char * lpszIndex)
CConcept::operator []	DMCore/Concepts/Concept.cpp	/^CConcept& CConcept::operator [](int iIndex) {$/;"	f	class:CConcept	signature:(int iIndex)
CConcept::operator []	DMCore/Concepts/Concept.cpp	/^CConcept& CConcept::operator [](string sIndex) {$/;"	f	class:CConcept	signature:(string sIndex)
CConcept::operator []	DMCore/Concepts/Concept.h	/^	virtual CConcept& operator [](const char* lpszIndex);$/;"	p	class:CConcept	access:public	signature:(const char* lpszIndex)
CConcept::operator []	DMCore/Concepts/Concept.h	/^	virtual CConcept& operator [](int iIndex);$/;"	p	class:CConcept	access:public	signature:(int iIndex)
CConcept::operator []	DMCore/Concepts/Concept.h	/^	virtual CConcept& operator [](string sIndex);$/;"	p	class:CConcept	access:public	signature:(string sIndex)
CConcept::operator bool	DMCore/Concepts/Concept.cpp	/^CConcept::operator bool() {	$/;"	f	class:CConcept	signature:()
CConcept::operator bool	DMCore/Concepts/Concept.h	/^	virtual operator bool();$/;"	p	class:CConcept	access:public	signature:()
CConcept::operator float	DMCore/Concepts/Concept.cpp	/^CConcept::operator float() {$/;"	f	class:CConcept	signature:()
CConcept::operator float	DMCore/Concepts/Concept.h	/^	virtual operator float();$/;"	p	class:CConcept	access:public	signature:()
CConcept::operator int	DMCore/Concepts/Concept.cpp	/^CConcept::operator int() {$/;"	f	class:CConcept	signature:()
CConcept::operator int	DMCore/Concepts/Concept.h	/^	virtual operator int();$/;"	p	class:CConcept	access:public	signature:()
CConcept::operator string	DMCore/Concepts/Concept.cpp	/^CConcept::operator string() {$/;"	f	class:CConcept	signature:()
CConcept::operator string	DMCore/Concepts/Concept.h	/^	virtual operator string();$/;"	p	class:CConcept	access:public	signature:()
CConcept::pGroundingModel	DMCore/Concepts/Concept.h	/^    CGMConcept* pGroundingModel;$/;"	m	class:CConcept	access:protected
CConcept::pOwnerConcept	DMCore/Concepts/Concept.h	/^    CConcept* pOwnerConcept;$/;"	m	class:CConcept	access:protected
CConcept::pOwnerDialogAgent	DMCore/Concepts/Concept.h	/^    CDialogAgent* pOwnerDialogAgent;$/;"	m	class:CConcept	access:protected
CConcept::pPrevConcept	DMCore/Concepts/Concept.h	/^    CConcept* pPrevConcept;            $/;"	m	class:CConcept	access:protected
CConcept::sExplicitlyConfirmedHyp	DMCore/Concepts/Concept.h	/^    string sExplicitlyConfirmedHyp;$/;"	m	class:CConcept	access:protected
CConcept::sExplicitlyDisconfirmedHyp	DMCore/Concepts/Concept.h	/^    string sExplicitlyDisconfirmedHyp;$/;"	m	class:CConcept	access:protected
CConcept::sName	DMCore/Concepts/Concept.h	/^	string sName;						$/;"	m	class:CConcept	access:protected
CConcept::vhCurrentHypSet	DMCore/Concepts/Concept.h	/^    vector<CHyp*, allocator<CHyp*> > vhCurrentHypSet;$/;"	m	class:CConcept	access:protected
CConcept::vhPartialHypSet	DMCore/Concepts/Concept.h	/^    vector<CHyp*, allocator<CHyp*> > vhPartialHypSet;$/;"	m	class:CConcept	access:protected
CConcept::~CConcept	DMCore/Concepts/Concept.cpp	/^CConcept::~CConcept() {    $/;"	f	class:CConcept	signature:()
CConcept::~CConcept	DMCore/Concepts/Concept.h	/^	virtual ~CConcept();$/;"	p	class:CConcept	access:public	signature:()
CCondition	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.cpp	/^CCondition::CCondition(string sAFeature, string sATestValue, $/;"	f	class:CCondition	signature:(string sAFeature, string sATestValue, TValueType vtAValueType, TComparator cAComparator)
CCondition	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.cpp	/^CCondition::CCondition(string sCondStr) {$/;"	f	class:CCondition	signature:(string sCondStr)
CCondition	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.h	/^	CCondition(string sCondStr);$/;"	p	class:CCondition	access:public	signature:(string sCondStr)
CCondition	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.h	/^	CCondition(string sFeature, string sValue, TValueType vtValueType, $/;"	p	class:CCondition	access:public	signature:(string sFeature, string sValue, TValueType vtValueType, TComparator cComparator)
CCondition	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.h	/^class CCondition {$/;"	c
CCondition::Bool	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.h	/^		Bool,$/;"	e	enum:CCondition::TValueType
CCondition::CCondition	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.cpp	/^CCondition::CCondition(string sAFeature, string sATestValue, $/;"	f	class:CCondition	signature:(string sAFeature, string sATestValue, TValueType vtAValueType, TComparator cAComparator)
CCondition::CCondition	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.cpp	/^CCondition::CCondition(string sCondStr) {$/;"	f	class:CCondition	signature:(string sCondStr)
CCondition::CCondition	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.h	/^	CCondition(string sCondStr);$/;"	p	class:CCondition	access:public	signature:(string sCondStr)
CCondition::CCondition	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.h	/^	CCondition(string sFeature, string sValue, TValueType vtValueType, $/;"	p	class:CCondition	access:public	signature:(string sFeature, string sValue, TValueType vtValueType, TComparator cComparator)
CCondition::EqualTo	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.h	/^		EqualTo,$/;"	e	enum:CCondition::TComparator
CCondition::GreaterThan	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.h	/^		GreaterThan,$/;"	e	enum:CCondition::TComparator
CCondition::GreaterThanOrEqualTo	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.h	/^		GreaterThanOrEqualTo,$/;"	e	enum:CCondition::TComparator
CCondition::LessThan	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.h	/^		LessThan,$/;"	e	enum:CCondition::TComparator
CCondition::LessThanOrEqualTo	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.h	/^		LessThanOrEqualTo$/;"	e	enum:CCondition::TComparator
CCondition::Matches	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.cpp	/^bool CCondition::Matches(CState &sState) {$/;"	f	class:CCondition	signature:(CState &sState)
CCondition::Matches	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.h	/^	bool Matches(CState &sState);$/;"	p	class:CCondition	access:public	signature:(CState &sState)
CCondition::NotEqualTo	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.h	/^		NotEqualTo,$/;"	e	enum:CCondition::TComparator
CCondition::Number	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.h	/^		Number,$/;"	e	enum:CCondition::TValueType
CCondition::String	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.h	/^		String$/;"	e	enum:CCondition::TValueType
CCondition::TComparator	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.h	/^	typedef enum TComparator {$/;"	g	class:CCondition	access:protected
CCondition::TComparator	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.h	/^	} TComparator;$/;"	t	class:CCondition	typeref:enum:CCondition::TComparator	access:protected
CCondition::TValueType	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.h	/^	typedef enum TValueType {$/;"	g	class:CCondition	access:protected
CCondition::TValueType	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.h	/^	} TValueType;$/;"	t	class:CCondition	typeref:enum:CCondition::TValueType	access:protected
CCondition::cComparator	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.h	/^	TComparator cComparator;$/;"	m	class:CCondition	access:protected
CCondition::sFeature	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.h	/^	string sFeature;$/;"	m	class:CCondition	access:protected
CCondition::sTestValue	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.h	/^	string sTestValue;$/;"	m	class:CCondition	access:protected
CCondition::vtValueType	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.h	/^	TValueType vtValueType;$/;"	m	class:CCondition	access:protected
CDMCoreAgent	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^CDMCoreAgent::CDMCoreAgent(string sAName, string sAConfiguration,$/;"	f	class:CDMCoreAgent	signature:(string sAName, string sAConfiguration, string sAType)
CDMCoreAgent	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	CDMCoreAgent(string sAName, $/;"	p	class:CDMCoreAgent	access:public	signature:(string sAName, string sAConfiguration = Ó, string sAType = Ó)
CDMCoreAgent	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^class CDMCoreAgent: public CAgent {$/;"	c	inherits:CAgent
CDMCoreAgent::AcquireNextEvent	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^void CDMCoreAgent::AcquireNextEvent() {$/;"	f	class:CDMCoreAgent	signature:()
CDMCoreAgent::AcquireNextEvent	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	void AcquireNextEvent();$/;"	p	class:CDMCoreAgent	access:public	signature:()
CDMCoreAgent::AgentFactory	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^CAgent* CDMCoreAgent::AgentFactory(string sAName, string sAConfiguration) {$/;"	f	class:CDMCoreAgent	signature:(string sAName, string sAConfiguration)
CDMCoreAgent::AgentFactory	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	static CAgent* AgentFactory(string sAName, string sAConfiguration);$/;"	p	class:CDMCoreAgent	access:public	signature:(string sAName, string sAConfiguration)
CDMCoreAgent::AgentIsActive	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^bool CDMCoreAgent::AgentIsActive(CDialogAgent* pdaDialogAgent) {$/;"	f	class:CDMCoreAgent	signature:(CDialogAgent* pdaDialogAgent)
CDMCoreAgent::AgentIsActive	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	bool AgentIsActive(CDialogAgent* pdaDialogAgent);$/;"	p	class:CDMCoreAgent	access:public	signature:(CDialogAgent* pdaDialogAgent)
CDMCoreAgent::AgentIsInFocus	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^bool CDMCoreAgent::AgentIsInFocus(CDialogAgent* pdaDialogAgent) {$/;"	f	class:CDMCoreAgent	signature:(CDialogAgent* pdaDialogAgent)
CDMCoreAgent::AgentIsInFocus	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^    bool AgentIsInFocus(CDialogAgent* pdaDialogAgent);$/;"	p	class:CDMCoreAgent	access:public	signature:(CDialogAgent* pdaDialogAgent)
CDMCoreAgent::CDMCoreAgent	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^CDMCoreAgent::CDMCoreAgent(string sAName, string sAConfiguration,$/;"	f	class:CDMCoreAgent	signature:(string sAName, string sAConfiguration, string sAType)
CDMCoreAgent::CDMCoreAgent	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	CDMCoreAgent(string sAName, $/;"	p	class:CDMCoreAgent	access:public	signature:(string sAName, string sAConfiguration = Ó, string sAType = Ó)
CDMCoreAgent::ContinueWith	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^void CDMCoreAgent::ContinueWith(CAgent* paPusher, CDialogAgent* pdaDialogAgent) {$/;"	f	class:CDMCoreAgent	signature:(CAgent* paPusher, CDialogAgent* pdaDialogAgent)
CDMCoreAgent::ContinueWith	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	void ContinueWith(CAgent* paPusher, CDialogAgent* pdaDialogAgent);$/;"	p	class:CDMCoreAgent	access:public	signature:(CAgent* paPusher, CDialogAgent* pdaDialogAgent)
CDMCoreAgent::Execute	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^void CDMCoreAgent::Execute() {$/;"	f	class:CDMCoreAgent	signature:()
CDMCoreAgent::Execute	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	void Execute();$/;"	p	class:CDMCoreAgent	access:public	signature:()
CDMCoreAgent::FloorStatusToString	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^string CDMCoreAgent::FloorStatusToString(TFloorStatus fsAFloor) {$/;"	f	class:CDMCoreAgent	signature:(TFloorStatus fsAFloor)
CDMCoreAgent::FloorStatusToString	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	string FloorStatusToString(TFloorStatus fsAFloor);$/;"	p	class:CDMCoreAgent	access:public	signature:(TFloorStatus fsAFloor)
CDMCoreAgent::GetAgentInFocus	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^CDialogAgent* CDMCoreAgent::GetAgentInFocus() {$/;"	f	class:CDMCoreAgent	signature:()
CDMCoreAgent::GetAgentInFocus	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	CDialogAgent* GetAgentInFocus();$/;"	p	class:CDMCoreAgent	access:public	signature:()
CDMCoreAgent::GetAgentPreviouslyInFocus	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^CDialogAgent* CDMCoreAgent::GetAgentPreviouslyInFocus($/;"	f	class:CDMCoreAgent	signature:( CDialogAgent* pdaDialogAgent)
CDMCoreAgent::GetAgentPreviouslyInFocus	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	CDialogAgent* GetAgentPreviouslyInFocus($/;"	p	class:CDMCoreAgent	access:public	signature:( CDialogAgent* pdaDialogAgent = NULL)
CDMCoreAgent::GetBindingHistorySize	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^int CDMCoreAgent::GetBindingHistorySize() {$/;"	f	class:CDMCoreAgent	signature:()
CDMCoreAgent::GetBindingHistorySize	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^    int GetBindingHistorySize();$/;"	p	class:CDMCoreAgent	access:public	signature:()
CDMCoreAgent::GetBindingResult	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^const TBindingsDescr& CDMCoreAgent::GetBindingResult(int iBindingHistoryIndex) {$/;"	f	class:CDMCoreAgent	signature:(int iBindingHistoryIndex)
CDMCoreAgent::GetBindingResult	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^    const TBindingsDescr& GetBindingResult(int iBindingHistoryIndex);$/;"	p	class:CDMCoreAgent	access:public	signature:(int iBindingHistoryIndex)
CDMCoreAgent::GetCurrentMainTopicAgent	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^CDialogAgent* CDMCoreAgent::GetCurrentMainTopicAgent() {$/;"	f	class:CDMCoreAgent	signature:()
CDMCoreAgent::GetCurrentMainTopicAgent	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	CDialogAgent* GetCurrentMainTopicAgent();$/;"	p	class:CDMCoreAgent	access:public	signature:()
CDMCoreAgent::GetDTSAgentInFocus	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^CDialogAgent* CDMCoreAgent::GetDTSAgentInFocus() {$/;"	f	class:CDMCoreAgent	signature:()
CDMCoreAgent::GetDTSAgentInFocus	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^    CDialogAgent* GetDTSAgentInFocus();$/;"	p	class:CDMCoreAgent	access:public	signature:()
CDMCoreAgent::GetDTSAgentPreviouslyInFocus	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^CDialogAgent* CDMCoreAgent::GetDTSAgentPreviouslyInFocus($/;"	f	class:CDMCoreAgent	signature:( CDialogAgent* pdaDialogAgent)
CDMCoreAgent::GetDTSAgentPreviouslyInFocus	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	CDialogAgent* GetDTSAgentPreviouslyInFocus($/;"	p	class:CDMCoreAgent	access:public	signature:( CDialogAgent* pdaDialogAgent = NULL)
CDMCoreAgent::GetDefaultNonunderstandingThreshold	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^float CDMCoreAgent::GetDefaultNonunderstandingThreshold() {$/;"	f	class:CDMCoreAgent	signature:()
CDMCoreAgent::GetDefaultNonunderstandingThreshold	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^    float GetDefaultNonunderstandingThreshold();$/;"	p	class:CDMCoreAgent	access:public	signature:()
CDMCoreAgent::GetDefaultTimeoutPeriod	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^int CDMCoreAgent::GetDefaultTimeoutPeriod() {$/;"	f	class:CDMCoreAgent	signature:()
CDMCoreAgent::GetDefaultTimeoutPeriod	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	int GetDefaultTimeoutPeriod();$/;"	p	class:CDMCoreAgent	access:public	signature:()
CDMCoreAgent::GetFloorStatus	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^TFloorStatus CDMCoreAgent::GetFloorStatus() {$/;"	f	class:CDMCoreAgent	signature:()
CDMCoreAgent::GetFloorStatus	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^    TFloorStatus GetFloorStatus();$/;"	p	class:CDMCoreAgent	access:public	signature:()
CDMCoreAgent::GetIntSessionID	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^int CDMCoreAgent::GetIntSessionID() {$/;"	f	class:CDMCoreAgent	signature:()
CDMCoreAgent::GetIntSessionID	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	int GetIntSessionID();$/;"	p	class:CDMCoreAgent	access:public	signature:()
CDMCoreAgent::GetLastInputTurnNumber	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^int CDMCoreAgent::GetLastInputTurnNumber() {$/;"	f	class:CDMCoreAgent	signature:()
CDMCoreAgent::GetLastInputTurnNumber	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	int GetLastInputTurnNumber();$/;"	p	class:CDMCoreAgent	access:public	signature:()
CDMCoreAgent::GetNonunderstandingThreshold	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^float CDMCoreAgent::GetNonunderstandingThreshold() {$/;"	f	class:CDMCoreAgent	signature:()
CDMCoreAgent::GetNonunderstandingThreshold	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^    float GetNonunderstandingThreshold();$/;"	p	class:CDMCoreAgent	access:public	signature:()
CDMCoreAgent::GetNumberNonUnderstandings	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^int CDMCoreAgent::GetNumberNonUnderstandings() {$/;"	f	class:CDMCoreAgent	signature:()
CDMCoreAgent::GetNumberNonUnderstandings	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^    int GetNumberNonUnderstandings();$/;"	p	class:CDMCoreAgent	access:public	signature:()
CDMCoreAgent::GetSystemActionOnConcept	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^TSystemActionOnConcept CDMCoreAgent::GetSystemActionOnConcept(CConcept* pConcept) {$/;"	f	class:CDMCoreAgent	signature:(CConcept* pConcept)
CDMCoreAgent::GetSystemActionOnConcept	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	TSystemActionOnConcept GetSystemActionOnConcept(CConcept* pConcept);$/;"	p	class:CDMCoreAgent	access:public	signature:(CConcept* pConcept)
CDMCoreAgent::GetTimeoutPeriod	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^int CDMCoreAgent::GetTimeoutPeriod() {$/;"	f	class:CDMCoreAgent	signature:()
CDMCoreAgent::GetTimeoutPeriod	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	int GetTimeoutPeriod();$/;"	p	class:CDMCoreAgent	access:public	signature:()
CDMCoreAgent::GetTotalNumberNonUnderstandings	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^int CDMCoreAgent::GetTotalNumberNonUnderstandings() {$/;"	f	class:CDMCoreAgent	signature:()
CDMCoreAgent::GetTotalNumberNonUnderstandings	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	int GetTotalNumberNonUnderstandings();$/;"	p	class:CDMCoreAgent	access:public	signature:()
CDMCoreAgent::LastTurnGetConceptsBound	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^int CDMCoreAgent::LastTurnGetConceptsBound() {$/;"	f	class:CDMCoreAgent	signature:()
CDMCoreAgent::LastTurnGetConceptsBound	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^    int LastTurnGetConceptsBound();$/;"	p	class:CDMCoreAgent	access:public	signature:()
CDMCoreAgent::LastTurnNonUnderstanding	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^bool CDMCoreAgent::LastTurnNonUnderstanding() {$/;"	f	class:CDMCoreAgent	signature:()
CDMCoreAgent::LastTurnNonUnderstanding	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^    bool LastTurnNonUnderstanding();$/;"	p	class:CDMCoreAgent	access:public	signature:()
CDMCoreAgent::PopAgentFromExecutionStack	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^void CDMCoreAgent::PopAgentFromExecutionStack(CDialogAgent* pdaADialogAgent) {$/;"	f	class:CDMCoreAgent	signature:(CDialogAgent* pdaADialogAgent)
CDMCoreAgent::PopAgentFromExecutionStack	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^    void PopAgentFromExecutionStack(CDialogAgent* pdaADialogAgent);$/;"	p	class:CDMCoreAgent	access:public	signature:(CDialogAgent* pdaADialogAgent)
CDMCoreAgent::PopGroundingAgentsFromExecutionStack	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^void CDMCoreAgent::PopGroundingAgentsFromExecutionStack() {$/;"	f	class:CDMCoreAgent	signature:()
CDMCoreAgent::PopGroundingAgentsFromExecutionStack	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^    void PopGroundingAgentsFromExecutionStack();$/;"	p	class:CDMCoreAgent	access:public	signature:()
CDMCoreAgent::PopTopicFromExecutionStack	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^void CDMCoreAgent::PopTopicFromExecutionStack(CDialogAgent* pdaADialogAgent) {$/;"	f	class:CDMCoreAgent	signature:(CDialogAgent* pdaADialogAgent)
CDMCoreAgent::PopTopicFromExecutionStack	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^    void PopTopicFromExecutionStack(CDialogAgent* pdaADialogAgent);$/;"	p	class:CDMCoreAgent	access:public	signature:(CDialogAgent* pdaADialogAgent)
CDMCoreAgent::RegisterBindingFilter	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^void CDMCoreAgent::RegisterBindingFilter(string sBindingFilterName, $/;"	f	class:CDMCoreAgent	signature:(string sBindingFilterName, TBindingFilterFunct bffFilter)
CDMCoreAgent::RegisterBindingFilter	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^    void RegisterBindingFilter(string sBindingFilterName, $/;"	p	class:CDMCoreAgent	access:public	signature:(string sBindingFilterName, TBindingFilterFunct bffFilter)
CDMCoreAgent::RegisterCustomStartOver	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^void CDMCoreAgent::RegisterCustomStartOver(TCustomStartOverFunct csoAStartOverFunct) {$/;"	f	class:CDMCoreAgent	signature:(TCustomStartOverFunct csoAStartOverFunct)
CDMCoreAgent::RegisterCustomStartOver	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	void RegisterCustomStartOver(TCustomStartOverFunct csoAStartOverFunct);$/;"	p	class:CDMCoreAgent	access:public	signature:(TCustomStartOverFunct csoAStartOverFunct)
CDMCoreAgent::Reset	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^void CDMCoreAgent::Reset() {$/;"	f	class:CDMCoreAgent	signature:()
CDMCoreAgent::Reset	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	virtual void Reset();					\/\/ overwritten Reset$/;"	p	class:CDMCoreAgent	access:public	signature:()
CDMCoreAgent::RestartTopic	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^void CDMCoreAgent::RestartTopic(CDialogAgent* pdaDialogAgent) {$/;"	f	class:CDMCoreAgent	signature:(CDialogAgent* pdaDialogAgent)
CDMCoreAgent::RestartTopic	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^    void RestartTopic(CDialogAgent* pdaDialogAgent);$/;"	p	class:CDMCoreAgent	access:public	signature:(CDialogAgent* pdaDialogAgent)
CDMCoreAgent::SetDefaultNonunderstandingThreshold	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^void CDMCoreAgent::SetDefaultNonunderstandingThreshold(float fANonuThreshold) {$/;"	f	class:CDMCoreAgent	signature:(float fANonuThreshold)
CDMCoreAgent::SetDefaultNonunderstandingThreshold	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^    void SetDefaultNonunderstandingThreshold(float fANonuThreshold);$/;"	p	class:CDMCoreAgent	access:public	signature:(float fANonuThreshold)
CDMCoreAgent::SetDefaultTimeoutPeriod	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^void CDMCoreAgent::SetDefaultTimeoutPeriod(int iADefaultTimeoutPeriod) {$/;"	f	class:CDMCoreAgent	signature:(int iADefaultTimeoutPeriod)
CDMCoreAgent::SetDefaultTimeoutPeriod	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	void SetDefaultTimeoutPeriod(int iADefaultTimeoutPeriod);$/;"	p	class:CDMCoreAgent	access:public	signature:(int iADefaultTimeoutPeriod)
CDMCoreAgent::SetFloorStatus	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^void CDMCoreAgent::SetFloorStatus(TFloorStatus fsaFloorStatus) {$/;"	f	class:CDMCoreAgent	signature:(TFloorStatus fsaFloorStatus)
CDMCoreAgent::SetFloorStatus	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^void CDMCoreAgent::SetFloorStatus(string sAFloorStatus) {$/;"	f	class:CDMCoreAgent	signature:(string sAFloorStatus)
CDMCoreAgent::SetFloorStatus	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	void SetFloorStatus(string sAFloorStatus);$/;"	p	class:CDMCoreAgent	access:public	signature:(string sAFloorStatus)
CDMCoreAgent::SetFloorStatus	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^    void SetFloorStatus(TFloorStatus fsaFloorStatus);$/;"	p	class:CDMCoreAgent	access:public	signature:(TFloorStatus fsaFloorStatus)
CDMCoreAgent::SetNonunderstandingThreshold	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^void CDMCoreAgent::SetNonunderstandingThreshold(float fANonunderstandingThreshold) {$/;"	f	class:CDMCoreAgent	signature:(float fANonunderstandingThreshold)
CDMCoreAgent::SetNonunderstandingThreshold	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^    void SetNonunderstandingThreshold(float fANonunderstandingThreshold);$/;"	p	class:CDMCoreAgent	access:public	signature:(float fANonunderstandingThreshold)
CDMCoreAgent::SetTimeoutPeriod	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^void CDMCoreAgent::SetTimeoutPeriod(int iATimeoutPeriod) {$/;"	f	class:CDMCoreAgent	signature:(int iATimeoutPeriod)
CDMCoreAgent::SetTimeoutPeriod	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	void SetTimeoutPeriod(int iATimeoutPeriod);$/;"	p	class:CDMCoreAgent	access:public	signature:(int iATimeoutPeriod)
CDMCoreAgent::SignalAcceptOnConcept	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^void CDMCoreAgent::SignalAcceptOnConcept(CConcept* pConcept) {$/;"	f	class:CDMCoreAgent	signature:(CConcept* pConcept)
CDMCoreAgent::SignalAcceptOnConcept	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	void SignalAcceptOnConcept(CConcept* pConcept);$/;"	p	class:CDMCoreAgent	access:public	signature:(CConcept* pConcept)
CDMCoreAgent::SignalExplicitConfirmOnConcept	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^void CDMCoreAgent::SignalExplicitConfirmOnConcept(CConcept* pConcept) {$/;"	f	class:CDMCoreAgent	signature:(CConcept* pConcept)
CDMCoreAgent::SignalExplicitConfirmOnConcept	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	void SignalExplicitConfirmOnConcept(CConcept* pConcept);$/;"	p	class:CDMCoreAgent	access:public	signature:(CConcept* pConcept)
CDMCoreAgent::SignalFocusClaimsPhase	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^void CDMCoreAgent::SignalFocusClaimsPhase(bool bAFocusClaimsPhaseFlag) {$/;"	f	class:CDMCoreAgent	signature:(bool bAFocusClaimsPhaseFlag)
CDMCoreAgent::SignalFocusClaimsPhase	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^    void SignalFocusClaimsPhase(bool bAFocusClaimsPhaseFlag = true);$/;"	p	class:CDMCoreAgent	access:public	signature:(bool bAFocusClaimsPhaseFlag = true)
CDMCoreAgent::SignalImplicitConfirmOnConcept	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^void CDMCoreAgent::SignalImplicitConfirmOnConcept(CConcept* pConcept) {$/;"	f	class:CDMCoreAgent	signature:(CConcept* pConcept)
CDMCoreAgent::SignalImplicitConfirmOnConcept	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	void SignalImplicitConfirmOnConcept(CConcept* pConcept);$/;"	p	class:CDMCoreAgent	access:public	signature:(CConcept* pConcept)
CDMCoreAgent::SignalUnplannedImplicitConfirmOnConcept	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^void CDMCoreAgent::SignalUnplannedImplicitConfirmOnConcept(int iState, $/;"	f	class:CDMCoreAgent	signature:(int iState, CConcept* pConcept)
CDMCoreAgent::SignalUnplannedImplicitConfirmOnConcept	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	void SignalUnplannedImplicitConfirmOnConcept(int iState, CConcept* pConcept);$/;"	p	class:CDMCoreAgent	access:public	signature:(int iState, CConcept* pConcept)
CDMCoreAgent::StartOver	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^void CDMCoreAgent::StartOver() {$/;"	f	class:CDMCoreAgent	signature:()
CDMCoreAgent::StartOver	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	void StartOver();$/;"	p	class:CDMCoreAgent	access:public	signature:()
CDMCoreAgent::StringToFloorStatus	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^TFloorStatus CDMCoreAgent::StringToFloorStatus(string sAFloor) {$/;"	f	class:CDMCoreAgent	signature:(string sAFloor)
CDMCoreAgent::StringToFloorStatus	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	TFloorStatus StringToFloorStatus(string sAFloor);$/;"	p	class:CDMCoreAgent	access:public	signature:(string sAFloor)
CDMCoreAgent::assembleExpectationAgenda	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^void CDMCoreAgent::assembleExpectationAgenda() {$/;"	f	class:CDMCoreAgent	signature:()
CDMCoreAgent::assembleExpectationAgenda	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	void assembleExpectationAgenda();$/;"	p	class:CDMCoreAgent	access:private	signature:()
CDMCoreAgent::assembleFocusClaims	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^int CDMCoreAgent::assembleFocusClaims() {$/;"	f	class:CDMCoreAgent	signature:()
CDMCoreAgent::assembleFocusClaims	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	int assembleFocusClaims();$/;"	p	class:CDMCoreAgent	access:private	signature:()
CDMCoreAgent::bAgendaModifiedFlag	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	bool bAgendaModifiedFlag;				\/\/ indicates if the agenda should$/;"	m	class:CDMCoreAgent	access:private
CDMCoreAgent::bFocusClaimsPhaseFlag	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^    bool bFocusClaimsPhaseFlag;             \/\/ indicates whether we should$/;"	m	class:CDMCoreAgent	access:private
CDMCoreAgent::bhBindingHistory	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^    TBindingHistory bhBindingHistory;       \/\/ the binding history$/;"	m	class:CDMCoreAgent	access:private
CDMCoreAgent::bindConcepts	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^void CDMCoreAgent::bindConcepts(TBindingsDescr& rbdBindings) {$/;"	f	class:CDMCoreAgent	signature:(TBindingsDescr& rbdBindings)
CDMCoreAgent::bindConcepts	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^    void bindConcepts(TBindingsDescr& rbdBindings);$/;"	p	class:CDMCoreAgent	access:private	signature:(TBindingsDescr& rbdBindings)
CDMCoreAgent::bindingsDescrToString	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^string CDMCoreAgent::bindingsDescrToString(TBindingsDescr& rbdBindings) {$/;"	f	class:CDMCoreAgent	signature:(TBindingsDescr& rbdBindings)
CDMCoreAgent::bindingsDescrToString	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	string bindingsDescrToString(TBindingsDescr& rbdBindings);$/;"	p	class:CDMCoreAgent	access:private	signature:(TBindingsDescr& rbdBindings)
CDMCoreAgent::broadcastExpectationAgenda	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^    void broadcastExpectationAgenda();$/;"	p	class:CDMCoreAgent	access:private	signature:()
CDMCoreAgent::clearCurrentSystemAction	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^void CDMCoreAgent::clearCurrentSystemAction() {$/;"	f	class:CDMCoreAgent	signature:()
CDMCoreAgent::clearCurrentSystemAction	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	void clearCurrentSystemAction();$/;"	p	class:CDMCoreAgent	access:private	signature:()
CDMCoreAgent::compileExpectationAgenda	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^void CDMCoreAgent::compileExpectationAgenda() {$/;"	f	class:CDMCoreAgent	signature:()
CDMCoreAgent::compileExpectationAgenda	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	void compileExpectationAgenda();$/;"	p	class:CDMCoreAgent	access:private	signature:()
CDMCoreAgent::computeCurrentSystemAction	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^void CDMCoreAgent::computeCurrentSystemAction() {$/;"	f	class:CDMCoreAgent	signature:()
CDMCoreAgent::computeCurrentSystemAction	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	void computeCurrentSystemAction();$/;"	p	class:CDMCoreAgent	access:private	signature:()
CDMCoreAgent::csoStartOverFunct	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^    TCustomStartOverFunct csoStartOverFunct;\/\/ a custom start over function$/;"	m	class:CDMCoreAgent	access:private
CDMCoreAgent::currentSystemActionToString	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^string CDMCoreAgent::currentSystemActionToString() {$/;"	f	class:CDMCoreAgent	signature:()
CDMCoreAgent::currentSystemActionToString	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	string currentSystemActionToString();$/;"	p	class:CDMCoreAgent	access:private	signature:()
CDMCoreAgent::dumpConcepts	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^void CDMCoreAgent::dumpConcepts() {$/;"	f	class:CDMCoreAgent	signature:()
CDMCoreAgent::dumpConcepts	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	void dumpConcepts();$/;"	p	class:CDMCoreAgent	access:private	signature:()
CDMCoreAgent::dumpExecutionStack	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^void CDMCoreAgent::dumpExecutionStack() {$/;"	f	class:CDMCoreAgent	signature:()
CDMCoreAgent::dumpExecutionStack	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^    void dumpExecutionStack();$/;"	p	class:CDMCoreAgent	access:private	signature:()
CDMCoreAgent::eaAgenda	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	TExpectationAgenda eaAgenda;			\/\/ the expectation agenda$/;"	m	class:CDMCoreAgent	access:private
CDMCoreAgent::ehExecutionHistory	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	CExecutionHistory ehExecutionHistory;	\/\/ the execution history$/;"	m	class:CDMCoreAgent	access:private
CDMCoreAgent::enforceBindingPolicies	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^void CDMCoreAgent::enforceBindingPolicies() {$/;"	f	class:CDMCoreAgent	signature:()
CDMCoreAgent::enforceBindingPolicies	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	void enforceBindingPolicies();$/;"	p	class:CDMCoreAgent	access:private	signature:()
CDMCoreAgent::esExecutionStack	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	TExecutionStack esExecutionStack;		\/\/ the execution stack$/;"	m	class:CDMCoreAgent	access:private
CDMCoreAgent::executionStackToString	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^string CDMCoreAgent::executionStackToString() {$/;"	f	class:CDMCoreAgent	signature:()
CDMCoreAgent::executionStackToString	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^string CDMCoreAgent::executionStackToString(TExecutionStack es) {$/;"	f	class:CDMCoreAgent	signature:(TExecutionStack es)
CDMCoreAgent::executionStackToString	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^    string executionStackToString();$/;"	p	class:CDMCoreAgent	access:private	signature:()
CDMCoreAgent::executionStackToString	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^    string executionStackToString(TExecutionStack es);$/;"	p	class:CDMCoreAgent	access:private	signature:(TExecutionStack es)
CDMCoreAgent::expectationAgendaToBroadcastString	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^string CDMCoreAgent::expectationAgendaToBroadcastString() {$/;"	f	class:CDMCoreAgent	signature:()
CDMCoreAgent::expectationAgendaToBroadcastString	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^string CDMCoreAgent::expectationAgendaToBroadcastString(TExpectationAgenda eaBAgenda) {$/;"	f	class:CDMCoreAgent	signature:(TExpectationAgenda eaBAgenda)
CDMCoreAgent::expectationAgendaToBroadcastString	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	string expectationAgendaToBroadcastString(TExpectationAgenda eaBAgenda);$/;"	p	class:CDMCoreAgent	access:private	signature:(TExpectationAgenda eaBAgenda)
CDMCoreAgent::expectationAgendaToBroadcastString	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^    string expectationAgendaToBroadcastString();$/;"	p	class:CDMCoreAgent	access:private	signature:()
CDMCoreAgent::expectationAgendaToString	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^string CDMCoreAgent::expectationAgendaToString() {$/;"	f	class:CDMCoreAgent	signature:()
CDMCoreAgent::expectationAgendaToString	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	string expectationAgendaToString();$/;"	p	class:CDMCoreAgent	access:private	signature:()
CDMCoreAgent::fDefaultNonunderstandingThreshold	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^    float fDefaultNonunderstandingThreshold;\/\/ the default nonunderstanding $/;"	m	class:CDMCoreAgent	access:private
CDMCoreAgent::fNonunderstandingThreshold	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^    float fNonunderstandingThreshold;       \/\/ the current nonunderstanding$/;"	m	class:CDMCoreAgent	access:private
CDMCoreAgent::fclFocusClaims	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	TFocusClaimsList fclFocusClaims;		\/\/ the list of focus claims$/;"	m	class:CDMCoreAgent	access:private
CDMCoreAgent::fsFloorStatus	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	TFloorStatus fsFloorStatus;             \/\/ indicates who has the floor$/;"	m	class:CDMCoreAgent	access:private
CDMCoreAgent::iDefaultTimeoutPeriod	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	int iDefaultTimeoutPeriod;				\/\/ the default timeout period$/;"	m	class:CDMCoreAgent	access:private
CDMCoreAgent::iTimeoutPeriod	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^    int iTimeoutPeriod;						\/\/ the current timeout period$/;"	m	class:CDMCoreAgent	access:private
CDMCoreAgent::iTurnNumber	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	int iTurnNumber;						\/\/ stores the current turn number$/;"	m	class:CDMCoreAgent	access:private
CDMCoreAgent::performConceptBinding	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^void CDMCoreAgent::performConceptBinding(string sSlotName, string sSlotValue,$/;"	f	class:CDMCoreAgent	signature:(string sSlotName, string sSlotValue, float fConfidence, int iExpectationIndex, bool bIsComplete)
CDMCoreAgent::performConceptBinding	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	void performConceptBinding(string sSlotName, string sSlotValue,$/;"	p	class:CDMCoreAgent	access:private	signature:(string sSlotName, string sSlotValue, float fConfidence, int iExpectationIndex, bool bIsComplete)
CDMCoreAgent::performCustomConceptBinding	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^    void performCustomConceptBinding(int iExpectationIndex);$/;"	p	class:CDMCoreAgent	access:private	signature:(int iExpectationIndex)
CDMCoreAgent::performForcedConceptUpdates	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^void CDMCoreAgent::performForcedConceptUpdates(TBindingsDescr& rbdBindings) {$/;"	f	class:CDMCoreAgent	signature:(TBindingsDescr& rbdBindings)
CDMCoreAgent::performForcedConceptUpdates	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	void performForcedConceptUpdates(TBindingsDescr& rbdBindings);$/;"	p	class:CDMCoreAgent	access:private	signature:(TBindingsDescr& rbdBindings)
CDMCoreAgent::popAgentFromExecutionStack	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^void CDMCoreAgent::popAgentFromExecutionStack(CDialogAgent* pdaADialogAgent,$/;"	f	class:CDMCoreAgent	signature:(CDialogAgent* pdaADialogAgent, TStringVector& rvsAgentsEliminated)
CDMCoreAgent::popAgentFromExecutionStack	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	void popAgentFromExecutionStack(CDialogAgent *pdaADialogAgent,$/;"	p	class:CDMCoreAgent	access:private	signature:(CDialogAgent *pdaADialogAgent, TStringVector& rvsAgentsEliminated)
CDMCoreAgent::popCompletedFromExecutionStack	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^int CDMCoreAgent::popCompletedFromExecutionStack() {$/;"	f	class:CDMCoreAgent	signature:()
CDMCoreAgent::popCompletedFromExecutionStack	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	int popCompletedFromExecutionStack();$/;"	p	class:CDMCoreAgent	access:private	signature:()
CDMCoreAgent::popGroundingAgentsFromExecutionStack	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^void CDMCoreAgent::popGroundingAgentsFromExecutionStack(TStringVector& rvsAgentsEliminated) {$/;"	f	class:CDMCoreAgent	signature:(TStringVector& rvsAgentsEliminated)
CDMCoreAgent::popGroundingAgentsFromExecutionStack	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	void popGroundingAgentsFromExecutionStack(TStringVector& rvsAgentsEliminated);$/;"	p	class:CDMCoreAgent	access:private	signature:(TStringVector& rvsAgentsEliminated)
CDMCoreAgent::popTopicFromExecutionStack	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^void CDMCoreAgent::popTopicFromExecutionStack(CDialogAgent* pdaADialogAgent,$/;"	f	class:CDMCoreAgent	signature:(CDialogAgent* pdaADialogAgent, TStringVector& rvsAgentsEliminated)
CDMCoreAgent::popTopicFromExecutionStack	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	void popTopicFromExecutionStack(CDialogAgent *pdaADialogAgent,$/;"	p	class:CDMCoreAgent	access:private	signature:(CDialogAgent *pdaADialogAgent, TStringVector& rvsAgentsEliminated)
CDMCoreAgent::processNonUnderstanding	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^void CDMCoreAgent::processNonUnderstanding() {$/;"	f	class:CDMCoreAgent	signature:()
CDMCoreAgent::processNonUnderstanding	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	void processNonUnderstanding();$/;"	p	class:CDMCoreAgent	access:private	signature:()
CDMCoreAgent::resolveFocusShift	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^void CDMCoreAgent::resolveFocusShift() {$/;"	f	class:CDMCoreAgent	signature:()
CDMCoreAgent::resolveFocusShift	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	void resolveFocusShift();$/;"	p	class:CDMCoreAgent	access:private	signature:()
CDMCoreAgent::rollBackDialogState	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^void CDMCoreAgent::rollBackDialogState(int iState) {$/;"	f	class:CDMCoreAgent	signature:(int iState)
CDMCoreAgent::rollBackDialogState	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	void rollBackDialogState(int iState);$/;"	p	class:CDMCoreAgent	access:private	signature:(int iState)
CDMCoreAgent::s2bffFilters	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^    STRING2BFF s2bffFilters;                \/\/ the register of binding $/;"	m	class:CDMCoreAgent	access:private
CDMCoreAgent::saSystemAction	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	TSystemAction saSystemAction;			\/\/ the current system action$/;"	m	class:CDMCoreAgent	access:private
CDMCoreAgent::systemActionToString	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^string CDMCoreAgent::systemActionToString(TSystemAction saASystemAction) {$/;"	f	class:CDMCoreAgent	signature:(TSystemAction saASystemAction)
CDMCoreAgent::systemActionToString	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	string systemActionToString(TSystemAction saASystemAction);$/;"	p	class:CDMCoreAgent	access:private	signature:(TSystemAction saASystemAction)
CDMCoreAgent::updateInputLineConfiguration	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^void CDMCoreAgent::updateInputLineConfiguration() {$/;"	f	class:CDMCoreAgent	signature:()
CDMCoreAgent::updateInputLineConfiguration	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	void updateInputLineConfiguration();$/;"	p	class:CDMCoreAgent	access:private	signature:()
CDMCoreAgent::~CDMCoreAgent	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^CDMCoreAgent::~CDMCoreAgent() {$/;"	f	class:CDMCoreAgent	signature:()
CDMCoreAgent::~CDMCoreAgent	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	virtual ~CDMCoreAgent();$/;"	p	class:CDMCoreAgent	access:public	signature:()
CDTTManagerAgent	DMCore/Agents/CoreAgents/DTTManagerAgent.cpp	/^CDTTManagerAgent::CDTTManagerAgent(string sAName, string sAConfiguration, string sAType) : $/;"	f	class:CDTTManagerAgent	signature:(string sAName, string sAConfiguration, string sAType)
CDTTManagerAgent	DMCore/Agents/CoreAgents/DTTManagerAgent.h	/^	CDTTManagerAgent(string sAName, $/;"	p	class:CDTTManagerAgent	access:public	signature:(string sAName, string sAConfiguration = Ó, string sAType = Ó)
CDTTManagerAgent	DMCore/Agents/CoreAgents/DTTManagerAgent.h	/^class CDTTManagerAgent: public CAgent {$/;"	c	inherits:CAgent
CDTTManagerAgent::AgentFactory	DMCore/Agents/CoreAgents/DTTManagerAgent.cpp	/^CAgent* CDTTManagerAgent::AgentFactory(string sAName, string sAConfiguration) {$/;"	f	class:CDTTManagerAgent	signature:(string sAName, string sAConfiguration)
CDTTManagerAgent::AgentFactory	DMCore/Agents/CoreAgents/DTTManagerAgent.h	/^	static CAgent* AgentFactory(string sAName, string sAConfiguration);$/;"	p	class:CDTTManagerAgent	access:public	signature:(string sAName, string sAConfiguration)
CDTTManagerAgent::CDTTManagerAgent	DMCore/Agents/CoreAgents/DTTManagerAgent.cpp	/^CDTTManagerAgent::CDTTManagerAgent(string sAName, string sAConfiguration, string sAType) : $/;"	f	class:CDTTManagerAgent	signature:(string sAName, string sAConfiguration, string sAType)
CDTTManagerAgent::CDTTManagerAgent	DMCore/Agents/CoreAgents/DTTManagerAgent.h	/^	CDTTManagerAgent(string sAName, $/;"	p	class:CDTTManagerAgent	access:public	signature:(string sAName, string sAConfiguration = Ó, string sAType = Ó)
CDTTManagerAgent::CreateDialogTaskAgentome	DMCore/Agents/CoreAgents/DTTManagerAgent.h	/^	void CreateDialogTaskAgentome();	\/\/ registers all the dialog task $/;"	p	class:CDTTManagerAgent	access:public	signature:()
CDTTManagerAgent::CreateDialogTaskTree	DMCore/Agents/CoreAgents/DTTManagerAgent.h	/^	void CreateDialogTaskTree();		\/\/ creates the task part$/;"	p	class:CDTTManagerAgent	access:public	signature:()
CDTTManagerAgent::CreateDialogTree	DMCore/Agents/CoreAgents/DTTManagerAgent.cpp	/^void CDTTManagerAgent::CreateDialogTree() {$/;"	f	class:CDTTManagerAgent	signature:()
CDTTManagerAgent::CreateDialogTree	DMCore/Agents/CoreAgents/DTTManagerAgent.h	/^	void CreateDialogTree();			\/\/ creates the dialog tree$/;"	p	class:CDTTManagerAgent	access:public	signature:()
CDTTManagerAgent::DestroyDialogTree	DMCore/Agents/CoreAgents/DTTManagerAgent.cpp	/^void CDTTManagerAgent::DestroyDialogTree() {$/;"	f	class:CDTTManagerAgent	signature:()
CDTTManagerAgent::DestroyDialogTree	DMCore/Agents/CoreAgents/DTTManagerAgent.h	/^    void DestroyDialogTree();           \/\/ destroys the dialog tree$/;"	p	class:CDTTManagerAgent	access:public	signature:()
CDTTManagerAgent::GetDialogTaskTreeRoot	DMCore/Agents/CoreAgents/DTTManagerAgent.cpp	/^CDialogAgent* CDTTManagerAgent::GetDialogTaskTreeRoot() {$/;"	f	class:CDTTManagerAgent	signature:()
CDTTManagerAgent::GetDialogTaskTreeRoot	DMCore/Agents/CoreAgents/DTTManagerAgent.h	/^	CDialogAgent* GetDialogTaskTreeRoot();$/;"	p	class:CDTTManagerAgent	access:public	signature:()
CDTTManagerAgent::GetParentName	DMCore/Agents/CoreAgents/DTTManagerAgent.cpp	/^string CDTTManagerAgent::GetParentName(string sAgentPath) {$/;"	f	class:CDTTManagerAgent	signature:(string sAgentPath)
CDTTManagerAgent::GetParentName	DMCore/Agents/CoreAgents/DTTManagerAgent.h	/^	string GetParentName(string sAgentPath);$/;"	p	class:CDTTManagerAgent	access:public	signature:(string sAgentPath)
CDTTManagerAgent::IsAncestorOf	DMCore/Agents/CoreAgents/DTTManagerAgent.cpp	/^bool CDTTManagerAgent::IsAncestorOf(string sAncestorAgentPath, string sAgentPath) {$/;"	f	class:CDTTManagerAgent	signature:(string sAncestorAgentPath, string sAgentPath)
CDTTManagerAgent::IsAncestorOf	DMCore/Agents/CoreAgents/DTTManagerAgent.h	/^	bool IsAncestorOf(string sAncestorAgentPath, string sAgentPath);$/;"	p	class:CDTTManagerAgent	access:public	signature:(string sAncestorAgentPath, string sAgentPath)
CDTTManagerAgent::IsAncestorOrEqualOf	DMCore/Agents/CoreAgents/DTTManagerAgent.cpp	/^bool CDTTManagerAgent::IsAncestorOrEqualOf(string sAncestorAgentPath, string sAgentPath) {$/;"	f	class:CDTTManagerAgent	signature:(string sAncestorAgentPath, string sAgentPath)
CDTTManagerAgent::IsAncestorOrEqualOf	DMCore/Agents/CoreAgents/DTTManagerAgent.h	/^	bool IsAncestorOrEqualOf(string sAncestorAgentPath, string sAgentPath);$/;"	p	class:CDTTManagerAgent	access:public	signature:(string sAncestorAgentPath, string sAgentPath)
CDTTManagerAgent::IsChildOf	DMCore/Agents/CoreAgents/DTTManagerAgent.cpp	/^bool CDTTManagerAgent::IsChildOf(string sChildAgentPath, string sAgentPath) {$/;"	f	class:CDTTManagerAgent	signature:(string sChildAgentPath, string sAgentPath)
CDTTManagerAgent::IsChildOf	DMCore/Agents/CoreAgents/DTTManagerAgent.h	/^	bool IsChildOf(string sChildAgentPath, string sAgentPath);$/;"	p	class:CDTTManagerAgent	access:public	signature:(string sChildAgentPath, string sAgentPath)
CDTTManagerAgent::IsDescendantOf	DMCore/Agents/CoreAgents/DTTManagerAgent.cpp	/^bool CDTTManagerAgent::IsDescendantOf(string sDescendantAgentPath, $/;"	f	class:CDTTManagerAgent	signature:(string sDescendantAgentPath, string sAgentPath)
CDTTManagerAgent::IsDescendantOf	DMCore/Agents/CoreAgents/DTTManagerAgent.h	/^	bool IsDescendantOf(string sDescendantAgentPath, string sAgentPath);$/;"	p	class:CDTTManagerAgent	access:public	signature:(string sDescendantAgentPath, string sAgentPath)
CDTTManagerAgent::IsParentOf	DMCore/Agents/CoreAgents/DTTManagerAgent.cpp	/^bool CDTTManagerAgent::IsParentOf(string sParentAgentPath, string sAgentPath) {$/;"	f	class:CDTTManagerAgent	signature:(string sParentAgentPath, string sAgentPath)
CDTTManagerAgent::IsParentOf	DMCore/Agents/CoreAgents/DTTManagerAgent.h	/^	bool IsParentOf(string sParentAgentPath, string sAgentPath);$/;"	p	class:CDTTManagerAgent	access:public	signature:(string sParentAgentPath, string sAgentPath)
CDTTManagerAgent::IsSiblingOf	DMCore/Agents/CoreAgents/DTTManagerAgent.cpp	/^bool CDTTManagerAgent::IsSiblingOf(string sAgent1Path, string sAgent2Path) {$/;"	f	class:CDTTManagerAgent	signature:(string sAgent1Path, string sAgent2Path)
CDTTManagerAgent::IsSiblingOf	DMCore/Agents/CoreAgents/DTTManagerAgent.h	/^	bool IsSiblingOf(string sAgent1Path, string sAgent2Path);$/;"	p	class:CDTTManagerAgent	access:public	signature:(string sAgent1Path, string sAgent2Path)
CDTTManagerAgent::MountAgent	DMCore/Agents/CoreAgents/DTTManagerAgent.cpp	/^CDialogAgent* CDTTManagerAgent::MountAgent(CDialogAgent* pWhere, string sAgentType, $/;"	f	class:CDTTManagerAgent	signature:(CDialogAgent* pWhere, string sAgentType, string sAgentName, string sAgentConfiguration, TMountingMethod mmHow, string sDynamicAgentID)
CDTTManagerAgent::MountAgent	DMCore/Agents/CoreAgents/DTTManagerAgent.cpp	/^void CDTTManagerAgent::MountAgent(CDialogAgent* pdaWhere, CDialogAgent* pdaWho, $/;"	f	class:CDTTManagerAgent	signature:(CDialogAgent* pdaWhere, CDialogAgent* pdaWho, TMountingMethod mmHow, string sDynamicAgentID)
CDTTManagerAgent::MountAgent	DMCore/Agents/CoreAgents/DTTManagerAgent.h	/^	CDialogAgent* MountAgent(CDialogAgent* pWhere, string sAgentType, $/;"	p	class:CDTTManagerAgent	access:public	signature:(CDialogAgent* pWhere, string sAgentType, string sAgentName, string sAConfiguration, TMountingMethod mmHow, string sDynamicAgentID = Ó)
CDTTManagerAgent::MountAgent	DMCore/Agents/CoreAgents/DTTManagerAgent.h	/^	void MountAgent(CDialogAgent* pdaWhere, CDialogAgent* pdaWho, $/;"	p	class:CDTTManagerAgent	access:public	signature:(CDialogAgent* pdaWhere, CDialogAgent* pdaWho, TMountingMethod mmHow, string sDynamicAgentID = Ó)
CDTTManagerAgent::MountAgentsFromArrayConcept	DMCore/Agents/CoreAgents/DTTManagerAgent.cpp	/^void CDTTManagerAgent::MountAgentsFromArrayConcept($/;"	f	class:CDTTManagerAgent	signature:( CDialogAgent *pdaParent, string sArrayConceptName, string sAgentsType, string sAgentsName, string sAgentsConceptName, string sAgentsDynamicID)
CDTTManagerAgent::MountAgentsFromArrayConcept	DMCore/Agents/CoreAgents/DTTManagerAgent.h	/^	void MountAgentsFromArrayConcept(CDialogAgent *pdaParent,	$/;"	p	class:CDTTManagerAgent	access:public	signature:(CDialogAgent *pdaParent, string sArrayConceptName, string sAgentsType, string sAgentsName, string sAgentsConceptName = Ó, string sAgentsDynamicID = Ó)
CDTTManagerAgent::ReCreateDialogTree	DMCore/Agents/CoreAgents/DTTManagerAgent.cpp	/^void CDTTManagerAgent::ReCreateDialogTree() {$/;"	f	class:CDTTManagerAgent	signature:()
CDTTManagerAgent::ReCreateDialogTree	DMCore/Agents/CoreAgents/DTTManagerAgent.h	/^    void ReCreateDialogTree();          \/\/ recreates the dialog tree$/;"	p	class:CDTTManagerAgent	access:public	signature:()
CDTTManagerAgent::Reset	DMCore/Agents/CoreAgents/DTTManagerAgent.cpp	/^void CDTTManagerAgent::Reset() {$/;"	f	class:CDTTManagerAgent	signature:()
CDTTManagerAgent::Reset	DMCore/Agents/CoreAgents/DTTManagerAgent.h	/^	virtual void Reset();	\/\/ overwritten Reset$/;"	p	class:CDTTManagerAgent	access:public	signature:()
CDTTManagerAgent::UnMountAgent	DMCore/Agents/CoreAgents/DTTManagerAgent.cpp	/^void CDTTManagerAgent::UnMountAgent(CDialogAgent* pdaWho) {$/;"	f	class:CDTTManagerAgent	signature:(CDialogAgent* pdaWho)
CDTTManagerAgent::UnMountAgent	DMCore/Agents/CoreAgents/DTTManagerAgent.h	/^	void UnMountAgent(CDialogAgent* pdaWho);$/;"	p	class:CDTTManagerAgent	access:public	signature:(CDialogAgent* pdaWho)
CDTTManagerAgent::Use	DMCore/Agents/CoreAgents/DTTManagerAgent.cpp	/^void CDTTManagerAgent::Use(string sDAType, string sDAName,$/;"	f	class:CDTTManagerAgent	signature:(string sDAType, string sDAName, FRegisterAgent fRegisterAgent, string sDAConfiguration)
CDTTManagerAgent::Use	DMCore/Agents/CoreAgents/DTTManagerAgent.h	/^	void Use(string sDAType, string sDAName, $/;"	p	class:CDTTManagerAgent	access:public	signature:(string sDAType, string sDAName, FRegisterAgent fRegisterAgent, string sConfiguration)
CDTTManagerAgent::pdaDialogTaskRoot	DMCore/Agents/CoreAgents/DTTManagerAgent.h	/^	CDialogAgent* pdaDialogTaskRoot;		\/\/ the dialog task root$/;"	m	class:CDTTManagerAgent	access:private
CDTTManagerAgent::vdaiDAInfo	DMCore/Agents/CoreAgents/DTTManagerAgent.h	/^	vector<TDiscourseAgentInfo, allocator<TDiscourseAgentInfo> > vdaiDAInfo;$/;"	m	class:CDTTManagerAgent	access:private
CDTTManagerAgent::~CDTTManagerAgent	DMCore/Agents/CoreAgents/DTTManagerAgent.cpp	/^CDTTManagerAgent::~CDTTManagerAgent() {$/;"	f	class:CDTTManagerAgent	signature:()
CDTTManagerAgent::~CDTTManagerAgent	DMCore/Agents/CoreAgents/DTTManagerAgent.h	/^	virtual ~CDTTManagerAgent();$/;"	p	class:CDTTManagerAgent	access:public	signature:()
CDialogAgency	DMCore/Agents/DialogAgents/BasicAgents/DialogAgency.cpp	/^CDialogAgency::CDialogAgency(string sAName, $/;"	f	class:CDialogAgency	signature:(string sAName, string sAConfiguration, string sAType)
CDialogAgency	DMCore/Agents/DialogAgents/BasicAgents/DialogAgency.h	/^	CDialogAgency(string sAName, $/;"	p	class:CDialogAgency	access:public	signature:(string sAName, string sAConfiguration = Ó, string sAType = Ó)
CDialogAgency	DMCore/Agents/DialogAgents/BasicAgents/DialogAgency.h	/^class CDialogAgency: public CDialogAgent {$/;"	c	inherits:CDialogAgent
CDialogAgency::AgentFactory	DMCore/Agents/DialogAgents/BasicAgents/DialogAgency.cpp	/^CAgent* CDialogAgency::AgentFactory(string sAName, string sAConfiguration) {$/;"	f	class:CDialogAgency	signature:(string sAName, string sAConfiguration)
CDialogAgency::AgentFactory	DMCore/Agents/DialogAgents/BasicAgents/DialogAgency.h	/^	static CAgent* AgentFactory(string sAName, string sAConfiguration);$/;"	p	class:CDialogAgency	access:public	signature:(string sAName, string sAConfiguration)
CDialogAgency::CDialogAgency	DMCore/Agents/DialogAgents/BasicAgents/DialogAgency.cpp	/^CDialogAgency::CDialogAgency(string sAName, $/;"	f	class:CDialogAgency	signature:(string sAName, string sAConfiguration, string sAType)
CDialogAgency::CDialogAgency	DMCore/Agents/DialogAgents/BasicAgents/DialogAgency.h	/^	CDialogAgency(string sAName, $/;"	p	class:CDialogAgency	access:public	signature:(string sAName, string sAConfiguration = Ó, string sAType = Ó)
CDialogAgency::Create	DMCore/Agents/DialogAgents/BasicAgents/DialogAgency.cpp	/^void CDialogAgency::Create() {$/;"	f	class:CDialogAgency	signature:()
CDialogAgency::Create	DMCore/Agents/DialogAgents/BasicAgents/DialogAgency.h	/^	virtual void Create();$/;"	p	class:CDialogAgency	access:public	signature:()
CDialogAgency::CreateSubAgents	DMCore/Agents/DialogAgents/BasicAgents/DialogAgency.cpp	/^void CDialogAgency::CreateSubAgents() {$/;"	f	class:CDialogAgency	signature:()
CDialogAgency::CreateSubAgents	DMCore/Agents/DialogAgents/BasicAgents/DialogAgency.h	/^	virtual void CreateSubAgents();$/;"	p	class:CDialogAgency	access:public	signature:()
CDialogAgency::Execute	DMCore/Agents/DialogAgents/BasicAgents/DialogAgency.cpp	/^TDialogExecuteReturnCode CDialogAgency::Execute() {$/;"	f	class:CDialogAgency	signature:()
CDialogAgency::Execute	DMCore/Agents/DialogAgents/BasicAgents/DialogAgency.h	/^	virtual TDialogExecuteReturnCode Execute(); $/;"	p	class:CDialogAgency	access:public	signature:()
CDialogAgency::GetExecutionPolicy	DMCore/Agents/DialogAgents/BasicAgents/DialogAgency.cpp	/^string CDialogAgency::GetExecutionPolicy() {$/;"	f	class:CDialogAgency	signature:()
CDialogAgency::GetExecutionPolicy	DMCore/Agents/DialogAgents/BasicAgents/DialogAgency.h	/^	virtual string GetExecutionPolicy();$/;"	p	class:CDialogAgency	access:public	signature:()
CDialogAgency::Initialize	DMCore/Agents/DialogAgents/BasicAgents/DialogAgency.cpp	/^void CDialogAgency::Initialize() {$/;"	f	class:CDialogAgency	signature:()
CDialogAgency::Initialize	DMCore/Agents/DialogAgents/BasicAgents/DialogAgency.h	/^	virtual void Initialize();$/;"	p	class:CDialogAgency	access:public	signature:()
CDialogAgency::NextAgentToExecute	DMCore/Agents/DialogAgents/BasicAgents/DialogAgency.cpp	/^CDialogAgent* CDialogAgency::NextAgentToExecute() {$/;"	f	class:CDialogAgency	signature:()
CDialogAgency::NextAgentToExecute	DMCore/Agents/DialogAgents/BasicAgents/DialogAgency.h	/^	virtual CDialogAgent* NextAgentToExecute();$/;"	p	class:CDialogAgency	access:public	signature:()
CDialogAgency::~CDialogAgency	DMCore/Agents/DialogAgents/BasicAgents/DialogAgency.cpp	/^CDialogAgency::~CDialogAgency() {$/;"	f	class:CDialogAgency	signature:()
CDialogAgency::~CDialogAgency	DMCore/Agents/DialogAgents/BasicAgents/DialogAgency.h	/^	virtual ~CDialogAgency();$/;"	p	class:CDialogAgency	access:public	signature:()
CDialogAgent	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^CDialogAgent::CDialogAgent(string sAName, string sAConfiguration, string sAType): $/;"	f	class:CDialogAgent	signature:(string sAName, string sAConfiguration, string sAType)
CDialogAgent	DMCore/Agents/DialogAgents/DialogAgent.h	/^	CDialogAgent(string sAName,$/;"	p	class:CDialogAgent	access:public	signature:(string sAName, string sAConfiguration = Ó, string sAType = Ó)
CDialogAgent	DMCore/Agents/DialogAgents/DialogAgent.h	/^class CDialogAgent : public CAgent {$/;"	c	inherits:CAgent
CDialogAgent::A	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^CDialogAgent& CDialogAgent::A(const char *lpszDialogAgentPath, ...) {$/;"	f	class:CDialogAgent	signature:(const char *lpszDialogAgentPath, ...)
CDialogAgent::A	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^CDialogAgent& CDialogAgent::A(string sDialogAgentPath) {$/;"	f	class:CDialogAgent	signature:(string sDialogAgentPath)
CDialogAgent::A	DMCore/Agents/DialogAgents/DialogAgent.h	/^	CDialogAgent& A(const char* lpszDialogAgentPath, ...);$/;"	p	class:CDialogAgent	access:public	signature:(const char* lpszDialogAgentPath, ...)
CDialogAgent::A	DMCore/Agents/DialogAgents/DialogAgent.h	/^	CDialogAgent& A(string sDialogAgentPath);$/;"	p	class:CDialogAgent	access:public	signature:(string sDialogAgentPath)
CDialogAgent::AddSubAgent	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^void CDialogAgent::AddSubAgent(CDialogAgent* pdaWho, CDialogAgent* pdaWhere, $/;"	f	class:CDialogAgent	signature:(CDialogAgent* pdaWho, CDialogAgent* pdaWhere, TAddSubAgentMethod asamMethod)
CDialogAgent::AddSubAgent	DMCore/Agents/DialogAgents/DialogAgent.h	/^	void AddSubAgent(CDialogAgent* pdaWho, CDialogAgent* pdaWhere, $/;"	p	class:CDialogAgent	access:public	signature:(CDialogAgent* pdaWho, CDialogAgent* pdaWhere, TAddSubAgentMethod asamMethod)
CDialogAgent::AgentFactory	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^CAgent* CDialogAgent::AgentFactory(string sAName, string sAConfiguration) {$/;"	f	class:CDialogAgent	signature:(string sAName, string sAConfiguration)
CDialogAgent::AgentFactory	DMCore/Agents/DialogAgents/DialogAgent.h	/^	static CAgent* AgentFactory(string sAName, string sAConfiguration);$/;"	p	class:CDialogAgent	access:public	signature:(string sAName, string sAConfiguration)
CDialogAgent::Block	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^void CDialogAgent::Block() {$/;"	f	class:CDialogAgent	signature:()
CDialogAgent::Block	DMCore/Agents/DialogAgents/DialogAgent.h	/^	void Block();$/;"	p	class:CDialogAgent	access:public	signature:()
CDialogAgent::C	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^CConcept& CDialogAgent::C(const char *lpszConceptPath, ...) {$/;"	f	class:CDialogAgent	signature:(const char *lpszConceptPath, ...)
CDialogAgent::C	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^CConcept& CDialogAgent::C(string sConceptPath) {	$/;"	f	class:CDialogAgent	signature:(string sConceptPath)
CDialogAgent::C	DMCore/Agents/DialogAgents/DialogAgent.h	/^	virtual CConcept& C(const char* lpszConceptPath, ...);$/;"	p	class:CDialogAgent	access:public	signature:(const char* lpszConceptPath, ...)
CDialogAgent::C	DMCore/Agents/DialogAgents/DialogAgent.h	/^	virtual CConcept& C(string sConceptPath);$/;"	p	class:CDialogAgent	access:public	signature:(string sConceptPath)
CDialogAgent::CDialogAgent	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^CDialogAgent::CDialogAgent(string sAName, string sAConfiguration, string sAType): $/;"	f	class:CDialogAgent	signature:(string sAName, string sAConfiguration, string sAType)
CDialogAgent::CDialogAgent	DMCore/Agents/DialogAgents/DialogAgent.h	/^	CDialogAgent(string sAName,$/;"	p	class:CDialogAgent	access:public	signature:(string sAName, string sAConfiguration = Ó, string sAType = Ó)
CDialogAgent::ClaimsFocus	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^bool CDialogAgent::ClaimsFocus() {$/;"	f	class:CDialogAgent	signature:()
CDialogAgent::ClaimsFocus	DMCore/Agents/DialogAgents/DialogAgent.h	/^	virtual bool ClaimsFocus();$/;"	p	class:CDialogAgent	access:public	signature:()
CDialogAgent::ClaimsFocusDuringGrounding	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^bool CDialogAgent::ClaimsFocusDuringGrounding() {$/;"	f	class:CDialogAgent	signature:()
CDialogAgent::ClaimsFocusDuringGrounding	DMCore/Agents/DialogAgents/DialogAgent.h	/^	virtual bool ClaimsFocusDuringGrounding();$/;"	p	class:CDialogAgent	access:public	signature:()
CDialogAgent::Concepts	DMCore/Agents/DialogAgents/DialogAgent.h	/^	TConceptPointersVector Concepts;$/;"	m	class:CDialogAgent	access:protected
CDialogAgent::Create	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^void CDialogAgent::Create() {$/;"	f	class:CDialogAgent	signature:()
CDialogAgent::Create	DMCore/Agents/DialogAgents/DialogAgent.h	/^	virtual void Create();$/;"	p	class:CDialogAgent	access:public	signature:()
CDialogAgent::CreateConcepts	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^void CDialogAgent::CreateConcepts() {$/;"	f	class:CDialogAgent	signature:()
CDialogAgent::CreateConcepts	DMCore/Agents/DialogAgents/DialogAgent.h	/^	virtual void CreateConcepts();$/;"	p	class:CDialogAgent	access:public	signature:()
CDialogAgent::CreateGroundingModel	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^void CDialogAgent::CreateGroundingModel(string sGroundingModelSpec) {$/;"	f	class:CDialogAgent	signature:(string sGroundingModelSpec)
CDialogAgent::CreateGroundingModel	DMCore/Agents/DialogAgents/DialogAgent.h	/^    virtual void CreateGroundingModel(string sGroundingModelSpec);$/;"	p	class:CDialogAgent	access:public	signature:(string sGroundingModelSpec)
CDialogAgent::CreateTriggerConcept	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^void CDialogAgent::CreateTriggerConcept() {$/;"	f	class:CDialogAgent	signature:()
CDialogAgent::CreateTriggerConcept	DMCore/Agents/DialogAgents/DialogAgent.h	/^	void CreateTriggerConcept();$/;"	p	class:CDialogAgent	access:public	signature:()
CDialogAgent::CreateVersionedPrompt	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^string CDialogAgent::CreateVersionedPrompt(string sVersion) {$/;"	f	class:CDialogAgent	signature:(string sVersion)
CDialogAgent::CreateVersionedPrompt	DMCore/Agents/DialogAgents/DialogAgent.h	/^    virtual string CreateVersionedPrompt(string sVersion);$/;"	p	class:CDialogAgent	access:public	signature:(string sVersion)
CDialogAgent::DeclareBindingPolicy	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^string CDialogAgent::DeclareBindingPolicy() {$/;"	f	class:CDialogAgent	signature:()
CDialogAgent::DeclareBindingPolicy	DMCore/Agents/DialogAgents/DialogAgent.h	/^	virtual string DeclareBindingPolicy();$/;"	p	class:CDialogAgent	access:public	signature:()
CDialogAgent::DeclareConcepts	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^void CDialogAgent::DeclareConcepts($/;"	f	class:CDialogAgent	signature:( TConceptPointersVector& rcpvConcepts, TConceptPointersSet& rcpsExclude)
CDialogAgent::DeclareConcepts	DMCore/Agents/DialogAgents/DialogAgent.h	/^    virtual void DeclareConcepts($/;"	p	class:CDialogAgent	access:public	signature:( TConceptPointersVector& rcpvConcepts, TConceptPointersSet& rcpsExclude)
CDialogAgent::DeclareExpectations	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^int CDialogAgent::DeclareExpectations(TConceptExpectationList& $/;"	f	class:CDialogAgent	signature:(TConceptExpectationList& rcelExpectationList)
CDialogAgent::DeclareExpectations	DMCore/Agents/DialogAgents/DialogAgent.h	/^	virtual int DeclareExpectations(TConceptExpectationList& $/;"	p	class:CDialogAgent	access:public	signature:(TConceptExpectationList& rcelExpectationList)
CDialogAgent::DeclareFocusClaims	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^int CDialogAgent::DeclareFocusClaims(TFocusClaimsList& fclFocusClaims) {$/;"	f	class:CDialogAgent	signature:(TFocusClaimsList& fclFocusClaims)
CDialogAgent::DeclareFocusClaims	DMCore/Agents/DialogAgents/DialogAgent.h	/^	virtual int DeclareFocusClaims(TFocusClaimsList& fclFocusClaims);$/;"	p	class:CDialogAgent	access:public	signature:(TFocusClaimsList& fclFocusClaims)
CDialogAgent::DeclareGroundingModels	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^void CDialogAgent::DeclareGroundingModels($/;"	f	class:CDialogAgent	signature:( TGroundingModelPointersVector& rgmpvModels, TGroundingModelPointersSet& rgmpsExclude)
CDialogAgent::DeclareGroundingModels	DMCore/Agents/DialogAgents/DialogAgent.h	/^    virtual void DeclareGroundingModels($/;"	p	class:CDialogAgent	access:public	signature:( TGroundingModelPointersVector& rgmpvModels, TGroundingModelPointersSet& rgmpsExclude)
CDialogAgent::DeleteDynamicSubAgents	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^void CDialogAgent::DeleteDynamicSubAgents() {$/;"	f	class:CDialogAgent	signature:()
CDialogAgent::DeleteDynamicSubAgents	DMCore/Agents/DialogAgents/DialogAgent.h	/^    void DeleteDynamicSubAgents();$/;"	p	class:CDialogAgent	access:public	signature:()
CDialogAgent::DeleteSubAgent	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^void CDialogAgent::DeleteSubAgent(CDialogAgent* pdaWho) {$/;"	f	class:CDialogAgent	signature:(CDialogAgent* pdaWho)
CDialogAgent::DeleteSubAgent	DMCore/Agents/DialogAgents/DialogAgent.h	/^	void DeleteSubAgent(CDialogAgent* pdaWho);$/;"	p	class:CDialogAgent	access:public	signature:(CDialogAgent* pdaWho)
CDialogAgent::EstablishContextPrompt	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^string CDialogAgent::EstablishContextPrompt() {$/;"	f	class:CDialogAgent	signature:()
CDialogAgent::EstablishContextPrompt	DMCore/Agents/DialogAgents/DialogAgent.h	/^	virtual string EstablishContextPrompt();$/;"	p	class:CDialogAgent	access:public	signature:()
CDialogAgent::Execute	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^TDialogExecuteReturnCode CDialogAgent::Execute() {$/;"	f	class:CDialogAgent	signature:()
CDialogAgent::Execute	DMCore/Agents/DialogAgents/DialogAgent.h	/^	virtual TDialogExecuteReturnCode Execute();$/;"	p	class:CDialogAgent	access:public	signature:()
CDialogAgent::ExpectCondition	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^bool CDialogAgent::ExpectCondition() {$/;"	f	class:CDialogAgent	signature:()
CDialogAgent::ExpectCondition	DMCore/Agents/DialogAgents/DialogAgent.h	/^	virtual bool ExpectCondition();$/;"	p	class:CDialogAgent	access:public	signature:()
CDialogAgent::ExplainMorePrompt	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^string CDialogAgent::ExplainMorePrompt() {$/;"	f	class:CDialogAgent	signature:()
CDialogAgent::ExplainMorePrompt	DMCore/Agents/DialogAgents/DialogAgent.h	/^	virtual string ExplainMorePrompt();$/;"	p	class:CDialogAgent	access:public	signature:()
CDialogAgent::FailureCriteriaSatisfied	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^bool CDialogAgent::FailureCriteriaSatisfied() {$/;"	f	class:CDialogAgent	signature:()
CDialogAgent::FailureCriteriaSatisfied	DMCore/Agents/DialogAgents/DialogAgent.h	/^	virtual bool FailureCriteriaSatisfied();$/;"	p	class:CDialogAgent	access:public	signature:()
CDialogAgent::GetContextAgent	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^CDialogAgent* CDialogAgent::GetContextAgent() {$/;"	f	class:CDialogAgent	signature:()
CDialogAgent::GetContextAgent	DMCore/Agents/DialogAgents/DialogAgent.h	/^	CDialogAgent* GetContextAgent();$/;"	p	class:CDialogAgent	access:public	signature:()
CDialogAgent::GetDynamicAgentID	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^string CDialogAgent::GetDynamicAgentID() {$/;"	f	class:CDialogAgent	signature:()
CDialogAgent::GetDynamicAgentID	DMCore/Agents/DialogAgents/DialogAgent.h	/^    string GetDynamicAgentID();$/;"	p	class:CDialogAgent	access:public	signature:()
CDialogAgent::GetExecuteCounter	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^int CDialogAgent::GetExecuteCounter() {$/;"	f	class:CDialogAgent	signature:()
CDialogAgent::GetExecuteCounter	DMCore/Agents/DialogAgents/DialogAgent.h	/^    int GetExecuteCounter();$/;"	p	class:CDialogAgent	access:public	signature:()
CDialogAgent::GetGroundingModel	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^CGroundingModel* CDialogAgent::GetGroundingModel() {$/;"	f	class:CDialogAgent	signature:()
CDialogAgent::GetGroundingModel	DMCore/Agents/DialogAgents/DialogAgent.h	/^    virtual CGroundingModel* GetGroundingModel();$/;"	p	class:CDialogAgent	access:public	signature:()
CDialogAgent::GetInputConfigurationParameterValue	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^string CDialogAgent::GetInputConfigurationParameterValue( string sSlot) {$/;"	f	class:CDialogAgent	signature:( string sSlot)
CDialogAgent::GetInputConfigurationParameterValue	DMCore/Agents/DialogAgents/DialogAgent.h	/^	string GetInputConfigurationParameterValue( string sSlot);$/;"	p	class:CDialogAgent	access:public	signature:( string sSlot)
CDialogAgent::GetInputLineConfiguration	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^STRING2STRING CDialogAgent::GetInputLineConfiguration() {$/;"	f	class:CDialogAgent	signature:()
CDialogAgent::GetInputLineConfiguration	DMCore/Agents/DialogAgents/DialogAgent.h	/^	STRING2STRING GetInputLineConfiguration();$/;"	p	class:CDialogAgent	access:public	signature:()
CDialogAgent::GetLastBindingsIndex	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^int CDialogAgent::GetLastBindingsIndex() {$/;"	f	class:CDialogAgent	signature:()
CDialogAgent::GetLastBindingsIndex	DMCore/Agents/DialogAgents/DialogAgent.h	/^    int GetLastBindingsIndex();$/;"	p	class:CDialogAgent	access:public	signature:()
CDialogAgent::GetLastExecutionIndex	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^int CDialogAgent::GetLastExecutionIndex() {$/;"	f	class:CDialogAgent	signature:()
CDialogAgent::GetLastExecutionIndex	DMCore/Agents/DialogAgents/DialogAgent.h	/^    int GetLastExecutionIndex();$/;"	p	class:CDialogAgent	access:public	signature:()
CDialogAgent::GetLastExecutionInputIndex	DMCore/Agents/DialogAgents/DialogAgent.h	/^    int GetLastExecutionInputIndex();$/;"	p	class:CDialogAgent	access:public	signature:()
CDialogAgent::GetLastInputIndex	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^int CDialogAgent::GetLastInputIndex() {$/;"	f	class:CDialogAgent	signature:()
CDialogAgent::GetLastInputIndex	DMCore/Agents/DialogAgents/DialogAgent.h	/^    int GetLastInputIndex();$/;"	p	class:CDialogAgent	access:public	signature:()
CDialogAgent::GetMainTopic	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^CDialogAgent* CDialogAgent::GetMainTopic() {$/;"	f	class:CDialogAgent	signature:()
CDialogAgent::GetMainTopic	DMCore/Agents/DialogAgents/DialogAgent.h	/^	CDialogAgent* GetMainTopic();$/;"	p	class:CDialogAgent	access:public	signature:()
CDialogAgent::GetMaxExecuteCounter	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^int CDialogAgent::GetMaxExecuteCounter() {$/;"	f	class:CDialogAgent	signature:()
CDialogAgent::GetMaxExecuteCounter	DMCore/Agents/DialogAgents/DialogAgent.h	/^    virtual int GetMaxExecuteCounter();$/;"	p	class:CDialogAgent	access:public	signature:()
CDialogAgent::GetParent	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^CDialogAgent* CDialogAgent::GetParent() {$/;"	f	class:CDialogAgent	signature:()
CDialogAgent::GetParent	DMCore/Agents/DialogAgents/DialogAgent.h	/^	CDialogAgent* GetParent();$/;"	p	class:CDialogAgent	access:public	signature:()
CDialogAgent::GetTurnsInFocusCounter	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^int CDialogAgent::GetTurnsInFocusCounter() {$/;"	f	class:CDialogAgent	signature:()
CDialogAgent::GetTurnsInFocusCounter	DMCore/Agents/DialogAgents/DialogAgent.h	/^    int GetTurnsInFocusCounter();$/;"	p	class:CDialogAgent	access:public	signature:()
CDialogAgent::HasCompleted	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^bool CDialogAgent::HasCompleted() {$/;"	f	class:CDialogAgent	signature:()
CDialogAgent::HasCompleted	DMCore/Agents/DialogAgents/DialogAgent.h	/^	bool HasCompleted(); $/;"	p	class:CDialogAgent	access:public	signature:()
CDialogAgent::HasFailed	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^bool CDialogAgent::HasFailed() {$/;"	f	class:CDialogAgent	signature:()
CDialogAgent::HasFailed	DMCore/Agents/DialogAgents/DialogAgent.h	/^    bool HasFailed();$/;"	p	class:CDialogAgent	access:public	signature:()
CDialogAgent::HasInputConfigurationParameter	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^bool CDialogAgent::HasInputConfigurationParameter( string sSlot) {$/;"	f	class:CDialogAgent	signature:( string sSlot)
CDialogAgent::HasInputConfigurationParameter	DMCore/Agents/DialogAgents/DialogAgent.h	/^	bool HasInputConfigurationParameter( string sSlot);$/;"	p	class:CDialogAgent	access:public	signature:( string sSlot)
CDialogAgent::HasSucceeded	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^bool CDialogAgent::HasSucceeded() {$/;"	f	class:CDialogAgent	signature:()
CDialogAgent::HasSucceeded	DMCore/Agents/DialogAgents/DialogAgent.h	/^    bool HasSucceeded();$/;"	p	class:CDialogAgent	access:public	signature:()
CDialogAgent::IncrementExecuteCounter	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^void CDialogAgent::IncrementExecuteCounter() {$/;"	f	class:CDialogAgent	signature:()
CDialogAgent::IncrementExecuteCounter	DMCore/Agents/DialogAgents/DialogAgent.h	/^    void IncrementExecuteCounter();$/;"	p	class:CDialogAgent	access:public	signature:()
CDialogAgent::IncrementTurnsInFocusCounter	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^void CDialogAgent::IncrementTurnsInFocusCounter() {$/;"	f	class:CDialogAgent	signature:()
CDialogAgent::IncrementTurnsInFocusCounter	DMCore/Agents/DialogAgents/DialogAgent.h	/^    void IncrementTurnsInFocusCounter();$/;"	p	class:CDialogAgent	access:public	signature:()
CDialogAgent::InheritParentInputConfiguration	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^void CDialogAgent::InheritParentInputConfiguration() {$/;"	f	class:CDialogAgent	signature:()
CDialogAgent::InheritParentInputConfiguration	DMCore/Agents/DialogAgents/DialogAgent.h	/^	void InheritParentInputConfiguration();$/;"	p	class:CDialogAgent	access:public	signature:()
CDialogAgent::Initialize	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^void CDialogAgent::Initialize() {	$/;"	f	class:CDialogAgent	signature:()
CDialogAgent::Initialize	DMCore/Agents/DialogAgents/DialogAgent.h	/^	virtual void Initialize();$/;"	p	class:CDialogAgent	access:public	signature:()
CDialogAgent::InputLineConfigurationInitString	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^string CDialogAgent::InputLineConfigurationInitString() {$/;"	f	class:CDialogAgent	signature:()
CDialogAgent::InputLineConfigurationInitString	DMCore/Agents/DialogAgents/DialogAgent.h	/^	virtual string InputLineConfigurationInitString();$/;"	p	class:CDialogAgent	access:public	signature:()
CDialogAgent::IsAMainTopic	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^bool CDialogAgent::IsAMainTopic() {$/;"	f	class:CDialogAgent	signature:()
CDialogAgent::IsAMainTopic	DMCore/Agents/DialogAgents/DialogAgent.h	/^	virtual bool IsAMainTopic();$/;"	p	class:CDialogAgent	access:public	signature:()
CDialogAgent::IsAgentPathBlocked	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^bool CDialogAgent::IsAgentPathBlocked() {$/;"	f	class:CDialogAgent	signature:()
CDialogAgent::IsAgentPathBlocked	DMCore/Agents/DialogAgents/DialogAgent.h	/^	bool IsAgentPathBlocked(); $/;"	p	class:CDialogAgent	access:public	signature:()
CDialogAgent::IsBlocked	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^bool CDialogAgent::IsBlocked() {$/;"	f	class:CDialogAgent	signature:()
CDialogAgent::IsBlocked	DMCore/Agents/DialogAgents/DialogAgent.h	/^	virtual bool IsBlocked();$/;"	p	class:CDialogAgent	access:public	signature:()
CDialogAgent::IsConversationSynchronous	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^bool CDialogAgent::IsConversationSynchronous() {$/;"	f	class:CDialogAgent	signature:()
CDialogAgent::IsConversationSynchronous	DMCore/Agents/DialogAgents/DialogAgent.h	/^    virtual bool IsConversationSynchronous();$/;"	p	class:CDialogAgent	access:public	signature:()
CDialogAgent::IsDTSAgent	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^bool CDialogAgent::IsDTSAgent() {$/;"	f	class:CDialogAgent	signature:()
CDialogAgent::IsDTSAgent	DMCore/Agents/DialogAgents/DialogAgent.h	/^    virtual bool IsDTSAgent();$/;"	p	class:CDialogAgent	access:public	signature:()
CDialogAgent::IsDynamicAgent	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^bool CDialogAgent::IsDynamicAgent() {$/;"	f	class:CDialogAgent	signature:()
CDialogAgent::IsDynamicAgent	DMCore/Agents/DialogAgents/DialogAgent.h	/^    bool IsDynamicAgent();$/;"	p	class:CDialogAgent	access:public	signature:()
CDialogAgent::IsExecutable	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^bool CDialogAgent::IsExecutable() {$/;"	f	class:CDialogAgent	signature:()
CDialogAgent::IsExecutable	DMCore/Agents/DialogAgents/DialogAgent.h	/^	virtual bool IsExecutable();$/;"	p	class:CDialogAgent	access:public	signature:()
CDialogAgent::LocalC	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^CConcept& CDialogAgent::LocalC(string sConceptName) {$/;"	f	class:CDialogAgent	signature:(string sConceptName)
CDialogAgent::LocalC	DMCore/Agents/DialogAgents/DialogAgent.h	/^	virtual CConcept& LocalC(string sConceptName);$/;"	p	class:CDialogAgent	access:public	signature:(string sConceptName)
CDialogAgent::OnCompletion	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^void CDialogAgent::OnCompletion() {$/;"	f	class:CDialogAgent	signature:()
CDialogAgent::OnCompletion	DMCore/Agents/DialogAgents/DialogAgent.h	/^	virtual void OnCompletion();$/;"	p	class:CDialogAgent	access:public	signature:()
CDialogAgent::OnCreation	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^void CDialogAgent::OnCreation() {$/;"	f	class:CDialogAgent	signature:()
CDialogAgent::OnCreation	DMCore/Agents/DialogAgents/DialogAgent.h	/^    virtual void OnCreation();$/;"	p	class:CDialogAgent	access:public	signature:()
CDialogAgent::OnDestruction	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^void CDialogAgent::OnDestruction() {$/;"	f	class:CDialogAgent	signature:()
CDialogAgent::OnDestruction	DMCore/Agents/DialogAgents/DialogAgent.h	/^    virtual void OnDestruction();$/;"	p	class:CDialogAgent	access:public	signature:()
CDialogAgent::OnInitialization	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^void CDialogAgent::OnInitialization() {$/;"	f	class:CDialogAgent	signature:()
CDialogAgent::OnInitialization	DMCore/Agents/DialogAgents/DialogAgent.h	/^	virtual void OnInitialization();$/;"	p	class:CDialogAgent	access:public	signature:()
CDialogAgent::PreconditionsSatisfied	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^bool CDialogAgent::PreconditionsSatisfied() {$/;"	f	class:CDialogAgent	signature:()
CDialogAgent::PreconditionsSatisfied	DMCore/Agents/DialogAgents/DialogAgent.h	/^	virtual bool PreconditionsSatisfied();$/;"	p	class:CDialogAgent	access:public	signature:()
CDialogAgent::Prompt	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^string CDialogAgent::Prompt() {$/;"	f	class:CDialogAgent	signature:()
CDialogAgent::Prompt	DMCore/Agents/DialogAgents/DialogAgent.h	/^	virtual string Prompt();$/;"	p	class:CDialogAgent	access:public	signature:()
CDialogAgent::ReOpen	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^void CDialogAgent::ReOpen() {$/;"	f	class:CDialogAgent	signature:()
CDialogAgent::ReOpen	DMCore/Agents/DialogAgents/DialogAgent.h	/^	virtual void ReOpen();$/;"	p	class:CDialogAgent	access:public	signature:()
CDialogAgent::ReOpenConcepts	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^void CDialogAgent::ReOpenConcepts() {$/;"	f	class:CDialogAgent	signature:()
CDialogAgent::ReOpenConcepts	DMCore/Agents/DialogAgents/DialogAgent.h	/^	virtual void ReOpenConcepts();$/;"	p	class:CDialogAgent	access:public	signature:()
CDialogAgent::ReOpenTopic	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^void CDialogAgent::ReOpenTopic() {$/;"	f	class:CDialogAgent	signature:()
CDialogAgent::ReOpenTopic	DMCore/Agents/DialogAgents/DialogAgent.h	/^	virtual void ReOpenTopic();$/;"	p	class:CDialogAgent	access:public	signature:()
CDialogAgent::Register	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^void CDialogAgent::Register() {$/;"	f	class:CDialogAgent	signature:()
CDialogAgent::Register	DMCore/Agents/DialogAgents/DialogAgent.h	/^	virtual void Register();$/;"	p	class:CDialogAgent	access:public	signature:()
CDialogAgent::RequiresFloor	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^bool CDialogAgent::RequiresFloor() {$/;"	f	class:CDialogAgent	signature:()
CDialogAgent::RequiresFloor	DMCore/Agents/DialogAgents/DialogAgent.h	/^    virtual bool RequiresFloor();$/;"	p	class:CDialogAgent	access:public	signature:()
CDialogAgent::Reset	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^void CDialogAgent::Reset() {$/;"	f	class:CDialogAgent	signature:()
CDialogAgent::Reset	DMCore/Agents/DialogAgents/DialogAgent.h	/^	virtual void Reset();$/;"	p	class:CDialogAgent	access:public	signature:()
CDialogAgent::ResetCompleted	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^void CDialogAgent::ResetCompleted() {$/;"	f	class:CDialogAgent	signature:()
CDialogAgent::ResetCompleted	DMCore/Agents/DialogAgents/DialogAgent.h	/^    void ResetCompleted();$/;"	p	class:CDialogAgent	access:public	signature:()
CDialogAgent::SetCompleted	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^void CDialogAgent::SetCompleted(TCompletionType ctACompletionType) {$/;"	f	class:CDialogAgent	signature:(TCompletionType ctACompletionType)
CDialogAgent::SetCompleted	DMCore/Agents/DialogAgents/DialogAgent.h	/^	void SetCompleted(TCompletionType ctACompletionType = ctSuccess);$/;"	p	class:CDialogAgent	access:public	signature:(TCompletionType ctACompletionType = ctSuccess)
CDialogAgent::SetContextAgent	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^void CDialogAgent::SetContextAgent(CDialogAgent* pdaAContextAgent) {$/;"	f	class:CDialogAgent	signature:(CDialogAgent* pdaAContextAgent)
CDialogAgent::SetContextAgent	DMCore/Agents/DialogAgents/DialogAgent.h	/^	void SetContextAgent(CDialogAgent* pdaAContextAgent);$/;"	p	class:CDialogAgent	access:public	signature:(CDialogAgent* pdaAContextAgent)
CDialogAgent::SetDynamicAgent	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^void CDialogAgent::SetDynamicAgent() {$/;"	f	class:CDialogAgent	signature:()
CDialogAgent::SetDynamicAgent	DMCore/Agents/DialogAgents/DialogAgent.h	/^    void SetDynamicAgent();$/;"	p	class:CDialogAgent	access:public	signature:()
CDialogAgent::SetDynamicAgentID	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^void CDialogAgent::SetDynamicAgentID(string sADynamicAgentID) {$/;"	f	class:CDialogAgent	signature:(string sADynamicAgentID)
CDialogAgent::SetDynamicAgentID	DMCore/Agents/DialogAgents/DialogAgent.h	/^    void SetDynamicAgentID(string sADynamicAgentID);$/;"	p	class:CDialogAgent	access:public	signature:(string sADynamicAgentID)
CDialogAgent::SetInputConfiguration	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^void CDialogAgent::SetInputConfiguration( string sConfiguration) {$/;"	f	class:CDialogAgent	signature:( string sConfiguration)
CDialogAgent::SetInputConfiguration	DMCore/Agents/DialogAgents/DialogAgent.h	/^	void SetInputConfiguration( string sConfiguration);$/;"	p	class:CDialogAgent	access:public	signature:( string sConfiguration)
CDialogAgent::SetInputConfigurationParameter	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^void CDialogAgent::SetInputConfigurationParameter( string sSlot, string sValue) {$/;"	f	class:CDialogAgent	signature:( string sSlot, string sValue)
CDialogAgent::SetInputConfigurationParameter	DMCore/Agents/DialogAgents/DialogAgent.h	/^	void SetInputConfigurationParameter( string sSlot, string sValue);$/;"	p	class:CDialogAgent	access:public	signature:( string sSlot, string sValue)
CDialogAgent::SetLastBindingsIndex	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^void CDialogAgent::SetLastBindingsIndex(int iBindingsIndex) {$/;"	f	class:CDialogAgent	signature:(int iBindingsIndex)
CDialogAgent::SetLastBindingsIndex	DMCore/Agents/DialogAgents/DialogAgent.h	/^    void SetLastBindingsIndex(int iBindingsIndex);$/;"	p	class:CDialogAgent	access:public	signature:(int iBindingsIndex)
CDialogAgent::SetLastExecutionIndex	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^void CDialogAgent::SetLastExecutionIndex(int iExecutionIndex) {$/;"	f	class:CDialogAgent	signature:(int iExecutionIndex)
CDialogAgent::SetLastExecutionIndex	DMCore/Agents/DialogAgents/DialogAgent.h	/^    void SetLastExecutionIndex(int iExecutionIndex);$/;"	p	class:CDialogAgent	access:public	signature:(int iExecutionIndex)
CDialogAgent::SetLastExecutionInputIndex	DMCore/Agents/DialogAgents/DialogAgent.h	/^    void SetLastExecutionInputIndex(int iInputIndex);$/;"	p	class:CDialogAgent	access:public	signature:(int iInputIndex)
CDialogAgent::SetLastInputIndex	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^void CDialogAgent::SetLastInputIndex(int iInputIndex) {$/;"	f	class:CDialogAgent	signature:(int iInputIndex)
CDialogAgent::SetLastInputIndex	DMCore/Agents/DialogAgents/DialogAgent.h	/^    void SetLastInputIndex(int iInputIndex);$/;"	p	class:CDialogAgent	access:public	signature:(int iInputIndex)
CDialogAgent::SetParent	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^void CDialogAgent::SetParent(CDialogAgent* pdaAParent) {$/;"	f	class:CDialogAgent	signature:(CDialogAgent* pdaAParent)
CDialogAgent::SetParent	DMCore/Agents/DialogAgents/DialogAgent.h	/^	void SetParent(CDialogAgent* pdaAParent);$/;"	p	class:CDialogAgent	access:public	signature:(CDialogAgent* pdaAParent)
CDialogAgent::SubAgents	DMCore/Agents/DialogAgents/DialogAgent.h	/^	TAgentsVector SubAgents;$/;"	m	class:CDialogAgent	access:protected
CDialogAgent::SuccessCriteriaSatisfied	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^bool CDialogAgent::SuccessCriteriaSatisfied() {$/;"	f	class:CDialogAgent	signature:()
CDialogAgent::SuccessCriteriaSatisfied	DMCore/Agents/DialogAgents/DialogAgent.h	/^	virtual bool SuccessCriteriaSatisfied();$/;"	p	class:CDialogAgent	access:public	signature:()
CDialogAgent::TimeoutPrompt	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^string CDialogAgent::TimeoutPrompt() {$/;"	f	class:CDialogAgent	signature:()
CDialogAgent::TimeoutPrompt	DMCore/Agents/DialogAgents/DialogAgent.h	/^	virtual string TimeoutPrompt();$/;"	p	class:CDialogAgent	access:public	signature:()
CDialogAgent::TriggeredByCommands	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^string CDialogAgent::TriggeredByCommands() {$/;"	f	class:CDialogAgent	signature:()
CDialogAgent::TriggeredByCommands	DMCore/Agents/DialogAgents/DialogAgent.h	/^	virtual string TriggeredByCommands();$/;"	p	class:CDialogAgent	access:public	signature:()
CDialogAgent::UnBlock	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^void CDialogAgent::UnBlock() {$/;"	f	class:CDialogAgent	signature:()
CDialogAgent::UnBlock	DMCore/Agents/DialogAgents/DialogAgent.h	/^	void UnBlock();$/;"	p	class:CDialogAgent	access:public	signature:()
CDialogAgent::Undo	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^void CDialogAgent::Undo() {$/;"	f	class:CDialogAgent	signature:()
CDialogAgent::Undo	DMCore/Agents/DialogAgents/DialogAgent.h	/^	virtual void Undo();$/;"	p	class:CDialogAgent	access:public	signature:()
CDialogAgent::UpdateName	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^void CDialogAgent::UpdateName() {$/;"	f	class:CDialogAgent	signature:()
CDialogAgent::UpdateName	DMCore/Agents/DialogAgents/DialogAgent.h	/^	void UpdateName();$/;"	p	class:CDialogAgent	access:public	signature:()
CDialogAgent::WasReOpened	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^bool CDialogAgent::WasReOpened() {$/;"	f	class:CDialogAgent	signature:()
CDialogAgent::WasReOpened	DMCore/Agents/DialogAgents/DialogAgent.h	/^    bool WasReOpened();$/;"	p	class:CDialogAgent	access:public	signature:()
CDialogAgent::WasReset	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^bool CDialogAgent::WasReset() {$/;"	f	class:CDialogAgent	signature:()
CDialogAgent::WasReset	DMCore/Agents/DialogAgents/DialogAgent.h	/^    bool WasReset();$/;"	p	class:CDialogAgent	access:public	signature:()
CDialogAgent::WhatCanISayPrompt	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^string CDialogAgent::WhatCanISayPrompt() {$/;"	f	class:CDialogAgent	signature:()
CDialogAgent::WhatCanISayPrompt	DMCore/Agents/DialogAgents/DialogAgent.h	/^	virtual string WhatCanISayPrompt();$/;"	p	class:CDialogAgent	access:public	signature:()
CDialogAgent::bBlocked	DMCore/Agents/DialogAgents/DialogAgent.h	/^	bool bBlocked;$/;"	m	class:CDialogAgent	access:protected
CDialogAgent::bCompleted	DMCore/Agents/DialogAgents/DialogAgent.h	/^	bool bCompleted;$/;"	m	class:CDialogAgent	access:protected
CDialogAgent::bDynamicAgent	DMCore/Agents/DialogAgents/DialogAgent.h	/^    bool bDynamicAgent;$/;"	m	class:CDialogAgent	access:protected
CDialogAgent::bInheritedParentInputConfiguration	DMCore/Agents/DialogAgents/DialogAgent.h	/^	bool bInheritedParentInputConfiguration;$/;"	m	class:CDialogAgent	access:protected
CDialogAgent::ctCompletionType	DMCore/Agents/DialogAgents/DialogAgent.h	/^    TCompletionType ctCompletionType;$/;"	m	class:CDialogAgent	access:protected
CDialogAgent::iExecuteCounter	DMCore/Agents/DialogAgents/DialogAgent.h	/^	int iExecuteCounter;$/;"	m	class:CDialogAgent	access:protected
CDialogAgent::iLastBindingsIndex	DMCore/Agents/DialogAgents/DialogAgent.h	/^    int iLastBindingsIndex;$/;"	m	class:CDialogAgent	access:protected
CDialogAgent::iLastExecutionIndex	DMCore/Agents/DialogAgents/DialogAgent.h	/^    int iLastExecutionIndex;$/;"	m	class:CDialogAgent	access:protected
CDialogAgent::iLastExecutionInputIndex	DMCore/Agents/DialogAgents/DialogAgent.h	/^	int iLastExecutionInputIndex;$/;"	m	class:CDialogAgent	access:protected
CDialogAgent::iLastInputIndex	DMCore/Agents/DialogAgents/DialogAgent.h	/^    int iLastInputIndex;$/;"	m	class:CDialogAgent	access:protected
CDialogAgent::iReOpenCounter	DMCore/Agents/DialogAgents/DialogAgent.h	/^    int iReOpenCounter;$/;"	m	class:CDialogAgent	access:protected
CDialogAgent::iResetCounter	DMCore/Agents/DialogAgents/DialogAgent.h	/^    int iResetCounter;$/;"	m	class:CDialogAgent	access:protected
CDialogAgent::iTurnsInFocusCounter	DMCore/Agents/DialogAgents/DialogAgent.h	/^    int iTurnsInFocusCounter;$/;"	m	class:CDialogAgent	access:protected
CDialogAgent::pGroundingModel	DMCore/Agents/DialogAgents/DialogAgent.h	/^    CGroundingModel* pGroundingModel;$/;"	m	class:CDialogAgent	access:protected
CDialogAgent::parseGrammarMapping	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^void CDialogAgent::parseGrammarMapping(string sConceptNames, $/;"	f	class:CDialogAgent	signature:(string sConceptNames, string sGrammarMapping, TConceptExpectationList& rcelExpectationList)
CDialogAgent::parseGrammarMapping	DMCore/Agents/DialogAgents/DialogAgent.h	/^	void parseGrammarMapping(string sConceptNames, string sGrammarMapping, $/;"	p	class:CDialogAgent	access:protected	signature:(string sConceptNames, string sGrammarMapping, TConceptExpectationList& rcelExpectationList)
CDialogAgent::pdaContextAgent	DMCore/Agents/DialogAgents/DialogAgent.h	/^	CDialogAgent* pdaContextAgent;$/;"	m	class:CDialogAgent	access:protected
CDialogAgent::pdaParent	DMCore/Agents/DialogAgents/DialogAgent.h	/^	CDialogAgent* pdaParent;$/;"	m	class:CDialogAgent	access:protected
CDialogAgent::s2sInputLineConfiguration	DMCore/Agents/DialogAgents/DialogAgent.h	/^	STRING2STRING s2sInputLineConfiguration;$/;"	m	class:CDialogAgent	access:protected
CDialogAgent::sDialogAgentName	DMCore/Agents/DialogAgents/DialogAgent.h	/^	string sDialogAgentName;	$/;"	m	class:CDialogAgent	access:protected
CDialogAgent::sDynamicAgentID	DMCore/Agents/DialogAgents/DialogAgent.h	/^    string sDynamicAgentID;$/;"	m	class:CDialogAgent	access:protected
CDialogAgent::sTriggerCommandsGroundingModelSpec	DMCore/Agents/DialogAgents/DialogAgent.h	/^    string sTriggerCommandsGroundingModelSpec;$/;"	m	class:CDialogAgent	access:protected
CDialogAgent::sTriggeredByCommands	DMCore/Agents/DialogAgents/DialogAgent.h	/^    string sTriggeredByCommands;$/;"	m	class:CDialogAgent	access:protected
CDialogAgent::~CDialogAgent	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^CDialogAgent::~CDialogAgent() {$/;"	f	class:CDialogAgent	signature:()
CDialogAgent::~CDialogAgent	DMCore/Agents/DialogAgents/DialogAgent.h	/^	virtual ~CDialogAgent();$/;"	p	class:CDialogAgent	access:public	signature:()
CExecutionHistory	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^class CExecutionHistory: public vector<TExecutionHistoryItem, allocator<TExecutionHistoryItem> > {$/;"	c	inherits:vector
CExternalPolicyInterface	DMCore/Grounding/GroundingModels/GroundingModel.cpp	/^CExternalPolicyInterface::CExternalPolicyInterface(string sAHost) : sSocket(1){$/;"	f	class:CExternalPolicyInterface	signature:(string sAHost)
CExternalPolicyInterface	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    CExternalPolicyInterface(string sAHost);$/;"	p	class:CExternalPolicyInterface	access:public	signature:(string sAHost)
CExternalPolicyInterface	DMCore/Grounding/GroundingModels/GroundingModel.h	/^class CExternalPolicyInterface {$/;"	c
CExternalPolicyInterface::CExternalPolicyInterface	DMCore/Grounding/GroundingModels/GroundingModel.cpp	/^CExternalPolicyInterface::CExternalPolicyInterface(string sAHost) : sSocket(1){$/;"	f	class:CExternalPolicyInterface	signature:(string sAHost)
CExternalPolicyInterface::CExternalPolicyInterface	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    CExternalPolicyInterface(string sAHost);$/;"	p	class:CExternalPolicyInterface	access:public	signature:(string sAHost)
CExternalPolicyInterface::ComputeSuggestedActionIndex	DMCore/Grounding/GroundingModels/GroundingModel.cpp	/^int CExternalPolicyInterface::ComputeSuggestedActionIndex(CState& rState) {$/;"	f	class:CExternalPolicyInterface	signature:(CState& rState)
CExternalPolicyInterface::ComputeSuggestedActionIndex	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    int ComputeSuggestedActionIndex(CState& rState);$/;"	p	class:CExternalPolicyInterface	access:public	signature:(CState& rState)
CExternalPolicyInterface::sSocket	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    unsigned long int sSocket;         \/\/ the socket connection$/;"	m	class:CExternalPolicyInterface	access:private
CExternalPolicyInterface::~CExternalPolicyInterface	DMCore/Grounding/GroundingModels/GroundingModel.cpp	/^CExternalPolicyInterface::~CExternalPolicyInterface() {$/;"	f	class:CExternalPolicyInterface	signature:()
CExternalPolicyInterface::~CExternalPolicyInterface	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    ~CExternalPolicyInterface();$/;"	p	class:CExternalPolicyInterface	access:public	signature:()
CFloat	DMCore/Concepts/FloatConcept.h	158;"	d
CFloatConcept	DMCore/Concepts/FloatConcept.cpp	/^CFloatConcept::CFloatConcept(string sAName, TConceptSource csAConceptSource):$/;"	f	class:CFloatConcept	signature:(string sAName, TConceptSource csAConceptSource)
CFloatConcept	DMCore/Concepts/FloatConcept.cpp	/^CFloatConcept::CFloatConcept(string sAName, float fAValue, float fAConfidence,$/;"	f	class:CFloatConcept	signature:(string sAName, float fAValue, float fAConfidence, TConceptSource csAConceptSource)
CFloatConcept	DMCore/Concepts/FloatConcept.h	/^	CFloatConcept(string sAName = "NONAME", $/;"	p	class:CFloatConcept	access:public	signature:(string sAName = Ó, TConceptSource csAConceptSource = csUser)
CFloatConcept	DMCore/Concepts/FloatConcept.h	/^	CFloatConcept(string sAName, float fAValue, float fAConfidence = 1.0,$/;"	p	class:CFloatConcept	access:public	signature:(string sAName, float fAValue, float fAConfidence = 1.0, TConceptSource csAConceptSource = csUser)
CFloatConcept	DMCore/Concepts/FloatConcept.h	/^class CFloatConcept: public CConcept {$/;"	c	inherits:CConcept
CFloatConcept::CFloatConcept	DMCore/Concepts/FloatConcept.cpp	/^CFloatConcept::CFloatConcept(string sAName, TConceptSource csAConceptSource):$/;"	f	class:CFloatConcept	signature:(string sAName, TConceptSource csAConceptSource)
CFloatConcept::CFloatConcept	DMCore/Concepts/FloatConcept.cpp	/^CFloatConcept::CFloatConcept(string sAName, float fAValue, float fAConfidence,$/;"	f	class:CFloatConcept	signature:(string sAName, float fAValue, float fAConfidence, TConceptSource csAConceptSource)
CFloatConcept::CFloatConcept	DMCore/Concepts/FloatConcept.h	/^	CFloatConcept(string sAName = "NONAME", $/;"	p	class:CFloatConcept	access:public	signature:(string sAName = Ó, TConceptSource csAConceptSource = csUser)
CFloatConcept::CFloatConcept	DMCore/Concepts/FloatConcept.h	/^	CFloatConcept(string sAName, float fAValue, float fAConfidence = 1.0,$/;"	p	class:CFloatConcept	access:public	signature:(string sAName, float fAValue, float fAConfidence = 1.0, TConceptSource csAConceptSource = csUser)
CFloatConcept::EmptyClone	DMCore/Concepts/FloatConcept.cpp	/^CConcept* CFloatConcept::EmptyClone() {$/;"	f	class:CFloatConcept	signature:()
CFloatConcept::EmptyClone	DMCore/Concepts/FloatConcept.h	/^    virtual CConcept* EmptyClone();$/;"	p	class:CFloatConcept	access:public	signature:()
CFloatConcept::HypFactory	DMCore/Concepts/FloatConcept.cpp	/^CHyp* CFloatConcept::HypFactory() {$/;"	f	class:CFloatConcept	signature:()
CFloatConcept::HypFactory	DMCore/Concepts/FloatConcept.h	/^    virtual CHyp* HypFactory();$/;"	p	class:CFloatConcept	access:public	signature:()
CFloatConcept::operator =	DMCore/Concepts/FloatConcept.cpp	/^CConcept& CFloatConcept::operator = (bool bAValue) {$/;"	f	class:CFloatConcept	signature:(bool bAValue)
CFloatConcept::operator =	DMCore/Concepts/FloatConcept.cpp	/^CConcept& CFloatConcept::operator = (double dAValue) {$/;"	f	class:CFloatConcept	signature:(double dAValue)
CFloatConcept::operator =	DMCore/Concepts/FloatConcept.cpp	/^CConcept& CFloatConcept::operator = (float fAValue) {$/;"	f	class:CFloatConcept	signature:(float fAValue)
CFloatConcept::operator =	DMCore/Concepts/FloatConcept.cpp	/^CConcept& CFloatConcept::operator = (int iAValue) {$/;"	f	class:CFloatConcept	signature:(int iAValue)
CFloatConcept::operator =	DMCore/Concepts/FloatConcept.h	/^	virtual CConcept& operator = (bool bAValue);$/;"	p	class:CFloatConcept	access:public	signature:(bool bAValue)
CFloatConcept::operator =	DMCore/Concepts/FloatConcept.h	/^	virtual CConcept& operator = (double dAValue);$/;"	p	class:CFloatConcept	access:public	signature:(double dAValue)
CFloatConcept::operator =	DMCore/Concepts/FloatConcept.h	/^	virtual CConcept& operator = (float fAValue);$/;"	p	class:CFloatConcept	access:public	signature:(float fAValue)
CFloatConcept::operator =	DMCore/Concepts/FloatConcept.h	/^	virtual CConcept& operator = (int iAValue);$/;"	p	class:CFloatConcept	access:public	signature:(int iAValue)
CFloatConcept::operator bool	DMCore/Concepts/FloatConcept.cpp	/^CFloatConcept::operator bool() {$/;"	f	class:CFloatConcept	signature:()
CFloatConcept::operator bool	DMCore/Concepts/FloatConcept.h	/^	virtual operator bool();$/;"	p	class:CFloatConcept	access:public	signature:()
CFloatConcept::operator float	DMCore/Concepts/FloatConcept.cpp	/^CFloatConcept::operator float() {$/;"	f	class:CFloatConcept	signature:()
CFloatConcept::operator float	DMCore/Concepts/FloatConcept.h	/^	virtual operator float();$/;"	p	class:CFloatConcept	access:public	signature:()
CFloatConcept::operator int	DMCore/Concepts/FloatConcept.cpp	/^CFloatConcept::operator int() {$/;"	f	class:CFloatConcept	signature:()
CFloatConcept::operator int	DMCore/Concepts/FloatConcept.h	/^    virtual operator int();$/;"	p	class:CFloatConcept	access:public	signature:()
CFloatHyp	DMCore/Concepts/FloatConcept.cpp	/^CFloatHyp::CFloatHyp() {$/;"	f	class:CFloatHyp	signature:()
CFloatHyp	DMCore/Concepts/FloatConcept.cpp	/^CFloatHyp::CFloatHyp(CFloatHyp& rAFloatHyp) {$/;"	f	class:CFloatHyp	signature:(CFloatHyp& rAFloatHyp)
CFloatHyp	DMCore/Concepts/FloatConcept.cpp	/^CFloatHyp::CFloatHyp(float fAValue, float fAConfidence) {$/;"	f	class:CFloatHyp	signature:(float fAValue, float fAConfidence)
CFloatHyp	DMCore/Concepts/FloatConcept.h	/^	CFloatHyp();$/;"	p	class:CFloatHyp	access:public	signature:()
CFloatHyp	DMCore/Concepts/FloatConcept.h	/^	CFloatHyp(CFloatHyp& rAFloatHyp);$/;"	p	class:CFloatHyp	access:public	signature:(CFloatHyp& rAFloatHyp)
CFloatHyp	DMCore/Concepts/FloatConcept.h	/^	CFloatHyp(float fAValue, float fAConfidence = 1.0);$/;"	p	class:CFloatHyp	access:public	signature:(float fAValue, float fAConfidence = 1.0)
CFloatHyp	DMCore/Concepts/FloatConcept.h	/^class CFloatHyp : public CHyp {$/;"	c	inherits:CHyp
CFloatHyp::CFloatHyp	DMCore/Concepts/FloatConcept.cpp	/^CFloatHyp::CFloatHyp() {$/;"	f	class:CFloatHyp	signature:()
CFloatHyp::CFloatHyp	DMCore/Concepts/FloatConcept.cpp	/^CFloatHyp::CFloatHyp(CFloatHyp& rAFloatHyp) {$/;"	f	class:CFloatHyp	signature:(CFloatHyp& rAFloatHyp)
CFloatHyp::CFloatHyp	DMCore/Concepts/FloatConcept.cpp	/^CFloatHyp::CFloatHyp(float fAValue, float fAConfidence) {$/;"	f	class:CFloatHyp	signature:(float fAValue, float fAConfidence)
CFloatHyp::CFloatHyp	DMCore/Concepts/FloatConcept.h	/^	CFloatHyp();$/;"	p	class:CFloatHyp	access:public	signature:()
CFloatHyp::CFloatHyp	DMCore/Concepts/FloatConcept.h	/^	CFloatHyp(CFloatHyp& rAFloatHyp);$/;"	p	class:CFloatHyp	access:public	signature:(CFloatHyp& rAFloatHyp)
CFloatHyp::CFloatHyp	DMCore/Concepts/FloatConcept.h	/^	CFloatHyp(float fAValue, float fAConfidence = 1.0);$/;"	p	class:CFloatHyp	access:public	signature:(float fAValue, float fAConfidence = 1.0)
CFloatHyp::FromString	DMCore/Concepts/FloatConcept.cpp	/^void CFloatHyp::FromString(string sString) {$/;"	f	class:CFloatHyp	signature:(string sString)
CFloatHyp::FromString	DMCore/Concepts/FloatConcept.h	/^	virtual void FromString(string sString);$/;"	p	class:CFloatHyp	access:public	signature:(string sString)
CFloatHyp::ToString	DMCore/Concepts/FloatConcept.cpp	/^string CFloatHyp::ToString() {$/;"	f	class:CFloatHyp	signature:()
CFloatHyp::ToString	DMCore/Concepts/FloatConcept.h	/^	virtual string ToString();$/;"	p	class:CFloatHyp	access:public	signature:()
CFloatHyp::ValueToString	DMCore/Concepts/FloatConcept.cpp	/^string CFloatHyp::ValueToString() {$/;"	f	class:CFloatHyp	signature:()
CFloatHyp::ValueToString	DMCore/Concepts/FloatConcept.h	/^	virtual string ValueToString();$/;"	p	class:CFloatHyp	access:public	signature:()
CFloatHyp::fValue	DMCore/Concepts/FloatConcept.h	/^	float fValue;                   \/\/ the actual value$/;"	m	class:CFloatHyp	access:protected
CFloatHyp::operator <	DMCore/Concepts/FloatConcept.cpp	/^bool CFloatHyp::operator < (CHyp& rAHyp) {$/;"	f	class:CFloatHyp	signature:(CHyp& rAHyp)
CFloatHyp::operator <	DMCore/Concepts/FloatConcept.h	/^    virtual bool operator < (CHyp& rAHyp);$/;"	p	class:CFloatHyp	access:public	signature:(CHyp& rAHyp)
CFloatHyp::operator <=	DMCore/Concepts/FloatConcept.cpp	/^bool CFloatHyp::operator <= (CHyp& rAHyp) {$/;"	f	class:CFloatHyp	signature:(CHyp& rAHyp)
CFloatHyp::operator <=	DMCore/Concepts/FloatConcept.h	/^    virtual bool operator <= (CHyp& rAHyp);$/;"	p	class:CFloatHyp	access:public	signature:(CHyp& rAHyp)
CFloatHyp::operator =	DMCore/Concepts/FloatConcept.cpp	/^CHyp& CFloatHyp::operator = (CHyp& rAHyp) {$/;"	f	class:CFloatHyp	signature:(CHyp& rAHyp)
CFloatHyp::operator =	DMCore/Concepts/FloatConcept.cpp	/^CHyp& CFloatHyp::operator = (float fAValue) {$/;"	f	class:CFloatHyp	signature:(float fAValue)
CFloatHyp::operator =	DMCore/Concepts/FloatConcept.h	/^	CHyp& operator = (float fAValue);$/;"	p	class:CFloatHyp	access:public	signature:(float fAValue)
CFloatHyp::operator =	DMCore/Concepts/FloatConcept.h	/^	virtual CHyp& operator = (CHyp& rAHyp);$/;"	p	class:CFloatHyp	access:public	signature:(CHyp& rAHyp)
CFloatHyp::operator ==	DMCore/Concepts/FloatConcept.cpp	/^bool CFloatHyp::operator == (CHyp& rAHyp) {$/;"	f	class:CFloatHyp	signature:(CHyp& rAHyp)
CFloatHyp::operator ==	DMCore/Concepts/FloatConcept.h	/^    virtual bool operator == (CHyp& rAHyp);$/;"	p	class:CFloatHyp	access:public	signature:(CHyp& rAHyp)
CFloatHyp::operator >	DMCore/Concepts/FloatConcept.cpp	/^bool CFloatHyp::operator > (CHyp& rAHyp) {$/;"	f	class:CFloatHyp	signature:(CHyp& rAHyp)
CFloatHyp::operator >	DMCore/Concepts/FloatConcept.h	/^    virtual bool operator > (CHyp& rAHyp);$/;"	p	class:CFloatHyp	access:public	signature:(CHyp& rAHyp)
CFloatHyp::operator >=	DMCore/Concepts/FloatConcept.cpp	/^bool CFloatHyp::operator >= (CHyp& rAHyp) {$/;"	f	class:CFloatHyp	signature:(CHyp& rAHyp)
CFloatHyp::operator >=	DMCore/Concepts/FloatConcept.h	/^    virtual bool operator >= (CHyp& rAHyp);$/;"	p	class:CFloatHyp	access:public	signature:(CHyp& rAHyp)
CFloatHyp::operator []	DMCore/Concepts/FloatConcept.cpp	/^CHyp* CFloatHyp::operator [] (string sItem) {$/;"	f	class:CFloatHyp	signature:(string sItem)
CFloatHyp::operator []	DMCore/Concepts/FloatConcept.h	/^    virtual CHyp* operator [](string sItem);$/;"	p	class:CFloatHyp	access:public	signature:(string sItem)
CFrameConcept	DMCore/Concepts/FrameConcept.cpp	/^CFrameConcept::CFrameConcept(string sAName, TConceptSource csAConceptSource): $/;"	f	class:CFrameConcept	signature:(string sAName, TConceptSource csAConceptSource)
CFrameConcept	DMCore/Concepts/FrameConcept.h	/^	CFrameConcept(CStructConcept& rAFrameConcept);$/;"	p	class:CFrameConcept	access:public	signature:(CStructConcept& rAFrameConcept)
CFrameConcept	DMCore/Concepts/FrameConcept.h	/^	CFrameConcept(string sAName = "NONAME", $/;"	p	class:CFrameConcept	access:public	signature:(string sAName = Ó, TConceptSource csAConceptSource = csUser)
CFrameConcept	DMCore/Concepts/FrameConcept.h	/^class CFrameConcept: public CStructConcept {$/;"	c	inherits:CStructConcept
CFrameConcept::AddHyp	DMCore/Concepts/FrameConcept.cpp	/^int CFrameConcept::AddHyp(CHyp* pAHyp) {$/;"	f	class:CFrameConcept	signature:(CHyp* pAHyp)
CFrameConcept::AddHyp	DMCore/Concepts/FrameConcept.h	/^    virtual int AddHyp(CHyp* pAHyp);$/;"	p	class:CFrameConcept	access:public	signature:(CHyp* pAHyp)
CFrameConcept::AddNewHyp	DMCore/Concepts/FrameConcept.cpp	/^int CFrameConcept::AddNewHyp() {$/;"	f	class:CFrameConcept	signature:()
CFrameConcept::AddNewHyp	DMCore/Concepts/FrameConcept.h	/^    virtual int AddNewHyp();$/;"	p	class:CFrameConcept	access:public	signature:()
CFrameConcept::AddNullHyp	DMCore/Concepts/FrameConcept.cpp	/^int CFrameConcept::AddNullHyp() {$/;"	f	class:CFrameConcept	signature:()
CFrameConcept::AddNullHyp	DMCore/Concepts/FrameConcept.h	/^    virtual int AddNullHyp();$/;"	p	class:CFrameConcept	access:public	signature:()
CFrameConcept::CFrameConcept	DMCore/Concepts/FrameConcept.cpp	/^CFrameConcept::CFrameConcept(string sAName, TConceptSource csAConceptSource): $/;"	f	class:CFrameConcept	signature:(string sAName, TConceptSource csAConceptSource)
CFrameConcept::CFrameConcept	DMCore/Concepts/FrameConcept.h	/^	CFrameConcept(CStructConcept& rAFrameConcept);$/;"	p	class:CFrameConcept	access:public	signature:(CStructConcept& rAFrameConcept)
CFrameConcept::CFrameConcept	DMCore/Concepts/FrameConcept.h	/^	CFrameConcept(string sAName = "NONAME", $/;"	p	class:CFrameConcept	access:public	signature:(string sAName = Ó, TConceptSource csAConceptSource = csUser)
CFrameConcept::Clear	DMCore/Concepts/FrameConcept.cpp	/^void CFrameConcept::Clear() {$/;"	f	class:CFrameConcept	signature:()
CFrameConcept::Clear	DMCore/Concepts/FrameConcept.h	/^    virtual void Clear();$/;"	p	class:CFrameConcept	access:public	signature:()
CFrameConcept::ClearCurrentHypSet	DMCore/Concepts/FrameConcept.cpp	/^void CFrameConcept::ClearCurrentHypSet() {$/;"	f	class:CFrameConcept	signature:()
CFrameConcept::ClearCurrentHypSet	DMCore/Concepts/FrameConcept.h	/^    virtual void ClearCurrentHypSet();$/;"	p	class:CFrameConcept	access:public	signature:()
CFrameConcept::ClearCurrentValue	DMCore/Concepts/FrameConcept.cpp	/^void CFrameConcept::ClearCurrentValue() {$/;"	f	class:CFrameConcept	signature:()
CFrameConcept::ClearCurrentValue	DMCore/Concepts/FrameConcept.h	/^    virtual void ClearCurrentValue();$/;"	p	class:CFrameConcept	access:public	signature:()
CFrameConcept::ClearExplicitlyConfirmedHyp	DMCore/Concepts/FrameConcept.cpp	/^void CFrameConcept::ClearExplicitlyConfirmedHyp() {$/;"	f	class:CFrameConcept	signature:()
CFrameConcept::ClearExplicitlyConfirmedHyp	DMCore/Concepts/FrameConcept.h	/^    virtual void ClearExplicitlyConfirmedHyp();    $/;"	p	class:CFrameConcept	access:public	signature:()
CFrameConcept::ClearExplicitlyDisconfirmedHyp	DMCore/Concepts/FrameConcept.cpp	/^void CFrameConcept::ClearExplicitlyDisconfirmedHyp() {$/;"	f	class:CFrameConcept	signature:()
CFrameConcept::ClearExplicitlyDisconfirmedHyp	DMCore/Concepts/FrameConcept.h	/^    virtual void ClearExplicitlyDisconfirmedHyp();    $/;"	p	class:CFrameConcept	access:public	signature:()
CFrameConcept::ClearHistory	DMCore/Concepts/FrameConcept.cpp	/^void CFrameConcept::ClearHistory() {$/;"	f	class:CFrameConcept	signature:()
CFrameConcept::ClearHistory	DMCore/Concepts/FrameConcept.h	/^    virtual void ClearHistory();$/;"	p	class:CFrameConcept	access:public	signature:()
CFrameConcept::CopyCurrentHypSetFrom	DMCore/Concepts/FrameConcept.cpp	/^void CFrameConcept::CopyCurrentHypSetFrom(CConcept& rAConcept) {$/;"	f	class:CFrameConcept	signature:(CConcept& rAConcept)
CFrameConcept::CopyCurrentHypSetFrom	DMCore/Concepts/FrameConcept.h	/^    virtual void CopyCurrentHypSetFrom(CConcept& rAConcept);$/;"	p	class:CFrameConcept	access:public	signature:(CConcept& rAConcept)
CFrameConcept::CreateGroundingModel	DMCore/Concepts/FrameConcept.cpp	/^void CFrameConcept::CreateGroundingModel(string sGroundingModelSpec) {$/;"	f	class:CFrameConcept	signature:(string sGroundingModelSpec)
CFrameConcept::CreateGroundingModel	DMCore/Concepts/FrameConcept.h	/^    virtual void CreateGroundingModel(string sGroundingModelSpec);$/;"	p	class:CFrameConcept	access:public	signature:(string sGroundingModelSpec)
CFrameConcept::CreateMergedHistoryConcept	DMCore/Concepts/FrameConcept.cpp	/^CConcept* CFrameConcept::CreateMergedHistoryConcept() {$/;"	f	class:CFrameConcept	signature:()
CFrameConcept::CreateMergedHistoryConcept	DMCore/Concepts/FrameConcept.h	/^    virtual CConcept* CreateMergedHistoryConcept();$/;"	p	class:CFrameConcept	access:public	signature:()
CFrameConcept::DeleteHyp	DMCore/Concepts/FrameConcept.cpp	/^void CFrameConcept::DeleteHyp(int iIndex) {$/;"	f	class:CFrameConcept	signature:(int iIndex)
CFrameConcept::DeleteHyp	DMCore/Concepts/FrameConcept.h	/^	virtual void DeleteHyp(int iIndex);$/;"	p	class:CFrameConcept	access:public	signature:(int iIndex)
CFrameConcept::GetHyp	DMCore/Concepts/FrameConcept.cpp	/^CHyp* CFrameConcept::GetHyp(int iIndex) {$/;"	f	class:CFrameConcept	signature:(int iIndex)
CFrameConcept::GetHyp	DMCore/Concepts/FrameConcept.h	/^	virtual CHyp* GetHyp(int iIndex);$/;"	p	class:CFrameConcept	access:public	signature:(int iIndex)
CFrameConcept::GetHypConfidence	DMCore/Concepts/FrameConcept.cpp	/^float CFrameConcept::GetHypConfidence(int iIndex) {$/;"	f	class:CFrameConcept	signature:(int iIndex)
CFrameConcept::GetHypConfidence	DMCore/Concepts/FrameConcept.h	/^	virtual float GetHypConfidence(int iIndex);$/;"	p	class:CFrameConcept	access:public	signature:(int iIndex)
CFrameConcept::GetHypIndex	DMCore/Concepts/FrameConcept.cpp	/^int CFrameConcept::GetHypIndex(CHyp* pHypIndex) {$/;"	f	class:CFrameConcept	signature:(CHyp* pHypIndex)
CFrameConcept::GetHypIndex	DMCore/Concepts/FrameConcept.h	/^    virtual int GetHypIndex(CHyp* pHyp);$/;"	p	class:CFrameConcept	access:public	signature:(CHyp* pHyp)
CFrameConcept::GetInvalidatedFlag	DMCore/Concepts/FrameConcept.cpp	/^bool CFrameConcept::GetInvalidatedFlag() {$/;"	f	class:CFrameConcept	signature:()
CFrameConcept::GetInvalidatedFlag	DMCore/Concepts/FrameConcept.h	/^	virtual bool GetInvalidatedFlag();$/;"	p	class:CFrameConcept	access:public	signature:()
CFrameConcept::GetNumHyps	DMCore/Concepts/FrameConcept.cpp	/^int CFrameConcept::GetNumHyps() {$/;"	f	class:CFrameConcept	signature:()
CFrameConcept::GetNumHyps	DMCore/Concepts/FrameConcept.h	/^	virtual int GetNumHyps();$/;"	p	class:CFrameConcept	access:public	signature:()
CFrameConcept::GetNumValidHyps	DMCore/Concepts/FrameConcept.cpp	/^int CFrameConcept::GetNumValidHyps() {$/;"	f	class:CFrameConcept	signature:()
CFrameConcept::GetNumValidHyps	DMCore/Concepts/FrameConcept.h	/^	virtual int GetNumValidHyps();$/;"	p	class:CFrameConcept	access:public	signature:()
CFrameConcept::GetRestoredForGroundingFlag	DMCore/Concepts/FrameConcept.cpp	/^bool CFrameConcept::GetRestoredForGroundingFlag() {$/;"	f	class:CFrameConcept	signature:()
CFrameConcept::GetRestoredForGroundingFlag	DMCore/Concepts/FrameConcept.h	/^	virtual bool GetRestoredForGroundingFlag();$/;"	p	class:CFrameConcept	access:public	signature:()
CFrameConcept::GetTopHyp	DMCore/Concepts/FrameConcept.cpp	/^CHyp* CFrameConcept::GetTopHyp() {$/;"	f	class:CFrameConcept	signature:()
CFrameConcept::GetTopHyp	DMCore/Concepts/FrameConcept.h	/^    virtual CHyp* GetTopHyp();$/;"	p	class:CFrameConcept	access:public	signature:()
CFrameConcept::GetTopHypConfidence	DMCore/Concepts/FrameConcept.cpp	/^float CFrameConcept::GetTopHypConfidence() {$/;"	f	class:CFrameConcept	signature:()
CFrameConcept::GetTopHypConfidence	DMCore/Concepts/FrameConcept.h	/^    virtual float GetTopHypConfidence();$/;"	p	class:CFrameConcept	access:public	signature:()
CFrameConcept::GetTopHypIndex	DMCore/Concepts/FrameConcept.cpp	/^int CFrameConcept::GetTopHypIndex() {$/;"	f	class:CFrameConcept	signature:()
CFrameConcept::GetTopHypIndex	DMCore/Concepts/FrameConcept.h	/^    virtual int GetTopHypIndex();$/;"	p	class:CFrameConcept	access:public	signature:()
CFrameConcept::GetTurnLastUpdated	DMCore/Concepts/FrameConcept.cpp	/^int CFrameConcept::GetTurnLastUpdated() {$/;"	f	class:CFrameConcept	signature:()
CFrameConcept::GetTurnLastUpdated	DMCore/Concepts/FrameConcept.h	/^    virtual int GetTurnLastUpdated();$/;"	p	class:CFrameConcept	access:public	signature:()
CFrameConcept::GroundedHypToString	DMCore/Concepts/FrameConcept.cpp	/^string CFrameConcept::GroundedHypToString() {$/;"	f	class:CFrameConcept	signature:()
CFrameConcept::GroundedHypToString	DMCore/Concepts/FrameConcept.h	/^	virtual string GroundedHypToString();$/;"	p	class:CFrameConcept	access:public	signature:()
CFrameConcept::HypFactory	DMCore/Concepts/FrameConcept.cpp	/^CHyp* CFrameConcept::HypFactory() {$/;"	f	class:CFrameConcept	signature:()
CFrameConcept::HypFactory	DMCore/Concepts/FrameConcept.h	/^    virtual CHyp* HypFactory();$/;"	p	class:CFrameConcept	access:public	signature:()
CFrameConcept::HypSetToString	DMCore/Concepts/FrameConcept.cpp	/^string CFrameConcept::HypSetToString() {$/;"	f	class:CFrameConcept	signature:()
CFrameConcept::HypSetToString	DMCore/Concepts/FrameConcept.h	/^	virtual string HypSetToString();$/;"	p	class:CFrameConcept	access:public	signature:()
CFrameConcept::IsAvailable	DMCore/Concepts/FrameConcept.cpp	/^bool CFrameConcept::IsAvailable() {$/;"	f	class:CFrameConcept	signature:()
CFrameConcept::IsAvailable	DMCore/Concepts/FrameConcept.h	/^	virtual bool IsAvailable();$/;"	p	class:CFrameConcept	access:public	signature:()
CFrameConcept::IsAvailableAndGrounded	DMCore/Concepts/FrameConcept.cpp	/^bool CFrameConcept::IsAvailableAndGrounded() {$/;"	f	class:CFrameConcept	signature:()
CFrameConcept::IsAvailableAndGrounded	DMCore/Concepts/FrameConcept.h	/^	virtual bool IsAvailableAndGrounded();$/;"	p	class:CFrameConcept	access:public	signature:()
CFrameConcept::IsUndergoingGrounding	DMCore/Concepts/FrameConcept.cpp	/^bool CFrameConcept::IsUndergoingGrounding() { 	$/;"	f	class:CFrameConcept	signature:()
CFrameConcept::IsUndergoingGrounding	DMCore/Concepts/FrameConcept.h	/^    virtual bool IsUndergoingGrounding();$/;"	p	class:CFrameConcept	access:public	signature:()
CFrameConcept::IsUpdated	DMCore/Concepts/FrameConcept.cpp	/^bool CFrameConcept::IsUpdated() {	$/;"	f	class:CFrameConcept	signature:()
CFrameConcept::IsUpdated	DMCore/Concepts/FrameConcept.h	/^    virtual bool IsUpdated();$/;"	p	class:CFrameConcept	access:public	signature:()
CFrameConcept::IsUpdatedAndGrounded	DMCore/Concepts/FrameConcept.cpp	/^bool CFrameConcept::IsUpdatedAndGrounded() {$/;"	f	class:CFrameConcept	signature:()
CFrameConcept::IsUpdatedAndGrounded	DMCore/Concepts/FrameConcept.h	/^    virtual bool IsUpdatedAndGrounded();$/;"	p	class:CFrameConcept	access:public	signature:()
CFrameConcept::IsValidHyp	DMCore/Concepts/FrameConcept.cpp	/^bool CFrameConcept::IsValidHyp(int iIndex) {$/;"	f	class:CFrameConcept	signature:(int iIndex)
CFrameConcept::IsValidHyp	DMCore/Concepts/FrameConcept.h	/^	virtual bool IsValidHyp(int iIndex);$/;"	p	class:CFrameConcept	access:public	signature:(int iIndex)
CFrameConcept::MergeHistory	DMCore/Concepts/FrameConcept.cpp	/^void CFrameConcept::MergeHistory() {$/;"	f	class:CFrameConcept	signature:()
CFrameConcept::MergeHistory	DMCore/Concepts/FrameConcept.h	/^    virtual void MergeHistory();$/;"	p	class:CFrameConcept	access:public	signature:()
CFrameConcept::ReOpen	DMCore/Concepts/FrameConcept.cpp	/^void CFrameConcept::ReOpen() {$/;"	f	class:CFrameConcept	signature:()
CFrameConcept::ReOpen	DMCore/Concepts/FrameConcept.h	/^    virtual void ReOpen();$/;"	p	class:CFrameConcept	access:public	signature:()
CFrameConcept::SetHyp	DMCore/Concepts/FrameConcept.cpp	/^void CFrameConcept::SetHyp(int iIndex, CHyp* pHyp) {$/;"	f	class:CFrameConcept	signature:(int iIndex, CHyp* pHyp)
CFrameConcept::SetHyp	DMCore/Concepts/FrameConcept.h	/^    virtual void SetHyp(int iIndex, CHyp* pHyp);$/;"	p	class:CFrameConcept	access:public	signature:(int iIndex, CHyp* pHyp)
CFrameConcept::SetInvalidatedFlag	DMCore/Concepts/FrameConcept.cpp	/^void CFrameConcept::SetInvalidatedFlag(bool bAInvalidated) {$/;"	f	class:CFrameConcept	signature:(bool bAInvalidated)
CFrameConcept::SetInvalidatedFlag	DMCore/Concepts/FrameConcept.h	/^	virtual void SetInvalidatedFlag(bool bAInvalidated = true);$/;"	p	class:CFrameConcept	access:public	signature:(bool bAInvalidated = true)
CFrameConcept::SetNullHyp	DMCore/Concepts/FrameConcept.cpp	/^void CFrameConcept::SetNullHyp(int iIndex) {$/;"	f	class:CFrameConcept	signature:(int iIndex)
CFrameConcept::SetNullHyp	DMCore/Concepts/FrameConcept.h	/^    virtual void SetNullHyp(int iIndex);$/;"	p	class:CFrameConcept	access:public	signature:(int iIndex)
CFrameConcept::SetRestoredForGroundingFlag	DMCore/Concepts/FrameConcept.cpp	/^void CFrameConcept::SetRestoredForGroundingFlag(bool bARestoredForGrounding) {$/;"	f	class:CFrameConcept	signature:(bool bARestoredForGrounding)
CFrameConcept::SetRestoredForGroundingFlag	DMCore/Concepts/FrameConcept.h	/^	virtual void SetRestoredForGroundingFlag($/;"	p	class:CFrameConcept	access:public	signature:( bool bARestoredForGrounding = true)
CFrameConcept::TopHypToString	DMCore/Concepts/FrameConcept.cpp	/^string CFrameConcept::TopHypToString() {$/;"	f	class:CFrameConcept	signature:()
CFrameConcept::TopHypToString	DMCore/Concepts/FrameConcept.h	/^	virtual string TopHypToString();$/;"	p	class:CFrameConcept	access:public	signature:()
CFrameConcept::Update_Calista_CollapseToMode	DMCore/Concepts/FrameConcept.cpp	/^void CFrameConcept::Update_Calista_CollapseToMode(void* pUpdateData) {$/;"	f	class:CFrameConcept	signature:(void* pUpdateData)
CFrameConcept::Update_Calista_CollapseToMode	DMCore/Concepts/FrameConcept.h	/^    virtual void Update_Calista_CollapseToMode(void* pUpdateData);$/;"	p	class:CFrameConcept	access:public	signature:(void* pUpdateData)
CFrameConcept::Update_Calista_UpdateWithConcept	DMCore/Concepts/FrameConcept.cpp	/^void CFrameConcept::Update_Calista_UpdateWithConcept(void* pUpdateData) {$/;"	f	class:CFrameConcept	signature:(void* pUpdateData)
CFrameConcept::Update_Calista_UpdateWithConcept	DMCore/Concepts/FrameConcept.h	/^    virtual void Update_Calista_UpdateWithConcept(void* pUpdateData);$/;"	p	class:CFrameConcept	access:public	signature:(void* pUpdateData)
CFrameConcept::Update_NPU_AssignFromString	DMCore/Concepts/FrameConcept.cpp	/^void CFrameConcept::Update_NPU_AssignFromString(void* pUpdateData) {$/;"	f	class:CFrameConcept	signature:(void* pUpdateData)
CFrameConcept::Update_NPU_AssignFromString	DMCore/Concepts/FrameConcept.h	/^	virtual void Update_NPU_AssignFromString(void* pUpdateData);$/;"	p	class:CFrameConcept	access:public	signature:(void* pUpdateData)
CFrameConcept::Update_NPU_CollapseToMode	DMCore/Concepts/FrameConcept.cpp	/^void CFrameConcept::Update_NPU_CollapseToMode(void* pUpdateData) {$/;"	f	class:CFrameConcept	signature:(void* pUpdateData)
CFrameConcept::Update_NPU_CollapseToMode	DMCore/Concepts/FrameConcept.h	/^    virtual void Update_NPU_CollapseToMode(void* pUpdateData);$/;"	p	class:CFrameConcept	access:public	signature:(void* pUpdateData)
CFrameConcept::Update_NPU_UpdateWithConcept	DMCore/Concepts/FrameConcept.cpp	/^void CFrameConcept::Update_NPU_UpdateWithConcept(void* pUpdateData) {$/;"	f	class:CFrameConcept	signature:(void* pUpdateData)
CFrameConcept::Update_NPU_UpdateWithConcept	DMCore/Concepts/FrameConcept.h	/^    virtual void Update_NPU_UpdateWithConcept(void* pUpdateData);$/;"	p	class:CFrameConcept	access:public	signature:(void* pUpdateData)
CFrameConcept::Update_PartialFromString	DMCore/Concepts/FrameConcept.cpp	/^void CFrameConcept::Update_PartialFromString(void* pUpdateData) {$/;"	f	class:CFrameConcept	signature:(void* pUpdateData)
CFrameConcept::Update_PartialFromString	DMCore/Concepts/FrameConcept.h	/^	virtual void Update_PartialFromString(void* pUpdateDate);$/;"	p	class:CFrameConcept	access:public	signature:(void* pUpdateDate)
CFrameConcept::operator <	DMCore/Concepts/FrameConcept.cpp	/^bool CFrameConcept::operator < (CConcept& rAConcept) {$/;"	f	class:CFrameConcept	signature:(CConcept& rAConcept)
CFrameConcept::operator <	DMCore/Concepts/FrameConcept.h	/^    virtual bool operator < (CConcept& rAConcept);$/;"	p	class:CFrameConcept	access:public	signature:(CConcept& rAConcept)
CFrameConcept::operator <=	DMCore/Concepts/FrameConcept.cpp	/^bool CFrameConcept::operator <= (CConcept& rAConcept) {$/;"	f	class:CFrameConcept	signature:(CConcept& rAConcept)
CFrameConcept::operator <=	DMCore/Concepts/FrameConcept.h	/^    virtual bool operator <= (CConcept& rAConcept);$/;"	p	class:CFrameConcept	access:public	signature:(CConcept& rAConcept)
CFrameConcept::operator ==	DMCore/Concepts/FrameConcept.cpp	/^bool CFrameConcept::operator == (CConcept& rAConcept) {$/;"	f	class:CFrameConcept	signature:(CConcept& rAConcept)
CFrameConcept::operator ==	DMCore/Concepts/FrameConcept.h	/^    virtual bool operator == (CConcept& rAConcept);$/;"	p	class:CFrameConcept	access:public	signature:(CConcept& rAConcept)
CFrameConcept::operator >	DMCore/Concepts/FrameConcept.cpp	/^bool CFrameConcept::operator > (CConcept& rAConcept) {$/;"	f	class:CFrameConcept	signature:(CConcept& rAConcept)
CFrameConcept::operator >	DMCore/Concepts/FrameConcept.h	/^    virtual bool operator > (CConcept& rAConcept);$/;"	p	class:CFrameConcept	access:public	signature:(CConcept& rAConcept)
CFrameConcept::operator >=	DMCore/Concepts/FrameConcept.cpp	/^bool CFrameConcept::operator >= (CConcept& rAConcept) {$/;"	f	class:CFrameConcept	signature:(CConcept& rAConcept)
CFrameConcept::operator >=	DMCore/Concepts/FrameConcept.h	/^    virtual bool operator >= (CConcept& rAConcept);$/;"	p	class:CFrameConcept	access:public	signature:(CConcept& rAConcept)
CFrameConcept::updateFromString	DMCore/Concepts/FrameConcept.cpp	/^void CFrameConcept::updateFromString(void* pUpdateData, string sUpdateType) {$/;"	f	class:CFrameConcept	signature:(void* pUpdateData, string sUpdateType)
CFrameConcept::updateFromString	DMCore/Concepts/FrameConcept.h	/^	void updateFromString(void* pUpdateData, string sUpdateType);$/;"	p	class:CFrameConcept	access:protected	signature:(void* pUpdateData, string sUpdateType)
CFrameConcept::~CFrameConcept	DMCore/Concepts/FrameConcept.cpp	/^CFrameConcept::~CFrameConcept() {$/;"	f	class:CFrameConcept	signature:()
CFrameConcept::~CFrameConcept	DMCore/Concepts/FrameConcept.h	/^	~CFrameConcept();$/;"	p	class:CFrameConcept	access:public	signature:()
CFrameOutput	DMCore/Outputs/FrameOutput.cpp	/^CFrameOutput::CFrameOutput() {$/;"	f	class:CFrameOutput	signature:()
CFrameOutput	DMCore/Outputs/FrameOutput.h	/^	CFrameOutput();$/;"	p	class:CFrameOutput	access:public	signature:()
CFrameOutput	DMCore/Outputs/FrameOutput.h	/^class CFrameOutput: public COutput {$/;"	c	inherits:COutput
CFrameOutput::CFrameOutput	DMCore/Outputs/FrameOutput.cpp	/^CFrameOutput::CFrameOutput() {$/;"	f	class:CFrameOutput	signature:()
CFrameOutput::CFrameOutput	DMCore/Outputs/FrameOutput.h	/^	CFrameOutput();$/;"	p	class:CFrameOutput	access:public	signature:()
CFrameOutput::Clone	DMCore/Outputs/FrameOutput.cpp	/^COutput* CFrameOutput::Clone(int iNewOutputId) {$/;"	f	class:CFrameOutput	signature:(int iNewOutputId)
CFrameOutput::Clone	DMCore/Outputs/FrameOutput.h	/^	virtual COutput* Clone(int iNewOutputId);$/;"	p	class:CFrameOutput	access:public	signature:(int iNewOutputId)
CFrameOutput::Create	DMCore/Outputs/FrameOutput.cpp	/^bool CFrameOutput::Create(string sAGeneratorAgentName, $/;"	f	class:CFrameOutput	signature:(string sAGeneratorAgentName, int iAExecutionIndex, string sAOutput, TFloorStatus fsAFloor, int iAOutputId)
CFrameOutput::Create	DMCore/Outputs/FrameOutput.h	/^	virtual bool Create(string sAGeneratorAgentName, int iAExecutionIndex,$/;"	p	class:CFrameOutput	access:public	signature:(string sAGeneratorAgentName, int iAExecutionIndex, string sAOutput, TFloorStatus fsAFloor, int iAOutputId)
CFrameOutput::ToString	DMCore/Outputs/FrameOutput.cpp	/^string CFrameOutput::ToString() {$/;"	f	class:CFrameOutput	signature:()
CFrameOutput::ToString	DMCore/Outputs/FrameOutput.h	/^	virtual string ToString();$/;"	p	class:CFrameOutput	access:public	signature:()
CFrameOutput::vsSlotNames	DMCore/Outputs/FrameOutput.h	/^	vector<string> vsSlotNames;$/;"	m	class:CFrameOutput	access:protected
CFrameOutput::vsValues	DMCore/Outputs/FrameOutput.h	/^	vector<string> vsValues;$/;"	m	class:CFrameOutput	access:protected
CFrameOutput::~CFrameOutput	DMCore/Outputs/FrameOutput.cpp	/^CFrameOutput::~CFrameOutput() {  $/;"	f	class:CFrameOutput	signature:()
CFrameOutput::~CFrameOutput	DMCore/Outputs/FrameOutput.h	/^	virtual ~CFrameOutput();$/;"	p	class:CFrameOutput	access:public	signature:()
CGAAccept	DMCore/Grounding/GroundingActions/GAAccept.cpp	/^CGAAccept::CGAAccept(string sNewConfiguration) : $/;"	f	class:CGAAccept	signature:(string sNewConfiguration)
CGAAccept	DMCore/Grounding/GroundingActions/GAAccept.h	/^	CGAAccept(string sNewConfiguration);$/;"	p	class:CGAAccept	access:public	signature:(string sNewConfiguration)
CGAAccept	DMCore/Grounding/GroundingActions/GAAccept.h	/^class CGAAccept: public CGroundingAction {$/;"	c	inherits:CGroundingAction
CGAAccept::CGAAccept	DMCore/Grounding/GroundingActions/GAAccept.cpp	/^CGAAccept::CGAAccept(string sNewConfiguration) : $/;"	f	class:CGAAccept	signature:(string sNewConfiguration)
CGAAccept::CGAAccept	DMCore/Grounding/GroundingActions/GAAccept.h	/^	CGAAccept(string sNewConfiguration);$/;"	p	class:CGAAccept	access:public	signature:(string sNewConfiguration)
CGAAccept::GetName	DMCore/Grounding/GroundingActions/GAAccept.cpp	/^string CGAAccept::GetName() {$/;"	f	class:CGAAccept	signature:()
CGAAccept::GetName	DMCore/Grounding/GroundingActions/GAAccept.h	/^    virtual string GetName();$/;"	p	class:CGAAccept	access:public	signature:()
CGAAccept::RegisterDialogAgency	DMCore/Grounding/GroundingActions/GAAccept.cpp	/^void CGAAccept::RegisterDialogAgency() {$/;"	f	class:CGAAccept	signature:()
CGAAccept::RegisterDialogAgency	DMCore/Grounding/GroundingActions/GAAccept.h	/^    virtual void RegisterDialogAgency();$/;"	p	class:CGAAccept	access:public	signature:()
CGAAccept::Run	DMCore/Grounding/GroundingActions/GAAccept.cpp	/^void CGAAccept::Run(void *pParams) {$/;"	f	class:CGAAccept	signature:(void *pParams)
CGAAccept::Run	DMCore/Grounding/GroundingActions/GAAccept.h	/^    virtual void Run(void *pParams);$/;"	p	class:CGAAccept	access:public	signature:(void *pParams)
CGAAskRepeat	DMCore/Grounding/GroundingActions/GAAskRepeat.cpp	/^CGAAskRepeat::CGAAskRepeat(string sNewConfiguration) : $/;"	f	class:CGAAskRepeat	signature:(string sNewConfiguration)
CGAAskRepeat	DMCore/Grounding/GroundingActions/GAAskRepeat.h	/^	CGAAskRepeat(string sNewConfiguration);$/;"	p	class:CGAAskRepeat	access:public	signature:(string sNewConfiguration)
CGAAskRepeat	DMCore/Grounding/GroundingActions/GAAskRepeat.h	/^class CGAAskRepeat: public CGroundingAction {$/;"	c	inherits:CGroundingAction
CGAAskRepeat::CGAAskRepeat	DMCore/Grounding/GroundingActions/GAAskRepeat.cpp	/^CGAAskRepeat::CGAAskRepeat(string sNewConfiguration) : $/;"	f	class:CGAAskRepeat	signature:(string sNewConfiguration)
CGAAskRepeat::CGAAskRepeat	DMCore/Grounding/GroundingActions/GAAskRepeat.h	/^	CGAAskRepeat(string sNewConfiguration);$/;"	p	class:CGAAskRepeat	access:public	signature:(string sNewConfiguration)
CGAAskRepeat::GetName	DMCore/Grounding/GroundingActions/GAAskRepeat.cpp	/^string CGAAskRepeat::GetName() {$/;"	f	class:CGAAskRepeat	signature:()
CGAAskRepeat::GetName	DMCore/Grounding/GroundingActions/GAAskRepeat.h	/^    virtual string GetName();$/;"	p	class:CGAAskRepeat	access:public	signature:()
CGAAskRepeat::RegisterDialogAgency	DMCore/Grounding/GroundingActions/GAAskRepeat.cpp	/^void CGAAskRepeat::RegisterDialogAgency() {$/;"	f	class:CGAAskRepeat	signature:()
CGAAskRepeat::RegisterDialogAgency	DMCore/Grounding/GroundingActions/GAAskRepeat.h	/^    virtual void RegisterDialogAgency();$/;"	p	class:CGAAskRepeat	access:public	signature:()
CGAAskRepeat::Run	DMCore/Grounding/GroundingActions/GAAskRepeat.cpp	/^void CGAAskRepeat::Run(void *pParams) {$/;"	f	class:CGAAskRepeat	signature:(void *pParams)
CGAAskRepeat::Run	DMCore/Grounding/GroundingActions/GAAskRepeat.h	/^    virtual void Run(void *pParams);$/;"	p	class:CGAAskRepeat	access:public	signature:(void *pParams)
CGAAskRephrase	DMCore/Grounding/GroundingActions/GAAskRephrase.cpp	/^CGAAskRephrase::CGAAskRephrase(string sNewConfiguration) : $/;"	f	class:CGAAskRephrase	signature:(string sNewConfiguration)
CGAAskRephrase	DMCore/Grounding/GroundingActions/GAAskRephrase.h	/^	CGAAskRephrase(string sNewConfiguration);$/;"	p	class:CGAAskRephrase	access:public	signature:(string sNewConfiguration)
CGAAskRephrase	DMCore/Grounding/GroundingActions/GAAskRephrase.h	/^class CGAAskRephrase: public CGroundingAction {$/;"	c	inherits:CGroundingAction
CGAAskRephrase::CGAAskRephrase	DMCore/Grounding/GroundingActions/GAAskRephrase.cpp	/^CGAAskRephrase::CGAAskRephrase(string sNewConfiguration) : $/;"	f	class:CGAAskRephrase	signature:(string sNewConfiguration)
CGAAskRephrase::CGAAskRephrase	DMCore/Grounding/GroundingActions/GAAskRephrase.h	/^	CGAAskRephrase(string sNewConfiguration);$/;"	p	class:CGAAskRephrase	access:public	signature:(string sNewConfiguration)
CGAAskRephrase::GetName	DMCore/Grounding/GroundingActions/GAAskRephrase.cpp	/^string CGAAskRephrase::GetName() {$/;"	f	class:CGAAskRephrase	signature:()
CGAAskRephrase::GetName	DMCore/Grounding/GroundingActions/GAAskRephrase.h	/^    virtual string GetName();$/;"	p	class:CGAAskRephrase	access:public	signature:()
CGAAskRephrase::RegisterDialogAgency	DMCore/Grounding/GroundingActions/GAAskRephrase.cpp	/^void CGAAskRephrase::RegisterDialogAgency() {$/;"	f	class:CGAAskRephrase	signature:()
CGAAskRephrase::RegisterDialogAgency	DMCore/Grounding/GroundingActions/GAAskRephrase.h	/^    virtual void RegisterDialogAgency();$/;"	p	class:CGAAskRephrase	access:public	signature:()
CGAAskRephrase::Run	DMCore/Grounding/GroundingActions/GAAskRephrase.cpp	/^void CGAAskRephrase::Run(void *pParams) {$/;"	f	class:CGAAskRephrase	signature:(void *pParams)
CGAAskRephrase::Run	DMCore/Grounding/GroundingActions/GAAskRephrase.h	/^    virtual void Run(void *pParams);$/;"	p	class:CGAAskRephrase	access:public	signature:(void *pParams)
CGAAskShortAnswerAndReprompt	DMCore/Grounding/GroundingActions/GAAskShortAnswerAndReprompt.cpp	/^CGAAskShortAnswerAndReprompt::CGAAskShortAnswerAndReprompt($/;"	f	class:CGAAskShortAnswerAndReprompt	signature:( string sNewConfiguration)
CGAAskShortAnswerAndReprompt	DMCore/Grounding/GroundingActions/GAAskShortAnswerAndReprompt.h	/^	CGAAskShortAnswerAndReprompt(string sNewConfiguration);$/;"	p	class:CGAAskShortAnswerAndReprompt	access:public	signature:(string sNewConfiguration)
CGAAskShortAnswerAndReprompt	DMCore/Grounding/GroundingActions/GAAskShortAnswerAndReprompt.h	/^class CGAAskShortAnswerAndReprompt: public CGroundingAction {$/;"	c	inherits:CGroundingAction
CGAAskShortAnswerAndReprompt::CGAAskShortAnswerAndReprompt	DMCore/Grounding/GroundingActions/GAAskShortAnswerAndReprompt.cpp	/^CGAAskShortAnswerAndReprompt::CGAAskShortAnswerAndReprompt($/;"	f	class:CGAAskShortAnswerAndReprompt	signature:( string sNewConfiguration)
CGAAskShortAnswerAndReprompt::CGAAskShortAnswerAndReprompt	DMCore/Grounding/GroundingActions/GAAskShortAnswerAndReprompt.h	/^	CGAAskShortAnswerAndReprompt(string sNewConfiguration);$/;"	p	class:CGAAskShortAnswerAndReprompt	access:public	signature:(string sNewConfiguration)
CGAAskShortAnswerAndReprompt::GetName	DMCore/Grounding/GroundingActions/GAAskShortAnswerAndReprompt.cpp	/^string CGAAskShortAnswerAndReprompt::GetName() {$/;"	f	class:CGAAskShortAnswerAndReprompt	signature:()
CGAAskShortAnswerAndReprompt::GetName	DMCore/Grounding/GroundingActions/GAAskShortAnswerAndReprompt.h	/^    virtual string GetName();$/;"	p	class:CGAAskShortAnswerAndReprompt	access:public	signature:()
CGAAskShortAnswerAndReprompt::RegisterDialogAgency	DMCore/Grounding/GroundingActions/GAAskShortAnswerAndReprompt.cpp	/^void CGAAskShortAnswerAndReprompt::RegisterDialogAgency() {$/;"	f	class:CGAAskShortAnswerAndReprompt	signature:()
CGAAskShortAnswerAndReprompt::RegisterDialogAgency	DMCore/Grounding/GroundingActions/GAAskShortAnswerAndReprompt.h	/^    virtual void RegisterDialogAgency();$/;"	p	class:CGAAskShortAnswerAndReprompt	access:public	signature:()
CGAAskShortAnswerAndReprompt::Run	DMCore/Grounding/GroundingActions/GAAskShortAnswerAndReprompt.cpp	/^void CGAAskShortAnswerAndReprompt::Run(void *pParams) {$/;"	f	class:CGAAskShortAnswerAndReprompt	signature:(void *pParams)
CGAAskShortAnswerAndReprompt::Run	DMCore/Grounding/GroundingActions/GAAskShortAnswerAndReprompt.h	/^    virtual void Run(void *pParams);$/;"	p	class:CGAAskShortAnswerAndReprompt	access:public	signature:(void *pParams)
CGAAskShortAnswerAndWhatCanISay	DMCore/Grounding/GroundingActions/GAAskShortAnswerAndWhatCanISay.cpp	/^CGAAskShortAnswerAndWhatCanISay::CGAAskShortAnswerAndWhatCanISay($/;"	f	class:CGAAskShortAnswerAndWhatCanISay	signature:( string sNewConfiguration)
CGAAskShortAnswerAndWhatCanISay	DMCore/Grounding/GroundingActions/GAAskShortAnswerAndWhatCanISay.h	/^	CGAAskShortAnswerAndWhatCanISay(string sNewConfiguration);$/;"	p	class:CGAAskShortAnswerAndWhatCanISay	access:public	signature:(string sNewConfiguration)
CGAAskShortAnswerAndWhatCanISay	DMCore/Grounding/GroundingActions/GAAskShortAnswerAndWhatCanISay.h	/^class CGAAskShortAnswerAndWhatCanISay: public CGroundingAction {$/;"	c	inherits:CGroundingAction
CGAAskShortAnswerAndWhatCanISay::CGAAskShortAnswerAndWhatCanISay	DMCore/Grounding/GroundingActions/GAAskShortAnswerAndWhatCanISay.cpp	/^CGAAskShortAnswerAndWhatCanISay::CGAAskShortAnswerAndWhatCanISay($/;"	f	class:CGAAskShortAnswerAndWhatCanISay	signature:( string sNewConfiguration)
CGAAskShortAnswerAndWhatCanISay::CGAAskShortAnswerAndWhatCanISay	DMCore/Grounding/GroundingActions/GAAskShortAnswerAndWhatCanISay.h	/^	CGAAskShortAnswerAndWhatCanISay(string sNewConfiguration);$/;"	p	class:CGAAskShortAnswerAndWhatCanISay	access:public	signature:(string sNewConfiguration)
CGAAskShortAnswerAndWhatCanISay::GetName	DMCore/Grounding/GroundingActions/GAAskShortAnswerAndWhatCanISay.cpp	/^string CGAAskShortAnswerAndWhatCanISay::GetName() {$/;"	f	class:CGAAskShortAnswerAndWhatCanISay	signature:()
CGAAskShortAnswerAndWhatCanISay::GetName	DMCore/Grounding/GroundingActions/GAAskShortAnswerAndWhatCanISay.h	/^    virtual string GetName();$/;"	p	class:CGAAskShortAnswerAndWhatCanISay	access:public	signature:()
CGAAskShortAnswerAndWhatCanISay::RegisterDialogAgency	DMCore/Grounding/GroundingActions/GAAskShortAnswerAndWhatCanISay.cpp	/^void CGAAskShortAnswerAndWhatCanISay::RegisterDialogAgency() {$/;"	f	class:CGAAskShortAnswerAndWhatCanISay	signature:()
CGAAskShortAnswerAndWhatCanISay::RegisterDialogAgency	DMCore/Grounding/GroundingActions/GAAskShortAnswerAndWhatCanISay.h	/^    virtual void RegisterDialogAgency();$/;"	p	class:CGAAskShortAnswerAndWhatCanISay	access:public	signature:()
CGAAskShortAnswerAndWhatCanISay::Run	DMCore/Grounding/GroundingActions/GAAskShortAnswerAndWhatCanISay.cpp	/^void CGAAskShortAnswerAndWhatCanISay::Run(void *pParams) {$/;"	f	class:CGAAskShortAnswerAndWhatCanISay	signature:(void *pParams)
CGAAskShortAnswerAndWhatCanISay::Run	DMCore/Grounding/GroundingActions/GAAskShortAnswerAndWhatCanISay.h	/^    virtual void Run(void *pParams);$/;"	p	class:CGAAskShortAnswerAndWhatCanISay	access:public	signature:(void *pParams)
CGAAskStartOver	DMCore/Grounding/GroundingActions/GAAskStartOver.cpp	/^CGAAskStartOver::CGAAskStartOver(string sNewConfiguration) : $/;"	f	class:CGAAskStartOver	signature:(string sNewConfiguration)
CGAAskStartOver	DMCore/Grounding/GroundingActions/GAAskStartOver.h	/^	CGAAskStartOver(string sNewConfiguration);$/;"	p	class:CGAAskStartOver	access:public	signature:(string sNewConfiguration)
CGAAskStartOver	DMCore/Grounding/GroundingActions/GAAskStartOver.h	/^class CGAAskStartOver: public CGroundingAction {$/;"	c	inherits:CGroundingAction
CGAAskStartOver::CGAAskStartOver	DMCore/Grounding/GroundingActions/GAAskStartOver.cpp	/^CGAAskStartOver::CGAAskStartOver(string sNewConfiguration) : $/;"	f	class:CGAAskStartOver	signature:(string sNewConfiguration)
CGAAskStartOver::CGAAskStartOver	DMCore/Grounding/GroundingActions/GAAskStartOver.h	/^	CGAAskStartOver(string sNewConfiguration);$/;"	p	class:CGAAskStartOver	access:public	signature:(string sNewConfiguration)
CGAAskStartOver::GetName	DMCore/Grounding/GroundingActions/GAAskStartOver.cpp	/^string CGAAskStartOver::GetName() {$/;"	f	class:CGAAskStartOver	signature:()
CGAAskStartOver::GetName	DMCore/Grounding/GroundingActions/GAAskStartOver.h	/^    virtual string GetName();$/;"	p	class:CGAAskStartOver	access:public	signature:()
CGAAskStartOver::RegisterDialogAgency	DMCore/Grounding/GroundingActions/GAAskStartOver.cpp	/^void CGAAskStartOver::RegisterDialogAgency() {$/;"	f	class:CGAAskStartOver	signature:()
CGAAskStartOver::RegisterDialogAgency	DMCore/Grounding/GroundingActions/GAAskStartOver.h	/^    virtual void RegisterDialogAgency();$/;"	p	class:CGAAskStartOver	access:public	signature:()
CGAAskStartOver::Run	DMCore/Grounding/GroundingActions/GAAskStartOver.cpp	/^void CGAAskStartOver::Run(void *pParams) {$/;"	f	class:CGAAskStartOver	signature:(void *pParams)
CGAAskStartOver::Run	DMCore/Grounding/GroundingActions/GAAskStartOver.h	/^    virtual void Run(void *pParams);$/;"	p	class:CGAAskStartOver	access:public	signature:(void *pParams)
CGAExplainMore	DMCore/Grounding/GroundingActions/GAExplainMore.cpp	/^CGAExplainMore::CGAExplainMore(string sNewConfiguration) : $/;"	f	class:CGAExplainMore	signature:(string sNewConfiguration)
CGAExplainMore	DMCore/Grounding/GroundingActions/GAExplainMore.h	/^	CGAExplainMore(string sNewConfiguration);$/;"	p	class:CGAExplainMore	access:public	signature:(string sNewConfiguration)
CGAExplainMore	DMCore/Grounding/GroundingActions/GAExplainMore.h	/^class CGAExplainMore: public CGroundingAction {$/;"	c	inherits:CGroundingAction
CGAExplainMore::CGAExplainMore	DMCore/Grounding/GroundingActions/GAExplainMore.cpp	/^CGAExplainMore::CGAExplainMore(string sNewConfiguration) : $/;"	f	class:CGAExplainMore	signature:(string sNewConfiguration)
CGAExplainMore::CGAExplainMore	DMCore/Grounding/GroundingActions/GAExplainMore.h	/^	CGAExplainMore(string sNewConfiguration);$/;"	p	class:CGAExplainMore	access:public	signature:(string sNewConfiguration)
CGAExplainMore::GetName	DMCore/Grounding/GroundingActions/GAExplainMore.cpp	/^string CGAExplainMore::GetName() {$/;"	f	class:CGAExplainMore	signature:()
CGAExplainMore::GetName	DMCore/Grounding/GroundingActions/GAExplainMore.h	/^    virtual string GetName();$/;"	p	class:CGAExplainMore	access:public	signature:()
CGAExplainMore::RegisterDialogAgency	DMCore/Grounding/GroundingActions/GAExplainMore.cpp	/^void CGAExplainMore::RegisterDialogAgency() {$/;"	f	class:CGAExplainMore	signature:()
CGAExplainMore::RegisterDialogAgency	DMCore/Grounding/GroundingActions/GAExplainMore.h	/^    virtual void RegisterDialogAgency();$/;"	p	class:CGAExplainMore	access:public	signature:()
CGAExplainMore::Run	DMCore/Grounding/GroundingActions/GAExplainMore.cpp	/^void CGAExplainMore::Run(void *pParams) {$/;"	f	class:CGAExplainMore	signature:(void *pParams)
CGAExplainMore::Run	DMCore/Grounding/GroundingActions/GAExplainMore.h	/^    virtual void Run(void *pParams);$/;"	p	class:CGAExplainMore	access:public	signature:(void *pParams)
CGAExplicitConfirm	DMCore/Grounding/GroundingActions/GAExplicitConfirm.cpp	/^CGAExplicitConfirm::CGAExplicitConfirm(string sNewConfiguration) : $/;"	f	class:CGAExplicitConfirm	signature:(string sNewConfiguration)
CGAExplicitConfirm	DMCore/Grounding/GroundingActions/GAExplicitConfirm.h	/^	CGAExplicitConfirm(string sNewConfiguration);$/;"	p	class:CGAExplicitConfirm	access:public	signature:(string sNewConfiguration)
CGAExplicitConfirm	DMCore/Grounding/GroundingActions/GAExplicitConfirm.h	/^class CGAExplicitConfirm: public CGroundingAction {$/;"	c	inherits:CGroundingAction
CGAExplicitConfirm::CGAExplicitConfirm	DMCore/Grounding/GroundingActions/GAExplicitConfirm.cpp	/^CGAExplicitConfirm::CGAExplicitConfirm(string sNewConfiguration) : $/;"	f	class:CGAExplicitConfirm	signature:(string sNewConfiguration)
CGAExplicitConfirm::CGAExplicitConfirm	DMCore/Grounding/GroundingActions/GAExplicitConfirm.h	/^	CGAExplicitConfirm(string sNewConfiguration);$/;"	p	class:CGAExplicitConfirm	access:public	signature:(string sNewConfiguration)
CGAExplicitConfirm::GetName	DMCore/Grounding/GroundingActions/GAExplicitConfirm.cpp	/^string CGAExplicitConfirm::GetName() {$/;"	f	class:CGAExplicitConfirm	signature:()
CGAExplicitConfirm::GetName	DMCore/Grounding/GroundingActions/GAExplicitConfirm.h	/^    virtual string GetName();$/;"	p	class:CGAExplicitConfirm	access:public	signature:()
CGAExplicitConfirm::RegisterDialogAgency	DMCore/Grounding/GroundingActions/GAExplicitConfirm.cpp	/^void CGAExplicitConfirm::RegisterDialogAgency() {$/;"	f	class:CGAExplicitConfirm	signature:()
CGAExplicitConfirm::RegisterDialogAgency	DMCore/Grounding/GroundingActions/GAExplicitConfirm.h	/^    virtual void RegisterDialogAgency();$/;"	p	class:CGAExplicitConfirm	access:public	signature:()
CGAExplicitConfirm::Run	DMCore/Grounding/GroundingActions/GAExplicitConfirm.cpp	/^void CGAExplicitConfirm::Run(void *pParams) {$/;"	f	class:CGAExplicitConfirm	signature:(void *pParams)
CGAExplicitConfirm::Run	DMCore/Grounding/GroundingActions/GAExplicitConfirm.h	/^    virtual void Run(void *pParams);$/;"	p	class:CGAExplicitConfirm	access:public	signature:(void *pParams)
CGAFailRequest	DMCore/Grounding/GroundingActions/GAFailRequest.cpp	/^CGAFailRequest::CGAFailRequest(string sNewConfiguration) : $/;"	f	class:CGAFailRequest	signature:(string sNewConfiguration)
CGAFailRequest	DMCore/Grounding/GroundingActions/GAFailRequest.h	/^	CGAFailRequest(string sNewConfiguration);$/;"	p	class:CGAFailRequest	access:public	signature:(string sNewConfiguration)
CGAFailRequest	DMCore/Grounding/GroundingActions/GAFailRequest.h	/^class CGAFailRequest: public CGroundingAction {$/;"	c	inherits:CGroundingAction
CGAFailRequest::CGAFailRequest	DMCore/Grounding/GroundingActions/GAFailRequest.cpp	/^CGAFailRequest::CGAFailRequest(string sNewConfiguration) : $/;"	f	class:CGAFailRequest	signature:(string sNewConfiguration)
CGAFailRequest::CGAFailRequest	DMCore/Grounding/GroundingActions/GAFailRequest.h	/^	CGAFailRequest(string sNewConfiguration);$/;"	p	class:CGAFailRequest	access:public	signature:(string sNewConfiguration)
CGAFailRequest::GetName	DMCore/Grounding/GroundingActions/GAFailRequest.cpp	/^string CGAFailRequest::GetName() {$/;"	f	class:CGAFailRequest	signature:()
CGAFailRequest::GetName	DMCore/Grounding/GroundingActions/GAFailRequest.h	/^    virtual string GetName();$/;"	p	class:CGAFailRequest	access:public	signature:()
CGAFailRequest::RegisterDialogAgency	DMCore/Grounding/GroundingActions/GAFailRequest.cpp	/^void CGAFailRequest::RegisterDialogAgency() {$/;"	f	class:CGAFailRequest	signature:()
CGAFailRequest::RegisterDialogAgency	DMCore/Grounding/GroundingActions/GAFailRequest.h	/^    virtual void RegisterDialogAgency();$/;"	p	class:CGAFailRequest	access:public	signature:()
CGAFailRequest::Run	DMCore/Grounding/GroundingActions/GAFailRequest.cpp	/^void CGAFailRequest::Run(void *pParams) {$/;"	f	class:CGAFailRequest	signature:(void *pParams)
CGAFailRequest::Run	DMCore/Grounding/GroundingActions/GAFailRequest.h	/^    virtual void Run(void *pParams);$/;"	p	class:CGAFailRequest	access:public	signature:(void *pParams)
CGAFullHelp	DMCore/Grounding/GroundingActions/GAFullHelp.cpp	/^CGAFullHelp::CGAFullHelp(string sNewConfiguration) : $/;"	f	class:CGAFullHelp	signature:(string sNewConfiguration)
CGAFullHelp	DMCore/Grounding/GroundingActions/GAFullHelp.h	/^	CGAFullHelp(string sNewConfiguration);$/;"	p	class:CGAFullHelp	access:public	signature:(string sNewConfiguration)
CGAFullHelp	DMCore/Grounding/GroundingActions/GAFullHelp.h	/^class CGAFullHelp: public CGroundingAction {$/;"	c	inherits:CGroundingAction
CGAFullHelp::CGAFullHelp	DMCore/Grounding/GroundingActions/GAFullHelp.cpp	/^CGAFullHelp::CGAFullHelp(string sNewConfiguration) : $/;"	f	class:CGAFullHelp	signature:(string sNewConfiguration)
CGAFullHelp::CGAFullHelp	DMCore/Grounding/GroundingActions/GAFullHelp.h	/^	CGAFullHelp(string sNewConfiguration);$/;"	p	class:CGAFullHelp	access:public	signature:(string sNewConfiguration)
CGAFullHelp::GetName	DMCore/Grounding/GroundingActions/GAFullHelp.cpp	/^string CGAFullHelp::GetName() {$/;"	f	class:CGAFullHelp	signature:()
CGAFullHelp::GetName	DMCore/Grounding/GroundingActions/GAFullHelp.h	/^    virtual string GetName();$/;"	p	class:CGAFullHelp	access:public	signature:()
CGAFullHelp::RegisterDialogAgency	DMCore/Grounding/GroundingActions/GAFullHelp.cpp	/^void CGAFullHelp::RegisterDialogAgency() {$/;"	f	class:CGAFullHelp	signature:()
CGAFullHelp::RegisterDialogAgency	DMCore/Grounding/GroundingActions/GAFullHelp.h	/^    virtual void RegisterDialogAgency();$/;"	p	class:CGAFullHelp	access:public	signature:()
CGAFullHelp::Run	DMCore/Grounding/GroundingActions/GAFullHelp.cpp	/^void CGAFullHelp::Run(void *pParams) {$/;"	f	class:CGAFullHelp	signature:(void *pParams)
CGAFullHelp::Run	DMCore/Grounding/GroundingActions/GAFullHelp.h	/^    virtual void Run(void *pParams);$/;"	p	class:CGAFullHelp	access:public	signature:(void *pParams)
CGAGiveUp	DMCore/Grounding/GroundingActions/GAGiveUp.cpp	/^CGAGiveUp::CGAGiveUp(string sNewConfiguration) : $/;"	f	class:CGAGiveUp	signature:(string sNewConfiguration)
CGAGiveUp	DMCore/Grounding/GroundingActions/GAGiveUp.h	/^	CGAGiveUp(string sNewConfiguration);$/;"	p	class:CGAGiveUp	access:public	signature:(string sNewConfiguration)
CGAGiveUp	DMCore/Grounding/GroundingActions/GAGiveUp.h	/^class CGAGiveUp: public CGroundingAction {$/;"	c	inherits:CGroundingAction
CGAGiveUp::CGAGiveUp	DMCore/Grounding/GroundingActions/GAGiveUp.cpp	/^CGAGiveUp::CGAGiveUp(string sNewConfiguration) : $/;"	f	class:CGAGiveUp	signature:(string sNewConfiguration)
CGAGiveUp::CGAGiveUp	DMCore/Grounding/GroundingActions/GAGiveUp.h	/^	CGAGiveUp(string sNewConfiguration);$/;"	p	class:CGAGiveUp	access:public	signature:(string sNewConfiguration)
CGAGiveUp::GetName	DMCore/Grounding/GroundingActions/GAGiveUp.cpp	/^string CGAGiveUp::GetName() {$/;"	f	class:CGAGiveUp	signature:()
CGAGiveUp::GetName	DMCore/Grounding/GroundingActions/GAGiveUp.h	/^    virtual string GetName();$/;"	p	class:CGAGiveUp	access:public	signature:()
CGAGiveUp::RegisterDialogAgency	DMCore/Grounding/GroundingActions/GAGiveUp.cpp	/^void CGAGiveUp::RegisterDialogAgency() {$/;"	f	class:CGAGiveUp	signature:()
CGAGiveUp::RegisterDialogAgency	DMCore/Grounding/GroundingActions/GAGiveUp.h	/^    virtual void RegisterDialogAgency();$/;"	p	class:CGAGiveUp	access:public	signature:()
CGAGiveUp::Run	DMCore/Grounding/GroundingActions/GAGiveUp.cpp	/^void CGAGiveUp::Run(void *pParams) {$/;"	f	class:CGAGiveUp	signature:(void *pParams)
CGAGiveUp::Run	DMCore/Grounding/GroundingActions/GAGiveUp.h	/^    virtual void Run(void *pParams);$/;"	p	class:CGAGiveUp	access:public	signature:(void *pParams)
CGAImplicitConfirm	DMCore/Grounding/GroundingActions/GAImplicitConfirm.cpp	/^CGAImplicitConfirm::CGAImplicitConfirm(string sNewConfiguration) : $/;"	f	class:CGAImplicitConfirm	signature:(string sNewConfiguration)
CGAImplicitConfirm	DMCore/Grounding/GroundingActions/GAImplicitConfirm.h	/^	CGAImplicitConfirm(string sNewConfiguration);$/;"	p	class:CGAImplicitConfirm	access:public	signature:(string sNewConfiguration)
CGAImplicitConfirm	DMCore/Grounding/GroundingActions/GAImplicitConfirm.h	/^class CGAImplicitConfirm: public CGroundingAction {$/;"	c	inherits:CGroundingAction
CGAImplicitConfirm::CGAImplicitConfirm	DMCore/Grounding/GroundingActions/GAImplicitConfirm.cpp	/^CGAImplicitConfirm::CGAImplicitConfirm(string sNewConfiguration) : $/;"	f	class:CGAImplicitConfirm	signature:(string sNewConfiguration)
CGAImplicitConfirm::CGAImplicitConfirm	DMCore/Grounding/GroundingActions/GAImplicitConfirm.h	/^	CGAImplicitConfirm(string sNewConfiguration);$/;"	p	class:CGAImplicitConfirm	access:public	signature:(string sNewConfiguration)
CGAImplicitConfirm::GetName	DMCore/Grounding/GroundingActions/GAImplicitConfirm.cpp	/^string CGAImplicitConfirm::GetName() {$/;"	f	class:CGAImplicitConfirm	signature:()
CGAImplicitConfirm::GetName	DMCore/Grounding/GroundingActions/GAImplicitConfirm.h	/^    virtual string GetName();$/;"	p	class:CGAImplicitConfirm	access:public	signature:()
CGAImplicitConfirm::RegisterDialogAgency	DMCore/Grounding/GroundingActions/GAImplicitConfirm.cpp	/^void CGAImplicitConfirm::RegisterDialogAgency() {$/;"	f	class:CGAImplicitConfirm	signature:()
CGAImplicitConfirm::RegisterDialogAgency	DMCore/Grounding/GroundingActions/GAImplicitConfirm.h	/^    virtual void RegisterDialogAgency();$/;"	p	class:CGAImplicitConfirm	access:public	signature:()
CGAImplicitConfirm::Run	DMCore/Grounding/GroundingActions/GAImplicitConfirm.cpp	/^void CGAImplicitConfirm::Run(void *pParams) {$/;"	f	class:CGAImplicitConfirm	signature:(void *pParams)
CGAImplicitConfirm::Run	DMCore/Grounding/GroundingActions/GAImplicitConfirm.h	/^    virtual void Run(void *pParams);$/;"	p	class:CGAImplicitConfirm	access:public	signature:(void *pParams)
CGAInteractionTips	DMCore/Grounding/GroundingActions/GAInteractionTips.cpp	/^CGAInteractionTips::CGAInteractionTips(string sNewConfiguration) : $/;"	f	class:CGAInteractionTips	signature:(string sNewConfiguration)
CGAInteractionTips	DMCore/Grounding/GroundingActions/GAInteractionTips.h	/^	CGAInteractionTips(string sNewConfiguration);$/;"	p	class:CGAInteractionTips	access:public	signature:(string sNewConfiguration)
CGAInteractionTips	DMCore/Grounding/GroundingActions/GAInteractionTips.h	/^class CGAInteractionTips: public CGroundingAction {$/;"	c	inherits:CGroundingAction
CGAInteractionTips::CGAInteractionTips	DMCore/Grounding/GroundingActions/GAInteractionTips.cpp	/^CGAInteractionTips::CGAInteractionTips(string sNewConfiguration) : $/;"	f	class:CGAInteractionTips	signature:(string sNewConfiguration)
CGAInteractionTips::CGAInteractionTips	DMCore/Grounding/GroundingActions/GAInteractionTips.h	/^	CGAInteractionTips(string sNewConfiguration);$/;"	p	class:CGAInteractionTips	access:public	signature:(string sNewConfiguration)
CGAInteractionTips::GetName	DMCore/Grounding/GroundingActions/GAInteractionTips.cpp	/^string CGAInteractionTips::GetName() {$/;"	f	class:CGAInteractionTips	signature:()
CGAInteractionTips::GetName	DMCore/Grounding/GroundingActions/GAInteractionTips.h	/^    virtual string GetName();$/;"	p	class:CGAInteractionTips	access:public	signature:()
CGAInteractionTips::RegisterDialogAgency	DMCore/Grounding/GroundingActions/GAInteractionTips.cpp	/^void CGAInteractionTips::RegisterDialogAgency() {$/;"	f	class:CGAInteractionTips	signature:()
CGAInteractionTips::RegisterDialogAgency	DMCore/Grounding/GroundingActions/GAInteractionTips.h	/^    virtual void RegisterDialogAgency();$/;"	p	class:CGAInteractionTips	access:public	signature:()
CGAInteractionTips::Run	DMCore/Grounding/GroundingActions/GAInteractionTips.cpp	/^void CGAInteractionTips::Run(void *pParams) {$/;"	f	class:CGAInteractionTips	signature:(void *pParams)
CGAInteractionTips::Run	DMCore/Grounding/GroundingActions/GAInteractionTips.h	/^    virtual void Run(void *pParams);$/;"	p	class:CGAInteractionTips	access:public	signature:(void *pParams)
CGAMoveOn	DMCore/Grounding/GroundingActions/GAMoveOn.cpp	/^CGAMoveOn::CGAMoveOn(string sNewConfiguration) : $/;"	f	class:CGAMoveOn	signature:(string sNewConfiguration)
CGAMoveOn	DMCore/Grounding/GroundingActions/GAMoveOn.h	/^	CGAMoveOn(string sNewConfiguration);$/;"	p	class:CGAMoveOn	access:public	signature:(string sNewConfiguration)
CGAMoveOn	DMCore/Grounding/GroundingActions/GAMoveOn.h	/^class CGAMoveOn: public CGroundingAction {$/;"	c	inherits:CGroundingAction
CGAMoveOn::CGAMoveOn	DMCore/Grounding/GroundingActions/GAMoveOn.cpp	/^CGAMoveOn::CGAMoveOn(string sNewConfiguration) : $/;"	f	class:CGAMoveOn	signature:(string sNewConfiguration)
CGAMoveOn::CGAMoveOn	DMCore/Grounding/GroundingActions/GAMoveOn.h	/^	CGAMoveOn(string sNewConfiguration);$/;"	p	class:CGAMoveOn	access:public	signature:(string sNewConfiguration)
CGAMoveOn::GetName	DMCore/Grounding/GroundingActions/GAMoveOn.cpp	/^string CGAMoveOn::GetName() {$/;"	f	class:CGAMoveOn	signature:()
CGAMoveOn::GetName	DMCore/Grounding/GroundingActions/GAMoveOn.h	/^    virtual string GetName();$/;"	p	class:CGAMoveOn	access:public	signature:()
CGAMoveOn::RegisterDialogAgency	DMCore/Grounding/GroundingActions/GAMoveOn.cpp	/^void CGAMoveOn::RegisterDialogAgency() {$/;"	f	class:CGAMoveOn	signature:()
CGAMoveOn::RegisterDialogAgency	DMCore/Grounding/GroundingActions/GAMoveOn.h	/^    virtual void RegisterDialogAgency();$/;"	p	class:CGAMoveOn	access:public	signature:()
CGAMoveOn::Run	DMCore/Grounding/GroundingActions/GAMoveOn.cpp	/^void CGAMoveOn::Run(void *pParams) {$/;"	f	class:CGAMoveOn	signature:(void *pParams)
CGAMoveOn::Run	DMCore/Grounding/GroundingActions/GAMoveOn.h	/^    virtual void Run(void *pParams);$/;"	p	class:CGAMoveOn	access:public	signature:(void *pParams)
CGANoAction	DMCore/Grounding/GroundingActions/GANoAction.cpp	/^CGANoAction::CGANoAction(string sNewConfiguration) : $/;"	f	class:CGANoAction	signature:(string sNewConfiguration)
CGANoAction	DMCore/Grounding/GroundingActions/GANoAction.h	/^	CGANoAction(string sNewConfiguration);$/;"	p	class:CGANoAction	access:public	signature:(string sNewConfiguration)
CGANoAction	DMCore/Grounding/GroundingActions/GANoAction.h	/^class CGANoAction: public CGroundingAction {$/;"	c	inherits:CGroundingAction
CGANoAction::CGANoAction	DMCore/Grounding/GroundingActions/GANoAction.cpp	/^CGANoAction::CGANoAction(string sNewConfiguration) : $/;"	f	class:CGANoAction	signature:(string sNewConfiguration)
CGANoAction::CGANoAction	DMCore/Grounding/GroundingActions/GANoAction.h	/^	CGANoAction(string sNewConfiguration);$/;"	p	class:CGANoAction	access:public	signature:(string sNewConfiguration)
CGANoAction::GetName	DMCore/Grounding/GroundingActions/GANoAction.cpp	/^string CGANoAction::GetName() {$/;"	f	class:CGANoAction	signature:()
CGANoAction::GetName	DMCore/Grounding/GroundingActions/GANoAction.h	/^    virtual string GetName();$/;"	p	class:CGANoAction	access:public	signature:()
CGANoAction::RegisterDialogAgency	DMCore/Grounding/GroundingActions/GANoAction.cpp	/^void CGANoAction::RegisterDialogAgency() {$/;"	f	class:CGANoAction	signature:()
CGANoAction::RegisterDialogAgency	DMCore/Grounding/GroundingActions/GANoAction.h	/^    virtual void RegisterDialogAgency();$/;"	p	class:CGANoAction	access:public	signature:()
CGANoAction::Run	DMCore/Grounding/GroundingActions/GANoAction.cpp	/^void CGANoAction::Run(void *pParams) {$/;"	f	class:CGANoAction	signature:(void *pParams)
CGANoAction::Run	DMCore/Grounding/GroundingActions/GANoAction.h	/^    virtual void Run(void *pParams);$/;"	p	class:CGANoAction	access:public	signature:(void *pParams)
CGANotifyNonunderstanding	DMCore/Grounding/GroundingActions/GANotifyNonunderstanding.cpp	/^CGANotifyNonunderstanding::CGANotifyNonunderstanding(string sNewConfiguration) : $/;"	f	class:CGANotifyNonunderstanding	signature:(string sNewConfiguration)
CGANotifyNonunderstanding	DMCore/Grounding/GroundingActions/GANotifyNonunderstanding.h	/^	CGANotifyNonunderstanding(string sNewConfiguration);$/;"	p	class:CGANotifyNonunderstanding	access:public	signature:(string sNewConfiguration)
CGANotifyNonunderstanding	DMCore/Grounding/GroundingActions/GANotifyNonunderstanding.h	/^class CGANotifyNonunderstanding: public CGroundingAction {$/;"	c	inherits:CGroundingAction
CGANotifyNonunderstanding::CGANotifyNonunderstanding	DMCore/Grounding/GroundingActions/GANotifyNonunderstanding.cpp	/^CGANotifyNonunderstanding::CGANotifyNonunderstanding(string sNewConfiguration) : $/;"	f	class:CGANotifyNonunderstanding	signature:(string sNewConfiguration)
CGANotifyNonunderstanding::CGANotifyNonunderstanding	DMCore/Grounding/GroundingActions/GANotifyNonunderstanding.h	/^	CGANotifyNonunderstanding(string sNewConfiguration);$/;"	p	class:CGANotifyNonunderstanding	access:public	signature:(string sNewConfiguration)
CGANotifyNonunderstanding::GetName	DMCore/Grounding/GroundingActions/GANotifyNonunderstanding.cpp	/^string CGANotifyNonunderstanding::GetName() {$/;"	f	class:CGANotifyNonunderstanding	signature:()
CGANotifyNonunderstanding::GetName	DMCore/Grounding/GroundingActions/GANotifyNonunderstanding.h	/^    virtual string GetName();$/;"	p	class:CGANotifyNonunderstanding	access:public	signature:()
CGANotifyNonunderstanding::RegisterDialogAgency	DMCore/Grounding/GroundingActions/GANotifyNonunderstanding.cpp	/^void CGANotifyNonunderstanding::RegisterDialogAgency() {$/;"	f	class:CGANotifyNonunderstanding	signature:()
CGANotifyNonunderstanding::RegisterDialogAgency	DMCore/Grounding/GroundingActions/GANotifyNonunderstanding.h	/^    virtual void RegisterDialogAgency();$/;"	p	class:CGANotifyNonunderstanding	access:public	signature:()
CGANotifyNonunderstanding::Run	DMCore/Grounding/GroundingActions/GANotifyNonunderstanding.cpp	/^void CGANotifyNonunderstanding::Run(void *pParams) {$/;"	f	class:CGANotifyNonunderstanding	signature:(void *pParams)
CGANotifyNonunderstanding::Run	DMCore/Grounding/GroundingActions/GANotifyNonunderstanding.h	/^    virtual void Run(void *pParams);$/;"	p	class:CGANotifyNonunderstanding	access:public	signature:(void *pParams)
CGARepeatPrompt	DMCore/Grounding/GroundingActions/GARepeatPrompt.cpp	/^CGARepeatPrompt::CGARepeatPrompt(string sNewConfiguration) : $/;"	f	class:CGARepeatPrompt	signature:(string sNewConfiguration)
CGARepeatPrompt	DMCore/Grounding/GroundingActions/GARepeatPrompt.h	/^	CGARepeatPrompt(string sNewConfiguration);$/;"	p	class:CGARepeatPrompt	access:public	signature:(string sNewConfiguration)
CGARepeatPrompt	DMCore/Grounding/GroundingActions/GARepeatPrompt.h	/^class CGARepeatPrompt: public CGroundingAction {$/;"	c	inherits:CGroundingAction
CGARepeatPrompt::CGARepeatPrompt	DMCore/Grounding/GroundingActions/GARepeatPrompt.cpp	/^CGARepeatPrompt::CGARepeatPrompt(string sNewConfiguration) : $/;"	f	class:CGARepeatPrompt	signature:(string sNewConfiguration)
CGARepeatPrompt::CGARepeatPrompt	DMCore/Grounding/GroundingActions/GARepeatPrompt.h	/^	CGARepeatPrompt(string sNewConfiguration);$/;"	p	class:CGARepeatPrompt	access:public	signature:(string sNewConfiguration)
CGARepeatPrompt::GetName	DMCore/Grounding/GroundingActions/GARepeatPrompt.cpp	/^string CGARepeatPrompt::GetName() {$/;"	f	class:CGARepeatPrompt	signature:()
CGARepeatPrompt::GetName	DMCore/Grounding/GroundingActions/GARepeatPrompt.h	/^    virtual string GetName();$/;"	p	class:CGARepeatPrompt	access:public	signature:()
CGARepeatPrompt::RegisterDialogAgency	DMCore/Grounding/GroundingActions/GARepeatPrompt.cpp	/^void CGARepeatPrompt::RegisterDialogAgency() {$/;"	f	class:CGARepeatPrompt	signature:()
CGARepeatPrompt::RegisterDialogAgency	DMCore/Grounding/GroundingActions/GARepeatPrompt.h	/^    virtual void RegisterDialogAgency();$/;"	p	class:CGARepeatPrompt	access:public	signature:()
CGARepeatPrompt::Run	DMCore/Grounding/GroundingActions/GARepeatPrompt.cpp	/^void CGARepeatPrompt::Run(void *pParams) {$/;"	f	class:CGARepeatPrompt	signature:(void *pParams)
CGARepeatPrompt::Run	DMCore/Grounding/GroundingActions/GARepeatPrompt.h	/^    virtual void Run(void *pParams);$/;"	p	class:CGARepeatPrompt	access:public	signature:(void *pParams)
CGASpeakLessLoudAndReprompt	DMCore/Grounding/GroundingActions/GASpeakLessLoudAndReprompt.cpp	/^CGASpeakLessLoudAndReprompt::CGASpeakLessLoudAndReprompt(string sNewConfiguration) : $/;"	f	class:CGASpeakLessLoudAndReprompt	signature:(string sNewConfiguration)
CGASpeakLessLoudAndReprompt	DMCore/Grounding/GroundingActions/GASpeakLessLoudAndReprompt.h	/^	CGASpeakLessLoudAndReprompt(string sNewConfiguration);$/;"	p	class:CGASpeakLessLoudAndReprompt	access:public	signature:(string sNewConfiguration)
CGASpeakLessLoudAndReprompt	DMCore/Grounding/GroundingActions/GASpeakLessLoudAndReprompt.h	/^class CGASpeakLessLoudAndReprompt: public CGroundingAction {$/;"	c	inherits:CGroundingAction
CGASpeakLessLoudAndReprompt::CGASpeakLessLoudAndReprompt	DMCore/Grounding/GroundingActions/GASpeakLessLoudAndReprompt.cpp	/^CGASpeakLessLoudAndReprompt::CGASpeakLessLoudAndReprompt(string sNewConfiguration) : $/;"	f	class:CGASpeakLessLoudAndReprompt	signature:(string sNewConfiguration)
CGASpeakLessLoudAndReprompt::CGASpeakLessLoudAndReprompt	DMCore/Grounding/GroundingActions/GASpeakLessLoudAndReprompt.h	/^	CGASpeakLessLoudAndReprompt(string sNewConfiguration);$/;"	p	class:CGASpeakLessLoudAndReprompt	access:public	signature:(string sNewConfiguration)
CGASpeakLessLoudAndReprompt::GetName	DMCore/Grounding/GroundingActions/GASpeakLessLoudAndReprompt.cpp	/^string CGASpeakLessLoudAndReprompt::GetName() {$/;"	f	class:CGASpeakLessLoudAndReprompt	signature:()
CGASpeakLessLoudAndReprompt::GetName	DMCore/Grounding/GroundingActions/GASpeakLessLoudAndReprompt.h	/^    virtual string GetName();$/;"	p	class:CGASpeakLessLoudAndReprompt	access:public	signature:()
CGASpeakLessLoudAndReprompt::RegisterDialogAgency	DMCore/Grounding/GroundingActions/GASpeakLessLoudAndReprompt.cpp	/^void CGASpeakLessLoudAndReprompt::RegisterDialogAgency() {$/;"	f	class:CGASpeakLessLoudAndReprompt	signature:()
CGASpeakLessLoudAndReprompt::RegisterDialogAgency	DMCore/Grounding/GroundingActions/GASpeakLessLoudAndReprompt.h	/^    virtual void RegisterDialogAgency();$/;"	p	class:CGASpeakLessLoudAndReprompt	access:public	signature:()
CGASpeakLessLoudAndReprompt::Run	DMCore/Grounding/GroundingActions/GASpeakLessLoudAndReprompt.cpp	/^void CGASpeakLessLoudAndReprompt::Run(void *pParams) {$/;"	f	class:CGASpeakLessLoudAndReprompt	signature:(void *pParams)
CGASpeakLessLoudAndReprompt::Run	DMCore/Grounding/GroundingActions/GASpeakLessLoudAndReprompt.h	/^    virtual void Run(void *pParams);$/;"	p	class:CGASpeakLessLoudAndReprompt	access:public	signature:(void *pParams)
CGAWhatCanISay	DMCore/Grounding/GroundingActions/GAWhatCanISay.cpp	/^CGAWhatCanISay::CGAWhatCanISay(string sNewConfiguration) : $/;"	f	class:CGAWhatCanISay	signature:(string sNewConfiguration)
CGAWhatCanISay	DMCore/Grounding/GroundingActions/GAWhatCanISay.h	/^	CGAWhatCanISay(string sNewConfiguration);$/;"	p	class:CGAWhatCanISay	access:public	signature:(string sNewConfiguration)
CGAWhatCanISay	DMCore/Grounding/GroundingActions/GAWhatCanISay.h	/^class CGAWhatCanISay: public CGroundingAction {$/;"	c	inherits:CGroundingAction
CGAWhatCanISay::CGAWhatCanISay	DMCore/Grounding/GroundingActions/GAWhatCanISay.cpp	/^CGAWhatCanISay::CGAWhatCanISay(string sNewConfiguration) : $/;"	f	class:CGAWhatCanISay	signature:(string sNewConfiguration)
CGAWhatCanISay::CGAWhatCanISay	DMCore/Grounding/GroundingActions/GAWhatCanISay.h	/^	CGAWhatCanISay(string sNewConfiguration);$/;"	p	class:CGAWhatCanISay	access:public	signature:(string sNewConfiguration)
CGAWhatCanISay::GetName	DMCore/Grounding/GroundingActions/GAWhatCanISay.cpp	/^string CGAWhatCanISay::GetName() {$/;"	f	class:CGAWhatCanISay	signature:()
CGAWhatCanISay::GetName	DMCore/Grounding/GroundingActions/GAWhatCanISay.h	/^    virtual string GetName();$/;"	p	class:CGAWhatCanISay	access:public	signature:()
CGAWhatCanISay::RegisterDialogAgency	DMCore/Grounding/GroundingActions/GAWhatCanISay.cpp	/^void CGAWhatCanISay::RegisterDialogAgency() {$/;"	f	class:CGAWhatCanISay	signature:()
CGAWhatCanISay::RegisterDialogAgency	DMCore/Grounding/GroundingActions/GAWhatCanISay.h	/^    virtual void RegisterDialogAgency();$/;"	p	class:CGAWhatCanISay	access:public	signature:()
CGAWhatCanISay::Run	DMCore/Grounding/GroundingActions/GAWhatCanISay.cpp	/^void CGAWhatCanISay::Run(void *pParams) {$/;"	f	class:CGAWhatCanISay	signature:(void *pParams)
CGAWhatCanISay::Run	DMCore/Grounding/GroundingActions/GAWhatCanISay.h	/^    virtual void Run(void *pParams);$/;"	p	class:CGAWhatCanISay	access:public	signature:(void *pParams)
CGAYieldTurn	DMCore/Grounding/GroundingActions/GAYieldTurn.cpp	/^CGAYieldTurn::CGAYieldTurn(string sNewConfiguration) : $/;"	f	class:CGAYieldTurn	signature:(string sNewConfiguration)
CGAYieldTurn	DMCore/Grounding/GroundingActions/GAYieldTurn.h	/^	CGAYieldTurn(string sNewConfiguration);$/;"	p	class:CGAYieldTurn	access:public	signature:(string sNewConfiguration)
CGAYieldTurn	DMCore/Grounding/GroundingActions/GAYieldTurn.h	/^class CGAYieldTurn: public CGroundingAction {$/;"	c	inherits:CGroundingAction
CGAYieldTurn::CGAYieldTurn	DMCore/Grounding/GroundingActions/GAYieldTurn.cpp	/^CGAYieldTurn::CGAYieldTurn(string sNewConfiguration) : $/;"	f	class:CGAYieldTurn	signature:(string sNewConfiguration)
CGAYieldTurn::CGAYieldTurn	DMCore/Grounding/GroundingActions/GAYieldTurn.h	/^	CGAYieldTurn(string sNewConfiguration);$/;"	p	class:CGAYieldTurn	access:public	signature:(string sNewConfiguration)
CGAYieldTurn::GetName	DMCore/Grounding/GroundingActions/GAYieldTurn.cpp	/^string CGAYieldTurn::GetName() {$/;"	f	class:CGAYieldTurn	signature:()
CGAYieldTurn::GetName	DMCore/Grounding/GroundingActions/GAYieldTurn.h	/^    virtual string GetName();$/;"	p	class:CGAYieldTurn	access:public	signature:()
CGAYieldTurn::RegisterDialogAgency	DMCore/Grounding/GroundingActions/GAYieldTurn.cpp	/^void CGAYieldTurn::RegisterDialogAgency() {$/;"	f	class:CGAYieldTurn	signature:()
CGAYieldTurn::RegisterDialogAgency	DMCore/Grounding/GroundingActions/GAYieldTurn.h	/^    virtual void RegisterDialogAgency();$/;"	p	class:CGAYieldTurn	access:public	signature:()
CGAYieldTurn::Run	DMCore/Grounding/GroundingActions/GAYieldTurn.cpp	/^void CGAYieldTurn::Run(void *pParams) {$/;"	f	class:CGAYieldTurn	signature:(void *pParams)
CGAYieldTurn::Run	DMCore/Grounding/GroundingActions/GAYieldTurn.h	/^    virtual void Run(void *pParams);$/;"	p	class:CGAYieldTurn	access:public	signature:(void *pParams)
CGMConcept	DMCore/Grounding/GroundingModels/GMConcept.cpp	/^CGMConcept::CGMConcept(CGMConcept& rAGMConcept) {$/;"	f	class:CGMConcept	signature:(CGMConcept& rAGMConcept)
CGMConcept	DMCore/Grounding/GroundingModels/GMConcept.cpp	/^CGMConcept::CGMConcept(string sAModelPolicy, string sAName): $/;"	f	class:CGMConcept	signature:(string sAModelPolicy, string sAName)
CGMConcept	DMCore/Grounding/GroundingModels/GMConcept.h	/^    CGMConcept(CGMConcept& rAGMConcept);$/;"	p	class:CGMConcept	access:public	signature:(CGMConcept& rAGMConcept)
CGMConcept	DMCore/Grounding/GroundingModels/GMConcept.h	/^    CGMConcept(string sAModelPolicy = "", string sAName = "UNKNOWN");$/;"	p	class:CGMConcept	access:public	signature:(string sAModelPolicy = Ó, string sAName = Ó)
CGMConcept	DMCore/Grounding/GroundingModels/GMConcept.h	/^class CGMConcept: public CGroundingModel {$/;"	c	inherits:CGroundingModel
CGMConcept::CGMConcept	DMCore/Grounding/GroundingModels/GMConcept.cpp	/^CGMConcept::CGMConcept(CGMConcept& rAGMConcept) {$/;"	f	class:CGMConcept	signature:(CGMConcept& rAGMConcept)
CGMConcept::CGMConcept	DMCore/Grounding/GroundingModels/GMConcept.cpp	/^CGMConcept::CGMConcept(string sAModelPolicy, string sAName): $/;"	f	class:CGMConcept	signature:(string sAModelPolicy, string sAName)
CGMConcept::CGMConcept	DMCore/Grounding/GroundingModels/GMConcept.h	/^    CGMConcept(CGMConcept& rAGMConcept);$/;"	p	class:CGMConcept	access:public	signature:(CGMConcept& rAGMConcept)
CGMConcept::CGMConcept	DMCore/Grounding/GroundingModels/GMConcept.h	/^    CGMConcept(string sAModelPolicy = "", string sAName = "UNKNOWN");$/;"	p	class:CGMConcept	access:public	signature:(string sAModelPolicy = Ó, string sAName = Ó)
CGMConcept::Clone	DMCore/Grounding/GroundingModels/GMConcept.cpp	/^CGroundingModel* CGMConcept::Clone() {$/;"	f	class:CGMConcept	signature:()
CGMConcept::Clone	DMCore/Grounding/GroundingModels/GMConcept.h	/^    virtual CGroundingModel* Clone();$/;"	p	class:CGMConcept	access:public	signature:()
CGMConcept::GetConcept	DMCore/Grounding/GroundingModels/GMConcept.cpp	/^CConcept* CGMConcept::GetConcept() {$/;"	f	class:CGMConcept	signature:()
CGMConcept::GetConcept	DMCore/Grounding/GroundingModels/GMConcept.h	/^    CConcept* GetConcept();$/;"	p	class:CGMConcept	access:public	signature:()
CGMConcept::GetName	DMCore/Grounding/GroundingModels/GMConcept.cpp	/^string CGMConcept::GetName() {$/;"	f	class:CGMConcept	signature:()
CGMConcept::GetName	DMCore/Grounding/GroundingModels/GMConcept.h	/^    virtual string GetName();$/;"	p	class:CGMConcept	access:public	signature:()
CGMConcept::GetType	DMCore/Grounding/GroundingModels/GMConcept.cpp	/^string CGMConcept::GetType() {$/;"	f	class:CGMConcept	signature:()
CGMConcept::GetType	DMCore/Grounding/GroundingModels/GMConcept.h	/^    virtual string GetType();$/;"	p	class:CGMConcept	access:public	signature:()
CGMConcept::GroundingModelFactory	DMCore/Grounding/GroundingModels/GMConcept.cpp	/^CGroundingModel* CGMConcept::GroundingModelFactory(string sModelPolicy) {$/;"	f	class:CGMConcept	signature:(string sModelPolicy)
CGMConcept::GroundingModelFactory	DMCore/Grounding/GroundingModels/GMConcept.h	/^    static CGroundingModel* GroundingModelFactory(string sModelPolicy);$/;"	p	class:CGMConcept	access:public	signature:(string sModelPolicy)
CGMConcept::LoadPolicy	DMCore/Grounding/GroundingModels/GMConcept.cpp	/^bool CGMConcept::LoadPolicy() {$/;"	f	class:CGMConcept	signature:()
CGMConcept::LoadPolicy	DMCore/Grounding/GroundingModels/GMConcept.h	/^    virtual bool LoadPolicy();$/;"	p	class:CGMConcept	access:public	signature:()
CGMConcept::LogStateAction	DMCore/Grounding/GroundingModels/GMConcept.cpp	/^void CGMConcept::LogStateAction() {$/;"	f	class:CGMConcept	signature:()
CGMConcept::LogStateAction	DMCore/Grounding/GroundingModels/GMConcept.h	/^    virtual void LogStateAction();$/;"	p	class:CGMConcept	access:public	signature:()
CGMConcept::RunAction	DMCore/Grounding/GroundingModels/GMConcept.cpp	/^void CGMConcept::RunAction(int iActionIndex) {$/;"	f	class:CGMConcept	signature:(int iActionIndex)
CGMConcept::RunAction	DMCore/Grounding/GroundingModels/GMConcept.h	/^    virtual void RunAction(int iActionIndex);$/;"	p	class:CGMConcept	access:public	signature:(int iActionIndex)
CGMConcept::SetConcept	DMCore/Grounding/GroundingModels/GMConcept.cpp	/^void CGMConcept::SetConcept(CConcept* pAConcept) {$/;"	f	class:CGMConcept	signature:(CConcept* pAConcept)
CGMConcept::SetConcept	DMCore/Grounding/GroundingModels/GMConcept.h	/^    void SetConcept(CConcept* pAConcept);$/;"	p	class:CGMConcept	access:public	signature:(CConcept* pAConcept)
CGMConcept::SetName	DMCore/Grounding/GroundingModels/GMConcept.cpp	/^void CGMConcept::SetName(string sAName) {$/;"	f	class:CGMConcept	signature:(string sAName)
CGMConcept::SetName	DMCore/Grounding/GroundingModels/GMConcept.h	/^    virtual void SetName(string sAName);$/;"	p	class:CGMConcept	access:public	signature:(string sAName)
CGMConcept::computeBeliefState	DMCore/Grounding/GroundingModels/GMConcept.cpp	/^void CGMConcept::computeBeliefState() {$/;"	f	class:CGMConcept	signature:()
CGMConcept::computeBeliefState	DMCore/Grounding/GroundingModels/GMConcept.h	/^    virtual void computeBeliefState();$/;"	p	class:CGMConcept	access:protected	signature:()
CGMConcept::computeFullState	DMCore/Grounding/GroundingModels/GMConcept.cpp	/^void CGMConcept::computeFullState() {$/;"	f	class:CGMConcept	signature:()
CGMConcept::computeFullState	DMCore/Grounding/GroundingModels/GMConcept.h	/^    virtual void computeFullState();$/;"	p	class:CGMConcept	access:protected	signature:()
CGMConcept::pConcept	DMCore/Grounding/GroundingModels/GMConcept.h	/^    CConcept* pConcept;		\/\/ pointer to the concept it is handling$/;"	m	class:CGMConcept	access:protected
CGMConcept::~CGMConcept	DMCore/Grounding/GroundingModels/GMConcept.cpp	/^CGMConcept::~CGMConcept() {$/;"	f	class:CGMConcept	signature:()
CGMConcept::~CGMConcept	DMCore/Grounding/GroundingModels/GMConcept.h	/^    virtual ~CGMConcept();$/;"	p	class:CGMConcept	access:public	signature:()
CGMRequestAgent	DMCore/Grounding/GroundingModels/GMRequestAgent.cpp	/^CGMRequestAgent::CGMRequestAgent(CGMRequestAgent& rAGMRequestAgent) {$/;"	f	class:CGMRequestAgent	signature:(CGMRequestAgent& rAGMRequestAgent)
CGMRequestAgent	DMCore/Grounding/GroundingModels/GMRequestAgent.cpp	/^CGMRequestAgent::CGMRequestAgent(string sAModelPolicy, string sAName): $/;"	f	class:CGMRequestAgent	signature:(string sAModelPolicy, string sAName)
CGMRequestAgent	DMCore/Grounding/GroundingModels/GMRequestAgent.h	/^    CGMRequestAgent(CGMRequestAgent& rAGMRequestAgent);$/;"	p	class:CGMRequestAgent	access:public	signature:(CGMRequestAgent& rAGMRequestAgent)
CGMRequestAgent	DMCore/Grounding/GroundingModels/GMRequestAgent.h	/^    CGMRequestAgent(string sAModelPolicy = "", string sAName = "UNKNOWN");$/;"	p	class:CGMRequestAgent	access:public	signature:(string sAModelPolicy = Ó, string sAName = Ó)
CGMRequestAgent	DMCore/Grounding/GroundingModels/GMRequestAgent.h	/^class CGMRequestAgent: public CGroundingModel {$/;"	c	inherits:CGroundingModel
CGMRequestAgent::CGMRequestAgent	DMCore/Grounding/GroundingModels/GMRequestAgent.cpp	/^CGMRequestAgent::CGMRequestAgent(CGMRequestAgent& rAGMRequestAgent) {$/;"	f	class:CGMRequestAgent	signature:(CGMRequestAgent& rAGMRequestAgent)
CGMRequestAgent::CGMRequestAgent	DMCore/Grounding/GroundingModels/GMRequestAgent.cpp	/^CGMRequestAgent::CGMRequestAgent(string sAModelPolicy, string sAName): $/;"	f	class:CGMRequestAgent	signature:(string sAModelPolicy, string sAName)
CGMRequestAgent::CGMRequestAgent	DMCore/Grounding/GroundingModels/GMRequestAgent.h	/^    CGMRequestAgent(CGMRequestAgent& rAGMRequestAgent);$/;"	p	class:CGMRequestAgent	access:public	signature:(CGMRequestAgent& rAGMRequestAgent)
CGMRequestAgent::CGMRequestAgent	DMCore/Grounding/GroundingModels/GMRequestAgent.h	/^    CGMRequestAgent(string sAModelPolicy = "", string sAName = "UNKNOWN");$/;"	p	class:CGMRequestAgent	access:public	signature:(string sAModelPolicy = Ó, string sAName = Ó)
CGMRequestAgent::Clone	DMCore/Grounding/GroundingModels/GMRequestAgent.cpp	/^CGroundingModel* CGMRequestAgent::Clone() {$/;"	f	class:CGMRequestAgent	signature:()
CGMRequestAgent::Clone	DMCore/Grounding/GroundingModels/GMRequestAgent.h	/^    virtual CGroundingModel* Clone();$/;"	p	class:CGMRequestAgent	access:public	signature:()
CGMRequestAgent::GetName	DMCore/Grounding/GroundingModels/GMRequestAgent.cpp	/^string CGMRequestAgent::GetName() {$/;"	f	class:CGMRequestAgent	signature:()
CGMRequestAgent::GetName	DMCore/Grounding/GroundingModels/GMRequestAgent.h	/^    virtual string GetName();$/;"	p	class:CGMRequestAgent	access:public	signature:()
CGMRequestAgent::GetRequestAgent	DMCore/Grounding/GroundingModels/GMRequestAgent.cpp	/^CDialogAgent* CGMRequestAgent::GetRequestAgent() {$/;"	f	class:CGMRequestAgent	signature:()
CGMRequestAgent::GetRequestAgent	DMCore/Grounding/GroundingModels/GMRequestAgent.h	/^    CDialogAgent* GetRequestAgent();$/;"	p	class:CGMRequestAgent	access:public	signature:()
CGMRequestAgent::GetType	DMCore/Grounding/GroundingModels/GMRequestAgent.cpp	/^string CGMRequestAgent::GetType() {$/;"	f	class:CGMRequestAgent	signature:()
CGMRequestAgent::GetType	DMCore/Grounding/GroundingModels/GMRequestAgent.h	/^    virtual string GetType();$/;"	p	class:CGMRequestAgent	access:public	signature:()
CGMRequestAgent::GroundingModelFactory	DMCore/Grounding/GroundingModels/GMRequestAgent.cpp	/^CGroundingModel* CGMRequestAgent::GroundingModelFactory(string sModelPolicy) {$/;"	f	class:CGMRequestAgent	signature:(string sModelPolicy)
CGMRequestAgent::GroundingModelFactory	DMCore/Grounding/GroundingModels/GMRequestAgent.h	/^    static CGroundingModel* GroundingModelFactory(string sModelPolicy);$/;"	p	class:CGMRequestAgent	access:public	signature:(string sModelPolicy)
CGMRequestAgent::LoadPolicy	DMCore/Grounding/GroundingModels/GMRequestAgent.cpp	/^bool CGMRequestAgent::LoadPolicy() {$/;"	f	class:CGMRequestAgent	signature:()
CGMRequestAgent::LoadPolicy	DMCore/Grounding/GroundingModels/GMRequestAgent.h	/^    virtual bool LoadPolicy();$/;"	p	class:CGMRequestAgent	access:public	signature:()
CGMRequestAgent::RunAction	DMCore/Grounding/GroundingModels/GMRequestAgent.cpp	/^void CGMRequestAgent::RunAction(int iActionIndex) {$/;"	f	class:CGMRequestAgent	signature:(int iActionIndex)
CGMRequestAgent::RunAction	DMCore/Grounding/GroundingModels/GMRequestAgent.h	/^    virtual void RunAction(int iActionIndex);$/;"	p	class:CGMRequestAgent	access:public	signature:(int iActionIndex)
CGMRequestAgent::SetName	DMCore/Grounding/GroundingModels/GMRequestAgent.cpp	/^void CGMRequestAgent::SetName(string sAName) {$/;"	f	class:CGMRequestAgent	signature:(string sAName)
CGMRequestAgent::SetName	DMCore/Grounding/GroundingModels/GMRequestAgent.h	/^    virtual void SetName(string sAName);$/;"	p	class:CGMRequestAgent	access:public	signature:(string sAName)
CGMRequestAgent::SetRequestAgent	DMCore/Grounding/GroundingModels/GMRequestAgent.cpp	/^void CGMRequestAgent::SetRequestAgent(CDialogAgent* pARequestAgent) {$/;"	f	class:CGMRequestAgent	signature:(CDialogAgent* pARequestAgent)
CGMRequestAgent::SetRequestAgent	DMCore/Grounding/GroundingModels/GMRequestAgent.h	/^    void SetRequestAgent(CDialogAgent* pADialogAgent);$/;"	p	class:CGMRequestAgent	access:public	signature:(CDialogAgent* pADialogAgent)
CGMRequestAgent::computeBeliefState	DMCore/Grounding/GroundingModels/GMRequestAgent.cpp	/^void CGMRequestAgent::computeBeliefState() {$/;"	f	class:CGMRequestAgent	signature:()
CGMRequestAgent::computeBeliefState	DMCore/Grounding/GroundingModels/GMRequestAgent.h	/^    virtual void computeBeliefState();$/;"	p	class:CGMRequestAgent	access:protected	signature:()
CGMRequestAgent::computeFullState	DMCore/Grounding/GroundingModels/GMRequestAgent.cpp	/^void CGMRequestAgent::computeFullState() {$/;"	f	class:CGMRequestAgent	signature:()
CGMRequestAgent::computeFullState	DMCore/Grounding/GroundingModels/GMRequestAgent.h	/^    virtual void computeFullState();$/;"	p	class:CGMRequestAgent	access:protected	signature:()
CGMRequestAgent::pRequestAgent	DMCore/Grounding/GroundingModels/GMRequestAgent.h	/^    CDialogAgent* pRequestAgent;		\/\/ pointer to the dialogue agent $/;"	m	class:CGMRequestAgent	access:protected
CGMRequestAgent::~CGMRequestAgent	DMCore/Grounding/GroundingModels/GMRequestAgent.cpp	/^CGMRequestAgent::~CGMRequestAgent() {$/;"	f	class:CGMRequestAgent	signature:()
CGMRequestAgent::~CGMRequestAgent	DMCore/Grounding/GroundingModels/GMRequestAgent.h	/^    virtual ~CGMRequestAgent();$/;"	p	class:CGMRequestAgent	access:public	signature:()
CGMRequestAgent_Experiment	DMCore/Grounding/GroundingModels/GMRequestAgent_Experiment.cpp	/^CGMRequestAgent_Experiment::CGMRequestAgent_Experiment($/;"	f	class:CGMRequestAgent_Experiment	signature:( CGMRequestAgent_Experiment& rAGMRequestAgent_Experiment)
CGMRequestAgent_Experiment	DMCore/Grounding/GroundingModels/GMRequestAgent_Experiment.cpp	/^CGMRequestAgent_Experiment::CGMRequestAgent_Experiment(string sAModelPolicy, $/;"	f	class:CGMRequestAgent_Experiment	signature:(string sAModelPolicy, string sAName)
CGMRequestAgent_Experiment	DMCore/Grounding/GroundingModels/GMRequestAgent_Experiment.h	/^    CGMRequestAgent_Experiment(CGMRequestAgent_Experiment& $/;"	p	class:CGMRequestAgent_Experiment	access:public	signature:(CGMRequestAgent_Experiment& rAGMRequestAgent_Experiment)
CGMRequestAgent_Experiment	DMCore/Grounding/GroundingModels/GMRequestAgent_Experiment.h	/^    CGMRequestAgent_Experiment(string sAModelPolicy = "", $/;"	p	class:CGMRequestAgent_Experiment	access:public	signature:(string sAModelPolicy = Ó, string sAName = Ó)
CGMRequestAgent_Experiment	DMCore/Grounding/GroundingModels/GMRequestAgent_Experiment.h	/^class CGMRequestAgent_Experiment: public CGMRequestAgent {$/;"	c	inherits:CGMRequestAgent
CGMRequestAgent_Experiment::CGMRequestAgent_Experiment	DMCore/Grounding/GroundingModels/GMRequestAgent_Experiment.cpp	/^CGMRequestAgent_Experiment::CGMRequestAgent_Experiment($/;"	f	class:CGMRequestAgent_Experiment	signature:( CGMRequestAgent_Experiment& rAGMRequestAgent_Experiment)
CGMRequestAgent_Experiment::CGMRequestAgent_Experiment	DMCore/Grounding/GroundingModels/GMRequestAgent_Experiment.cpp	/^CGMRequestAgent_Experiment::CGMRequestAgent_Experiment(string sAModelPolicy, $/;"	f	class:CGMRequestAgent_Experiment	signature:(string sAModelPolicy, string sAName)
CGMRequestAgent_Experiment::CGMRequestAgent_Experiment	DMCore/Grounding/GroundingModels/GMRequestAgent_Experiment.h	/^    CGMRequestAgent_Experiment(CGMRequestAgent_Experiment& $/;"	p	class:CGMRequestAgent_Experiment	access:public	signature:(CGMRequestAgent_Experiment& rAGMRequestAgent_Experiment)
CGMRequestAgent_Experiment::CGMRequestAgent_Experiment	DMCore/Grounding/GroundingModels/GMRequestAgent_Experiment.h	/^    CGMRequestAgent_Experiment(string sAModelPolicy = "", $/;"	p	class:CGMRequestAgent_Experiment	access:public	signature:(string sAModelPolicy = Ó, string sAName = Ó)
CGMRequestAgent_Experiment::Clone	DMCore/Grounding/GroundingModels/GMRequestAgent_Experiment.cpp	/^CGroundingModel* CGMRequestAgent_Experiment::Clone() {$/;"	f	class:CGMRequestAgent_Experiment	signature:()
CGMRequestAgent_Experiment::Clone	DMCore/Grounding/GroundingModels/GMRequestAgent_Experiment.h	/^    virtual CGroundingModel* Clone();$/;"	p	class:CGMRequestAgent_Experiment	access:public	signature:()
CGMRequestAgent_Experiment::GetType	DMCore/Grounding/GroundingModels/GMRequestAgent_Experiment.cpp	/^string CGMRequestAgent_Experiment::GetType() {$/;"	f	class:CGMRequestAgent_Experiment	signature:()
CGMRequestAgent_Experiment::GetType	DMCore/Grounding/GroundingModels/GMRequestAgent_Experiment.h	/^    virtual string GetType();$/;"	p	class:CGMRequestAgent_Experiment	access:public	signature:()
CGMRequestAgent_Experiment::GroundingModelFactory	DMCore/Grounding/GroundingModels/GMRequestAgent_Experiment.cpp	/^CGroundingModel* CGMRequestAgent_Experiment::GroundingModelFactory($/;"	f	class:CGMRequestAgent_Experiment	signature:( string sModelPolicy)
CGMRequestAgent_Experiment::GroundingModelFactory	DMCore/Grounding/GroundingModels/GMRequestAgent_Experiment.h	/^    static CGroundingModel* GroundingModelFactory(string sModelPolicy);$/;"	p	class:CGMRequestAgent_Experiment	access:public	signature:(string sModelPolicy)
CGMRequestAgent_Experiment::LoadPolicy	DMCore/Grounding/GroundingModels/GMRequestAgent_Experiment.cpp	/^bool CGMRequestAgent_Experiment::LoadPolicy() {$/;"	f	class:CGMRequestAgent_Experiment	signature:()
CGMRequestAgent_Experiment::LoadPolicy	DMCore/Grounding/GroundingModels/GMRequestAgent_Experiment.h	/^    virtual bool LoadPolicy();$/;"	p	class:CGMRequestAgent_Experiment	access:public	signature:()
CGMRequestAgent_Experiment::computeBeliefState	DMCore/Grounding/GroundingModels/GMRequestAgent_Experiment.cpp	/^void CGMRequestAgent_Experiment::computeBeliefState() {$/;"	f	class:CGMRequestAgent_Experiment	signature:()
CGMRequestAgent_Experiment::computeBeliefState	DMCore/Grounding/GroundingModels/GMRequestAgent_Experiment.h	/^    virtual void computeBeliefState();$/;"	p	class:CGMRequestAgent_Experiment	access:protected	signature:()
CGMRequestAgent_Experiment::computeFullState	DMCore/Grounding/GroundingModels/GMRequestAgent_Experiment.cpp	/^void CGMRequestAgent_Experiment::computeFullState() {$/;"	f	class:CGMRequestAgent_Experiment	signature:()
CGMRequestAgent_Experiment::computeFullState	DMCore/Grounding/GroundingModels/GMRequestAgent_Experiment.h	/^    virtual void computeFullState();$/;"	p	class:CGMRequestAgent_Experiment	access:protected	signature:()
CGMRequestAgent_Experiment::~CGMRequestAgent_Experiment	DMCore/Grounding/GroundingModels/GMRequestAgent_Experiment.cpp	/^CGMRequestAgent_Experiment::~CGMRequestAgent_Experiment() {$/;"	f	class:CGMRequestAgent_Experiment	signature:()
CGMRequestAgent_Experiment::~CGMRequestAgent_Experiment	DMCore/Grounding/GroundingModels/GMRequestAgent_Experiment.h	/^    virtual ~CGMRequestAgent_Experiment();$/;"	p	class:CGMRequestAgent_Experiment	access:public	signature:()
CGMRequestAgent_HandCrafted	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.cpp	/^CGMRequestAgent_HandCrafted::CGMRequestAgent_HandCrafted($/;"	f	class:CGMRequestAgent_HandCrafted	signature:( CGMRequestAgent_HandCrafted &rAGMRequestAgent_HandCrafted)
CGMRequestAgent_HandCrafted	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.cpp	/^CGMRequestAgent_HandCrafted::CGMRequestAgent_HandCrafted(string sAModelPolicy, $/;"	f	class:CGMRequestAgent_HandCrafted	signature:(string sAModelPolicy, string sAName)
CGMRequestAgent_HandCrafted	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.h	/^    CGMRequestAgent_HandCrafted($/;"	p	class:CGMRequestAgent_HandCrafted	access:public	signature:( CGMRequestAgent_HandCrafted& rAGMRequestAgent_HandCrafted)
CGMRequestAgent_HandCrafted	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.h	/^    CGMRequestAgent_HandCrafted(string sAModelPolicy = "", $/;"	p	class:CGMRequestAgent_HandCrafted	access:public	signature:(string sAModelPolicy = Ó, string sAName = Ó)
CGMRequestAgent_HandCrafted	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.h	/^class CGMRequestAgent_HandCrafted: public CGMRequestAgent {$/;"	c	inherits:CGMRequestAgent
CGMRequestAgent_HandCrafted::CGMRequestAgent_HandCrafted	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.cpp	/^CGMRequestAgent_HandCrafted::CGMRequestAgent_HandCrafted($/;"	f	class:CGMRequestAgent_HandCrafted	signature:( CGMRequestAgent_HandCrafted &rAGMRequestAgent_HandCrafted)
CGMRequestAgent_HandCrafted::CGMRequestAgent_HandCrafted	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.cpp	/^CGMRequestAgent_HandCrafted::CGMRequestAgent_HandCrafted(string sAModelPolicy, $/;"	f	class:CGMRequestAgent_HandCrafted	signature:(string sAModelPolicy, string sAName)
CGMRequestAgent_HandCrafted::CGMRequestAgent_HandCrafted	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.h	/^    CGMRequestAgent_HandCrafted($/;"	p	class:CGMRequestAgent_HandCrafted	access:public	signature:( CGMRequestAgent_HandCrafted& rAGMRequestAgent_HandCrafted)
CGMRequestAgent_HandCrafted::CGMRequestAgent_HandCrafted	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.h	/^    CGMRequestAgent_HandCrafted(string sAModelPolicy = "", $/;"	p	class:CGMRequestAgent_HandCrafted	access:public	signature:(string sAModelPolicy = Ó, string sAName = Ó)
CGMRequestAgent_HandCrafted::Clone	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.cpp	/^CGroundingModel* CGMRequestAgent_HandCrafted::Clone() {$/;"	f	class:CGMRequestAgent_HandCrafted	signature:()
CGMRequestAgent_HandCrafted::Clone	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.h	/^    virtual CGroundingModel* Clone();$/;"	p	class:CGMRequestAgent_HandCrafted	access:public	signature:()
CGMRequestAgent_HandCrafted::GetType	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.cpp	/^string CGMRequestAgent_HandCrafted::GetType() {$/;"	f	class:CGMRequestAgent_HandCrafted	signature:()
CGMRequestAgent_HandCrafted::GetType	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.h	/^    virtual string GetType();$/;"	p	class:CGMRequestAgent_HandCrafted	access:public	signature:()
CGMRequestAgent_HandCrafted::GroundingModelFactory	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.cpp	/^CGroundingModel* CGMRequestAgent_HandCrafted::GroundingModelFactory(string sModelPolicy) {$/;"	f	class:CGMRequestAgent_HandCrafted	signature:(string sModelPolicy)
CGMRequestAgent_HandCrafted::GroundingModelFactory	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.h	/^    static CGroundingModel* GroundingModelFactory(string sModelPolicy);$/;"	p	class:CGMRequestAgent_HandCrafted	access:public	signature:(string sModelPolicy)
CGMRequestAgent_HandCrafted::LoadPolicy	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.cpp	/^bool CGMRequestAgent_HandCrafted::LoadPolicy() {$/;"	f	class:CGMRequestAgent_HandCrafted	signature:()
CGMRequestAgent_HandCrafted::LoadPolicy	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.h	/^    virtual bool LoadPolicy();$/;"	p	class:CGMRequestAgent_HandCrafted	access:public	signature:()
CGMRequestAgent_HandCrafted::computeBeliefState	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.cpp	/^void CGMRequestAgent_HandCrafted::computeBeliefState() {$/;"	f	class:CGMRequestAgent_HandCrafted	signature:()
CGMRequestAgent_HandCrafted::computeBeliefState	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.h	/^    virtual void computeBeliefState();$/;"	p	class:CGMRequestAgent_HandCrafted	access:protected	signature:()
CGMRequestAgent_HandCrafted::computeFullState	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.cpp	/^void CGMRequestAgent_HandCrafted::computeFullState() {$/;"	f	class:CGMRequestAgent_HandCrafted	signature:()
CGMRequestAgent_HandCrafted::computeFullState	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.h	/^    virtual void computeFullState();$/;"	p	class:CGMRequestAgent_HandCrafted	access:protected	signature:()
CGMRequestAgent_HandCrafted::vsStates	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.h	/^	vector<CGMState> vsStates;$/;"	m	class:CGMRequestAgent_HandCrafted	access:protected
CGMRequestAgent_HandCrafted::~CGMRequestAgent_HandCrafted	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.cpp	/^CGMRequestAgent_HandCrafted::~CGMRequestAgent_HandCrafted() {$/;"	f	class:CGMRequestAgent_HandCrafted	signature:()
CGMRequestAgent_HandCrafted::~CGMRequestAgent_HandCrafted	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.h	/^    virtual ~CGMRequestAgent_HandCrafted();$/;"	p	class:CGMRequestAgent_HandCrafted	access:public	signature:()
CGMRequestAgent_LR	DMCore/Grounding/GroundingModels/GMRequestAgent_LR.cpp	/^CGMRequestAgent_LR::CGMRequestAgent_LR(CGMRequestAgent_LR& rAGMRequestAgent_LR) {$/;"	f	class:CGMRequestAgent_LR	signature:(CGMRequestAgent_LR& rAGMRequestAgent_LR)
CGMRequestAgent_LR	DMCore/Grounding/GroundingModels/GMRequestAgent_LR.cpp	/^CGMRequestAgent_LR::CGMRequestAgent_LR(string sAModelPolicy, string sAName): $/;"	f	class:CGMRequestAgent_LR	signature:(string sAModelPolicy, string sAName)
CGMRequestAgent_LR	DMCore/Grounding/GroundingModels/GMRequestAgent_LR.h	/^    CGMRequestAgent_LR(CGMRequestAgent_LR& rAGMRequestAgent_LR);$/;"	p	class:CGMRequestAgent_LR	access:public	signature:(CGMRequestAgent_LR& rAGMRequestAgent_LR)
CGMRequestAgent_LR	DMCore/Grounding/GroundingModels/GMRequestAgent_LR.h	/^    CGMRequestAgent_LR(string sAModelPolicy = "", $/;"	p	class:CGMRequestAgent_LR	access:public	signature:(string sAModelPolicy = Ó, string sAName = Ó)
CGMRequestAgent_LR	DMCore/Grounding/GroundingModels/GMRequestAgent_LR.h	/^class CGMRequestAgent_LR: public CGMRequestAgent {$/;"	c	inherits:CGMRequestAgent
CGMRequestAgent_LR::ActionIsAvailable	DMCore/Grounding/GroundingModels/GMRequestAgent_LR.cpp	/^bool CGMRequestAgent_LR::ActionIsAvailable(int iActionIndex) {$/;"	f	class:CGMRequestAgent_LR	signature:(int iActionIndex)
CGMRequestAgent_LR::ActionIsAvailable	DMCore/Grounding/GroundingModels/GMRequestAgent_LR.h	/^    virtual bool ActionIsAvailable(int iActionIndex);$/;"	p	class:CGMRequestAgent_LR	access:protected	signature:(int iActionIndex)
CGMRequestAgent_LR::CGMRequestAgent_LR	DMCore/Grounding/GroundingModels/GMRequestAgent_LR.cpp	/^CGMRequestAgent_LR::CGMRequestAgent_LR(CGMRequestAgent_LR& rAGMRequestAgent_LR) {$/;"	f	class:CGMRequestAgent_LR	signature:(CGMRequestAgent_LR& rAGMRequestAgent_LR)
CGMRequestAgent_LR::CGMRequestAgent_LR	DMCore/Grounding/GroundingModels/GMRequestAgent_LR.cpp	/^CGMRequestAgent_LR::CGMRequestAgent_LR(string sAModelPolicy, string sAName): $/;"	f	class:CGMRequestAgent_LR	signature:(string sAModelPolicy, string sAName)
CGMRequestAgent_LR::CGMRequestAgent_LR	DMCore/Grounding/GroundingModels/GMRequestAgent_LR.h	/^    CGMRequestAgent_LR(CGMRequestAgent_LR& rAGMRequestAgent_LR);$/;"	p	class:CGMRequestAgent_LR	access:public	signature:(CGMRequestAgent_LR& rAGMRequestAgent_LR)
CGMRequestAgent_LR::CGMRequestAgent_LR	DMCore/Grounding/GroundingModels/GMRequestAgent_LR.h	/^    CGMRequestAgent_LR(string sAModelPolicy = "", $/;"	p	class:CGMRequestAgent_LR	access:public	signature:(string sAModelPolicy = Ó, string sAName = Ó)
CGMRequestAgent_LR::Clone	DMCore/Grounding/GroundingModels/GMRequestAgent_LR.cpp	/^CGroundingModel* CGMRequestAgent_LR::Clone() {$/;"	f	class:CGMRequestAgent_LR	signature:()
CGMRequestAgent_LR::Clone	DMCore/Grounding/GroundingModels/GMRequestAgent_LR.h	/^    virtual CGroundingModel* Clone();$/;"	p	class:CGMRequestAgent_LR	access:public	signature:()
CGMRequestAgent_LR::ComputeActionValuesDistribution	DMCore/Grounding/GroundingModels/GMRequestAgent_LR.cpp	/^void CGMRequestAgent_LR::ComputeActionValuesDistribution() {$/;"	f	class:CGMRequestAgent_LR	signature:()
CGMRequestAgent_LR::ComputeActionValuesDistribution	DMCore/Grounding/GroundingModels/GMRequestAgent_LR.h	/^    virtual void ComputeActionValuesDistribution();$/;"	p	class:CGMRequestAgent_LR	access:public	signature:()
CGMRequestAgent_LR::ComputeSuggestedActionIndex	DMCore/Grounding/GroundingModels/GMRequestAgent_LR.cpp	/^int CGMRequestAgent_LR::ComputeSuggestedActionIndex() {$/;"	f	class:CGMRequestAgent_LR	signature:()
CGMRequestAgent_LR::ComputeSuggestedActionIndex	DMCore/Grounding/GroundingModels/GMRequestAgent_LR.h	/^    virtual int ComputeSuggestedActionIndex();$/;"	p	class:CGMRequestAgent_LR	access:public	signature:()
CGMRequestAgent_LR::GetType	DMCore/Grounding/GroundingModels/GMRequestAgent_LR.cpp	/^string CGMRequestAgent_LR::GetType() {$/;"	f	class:CGMRequestAgent_LR	signature:()
CGMRequestAgent_LR::GetType	DMCore/Grounding/GroundingModels/GMRequestAgent_LR.h	/^    virtual string GetType();$/;"	p	class:CGMRequestAgent_LR	access:public	signature:()
CGMRequestAgent_LR::GroundingModelFactory	DMCore/Grounding/GroundingModels/GMRequestAgent_LR.cpp	/^CGroundingModel* CGMRequestAgent_LR::GroundingModelFactory(string sModelPolicy) {$/;"	f	class:CGMRequestAgent_LR	signature:(string sModelPolicy)
CGMRequestAgent_LR::GroundingModelFactory	DMCore/Grounding/GroundingModels/GMRequestAgent_LR.h	/^    static CGroundingModel* GroundingModelFactory(string sModelPolicy);$/;"	p	class:CGMRequestAgent_LR	access:public	signature:(string sModelPolicy)
CGMRequestAgent_LR::LoadPolicy	DMCore/Grounding/GroundingModels/GMRequestAgent_LR.cpp	/^bool CGMRequestAgent_LR::LoadPolicy() {$/;"	f	class:CGMRequestAgent_LR	signature:()
CGMRequestAgent_LR::LoadPolicy	DMCore/Grounding/GroundingModels/GMRequestAgent_LR.h	/^    virtual bool LoadPolicy();$/;"	p	class:CGMRequestAgent_LR	access:public	signature:()
CGMRequestAgent_LR::LogStateAction	DMCore/Grounding/GroundingModels/GMRequestAgent_LR.cpp	/^void CGMRequestAgent_LR::LogStateAction() {$/;"	f	class:CGMRequestAgent_LR	signature:()
CGMRequestAgent_LR::LogStateAction	DMCore/Grounding/GroundingModels/GMRequestAgent_LR.h	/^    virtual void LogStateAction();$/;"	p	class:CGMRequestAgent_LR	access:public	signature:()
CGMRequestAgent_LR::vLRModels	DMCore/Grounding/GroundingModels/GMRequestAgent_LR.h	/^	vector<TLRModel> vLRModels;$/;"	m	class:CGMRequestAgent_LR	access:protected
CGMRequestAgent_LR::~CGMRequestAgent_LR	DMCore/Grounding/GroundingModels/GMRequestAgent_LR.cpp	/^CGMRequestAgent_LR::~CGMRequestAgent_LR() {$/;"	f	class:CGMRequestAgent_LR	signature:()
CGMRequestAgent_LR::~CGMRequestAgent_LR	DMCore/Grounding/GroundingModels/GMRequestAgent_LR.h	/^    virtual ~CGMRequestAgent_LR();$/;"	p	class:CGMRequestAgent_LR	access:public	signature:()
CGMRequestAgent_NumNonu	DMCore/Grounding/GroundingModels/GMRequestAgent_NumNonu.cpp	/^CGMRequestAgent_NumNonu::CGMRequestAgent_NumNonu(CGMRequestAgent_NumNonu& $/;"	f	class:CGMRequestAgent_NumNonu	signature:(CGMRequestAgent_NumNonu& rAGMRequestAgent_NumNonu)
CGMRequestAgent_NumNonu	DMCore/Grounding/GroundingModels/GMRequestAgent_NumNonu.cpp	/^CGMRequestAgent_NumNonu::CGMRequestAgent_NumNonu(string sAModelPolicy, $/;"	f	class:CGMRequestAgent_NumNonu	signature:(string sAModelPolicy, string sAName)
CGMRequestAgent_NumNonu	DMCore/Grounding/GroundingModels/GMRequestAgent_NumNonu.h	/^    CGMRequestAgent_NumNonu(CGMRequestAgent_NumNonu& rAGMRequestAgent_NumNonu);$/;"	p	class:CGMRequestAgent_NumNonu	access:public	signature:(CGMRequestAgent_NumNonu& rAGMRequestAgent_NumNonu)
CGMRequestAgent_NumNonu	DMCore/Grounding/GroundingModels/GMRequestAgent_NumNonu.h	/^    CGMRequestAgent_NumNonu(string sAModelPolicy = "", $/;"	p	class:CGMRequestAgent_NumNonu	access:public	signature:(string sAModelPolicy = Ó, string sAName = Ó)
CGMRequestAgent_NumNonu	DMCore/Grounding/GroundingModels/GMRequestAgent_NumNonu.h	/^class CGMRequestAgent_NumNonu: public CGMRequestAgent {$/;"	c	inherits:CGMRequestAgent
CGMRequestAgent_NumNonu::CGMRequestAgent_NumNonu	DMCore/Grounding/GroundingModels/GMRequestAgent_NumNonu.cpp	/^CGMRequestAgent_NumNonu::CGMRequestAgent_NumNonu(CGMRequestAgent_NumNonu& $/;"	f	class:CGMRequestAgent_NumNonu	signature:(CGMRequestAgent_NumNonu& rAGMRequestAgent_NumNonu)
CGMRequestAgent_NumNonu::CGMRequestAgent_NumNonu	DMCore/Grounding/GroundingModels/GMRequestAgent_NumNonu.cpp	/^CGMRequestAgent_NumNonu::CGMRequestAgent_NumNonu(string sAModelPolicy, $/;"	f	class:CGMRequestAgent_NumNonu	signature:(string sAModelPolicy, string sAName)
CGMRequestAgent_NumNonu::CGMRequestAgent_NumNonu	DMCore/Grounding/GroundingModels/GMRequestAgent_NumNonu.h	/^    CGMRequestAgent_NumNonu(CGMRequestAgent_NumNonu& rAGMRequestAgent_NumNonu);$/;"	p	class:CGMRequestAgent_NumNonu	access:public	signature:(CGMRequestAgent_NumNonu& rAGMRequestAgent_NumNonu)
CGMRequestAgent_NumNonu::CGMRequestAgent_NumNonu	DMCore/Grounding/GroundingModels/GMRequestAgent_NumNonu.h	/^    CGMRequestAgent_NumNonu(string sAModelPolicy = "", $/;"	p	class:CGMRequestAgent_NumNonu	access:public	signature:(string sAModelPolicy = Ó, string sAName = Ó)
CGMRequestAgent_NumNonu::Clone	DMCore/Grounding/GroundingModels/GMRequestAgent_NumNonu.cpp	/^CGroundingModel* CGMRequestAgent_NumNonu::Clone() {$/;"	f	class:CGMRequestAgent_NumNonu	signature:()
CGMRequestAgent_NumNonu::Clone	DMCore/Grounding/GroundingModels/GMRequestAgent_NumNonu.h	/^    virtual CGroundingModel* Clone();$/;"	p	class:CGMRequestAgent_NumNonu	access:public	signature:()
CGMRequestAgent_NumNonu::GetType	DMCore/Grounding/GroundingModels/GMRequestAgent_NumNonu.cpp	/^string CGMRequestAgent_NumNonu::GetType() {$/;"	f	class:CGMRequestAgent_NumNonu	signature:()
CGMRequestAgent_NumNonu::GetType	DMCore/Grounding/GroundingModels/GMRequestAgent_NumNonu.h	/^    virtual string GetType();$/;"	p	class:CGMRequestAgent_NumNonu	access:public	signature:()
CGMRequestAgent_NumNonu::GroundingModelFactory	DMCore/Grounding/GroundingModels/GMRequestAgent_NumNonu.cpp	/^CGroundingModel* CGMRequestAgent_NumNonu::GroundingModelFactory($/;"	f	class:CGMRequestAgent_NumNonu	signature:( string sModelPolicy)
CGMRequestAgent_NumNonu::GroundingModelFactory	DMCore/Grounding/GroundingModels/GMRequestAgent_NumNonu.h	/^    static CGroundingModel* GroundingModelFactory(string sModelPolicy);$/;"	p	class:CGMRequestAgent_NumNonu	access:public	signature:(string sModelPolicy)
CGMRequestAgent_NumNonu::LoadPolicy	DMCore/Grounding/GroundingModels/GMRequestAgent_NumNonu.cpp	/^bool CGMRequestAgent_NumNonu::LoadPolicy() {$/;"	f	class:CGMRequestAgent_NumNonu	signature:()
CGMRequestAgent_NumNonu::LoadPolicy	DMCore/Grounding/GroundingModels/GMRequestAgent_NumNonu.h	/^    virtual bool LoadPolicy();$/;"	p	class:CGMRequestAgent_NumNonu	access:public	signature:()
CGMRequestAgent_NumNonu::computeBeliefState	DMCore/Grounding/GroundingModels/GMRequestAgent_NumNonu.cpp	/^void CGMRequestAgent_NumNonu::computeBeliefState() {$/;"	f	class:CGMRequestAgent_NumNonu	signature:()
CGMRequestAgent_NumNonu::computeBeliefState	DMCore/Grounding/GroundingModels/GMRequestAgent_NumNonu.h	/^    virtual void computeBeliefState();$/;"	p	class:CGMRequestAgent_NumNonu	access:protected	signature:()
CGMRequestAgent_NumNonu::computeFullState	DMCore/Grounding/GroundingModels/GMRequestAgent_NumNonu.cpp	/^void CGMRequestAgent_NumNonu::computeFullState() {$/;"	f	class:CGMRequestAgent_NumNonu	signature:()
CGMRequestAgent_NumNonu::computeFullState	DMCore/Grounding/GroundingModels/GMRequestAgent_NumNonu.h	/^    virtual void computeFullState();$/;"	p	class:CGMRequestAgent_NumNonu	access:protected	signature:()
CGMRequestAgent_NumNonu::~CGMRequestAgent_NumNonu	DMCore/Grounding/GroundingModels/GMRequestAgent_NumNonu.cpp	/^CGMRequestAgent_NumNonu::~CGMRequestAgent_NumNonu() {$/;"	f	class:CGMRequestAgent_NumNonu	signature:()
CGMRequestAgent_NumNonu::~CGMRequestAgent_NumNonu	DMCore/Grounding/GroundingModels/GMRequestAgent_NumNonu.h	/^    virtual ~CGMRequestAgent_NumNonu();$/;"	p	class:CGMRequestAgent_NumNonu	access:public	signature:()
CGMState	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.cpp	/^CGMState::CGMState(string sAName) {$/;"	f	class:CGMState	signature:(string sAName)
CGMState	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.h	/^	CGMState(string sAName);$/;"	p	class:CGMState	access:public	signature:(string sAName)
CGMState	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.h	/^class CGMState {$/;"	c
CGMState::AddCondition	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.cpp	/^void CGMState::AddCondition(CCondition &cCondition) {$/;"	f	class:CGMState	signature:(CCondition &cCondition)
CGMState::AddCondition	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.h	/^	void AddCondition(CCondition &cCondition);$/;"	p	class:CGMState	access:public	signature:(CCondition &cCondition)
CGMState::CGMState	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.cpp	/^CGMState::CGMState(string sAName) {$/;"	f	class:CGMState	signature:(string sAName)
CGMState::CGMState	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.h	/^	CGMState(string sAName);$/;"	p	class:CGMState	access:public	signature:(string sAName)
CGMState::Matches	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.cpp	/^bool CGMState::Matches(CState &sState) {$/;"	f	class:CGMState	signature:(CState &sState)
CGMState::Matches	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.h	/^	bool Matches(CState &sState);$/;"	p	class:CGMState	access:public	signature:(CState &sState)
CGMState::sName	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.h	/^	string sName;$/;"	m	class:CGMState	access:protected
CGMState::vcConditions	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.h	/^	vector<CCondition> vcConditions;$/;"	m	class:CGMState	access:protected
CGMState::~CGMState	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.cpp	/^CGMState::~CGMState() {}$/;"	f	class:CGMState	signature:()
CGMState::~CGMState	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.h	/^	~CGMState();$/;"	p	class:CGMState	access:public	signature:()
CGroundingAction	DMCore/Grounding/GroundingActions/GroundingAction.cpp	/^CGroundingAction::CGroundingAction(string sNewConfiguration) {$/;"	f	class:CGroundingAction	signature:(string sNewConfiguration)
CGroundingAction	DMCore/Grounding/GroundingActions/GroundingAction.h	/^    CGroundingAction() {};$/;"	f	class:CGroundingAction	access:public	signature:()
CGroundingAction	DMCore/Grounding/GroundingActions/GroundingAction.h	/^    CGroundingAction(string sNewConfiguration);$/;"	p	class:CGroundingAction	access:public	signature:(string sNewConfiguration)
CGroundingAction	DMCore/Grounding/GroundingActions/GroundingAction.h	/^class CGroundingAction {$/;"	c
CGroundingAction::CGroundingAction	DMCore/Grounding/GroundingActions/GroundingAction.cpp	/^CGroundingAction::CGroundingAction(string sNewConfiguration) {$/;"	f	class:CGroundingAction	signature:(string sNewConfiguration)
CGroundingAction::CGroundingAction	DMCore/Grounding/GroundingActions/GroundingAction.h	/^    CGroundingAction() {};$/;"	f	class:CGroundingAction	access:public	signature:()
CGroundingAction::CGroundingAction	DMCore/Grounding/GroundingActions/GroundingAction.h	/^    CGroundingAction(string sNewConfiguration);$/;"	p	class:CGroundingAction	access:public	signature:(string sNewConfiguration)
CGroundingAction::GetConfiguration	DMCore/Grounding/GroundingActions/GroundingAction.h	/^	string GetConfiguration();$/;"	p	class:CGroundingAction	access:public	signature:()
CGroundingAction::GetName	DMCore/Grounding/GroundingActions/GroundingAction.h	/^    virtual string GetName() = 0;$/;"	p	class:CGroundingAction	access:public	signature:()
CGroundingAction::RegisterDialogAgency	DMCore/Grounding/GroundingActions/GroundingAction.h	/^    virtual void RegisterDialogAgency() = 0;$/;"	p	class:CGroundingAction	access:public	signature:()
CGroundingAction::Run	DMCore/Grounding/GroundingActions/GroundingAction.h	/^    virtual void Run(void *pParams = NULL) = 0;$/;"	p	class:CGroundingAction	access:public	signature:(void *pParams = NULL)
CGroundingAction::SetConfiguration	DMCore/Grounding/GroundingActions/GroundingAction.cpp	/^void CGroundingAction::SetConfiguration(string sNewConfiguration) {$/;"	f	class:CGroundingAction	signature:(string sNewConfiguration)
CGroundingAction::SetConfiguration	DMCore/Grounding/GroundingActions/GroundingAction.h	/^	void SetConfiguration(string sNewConfiguration);$/;"	p	class:CGroundingAction	access:public	signature:(string sNewConfiguration)
CGroundingAction::s2sConfiguration	DMCore/Grounding/GroundingActions/GroundingAction.h	/^	STRING2STRING s2sConfiguration;$/;"	m	class:CGroundingAction	access:protected
CGroundingAction::~CGroundingAction	DMCore/Grounding/GroundingActions/GroundingAction.h	/^    virtual ~CGroundingAction() {};$/;"	f	class:CGroundingAction	access:public	signature:()
CGroundingManagerAgent	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^CGroundingManagerAgent::CGroundingManagerAgent(string sAName, $/;"	f	class:CGroundingManagerAgent	signature:(string sAName, string sAConfiguration, string sAType)
CGroundingManagerAgent	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^	CGroundingManagerAgent(string sAName, $/;"	p	class:CGroundingManagerAgent	access:public	signature:(string sAName, string sAConfiguration = Ó, string sAType = Ó)
CGroundingManagerAgent	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^class CGroundingManagerAgent: public CAgent {$/;"	c	inherits:CAgent
CGroundingManagerAgent::AgentFactory	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^CAgent* CGroundingManagerAgent::AgentFactory(string sAName, string sAConfiguration) {$/;"	f	class:CGroundingManagerAgent	signature:(string sAName, string sAConfiguration)
CGroundingManagerAgent::AgentFactory	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^	static CAgent* AgentFactory(string sAName, string sAConfiguration);$/;"	p	class:CGroundingManagerAgent	access:public	signature:(string sAName, string sAConfiguration)
CGroundingManagerAgent::CGroundingManagerAgent	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^CGroundingManagerAgent::CGroundingManagerAgent(string sAName, $/;"	f	class:CGroundingManagerAgent	signature:(string sAName, string sAConfiguration, string sAType)
CGroundingManagerAgent::CGroundingManagerAgent	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^	CGroundingManagerAgent(string sAName, $/;"	p	class:CGroundingManagerAgent	access:public	signature:(string sAName, string sAConfiguration = Ó, string sAType = Ó)
CGroundingManagerAgent::ClearBeliefUpdatingFeatures	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^void CGroundingManagerAgent::ClearBeliefUpdatingFeatures() {$/;"	f	class:CGroundingManagerAgent	signature:()
CGroundingManagerAgent::ClearBeliefUpdatingFeatures	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^	virtual void ClearBeliefUpdatingFeatures();$/;"	p	class:CGroundingManagerAgent	access:public	signature:()
CGroundingManagerAgent::ConceptGroundingRequestCompleted	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^void CGroundingManagerAgent::ConceptGroundingRequestCompleted($/;"	f	class:CGroundingManagerAgent	signature:( CConcept* pConcept)
CGroundingManagerAgent::ConceptGroundingRequestCompleted	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    void ConceptGroundingRequestCompleted(CConcept* pConcept);$/;"	p	class:CGroundingManagerAgent	access:public	signature:(CConcept* pConcept)
CGroundingManagerAgent::CreateExternalPolicyInterface	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^CExternalPolicyInterface* CGroundingManagerAgent::CreateExternalPolicyInterface($/;"	f	class:CGroundingManagerAgent	signature:( string sAHost)
CGroundingManagerAgent::CreateExternalPolicyInterface	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    CExternalPolicyInterface* CreateExternalPolicyInterface(string sAHost);$/;"	p	class:CGroundingManagerAgent	access:public	signature:(string sAHost)
CGroundingManagerAgent::CreateGroundingModel	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^CGroundingModel* CGroundingManagerAgent::CreateGroundingModel($/;"	f	class:CGroundingManagerAgent	signature:( string sModelType, string sModelPolicy)
CGroundingManagerAgent::CreateGroundingModel	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    CGroundingModel* CreateGroundingModel(string sModelType, $/;"	p	class:CGroundingManagerAgent	access:public	signature:(string sModelType, string sModelPolicy)
CGroundingManagerAgent::GAHAddHistoryItem	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^void CGroundingManagerAgent::GAHAddHistoryItem(string sGroundingModelName, $/;"	f	class:CGroundingManagerAgent	signature:(string sGroundingModelName, string sActionName, int iGroundingActionType)
CGroundingManagerAgent::GAHAddHistoryItem	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    void GAHAddHistoryItem(string sGroundingModelName, $/;"	p	class:CGroundingManagerAgent	access:public	signature:(string sGroundingModelName, string sActionName, int iGroundingActionType)
CGroundingManagerAgent::GAHCountTakenByGroundingModelInLastNTurns	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^int CGroundingManagerAgent::GAHCountTakenByGroundingModelInLastNTurns($/;"	f	class:CGroundingManagerAgent	signature:( bool bAlsoHeard, string sActionName, string sGroundingModelName, int iNumTurns)
CGroundingManagerAgent::GAHCountTakenByGroundingModelInLastNTurns	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    int GAHCountTakenByGroundingModelInLastNTurns(bool bAlsoHeard, $/;"	p	class:CGroundingManagerAgent	access:public	signature:(bool bAlsoHeard, string sActionName, string sGroundingModelName, int iNumTurns = -1)
CGroundingManagerAgent::GAHCountTakenInLastNTurns	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^int CGroundingManagerAgent::GAHCountTakenInLastNTurns(bool bAlsoHeard, $/;"	f	class:CGroundingManagerAgent	signature:(bool bAlsoHeard, string sActionName, int iNumTurns)
CGroundingManagerAgent::GAHCountTakenInLastNTurns	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    int GAHCountTakenInLastNTurns(bool bAlsoHeard, string sActionName, $/;"	p	class:CGroundingManagerAgent	access:public	signature:(bool bAlsoHeard, string sActionName, int iNumTurns = -1)
CGroundingManagerAgent::GAHGetTurnGroundingAction	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^string CGroundingManagerAgent::GAHGetTurnGroundingAction(int iTurnNumber) {$/;"	f	class:CGroundingManagerAgent	signature:(int iTurnNumber)
CGroundingManagerAgent::GAHGetTurnGroundingAction	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    string GAHGetTurnGroundingAction(int iTurnNumber);$/;"	p	class:CGroundingManagerAgent	access:public	signature:(int iTurnNumber)
CGroundingManagerAgent::GAHSetBargeInFlag	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^void CGroundingManagerAgent::GAHSetBargeInFlag(int iTurnNum, bool bBargeInFlag) {$/;"	f	class:CGroundingManagerAgent	signature:(int iTurnNum, bool bBargeInFlag)
CGroundingManagerAgent::GAHSetBargeInFlag	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    void GAHSetBargeInFlag(int iTurnNum, bool bBargeInFlag);$/;"	p	class:CGroundingManagerAgent	access:public	signature:(int iTurnNum, bool bBargeInFlag)
CGroundingManagerAgent::GetBeliefUpdatingModelForAction	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^STRING2FLOATVECTOR& CGroundingManagerAgent::GetBeliefUpdatingModelForAction($/;"	f	class:CGroundingManagerAgent	signature:( string sSystemAction)
CGroundingManagerAgent::GetBeliefUpdatingModelForAction	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^	virtual STRING2FLOATVECTOR& GetBeliefUpdatingModelForAction($/;"	p	class:CGroundingManagerAgent	access:public	signature:( string sSystemAction)
CGroundingManagerAgent::GetBeliefUpdatingModelName	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^string CGroundingManagerAgent::GetBeliefUpdatingModelName() {$/;"	f	class:CGroundingManagerAgent	signature:()
CGroundingManagerAgent::GetBeliefUpdatingModelName	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^	virtual string GetBeliefUpdatingModelName();$/;"	p	class:CGroundingManagerAgent	access:public	signature:()
CGroundingManagerAgent::GetConceptGroundingRequestStatus	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^int CGroundingManagerAgent::GetConceptGroundingRequestStatus(CConcept* pConcept) {$/;"	f	class:CGroundingManagerAgent	signature:(CConcept* pConcept)
CGroundingManagerAgent::GetConceptGroundingRequestStatus	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    int GetConceptGroundingRequestStatus(CConcept* pConcept);$/;"	p	class:CGroundingManagerAgent	access:public	signature:(CConcept* pConcept)
CGroundingManagerAgent::GetConceptTypeInfoForConcept	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^string CGroundingManagerAgent::GetConceptTypeInfoForConcept(string sConcept) {$/;"	f	class:CGroundingManagerAgent	signature:(string sConcept)
CGroundingManagerAgent::GetConceptTypeInfoForConcept	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^	virtual string GetConceptTypeInfoForConcept(string sConcept);$/;"	p	class:CGroundingManagerAgent	access:public	signature:(string sConcept)
CGroundingManagerAgent::GetConfiguration	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^TGroundingManagerConfiguration CGroundingManagerAgent::GetConfiguration() {$/;"	f	class:CGroundingManagerAgent	signature:()
CGroundingManagerAgent::GetConfiguration	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^	TGroundingManagerConfiguration GetConfiguration();$/;"	p	class:CGroundingManagerAgent	access:public	signature:()
CGroundingManagerAgent::GetConfusabilityForConceptHyp	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^float CGroundingManagerAgent::GetConfusabilityForConceptHyp($/;"	f	class:CGroundingManagerAgent	signature:( string sConcept, string sHyp)
CGroundingManagerAgent::GetConfusabilityForConceptHyp	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^	virtual float GetConfusabilityForConceptHyp($/;"	p	class:CGroundingManagerAgent	access:public	signature:( string sConcept, string sHyp)
CGroundingManagerAgent::GetConstantParameter	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^float CGroundingManagerAgent::GetConstantParameter(string sParam) {$/;"	f	class:CGroundingManagerAgent	signature:(string sParam)
CGroundingManagerAgent::GetConstantParameter	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    virtual float GetConstantParameter(string sParam);$/;"	p	class:CGroundingManagerAgent	access:public	signature:(string sParam)
CGroundingManagerAgent::GetGroundingFeature	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^float CGroundingManagerAgent::GetGroundingFeature(string sFeatureName) {$/;"	f	class:CGroundingManagerAgent	signature:(string sFeatureName)
CGroundingManagerAgent::GetGroundingFeature	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^	virtual float GetGroundingFeature(string sFeatureName);$/;"	p	class:CGroundingManagerAgent	access:public	signature:(string sFeatureName)
CGroundingManagerAgent::GetGroundingFeatureAsString	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^string CGroundingManagerAgent::GetGroundingFeatureAsString(string sFeatureName) {$/;"	f	class:CGroundingManagerAgent	signature:(string sFeatureName)
CGroundingManagerAgent::GetGroundingFeatureAsString	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^	virtual string GetGroundingFeatureAsString(string sFeatureName);$/;"	p	class:CGroundingManagerAgent	access:public	signature:(string sFeatureName)
CGroundingManagerAgent::GetPolicy	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^string CGroundingManagerAgent::GetPolicy(string sModelName) {$/;"	f	class:CGroundingManagerAgent	signature:(string sModelName)
CGroundingManagerAgent::GetPolicy	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    virtual string GetPolicy(string sModelName);$/;"	p	class:CGroundingManagerAgent	access:public	signature:(string sModelName)
CGroundingManagerAgent::GetPriorForConceptHyp	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^float CGroundingManagerAgent::GetPriorForConceptHyp($/;"	f	class:CGroundingManagerAgent	signature:( string sConcept, string sHyp)
CGroundingManagerAgent::GetPriorForConceptHyp	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^	virtual float GetPriorForConceptHyp(string sConcept, string sHyp);$/;"	p	class:CGroundingManagerAgent	access:public	signature:(string sConcept, string sHyp)
CGroundingManagerAgent::GetScheduledGroundingActionOnConcept	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^string CGroundingManagerAgent::GetScheduledGroundingActionOnConcept(CConcept* pConcept) {$/;"	f	class:CGroundingManagerAgent	signature:(CConcept* pConcept)
CGroundingManagerAgent::GetScheduledGroundingActionOnConcept	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    string GetScheduledGroundingActionOnConcept(CConcept* pConcept);$/;"	p	class:CGroundingManagerAgent	access:public	signature:(CConcept* pConcept)
CGroundingManagerAgent::GroundingActionIndexToName	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^string CGroundingManagerAgent::GroundingActionIndexToName($/;"	f	class:CGroundingManagerAgent	signature:( unsigned int iGroundingActionIndex)
CGroundingManagerAgent::GroundingActionIndexToName	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    string GroundingActionIndexToName(unsigned int iGroundingActionIndex);$/;"	p	class:CGroundingManagerAgent	access:public	signature:(unsigned int iGroundingActionIndex)
CGroundingManagerAgent::GroundingActionNameToIndex	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^int CGroundingManagerAgent::GroundingActionNameToIndex($/;"	f	class:CGroundingManagerAgent	signature:( string sGroundingActionName)
CGroundingManagerAgent::GroundingActionNameToIndex	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    int GroundingActionNameToIndex(string sGroundingActionName);$/;"	p	class:CGroundingManagerAgent	access:public	signature:(string sGroundingActionName)
CGroundingManagerAgent::GroundingInProgressOnConcept	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^bool CGroundingManagerAgent::GroundingInProgressOnConcept(CConcept* pConcept) {$/;"	f	class:CGroundingManagerAgent	signature:(CConcept* pConcept)
CGroundingManagerAgent::GroundingInProgressOnConcept	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    bool GroundingInProgressOnConcept(CConcept* pConcept);$/;"	p	class:CGroundingManagerAgent	access:public	signature:(CConcept* pConcept)
CGroundingManagerAgent::HasExecutingConceptGroundingRequests	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^bool CGroundingManagerAgent::HasExecutingConceptGroundingRequests() {$/;"	f	class:CGroundingManagerAgent	signature:()
CGroundingManagerAgent::HasExecutingConceptGroundingRequests	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    bool HasExecutingConceptGroundingRequests();$/;"	p	class:CGroundingManagerAgent	access:public	signature:()
CGroundingManagerAgent::HasPendingConceptGroundingRequests	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^bool CGroundingManagerAgent::HasPendingConceptGroundingRequests() {$/;"	f	class:CGroundingManagerAgent	signature:()
CGroundingManagerAgent::HasPendingConceptGroundingRequests	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    bool HasPendingConceptGroundingRequests();$/;"	p	class:CGroundingManagerAgent	access:public	signature:()
CGroundingManagerAgent::HasPendingRequests	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^bool CGroundingManagerAgent::HasPendingRequests() {$/;"	f	class:CGroundingManagerAgent	signature:()
CGroundingManagerAgent::HasPendingRequests	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    bool HasPendingRequests();$/;"	p	class:CGroundingManagerAgent	access:public	signature:()
CGroundingManagerAgent::HasPendingTurnGroundingRequest	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^bool CGroundingManagerAgent::HasPendingTurnGroundingRequest() {$/;"	f	class:CGroundingManagerAgent	signature:()
CGroundingManagerAgent::HasPendingTurnGroundingRequest	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    bool HasPendingTurnGroundingRequest();$/;"	p	class:CGroundingManagerAgent	access:public	signature:()
CGroundingManagerAgent::HasScheduledConceptGroundingRequests	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^bool CGroundingManagerAgent::HasScheduledConceptGroundingRequests() {$/;"	f	class:CGroundingManagerAgent	signature:()
CGroundingManagerAgent::HasScheduledConceptGroundingRequests	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    bool HasScheduledConceptGroundingRequests();$/;"	p	class:CGroundingManagerAgent	access:public	signature:()
CGroundingManagerAgent::HasUnprocessedConceptGroundingRequests	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^bool CGroundingManagerAgent::HasUnprocessedConceptGroundingRequests() {$/;"	f	class:CGroundingManagerAgent	signature:()
CGroundingManagerAgent::HasUnprocessedConceptGroundingRequests	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    bool HasUnprocessedConceptGroundingRequests();$/;"	p	class:CGroundingManagerAgent	access:public	signature:()
CGroundingManagerAgent::LoadBeliefUpdatingModel	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^void CGroundingManagerAgent::LoadBeliefUpdatingModel(string sAFileName) {$/;"	f	class:CGroundingManagerAgent	signature:(string sAFileName)
CGroundingManagerAgent::LoadBeliefUpdatingModel	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^	virtual void LoadBeliefUpdatingModel(string sAFileName);$/;"	p	class:CGroundingManagerAgent	access:public	signature:(string sAFileName)
CGroundingManagerAgent::LoadPoliciesFromFile	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^void CGroundingManagerAgent::LoadPoliciesFromFile(string sFileName) {$/;"	f	class:CGroundingManagerAgent	signature:(string sFileName)
CGroundingManagerAgent::LoadPoliciesFromFile	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    virtual void LoadPoliciesFromFile(string sFileName);$/;"	p	class:CGroundingManagerAgent	access:public	signature:(string sFileName)
CGroundingManagerAgent::LoadPoliciesFromString	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^void CGroundingManagerAgent::LoadPoliciesFromString(string sPolicies) {$/;"	f	class:CGroundingManagerAgent	signature:(string sPolicies)
CGroundingManagerAgent::LoadPoliciesFromString	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    virtual void LoadPoliciesFromString(string sPolicies);$/;"	p	class:CGroundingManagerAgent	access:public	signature:(string sPolicies)
CGroundingManagerAgent::LockConceptGroundingRequestsQueue	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^void CGroundingManagerAgent::LockConceptGroundingRequestsQueue() {$/;"	f	class:CGroundingManagerAgent	signature:()
CGroundingManagerAgent::LockConceptGroundingRequestsQueue	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    void LockConceptGroundingRequestsQueue();$/;"	p	class:CGroundingManagerAgent	access:public	signature:()
CGroundingManagerAgent::PrecomputeBeliefUpdatingFeatures	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^void CGroundingManagerAgent::PrecomputeBeliefUpdatingFeatures($/;"	f	class:CGroundingManagerAgent	signature:( CConcept* pIConcept, CConcept* pNewConcept, string sSystemAction)
CGroundingManagerAgent::PrecomputeBeliefUpdatingFeatures	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^	virtual void PrecomputeBeliefUpdatingFeatures($/;"	p	class:CGroundingManagerAgent	access:public	signature:( CConcept* pIConcept, CConcept* pNewConcept, string sSystemAction)
CGroundingManagerAgent::PurgeConceptGroundingRequestsQueue	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^void CGroundingManagerAgent::PurgeConceptGroundingRequestsQueue() {$/;"	f	class:CGroundingManagerAgent	signature:()
CGroundingManagerAgent::PurgeConceptGroundingRequestsQueue	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    void PurgeConceptGroundingRequestsQueue();$/;"	p	class:CGroundingManagerAgent	access:public	signature:()
CGroundingManagerAgent::RegisterGroundingModelType	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^void CGroundingManagerAgent::RegisterGroundingModelType(string sName, $/;"	f	class:CGroundingManagerAgent	signature:(string sName, FCreateGroundingModel fctCreateGroundingModel)
CGroundingManagerAgent::RegisterGroundingModelType	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    void RegisterGroundingModelType(string sName, $/;"	p	class:CGroundingManagerAgent	access:public	signature:(string sName, FCreateGroundingModel fctCreateGroundingModel)
CGroundingManagerAgent::ReleaseExternalPolicyInterfaces	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^void CGroundingManagerAgent::ReleaseExternalPolicyInterfaces() {$/;"	f	class:CGroundingManagerAgent	signature:()
CGroundingManagerAgent::ReleaseExternalPolicyInterfaces	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    void ReleaseExternalPolicyInterfaces();$/;"	p	class:CGroundingManagerAgent	access:public	signature:()
CGroundingManagerAgent::RemoveConceptGroundingRequest	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^void CGroundingManagerAgent::RemoveConceptGroundingRequest(CConcept* pConcept) {$/;"	f	class:CGroundingManagerAgent	signature:(CConcept* pConcept)
CGroundingManagerAgent::RemoveConceptGroundingRequest	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^	void RemoveConceptGroundingRequest(CConcept* pConcept);$/;"	p	class:CGroundingManagerAgent	access:public	signature:(CConcept* pConcept)
CGroundingManagerAgent::RequestConceptGrounding	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^void CGroundingManagerAgent::RequestConceptGrounding(CConcept* pConcept) {$/;"	f	class:CGroundingManagerAgent	signature:(CConcept* pConcept)
CGroundingManagerAgent::RequestConceptGrounding	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    void RequestConceptGrounding(CConcept* pConcept);$/;"	p	class:CGroundingManagerAgent	access:public	signature:(CConcept* pConcept)
CGroundingManagerAgent::RequestTurnGrounding	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^void CGroundingManagerAgent::RequestTurnGrounding(bool bATurnGroundingRequest) {$/;"	f	class:CGroundingManagerAgent	signature:(bool bATurnGroundingRequest)
CGroundingManagerAgent::RequestTurnGrounding	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    void RequestTurnGrounding(bool bATurnGroundingRequest = true);$/;"	p	class:CGroundingManagerAgent	access:public	signature:(bool bATurnGroundingRequest = true)
CGroundingManagerAgent::Run	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^void CGroundingManagerAgent::Run() {$/;"	f	class:CGroundingManagerAgent	signature:()
CGroundingManagerAgent::Run	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    virtual void Run();$/;"	p	class:CGroundingManagerAgent	access:public	signature:()
CGroundingManagerAgent::ScheduleConceptGrounding	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^string CGroundingManagerAgent::ScheduleConceptGrounding(CConcept* pConcept) {$/;"	f	class:CGroundingManagerAgent	signature:(CConcept* pConcept)
CGroundingManagerAgent::ScheduleConceptGrounding	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^	string ScheduleConceptGrounding(CConcept* pConcept);$/;"	p	class:CGroundingManagerAgent	access:public	signature:(CConcept* pConcept)
CGroundingManagerAgent::SetBeliefUpdatingModelName	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^void CGroundingManagerAgent::SetBeliefUpdatingModelName($/;"	f	class:CGroundingManagerAgent	signature:( string sABeliefUpdatingModelName)
CGroundingManagerAgent::SetBeliefUpdatingModelName	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^	virtual void SetBeliefUpdatingModelName($/;"	p	class:CGroundingManagerAgent	access:public	signature:( string sABeliefUpdatingModelName)
CGroundingManagerAgent::SetConceptGroundingRequestStatus	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^void CGroundingManagerAgent::SetConceptGroundingRequestStatus($/;"	f	class:CGroundingManagerAgent	signature:( CConcept* pConcept, int iAGroundingRequestStatus)
CGroundingManagerAgent::SetConceptGroundingRequestStatus	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    void SetConceptGroundingRequestStatus(CConcept* pConcept, $/;"	p	class:CGroundingManagerAgent	access:public	signature:(CConcept* pConcept, int iAGroundingRequestStatus)
CGroundingManagerAgent::SetConfiguration	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^void CGroundingManagerAgent::SetConfiguration($/;"	f	class:CGroundingManagerAgent	signature:( string sAGroundingManagerConfiguration)
CGroundingManagerAgent::SetConfiguration	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    void SetConfiguration(string sAGroundingManagerConfiguration);$/;"	p	class:CGroundingManagerAgent	access:public	signature:(string sAGroundingManagerConfiguration)
CGroundingManagerAgent::UnlockConceptGroundingRequestsQueue	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^void CGroundingManagerAgent::UnlockConceptGroundingRequestsQueue() {$/;"	f	class:CGroundingManagerAgent	signature:()
CGroundingManagerAgent::UnlockConceptGroundingRequestsQueue	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    void UnlockConceptGroundingRequestsQueue();$/;"	p	class:CGroundingManagerAgent	access:public	signature:()
CGroundingManagerAgent::UseGroundingAction	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^void CGroundingManagerAgent::UseGroundingAction(string sActionName, $/;"	f	class:CGroundingManagerAgent	signature:(string sActionName, CGroundingAction* pgaAGroundingAction)
CGroundingManagerAgent::UseGroundingAction	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    void UseGroundingAction(string sActionName, $/;"	p	class:CGroundingManagerAgent	access:public	signature:(string sActionName, CGroundingAction* pgaAGroundingAction)
CGroundingManagerAgent::bLockedGroundingRequests	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    bool bLockedGroundingRequests;$/;"	m	class:CGroundingManagerAgent	access:private
CGroundingManagerAgent::bTurnGroundingRequest	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    bool bTurnGroundingRequest;$/;"	m	class:CGroundingManagerAgent	access:private
CGroundingManagerAgent::getConceptGroundingRequestIndex	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^int CGroundingManagerAgent::getConceptGroundingRequestIndex(CConcept* pConcept) {$/;"	f	class:CGroundingManagerAgent	signature:(CConcept* pConcept)
CGroundingManagerAgent::getConceptGroundingRequestIndex	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    int getConceptGroundingRequestIndex(CConcept* pConcept);$/;"	p	class:CGroundingManagerAgent	access:private	signature:(CConcept* pConcept)
CGroundingManagerAgent::gmcConfig	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    TGroundingManagerConfiguration gmcConfig;$/;"	m	class:CGroundingManagerAgent	access:private
CGroundingManagerAgent::gmthGroundingModelTypeRegistry	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    TGroundingModelsTypeHash gmthGroundingModelTypeRegistry;$/;"	m	class:CGroundingManagerAgent	access:private
CGroundingManagerAgent::loadPolicy	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^string CGroundingManagerAgent::loadPolicy(string sFileName) {$/;"	f	class:CGroundingManagerAgent	signature:(string sFileName)
CGroundingManagerAgent::loadPolicy	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^	string loadPolicy(string sFileName);$/;"	p	class:CGroundingManagerAgent	access:private	signature:(string sFileName)
CGroundingManagerAgent::mapExternalPolicies	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    TExternalPolicies mapExternalPolicies;$/;"	m	class:CGroundingManagerAgent	access:private
CGroundingManagerAgent::operator []	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^CGroundingAction* CGroundingManagerAgent::operator [] (unsigned int $/;"	f	class:CGroundingManagerAgent	signature:(unsigned int iActionIndex)
CGroundingManagerAgent::operator []	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^CGroundingAction* CGroundingManagerAgent::operator[] ($/;"	f	class:CGroundingManagerAgent	signature:( string sGroundingActionName)
CGroundingManagerAgent::operator []	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    CGroundingAction* operator[] (string sGroundingActionName);$/;"	p	class:CGroundingManagerAgent	access:public	signature:(string sGroundingActionName)
CGroundingManagerAgent::operator []	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    CGroundingAction* operator[] (unsigned int iGroundingActionIndex);$/;"	p	class:CGroundingManagerAgent	access:public	signature:(unsigned int iGroundingActionIndex)
CGroundingManagerAgent::s2fBeliefUpdatingFeatures	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^	STRING2FLOAT s2fBeliefUpdatingFeatures;$/;"	m	class:CGroundingManagerAgent	access:private
CGroundingManagerAgent::s2fConstantParameters	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    STRING2FLOAT s2fConstantParameters;$/;"	m	class:CGroundingManagerAgent	access:private
CGroundingManagerAgent::s2s2vfBeliefUpdatingModels	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^	STRING2STRING2FLOATVECTOR s2s2vfBeliefUpdatingModels;$/;"	m	class:CGroundingManagerAgent	access:private
CGroundingManagerAgent::s2s2vfConceptValuesInfo	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^	STRING2STRING2FLOATVECTOR s2s2vfConceptValuesInfo;$/;"	m	class:CGroundingManagerAgent	access:private
CGroundingManagerAgent::s2sConceptTypeInfo	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^	STRING2STRING s2sConceptTypeInfo;$/;"	m	class:CGroundingManagerAgent	access:private
CGroundingManagerAgent::s2sPolicies	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    STRING2STRING s2sPolicies;$/;"	m	class:CGroundingManagerAgent	access:private
CGroundingManagerAgent::vcgrConceptGroundingRequests	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    TConceptGroundingRequests vcgrConceptGroundingRequests;$/;"	m	class:CGroundingManagerAgent	access:private
CGroundingManagerAgent::vgahiGroundingActionsHistory	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    vector<TGroundingActionHistoryItems> vgahiGroundingActionsHistory;$/;"	m	class:CGroundingManagerAgent	access:private
CGroundingManagerAgent::vpgaActions	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    vector < CGroundingAction * > vpgaActions;$/;"	m	class:CGroundingManagerAgent	access:private
CGroundingManagerAgent::vsActionNames	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    TStringVector vsActionNames;$/;"	m	class:CGroundingManagerAgent	access:private
CGroundingManagerAgent::~CGroundingManagerAgent	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^CGroundingManagerAgent::~CGroundingManagerAgent() {$/;"	f	class:CGroundingManagerAgent	signature:()
CGroundingManagerAgent::~CGroundingManagerAgent	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^	virtual ~CGroundingManagerAgent();$/;"	p	class:CGroundingManagerAgent	access:public	signature:()
CGroundingModel	DMCore/Grounding/GroundingModels/GroundingModel.cpp	/^CGroundingModel::CGroundingModel(CGroundingModel& rAGroundingModel) {$/;"	f	class:CGroundingModel	signature:(CGroundingModel& rAGroundingModel)
CGroundingModel	DMCore/Grounding/GroundingModels/GroundingModel.cpp	/^CGroundingModel::CGroundingModel(string sAModelPolicy, string sAName) {$/;"	f	class:CGroundingModel	signature:(string sAModelPolicy, string sAName)
CGroundingModel	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    CGroundingModel(CGroundingModel& rAGroundingModel);$/;"	p	class:CGroundingModel	access:public	signature:(CGroundingModel& rAGroundingModel)
CGroundingModel	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    CGroundingModel(string sAModelPolicy = "", $/;"	p	class:CGroundingModel	access:public	signature:(string sAModelPolicy = Ó, string sAModelName = Ó)
CGroundingModel	DMCore/Grounding/GroundingModels/GroundingModel.h	/^class CGroundingModel {$/;"	c
CGroundingModel::CGroundingModel	DMCore/Grounding/GroundingModels/GroundingModel.cpp	/^CGroundingModel::CGroundingModel(CGroundingModel& rAGroundingModel) {$/;"	f	class:CGroundingModel	signature:(CGroundingModel& rAGroundingModel)
CGroundingModel::CGroundingModel	DMCore/Grounding/GroundingModels/GroundingModel.cpp	/^CGroundingModel::CGroundingModel(string sAModelPolicy, string sAName) {$/;"	f	class:CGroundingModel	signature:(string sAModelPolicy, string sAName)
CGroundingModel::CGroundingModel	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    CGroundingModel(CGroundingModel& rAGroundingModel);$/;"	p	class:CGroundingModel	access:public	signature:(CGroundingModel& rAGroundingModel)
CGroundingModel::CGroundingModel	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    CGroundingModel(string sAModelPolicy = "", $/;"	p	class:CGroundingModel	access:public	signature:(string sAModelPolicy = Ó, string sAModelName = Ó)
CGroundingModel::Clone	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    virtual CGroundingModel* Clone() = 0;$/;"	p	class:CGroundingModel	access:public	signature:()
CGroundingModel::ComputeActionValuesDistribution	DMCore/Grounding/GroundingModels/GroundingModel.cpp	/^void CGroundingModel::ComputeActionValuesDistribution() {$/;"	f	class:CGroundingModel	signature:()
CGroundingModel::ComputeActionValuesDistribution	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    virtual void ComputeActionValuesDistribution();$/;"	p	class:CGroundingModel	access:public	signature:()
CGroundingModel::ComputeState	DMCore/Grounding/GroundingModels/GroundingModel.cpp	/^void CGroundingModel::ComputeState() {$/;"	f	class:CGroundingModel	signature:()
CGroundingModel::ComputeState	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    virtual void ComputeState();$/;"	p	class:CGroundingModel	access:public	signature:()
CGroundingModel::ComputeSuggestedActionIndex	DMCore/Grounding/GroundingModels/GroundingModel.cpp	/^int CGroundingModel::ComputeSuggestedActionIndex() {$/;"	f	class:CGroundingModel	signature:()
CGroundingModel::ComputeSuggestedActionIndex	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    virtual int ComputeSuggestedActionIndex();$/;"	p	class:CGroundingModel	access:public	signature:()
CGroundingModel::GetModelPolicy	DMCore/Grounding/GroundingModels/GroundingModel.cpp	/^string CGroundingModel::GetModelPolicy() {$/;"	f	class:CGroundingModel	signature:()
CGroundingModel::GetModelPolicy	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    virtual string GetModelPolicy();$/;"	p	class:CGroundingModel	access:public	signature:()
CGroundingModel::GetName	DMCore/Grounding/GroundingModels/GroundingModel.cpp	/^string CGroundingModel::GetName() {$/;"	f	class:CGroundingModel	signature:()
CGroundingModel::GetName	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    virtual string GetName();$/;"	p	class:CGroundingModel	access:public	signature:()
CGroundingModel::GetType	DMCore/Grounding/GroundingModels/GroundingModel.cpp	/^string CGroundingModel::GetType() {$/;"	f	class:CGroundingModel	signature:()
CGroundingModel::GetType	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    virtual string GetType();$/;"	p	class:CGroundingModel	access:public	signature:()
CGroundingModel::GroundingModelFactory	DMCore/Grounding/GroundingModels/GroundingModel.cpp	/^CGroundingModel* CGroundingModel::GroundingModelFactory(string sModelPolicy) {$/;"	f	class:CGroundingModel	signature:(string sModelPolicy)
CGroundingModel::GroundingModelFactory	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    static CGroundingModel* GroundingModelFactory(string sModelPolicy);$/;"	p	class:CGroundingModel	access:public	signature:(string sModelPolicy)
CGroundingModel::Initialize	DMCore/Grounding/GroundingModels/GroundingModel.cpp	/^void CGroundingModel::Initialize() {$/;"	f	class:CGroundingModel	signature:()
CGroundingModel::Initialize	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    virtual void Initialize();$/;"	p	class:CGroundingModel	access:public	signature:()
CGroundingModel::LoadPolicy	DMCore/Grounding/GroundingModels/GroundingModel.cpp	/^bool CGroundingModel::LoadPolicy() {$/;"	f	class:CGroundingModel	signature:()
CGroundingModel::LoadPolicy	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    virtual bool LoadPolicy();$/;"	p	class:CGroundingModel	access:public	signature:()
CGroundingModel::LogStateAction	DMCore/Grounding/GroundingModels/GroundingModel.cpp	/^void CGroundingModel::LogStateAction() {$/;"	f	class:CGroundingModel	signature:()
CGroundingModel::LogStateAction	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    virtual void LogStateAction();$/;"	p	class:CGroundingModel	access:public	signature:()
CGroundingModel::Run	DMCore/Grounding/GroundingModels/GroundingModel.cpp	/^void CGroundingModel::Run() {$/;"	f	class:CGroundingModel	signature:()
CGroundingModel::Run	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    virtual void Run();$/;"	p	class:CGroundingModel	access:public	signature:()
CGroundingModel::RunAction	DMCore/Grounding/GroundingModels/GroundingModel.cpp	/^void CGroundingModel::RunAction(int iActionIndex) {$/;"	f	class:CGroundingModel	signature:(int iActionIndex)
CGroundingModel::RunAction	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    virtual void RunAction(int iActionIndex);$/;"	p	class:CGroundingModel	access:public	signature:(int iActionIndex)
CGroundingModel::SetName	DMCore/Grounding/GroundingModels/GroundingModel.cpp	/^void CGroundingModel::SetName(string sAName) {$/;"	f	class:CGroundingModel	signature:(string sAName)
CGroundingModel::SetName	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    virtual void SetName(string sAName);$/;"	p	class:CGroundingModel	access:public	signature:(string sAName)
CGroundingModel::actionValuesToString	DMCore/Grounding/GroundingModels/GroundingModel.cpp	/^string CGroundingModel::actionValuesToString() {$/;"	f	class:CGroundingModel	signature:()
CGroundingModel::actionValuesToString	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    string actionValuesToString();$/;"	p	class:CGroundingModel	access:protected	signature:()
CGroundingModel::bExternalPolicy	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    bool bExternalPolicy;$/;"	m	class:CGroundingModel	access:protected
CGroundingModel::bdActionValues	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    CBeliefDistribution bdActionValues;$/;"	m	class:CGroundingModel	access:protected
CGroundingModel::bdBeliefState	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    CBeliefDistribution bdBeliefState;$/;"	m	class:CGroundingModel	access:protected
CGroundingModel::beliefStateToString	DMCore/Grounding/GroundingModels/GroundingModel.cpp	/^string CGroundingModel::beliefStateToString() {$/;"	f	class:CGroundingModel	signature:()
CGroundingModel::beliefStateToString	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    string beliefStateToString();$/;"	p	class:CGroundingModel	access:protected	signature:()
CGroundingModel::computeBeliefState	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    virtual void computeBeliefState() = 0;$/;"	p	class:CGroundingModel	access:protected	signature:()
CGroundingModel::computeFullState	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    virtual void computeFullState() = 0;$/;"	p	class:CGroundingModel	access:protected	signature:()
CGroundingModel::fExplorationParameter	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    float fExplorationParameter;$/;"	m	class:CGroundingModel	access:protected
CGroundingModel::iSuggestedActionIndex	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    int iSuggestedActionIndex;$/;"	m	class:CGroundingModel	access:protected
CGroundingModel::pPolicy	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    TPolicy pPolicy;    \/\/ the policy for the model: for each state, a$/;"	m	class:CGroundingModel	access:protected
CGroundingModel::pepiExternalPolicy	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    CExternalPolicyInterface* pepiExternalPolicy;$/;"	m	class:CGroundingModel	access:protected
CGroundingModel::sExplorationMode	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    string sExplorationMode;  $/;"	m	class:CGroundingModel	access:protected
CGroundingModel::sExternalPolicyHost	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    string sExternalPolicyHost; $/;"	m	class:CGroundingModel	access:protected
CGroundingModel::sModelPolicy	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    string sModelPolicy;\/\/ the model policy name$/;"	m	class:CGroundingModel	access:protected
CGroundingModel::sName	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    string sName;       \/\/ the model name$/;"	m	class:CGroundingModel	access:protected
CGroundingModel::stFullState	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    CState stFullState;$/;"	m	class:CGroundingModel	access:protected
CGroundingModel::viActionMappings	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    vector<int> viActionMappings; $/;"	m	class:CGroundingModel	access:protected
CGroundingModel::~CGroundingModel	DMCore/Grounding/GroundingModels/GroundingModel.cpp	/^CGroundingModel::~CGroundingModel() {$/;"	f	class:CGroundingModel	signature:()
CGroundingModel::~CGroundingModel	DMCore/Grounding/GroundingModels/GroundingModel.h	/^	virtual ~CGroundingModel();$/;"	p	class:CGroundingModel	access:public	signature:()
CHAR	spdlog/fmt/bundled/format.h	/^        INT, UINT, LONG_LONG, ULONG_LONG, BOOL, CHAR, LAST_INTEGER_TYPE = CHAR,$/;"	e	enum:fmt::internal::Value::Type
CHAR_FLAG	spdlog/fmt/bundled/format.h	/^    CHAR_FLAG = 0x10  \/\/ Argument has char type - used in error reporting.$/;"	e	enum:fmt::__anon29
CHyp	DMCore/Concepts/Concept.cpp	/^CHyp::CHyp() {$/;"	f	class:CHyp	signature:()
CHyp	DMCore/Concepts/Concept.cpp	/^CHyp::CHyp(CHyp& rAHyp) {$/;"	f	class:CHyp	signature:(CHyp& rAHyp)
CHyp	DMCore/Concepts/Concept.h	/^	CHyp();$/;"	p	class:CHyp	access:public	signature:()
CHyp	DMCore/Concepts/Concept.h	/^	CHyp(CHyp& rAHyp);$/;"	p	class:CHyp	access:public	signature:(CHyp& rAHyp)
CHyp	DMCore/Concepts/Concept.h	/^class CHyp {$/;"	c
CHyp::CHyp	DMCore/Concepts/Concept.cpp	/^CHyp::CHyp() {$/;"	f	class:CHyp	signature:()
CHyp::CHyp	DMCore/Concepts/Concept.cpp	/^CHyp::CHyp(CHyp& rAHyp) {$/;"	f	class:CHyp	signature:(CHyp& rAHyp)
CHyp::CHyp	DMCore/Concepts/Concept.h	/^	CHyp();$/;"	p	class:CHyp	access:public	signature:()
CHyp::CHyp	DMCore/Concepts/Concept.h	/^	CHyp(CHyp& rAHyp);$/;"	p	class:CHyp	access:public	signature:(CHyp& rAHyp)
CHyp::FromString	DMCore/Concepts/Concept.cpp	/^void CHyp::FromString(string sString) {$/;"	f	class:CHyp	signature:(string sString)
CHyp::FromString	DMCore/Concepts/Concept.h	/^	virtual void FromString(string sString);$/;"	p	class:CHyp	access:public	signature:(string sString)
CHyp::GetConfidence	DMCore/Concepts/Concept.cpp	/^float CHyp::GetConfidence() {$/;"	f	class:CHyp	signature:()
CHyp::GetConfidence	DMCore/Concepts/Concept.h	/^    float GetConfidence();$/;"	p	class:CHyp	access:public	signature:()
CHyp::GetHypType	DMCore/Concepts/Concept.cpp	/^TConceptType CHyp::GetHypType() {$/;"	f	class:CHyp	signature:()
CHyp::GetHypType	DMCore/Concepts/Concept.h	/^	TConceptType GetHypType();$/;"	p	class:CHyp	access:public	signature:()
CHyp::SetConfidence	DMCore/Concepts/Concept.cpp	/^void CHyp::SetConfidence(float fAConfidence) {$/;"	f	class:CHyp	signature:(float fAConfidence)
CHyp::SetConfidence	DMCore/Concepts/Concept.h	/^    virtual void SetConfidence(float fAConfidence);$/;"	p	class:CHyp	access:public	signature:(float fAConfidence)
CHyp::ToString	DMCore/Concepts/Concept.cpp	/^string CHyp::ToString() {$/;"	f	class:CHyp	signature:()
CHyp::ToString	DMCore/Concepts/Concept.h	/^	virtual string ToString();$/;"	p	class:CHyp	access:public	signature:()
CHyp::ValueToString	DMCore/Concepts/Concept.cpp	/^string CHyp::ValueToString() {$/;"	f	class:CHyp	signature:()
CHyp::ValueToString	DMCore/Concepts/Concept.h	/^	virtual string ValueToString();$/;"	p	class:CHyp	access:public	signature:()
CHyp::ctHypType	DMCore/Concepts/Concept.h	/^	TConceptType ctHypType;			\/\/ the concept (hypothesis) type$/;"	m	class:CHyp	access:protected
CHyp::fConfidence	DMCore/Concepts/Concept.h	/^	float fConfidence;              \/\/ the confidence score$/;"	m	class:CHyp	access:protected
CHyp::operator <	DMCore/Concepts/Concept.cpp	/^bool CHyp::operator < (CHyp& rAHyp) {$/;"	f	class:CHyp	signature:(CHyp& rAHyp)
CHyp::operator <	DMCore/Concepts/Concept.h	/^    virtual bool operator < (CHyp& rAHyp);$/;"	p	class:CHyp	access:public	signature:(CHyp& rAHyp)
CHyp::operator <=	DMCore/Concepts/Concept.cpp	/^bool CHyp::operator <= (CHyp& rAHyp) {$/;"	f	class:CHyp	signature:(CHyp& rAHyp)
CHyp::operator <=	DMCore/Concepts/Concept.h	/^    virtual bool operator <= (CHyp& rAHyp);$/;"	p	class:CHyp	access:public	signature:(CHyp& rAHyp)
CHyp::operator =	DMCore/Concepts/Concept.cpp	/^CHyp& CHyp::operator = (CHyp& rAHyp) {$/;"	f	class:CHyp	signature:(CHyp& rAHyp)
CHyp::operator =	DMCore/Concepts/Concept.h	/^	virtual CHyp& operator = (CHyp& rAHyp);$/;"	p	class:CHyp	access:public	signature:(CHyp& rAHyp)
CHyp::operator ==	DMCore/Concepts/Concept.cpp	/^bool CHyp::operator == (CHyp& rAHyp) {$/;"	f	class:CHyp	signature:(CHyp& rAHyp)
CHyp::operator ==	DMCore/Concepts/Concept.h	/^    virtual bool operator == (CHyp& rAHyp);$/;"	p	class:CHyp	access:public	signature:(CHyp& rAHyp)
CHyp::operator >	DMCore/Concepts/Concept.cpp	/^bool CHyp::operator > (CHyp& rAHyp) {$/;"	f	class:CHyp	signature:(CHyp& rAHyp)
CHyp::operator >	DMCore/Concepts/Concept.h	/^    virtual bool operator > (CHyp& rAHyp);$/;"	p	class:CHyp	access:public	signature:(CHyp& rAHyp)
CHyp::operator >=	DMCore/Concepts/Concept.cpp	/^bool CHyp::operator >= (CHyp& rAHyp) {$/;"	f	class:CHyp	signature:(CHyp& rAHyp)
CHyp::operator >=	DMCore/Concepts/Concept.h	/^    virtual bool operator >= (CHyp& rAHyp);$/;"	p	class:CHyp	access:public	signature:(CHyp& rAHyp)
CHyp::operator []	DMCore/Concepts/Concept.cpp	/^CHyp* CHyp::operator [] (string sItem) {$/;"	f	class:CHyp	signature:(string sItem)
CHyp::operator []	DMCore/Concepts/Concept.h	/^    virtual CHyp* operator [](string sItem);$/;"	p	class:CHyp	access:public	signature:(string sItem)
CHyp::~CHyp	DMCore/Concepts/Concept.cpp	/^CHyp::~CHyp() {$/;"	f	class:CHyp	signature:()
CHyp::~CHyp	DMCore/Concepts/Concept.h	/^	virtual ~CHyp();$/;"	p	class:CHyp	access:public	signature:()
CInt	DMCore/Concepts/IntConcept.h	158;"	d
CIntConcept	DMCore/Concepts/IntConcept.cpp	/^CIntConcept::CIntConcept(string sAName, TConceptSource csAConceptSource):$/;"	f	class:CIntConcept	signature:(string sAName, TConceptSource csAConceptSource)
CIntConcept	DMCore/Concepts/IntConcept.cpp	/^CIntConcept::CIntConcept(string sAName, int iAValue, float fAConfidence,$/;"	f	class:CIntConcept	signature:(string sAName, int iAValue, float fAConfidence, TConceptSource csAConceptSource)
CIntConcept	DMCore/Concepts/IntConcept.h	/^	CIntConcept(string sAName = "NONAME", $/;"	p	class:CIntConcept	access:public	signature:(string sAName = Ó, TConceptSource csAConceptSource = csUser)
CIntConcept	DMCore/Concepts/IntConcept.h	/^	CIntConcept(string sAName, int iAValue, float fAConfidence = 1.0,$/;"	p	class:CIntConcept	access:public	signature:(string sAName, int iAValue, float fAConfidence = 1.0, TConceptSource csAConceptSource = csUser)
CIntConcept	DMCore/Concepts/IntConcept.h	/^class CIntConcept: public CConcept {$/;"	c	inherits:CConcept
CIntConcept::CIntConcept	DMCore/Concepts/IntConcept.cpp	/^CIntConcept::CIntConcept(string sAName, TConceptSource csAConceptSource):$/;"	f	class:CIntConcept	signature:(string sAName, TConceptSource csAConceptSource)
CIntConcept::CIntConcept	DMCore/Concepts/IntConcept.cpp	/^CIntConcept::CIntConcept(string sAName, int iAValue, float fAConfidence,$/;"	f	class:CIntConcept	signature:(string sAName, int iAValue, float fAConfidence, TConceptSource csAConceptSource)
CIntConcept::CIntConcept	DMCore/Concepts/IntConcept.h	/^	CIntConcept(string sAName = "NONAME", $/;"	p	class:CIntConcept	access:public	signature:(string sAName = Ó, TConceptSource csAConceptSource = csUser)
CIntConcept::CIntConcept	DMCore/Concepts/IntConcept.h	/^	CIntConcept(string sAName, int iAValue, float fAConfidence = 1.0,$/;"	p	class:CIntConcept	access:public	signature:(string sAName, int iAValue, float fAConfidence = 1.0, TConceptSource csAConceptSource = csUser)
CIntConcept::EmptyClone	DMCore/Concepts/IntConcept.cpp	/^CConcept* CIntConcept::EmptyClone() {$/;"	f	class:CIntConcept	signature:()
CIntConcept::EmptyClone	DMCore/Concepts/IntConcept.h	/^    virtual CConcept* EmptyClone();$/;"	p	class:CIntConcept	access:public	signature:()
CIntConcept::HypFactory	DMCore/Concepts/IntConcept.cpp	/^CHyp* CIntConcept::HypFactory() {$/;"	f	class:CIntConcept	signature:()
CIntConcept::HypFactory	DMCore/Concepts/IntConcept.h	/^    virtual CHyp* HypFactory();$/;"	p	class:CIntConcept	access:public	signature:()
CIntConcept::operator =	DMCore/Concepts/IntConcept.cpp	/^CConcept& CIntConcept::operator = (bool bAValue) {$/;"	f	class:CIntConcept	signature:(bool bAValue)
CIntConcept::operator =	DMCore/Concepts/IntConcept.cpp	/^CConcept& CIntConcept::operator = (double dAValue) {$/;"	f	class:CIntConcept	signature:(double dAValue)
CIntConcept::operator =	DMCore/Concepts/IntConcept.cpp	/^CConcept& CIntConcept::operator = (float fAValue) {$/;"	f	class:CIntConcept	signature:(float fAValue)
CIntConcept::operator =	DMCore/Concepts/IntConcept.cpp	/^CConcept& CIntConcept::operator = (int iAValue) {$/;"	f	class:CIntConcept	signature:(int iAValue)
CIntConcept::operator =	DMCore/Concepts/IntConcept.h	/^	virtual CConcept& operator = (bool bAValue);$/;"	p	class:CIntConcept	access:public	signature:(bool bAValue)
CIntConcept::operator =	DMCore/Concepts/IntConcept.h	/^	virtual CConcept& operator = (double dAValue);$/;"	p	class:CIntConcept	access:public	signature:(double dAValue)
CIntConcept::operator =	DMCore/Concepts/IntConcept.h	/^	virtual CConcept& operator = (float fAValue);$/;"	p	class:CIntConcept	access:public	signature:(float fAValue)
CIntConcept::operator =	DMCore/Concepts/IntConcept.h	/^	virtual CConcept& operator = (int iAValue);$/;"	p	class:CIntConcept	access:public	signature:(int iAValue)
CIntConcept::operator bool	DMCore/Concepts/IntConcept.cpp	/^CIntConcept::operator bool() {$/;"	f	class:CIntConcept	signature:()
CIntConcept::operator bool	DMCore/Concepts/IntConcept.h	/^	virtual operator bool();$/;"	p	class:CIntConcept	access:public	signature:()
CIntConcept::operator int	DMCore/Concepts/IntConcept.cpp	/^CIntConcept::operator int() {$/;"	f	class:CIntConcept	signature:()
CIntConcept::operator int	DMCore/Concepts/IntConcept.h	/^    virtual operator int();$/;"	p	class:CIntConcept	access:public	signature:()
CIntHyp	DMCore/Concepts/IntConcept.cpp	/^CIntHyp::CIntHyp() {$/;"	f	class:CIntHyp	signature:()
CIntHyp	DMCore/Concepts/IntConcept.cpp	/^CIntHyp::CIntHyp(CIntHyp& rAIntHyp) {$/;"	f	class:CIntHyp	signature:(CIntHyp& rAIntHyp)
CIntHyp	DMCore/Concepts/IntConcept.cpp	/^CIntHyp::CIntHyp(int iAValue, float fAConfidence) {$/;"	f	class:CIntHyp	signature:(int iAValue, float fAConfidence)
CIntHyp	DMCore/Concepts/IntConcept.h	/^	CIntHyp();$/;"	p	class:CIntHyp	access:public	signature:()
CIntHyp	DMCore/Concepts/IntConcept.h	/^	CIntHyp(CIntHyp& rAIntHyp);$/;"	p	class:CIntHyp	access:public	signature:(CIntHyp& rAIntHyp)
CIntHyp	DMCore/Concepts/IntConcept.h	/^	CIntHyp(int iAValue, float fAConfidence = 1.0);$/;"	p	class:CIntHyp	access:public	signature:(int iAValue, float fAConfidence = 1.0)
CIntHyp	DMCore/Concepts/IntConcept.h	/^class CIntHyp : public CHyp {$/;"	c	inherits:CHyp
CIntHyp::CIntHyp	DMCore/Concepts/IntConcept.cpp	/^CIntHyp::CIntHyp() {$/;"	f	class:CIntHyp	signature:()
CIntHyp::CIntHyp	DMCore/Concepts/IntConcept.cpp	/^CIntHyp::CIntHyp(CIntHyp& rAIntHyp) {$/;"	f	class:CIntHyp	signature:(CIntHyp& rAIntHyp)
CIntHyp::CIntHyp	DMCore/Concepts/IntConcept.cpp	/^CIntHyp::CIntHyp(int iAValue, float fAConfidence) {$/;"	f	class:CIntHyp	signature:(int iAValue, float fAConfidence)
CIntHyp::CIntHyp	DMCore/Concepts/IntConcept.h	/^	CIntHyp();$/;"	p	class:CIntHyp	access:public	signature:()
CIntHyp::CIntHyp	DMCore/Concepts/IntConcept.h	/^	CIntHyp(CIntHyp& rAIntHyp);$/;"	p	class:CIntHyp	access:public	signature:(CIntHyp& rAIntHyp)
CIntHyp::CIntHyp	DMCore/Concepts/IntConcept.h	/^	CIntHyp(int iAValue, float fAConfidence = 1.0);$/;"	p	class:CIntHyp	access:public	signature:(int iAValue, float fAConfidence = 1.0)
CIntHyp::FromString	DMCore/Concepts/IntConcept.cpp	/^void CIntHyp::FromString(string sString) {$/;"	f	class:CIntHyp	signature:(string sString)
CIntHyp::FromString	DMCore/Concepts/IntConcept.h	/^	virtual void FromString(string sString);$/;"	p	class:CIntHyp	access:public	signature:(string sString)
CIntHyp::ToString	DMCore/Concepts/IntConcept.cpp	/^string CIntHyp::ToString() {$/;"	f	class:CIntHyp	signature:()
CIntHyp::ToString	DMCore/Concepts/IntConcept.h	/^	virtual string ToString();$/;"	p	class:CIntHyp	access:public	signature:()
CIntHyp::ValueToString	DMCore/Concepts/IntConcept.cpp	/^string CIntHyp::ValueToString() {$/;"	f	class:CIntHyp	signature:()
CIntHyp::ValueToString	DMCore/Concepts/IntConcept.h	/^	virtual string ValueToString();$/;"	p	class:CIntHyp	access:public	signature:()
CIntHyp::iValue	DMCore/Concepts/IntConcept.h	/^	int iValue;                     \/\/ the actual value$/;"	m	class:CIntHyp	access:protected
CIntHyp::operator <	DMCore/Concepts/IntConcept.cpp	/^bool CIntHyp::operator < (CHyp& rAHyp) {$/;"	f	class:CIntHyp	signature:(CHyp& rAHyp)
CIntHyp::operator <	DMCore/Concepts/IntConcept.h	/^    virtual bool operator < (CHyp& rAHyp);$/;"	p	class:CIntHyp	access:public	signature:(CHyp& rAHyp)
CIntHyp::operator <=	DMCore/Concepts/IntConcept.cpp	/^bool CIntHyp::operator <= (CHyp& rAHyp) {$/;"	f	class:CIntHyp	signature:(CHyp& rAHyp)
CIntHyp::operator <=	DMCore/Concepts/IntConcept.h	/^    virtual bool operator <= (CHyp& rAHyp);$/;"	p	class:CIntHyp	access:public	signature:(CHyp& rAHyp)
CIntHyp::operator =	DMCore/Concepts/IntConcept.cpp	/^CHyp& CIntHyp::operator = (CHyp& rAHyp) {$/;"	f	class:CIntHyp	signature:(CHyp& rAHyp)
CIntHyp::operator =	DMCore/Concepts/IntConcept.cpp	/^CHyp& CIntHyp::operator = (int iAValue) {$/;"	f	class:CIntHyp	signature:(int iAValue)
CIntHyp::operator =	DMCore/Concepts/IntConcept.h	/^	CHyp& operator = (int iAValue);$/;"	p	class:CIntHyp	access:public	signature:(int iAValue)
CIntHyp::operator =	DMCore/Concepts/IntConcept.h	/^	virtual CHyp& operator = (CHyp& rAHyp);$/;"	p	class:CIntHyp	access:public	signature:(CHyp& rAHyp)
CIntHyp::operator ==	DMCore/Concepts/IntConcept.cpp	/^bool CIntHyp::operator == (CHyp& rAHyp) {$/;"	f	class:CIntHyp	signature:(CHyp& rAHyp)
CIntHyp::operator ==	DMCore/Concepts/IntConcept.h	/^    virtual bool operator == (CHyp& rAHyp);$/;"	p	class:CIntHyp	access:public	signature:(CHyp& rAHyp)
CIntHyp::operator >	DMCore/Concepts/IntConcept.cpp	/^bool CIntHyp::operator > (CHyp& rAHyp) {$/;"	f	class:CIntHyp	signature:(CHyp& rAHyp)
CIntHyp::operator >	DMCore/Concepts/IntConcept.h	/^    virtual bool operator > (CHyp& rAHyp);$/;"	p	class:CIntHyp	access:public	signature:(CHyp& rAHyp)
CIntHyp::operator >=	DMCore/Concepts/IntConcept.cpp	/^bool CIntHyp::operator >= (CHyp& rAHyp) {$/;"	f	class:CIntHyp	signature:(CHyp& rAHyp)
CIntHyp::operator >=	DMCore/Concepts/IntConcept.h	/^    virtual bool operator >= (CHyp& rAHyp);$/;"	p	class:CIntHyp	access:public	signature:(CHyp& rAHyp)
CIntHyp::operator []	DMCore/Concepts/IntConcept.cpp	/^CHyp* CIntHyp::operator [] (string sItem) {$/;"	f	class:CIntHyp	signature:(string sItem)
CIntHyp::operator []	DMCore/Concepts/IntConcept.h	/^    virtual CHyp* operator [](string sItem);    $/;"	p	class:CIntHyp	access:public	signature:(string sItem)
CInteractionEvent	DMCore/Events/InteractionEvent.cpp	/^CInteractionEvent::CInteractionEvent():fConfidence(1.0) {}$/;"	f	class:CInteractionEvent	signature:()
CInteractionEvent	DMCore/Events/InteractionEvent.cpp	/^CInteractionEvent::CInteractionEvent(string sAType) {$/;"	f	class:CInteractionEvent	signature:(string sAType)
CInteractionEvent	DMCore/Events/InteractionEvent.h	/^	CInteractionEvent();	$/;"	p	class:CInteractionEvent	access:public	signature:()
CInteractionEvent	DMCore/Events/InteractionEvent.h	/^	CInteractionEvent(string sAType);	$/;"	p	class:CInteractionEvent	access:public	signature:(string sAType)
CInteractionEvent	DMCore/Events/InteractionEvent.h	/^class CInteractionEvent {$/;"	c
CInteractionEvent::CInteractionEvent	DMCore/Events/InteractionEvent.cpp	/^CInteractionEvent::CInteractionEvent():fConfidence(1.0) {}$/;"	f	class:CInteractionEvent	signature:()
CInteractionEvent::CInteractionEvent	DMCore/Events/InteractionEvent.cpp	/^CInteractionEvent::CInteractionEvent(string sAType) {$/;"	f	class:CInteractionEvent	signature:(string sAType)
CInteractionEvent::CInteractionEvent	DMCore/Events/InteractionEvent.h	/^	CInteractionEvent();	$/;"	p	class:CInteractionEvent	access:public	signature:()
CInteractionEvent::CInteractionEvent	DMCore/Events/InteractionEvent.h	/^	CInteractionEvent(string sAType);	$/;"	p	class:CInteractionEvent	access:public	signature:(string sAType)
CInteractionEvent::GetConfidence	DMCore/Events/InteractionEvent.cpp	/^float CInteractionEvent::GetConfidence() {$/;"	f	class:CInteractionEvent	signature:()
CInteractionEvent::GetConfidence	DMCore/Events/InteractionEvent.h	/^	float GetConfidence();$/;"	p	class:CInteractionEvent	access:public	signature:()
CInteractionEvent::GetFloatProperty	DMCore/Events/InteractionEvent.cpp	/^float CInteractionEvent::GetFloatProperty(string sSlot) {$/;"	f	class:CInteractionEvent	signature:(string sSlot)
CInteractionEvent::GetFloatProperty	DMCore/Events/InteractionEvent.h	/^	float GetFloatProperty(string sSlot);$/;"	p	class:CInteractionEvent	access:public	signature:(string sSlot)
CInteractionEvent::GetID	DMCore/Events/InteractionEvent.cpp	/^int CInteractionEvent::GetID() {$/;"	f	class:CInteractionEvent	signature:()
CInteractionEvent::GetID	DMCore/Events/InteractionEvent.h	/^	int GetID();$/;"	p	class:CInteractionEvent	access:public	signature:()
CInteractionEvent::GetIntProperty	DMCore/Events/InteractionEvent.cpp	/^int CInteractionEvent::GetIntProperty(string sSlot) {$/;"	f	class:CInteractionEvent	signature:(string sSlot)
CInteractionEvent::GetIntProperty	DMCore/Events/InteractionEvent.h	/^	int GetIntProperty(string sSlot);$/;"	p	class:CInteractionEvent	access:public	signature:(string sSlot)
CInteractionEvent::GetProperties	DMCore/Events/InteractionEvent.cpp	/^STRING2STRING &CInteractionEvent::GetProperties() {$/;"	f	class:CInteractionEvent	signature:()
CInteractionEvent::GetProperties	DMCore/Events/InteractionEvent.h	/^	STRING2STRING &GetProperties();$/;"	p	class:CInteractionEvent	access:public	signature:()
CInteractionEvent::GetStringProperty	DMCore/Events/InteractionEvent.cpp	/^string CInteractionEvent::GetStringProperty(string sSlot) {$/;"	f	class:CInteractionEvent	signature:(string sSlot)
CInteractionEvent::GetStringProperty	DMCore/Events/InteractionEvent.h	/^	string GetStringProperty(string sSlot);$/;"	p	class:CInteractionEvent	access:public	signature:(string sSlot)
CInteractionEvent::GetType	DMCore/Events/InteractionEvent.cpp	/^string CInteractionEvent::GetType() {$/;"	f	class:CInteractionEvent	signature:()
CInteractionEvent::GetType	DMCore/Events/InteractionEvent.h	/^	string GetType();$/;"	p	class:CInteractionEvent	access:public	signature:()
CInteractionEvent::GetValueForExpectation	DMCore/Events/InteractionEvent.cpp	/^string CInteractionEvent::GetValueForExpectation(string sGrammarExpectation) {$/;"	f	class:CInteractionEvent	signature:(string sGrammarExpectation)
CInteractionEvent::GetValueForExpectation	DMCore/Events/InteractionEvent.h	/^	string GetValueForExpectation(string sGrammarExpectation);$/;"	p	class:CInteractionEvent	access:public	signature:(string sGrammarExpectation)
CInteractionEvent::HasProperty	DMCore/Events/InteractionEvent.cpp	/^bool CInteractionEvent::HasProperty(string sSlot) {$/;"	f	class:CInteractionEvent	signature:(string sSlot)
CInteractionEvent::HasProperty	DMCore/Events/InteractionEvent.h	/^	bool HasProperty(string sSlot);$/;"	p	class:CInteractionEvent	access:public	signature:(string sSlot)
CInteractionEvent::IsComplete	DMCore/Events/InteractionEvent.cpp	/^bool CInteractionEvent::IsComplete() {$/;"	f	class:CInteractionEvent	signature:()
CInteractionEvent::IsComplete	DMCore/Events/InteractionEvent.h	/^	bool IsComplete();$/;"	p	class:CInteractionEvent	access:public	signature:()
CInteractionEvent::Matches	DMCore/Events/InteractionEvent.cpp	/^bool CInteractionEvent::Matches(string sGrammarExpectation) {$/;"	f	class:CInteractionEvent	signature:(string sGrammarExpectation)
CInteractionEvent::Matches	DMCore/Events/InteractionEvent.h	/^	bool Matches(string sGrammarExpectation);$/;"	p	class:CInteractionEvent	access:public	signature:(string sGrammarExpectation)
CInteractionEvent::SetComplete	DMCore/Events/InteractionEvent.cpp	/^void CInteractionEvent::SetComplete(bool complete) {$/;"	f	class:CInteractionEvent	signature:(bool complete)
CInteractionEvent::SetComplete	DMCore/Events/InteractionEvent.h	/^  void SetComplete(bool complete = true);$/;"	p	class:CInteractionEvent	access:public	signature:(bool complete = true)
CInteractionEvent::SetProperties	DMCore/Events/InteractionEvent.cpp	/^void CInteractionEvent::SetProperties(STRING2STRING& s2sProperties) {$/;"	f	class:CInteractionEvent	signature:(STRING2STRING& s2sProperties)
CInteractionEvent::SetProperties	DMCore/Events/InteractionEvent.h	/^  void SetProperties(STRING2STRING& s2sProperties);$/;"	p	class:CInteractionEvent	access:public	signature:(STRING2STRING& s2sProperties)
CInteractionEvent::SetProperty	DMCore/Events/InteractionEvent.cpp	/^void CInteractionEvent::SetProperty(string sSlot, string sValue) {$/;"	f	class:CInteractionEvent	signature:(string sSlot, string sValue)
CInteractionEvent::SetProperty	DMCore/Events/InteractionEvent.h	/^	void SetProperty(string sSlot, string sValue);$/;"	p	class:CInteractionEvent	access:public	signature:(string sSlot, string sValue)
CInteractionEvent::ToString	DMCore/Events/InteractionEvent.cpp	/^string CInteractionEvent::ToString() {$/;"	f	class:CInteractionEvent	signature:()
CInteractionEvent::ToString	DMCore/Events/InteractionEvent.h	/^	string ToString();$/;"	p	class:CInteractionEvent	access:public	signature:()
CInteractionEvent::bComplete	DMCore/Events/InteractionEvent.h	/^	bool bComplete;$/;"	m	class:CInteractionEvent	access:protected
CInteractionEvent::fConfidence	DMCore/Events/InteractionEvent.h	/^	float fConfidence;$/;"	m	class:CInteractionEvent	access:protected
CInteractionEvent::iID	DMCore/Events/InteractionEvent.h	/^	int iID;$/;"	m	class:CInteractionEvent	access:protected
CInteractionEvent::matchesSlot	DMCore/Events/InteractionEvent.cpp	/^bool CInteractionEvent::matchesSlot( string pattern, string slot) {$/;"	f	class:CInteractionEvent	signature:( string pattern, string slot)
CInteractionEvent::matchesSlot	DMCore/Events/InteractionEvent.h	/^	bool matchesSlot( string slot, string pattern);$/;"	p	class:CInteractionEvent	access:private	signature:( string slot, string pattern)
CInteractionEvent::s2sProperties	DMCore/Events/InteractionEvent.h	/^	STRING2STRING s2sProperties;$/;"	m	class:CInteractionEvent	access:protected
CInteractionEvent::sType	DMCore/Events/InteractionEvent.h	/^	string sType;$/;"	m	class:CInteractionEvent	access:protected
CInteractionEvent::~CInteractionEvent	DMCore/Events/InteractionEvent.cpp	/^CInteractionEvent::~CInteractionEvent() {}$/;"	f	class:CInteractionEvent	signature:()
CInteractionEvent::~CInteractionEvent	DMCore/Events/InteractionEvent.h	/^	virtual ~CInteractionEvent();$/;"	p	class:CInteractionEvent	access:public	signature:()
CInteractionEventManagerAgent	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.cpp	/^CInteractionEventManagerAgent::CInteractionEventManagerAgent(string sAName,$/;"	f	class:CInteractionEventManagerAgent	signature:(string sAName, string sAConfiguration, string sAType)
CInteractionEventManagerAgent	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.h	/^	CInteractionEventManagerAgent(string sAName, $/;"	p	class:CInteractionEventManagerAgent	access:public	signature:(string sAName, string sAConfiguration = Ó, string sAType = Ó)
CInteractionEventManagerAgent	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.h	/^class CInteractionEventManagerAgent: public CAgent {$/;"	c	inherits:CAgent
CInteractionEventManagerAgent::AgentFactory	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.cpp	/^CAgent* CInteractionEventManagerAgent::AgentFactory(string sAName,$/;"	f	class:CInteractionEventManagerAgent	signature:(string sAName, string sAConfiguration)
CInteractionEventManagerAgent::AgentFactory	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.h	/^	static CAgent* AgentFactory(string sAName, string sAConfiguration);$/;"	p	class:CInteractionEventManagerAgent	access:public	signature:(string sAName, string sAConfiguration)
CInteractionEventManagerAgent::CInteractionEventManagerAgent	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.cpp	/^CInteractionEventManagerAgent::CInteractionEventManagerAgent(string sAName,$/;"	f	class:CInteractionEventManagerAgent	signature:(string sAName, string sAConfiguration, string sAType)
CInteractionEventManagerAgent::CInteractionEventManagerAgent	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.h	/^	CInteractionEventManagerAgent(string sAName, $/;"	p	class:CInteractionEventManagerAgent	access:public	signature:(string sAName, string sAConfiguration = Ó, string sAType = Ó)
CInteractionEventManagerAgent::GetLastEvent	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.cpp	/^CInteractionEvent *CInteractionEventManagerAgent::GetLastEvent() {$/;"	f	class:CInteractionEventManagerAgent	signature:()
CInteractionEventManagerAgent::GetLastEvent	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.h	/^	CInteractionEvent *GetLastEvent();$/;"	p	class:CInteractionEventManagerAgent	access:public	signature:()
CInteractionEventManagerAgent::GetLastEventConfidence	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.cpp	/^float CInteractionEventManagerAgent::GetLastEventConfidence() {$/;"	f	class:CInteractionEventManagerAgent	signature:()
CInteractionEventManagerAgent::GetLastEventConfidence	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.h	/^  float GetLastEventConfidence();$/;"	p	class:CInteractionEventManagerAgent	access:public	signature:()
CInteractionEventManagerAgent::GetLastInput	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.cpp	/^CInteractionEvent *CInteractionEventManagerAgent::GetLastInput() {$/;"	f	class:CInteractionEventManagerAgent	signature:()
CInteractionEventManagerAgent::GetLastInput	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.h	/^	CInteractionEvent *GetLastInput();$/;"	p	class:CInteractionEventManagerAgent	access:public	signature:()
CInteractionEventManagerAgent::GetNextEvent	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.cpp	/^CInteractionEvent *CInteractionEventManagerAgent::GetNextEvent() {$/;"	f	class:CInteractionEventManagerAgent	signature:()
CInteractionEventManagerAgent::GetNextEvent	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.h	/^	CInteractionEvent *GetNextEvent();$/;"	p	class:CInteractionEventManagerAgent	access:public	signature:()
CInteractionEventManagerAgent::GetValueForExpectation	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.cpp	/^string CInteractionEventManagerAgent::GetValueForExpectation(string sGrammarExpectation) {$/;"	f	class:CInteractionEventManagerAgent	signature:(string sGrammarExpectation)
CInteractionEventManagerAgent::GetValueForExpectation	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.h	/^	string GetValueForExpectation(string sGrammarExpectation);$/;"	p	class:CInteractionEventManagerAgent	access:public	signature:(string sGrammarExpectation)
CInteractionEventManagerAgent::HasEvent	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.cpp	/^bool CInteractionEventManagerAgent::HasEvent() {$/;"	f	class:CInteractionEventManagerAgent	signature:()
CInteractionEventManagerAgent::HasEvent	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.h	/^	bool HasEvent();$/;"	p	class:CInteractionEventManagerAgent	access:public	signature:()
CInteractionEventManagerAgent::Initialize	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.cpp	/^void CInteractionEventManagerAgent::Initialize() {$/;"	f	class:CInteractionEventManagerAgent	signature:()
CInteractionEventManagerAgent::Initialize	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.h	/^	virtual void Initialize();	\/\/ overwritten Initialize$/;"	p	class:CInteractionEventManagerAgent	access:public	signature:()
CInteractionEventManagerAgent::LastEventIsComplete	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.cpp	/^bool CInteractionEventManagerAgent::LastEventIsComplete() {$/;"	f	class:CInteractionEventManagerAgent	signature:()
CInteractionEventManagerAgent::LastEventIsComplete	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.h	/^  bool LastEventIsComplete();$/;"	p	class:CInteractionEventManagerAgent	access:public	signature:()
CInteractionEventManagerAgent::LastEventMatches	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.cpp	/^bool CInteractionEventManagerAgent::LastEventMatches(string sGrammarExpectation) {$/;"	f	class:CInteractionEventManagerAgent	signature:(string sGrammarExpectation)
CInteractionEventManagerAgent::LastEventMatches	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.h	/^	bool LastEventMatches(string sGrammarExpectation);$/;"	p	class:CInteractionEventManagerAgent	access:public	signature:(string sGrammarExpectation)
CInteractionEventManagerAgent::LastInputMatches	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.cpp	/^bool CInteractionEventManagerAgent::LastInputMatches(string sGrammarExpectation) {$/;"	f	class:CInteractionEventManagerAgent	signature:(string sGrammarExpectation)
CInteractionEventManagerAgent::LastInputMatches	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.h	/^	bool LastInputMatches(string sGrammarExpectation);$/;"	p	class:CInteractionEventManagerAgent	access:public	signature:(string sGrammarExpectation)
CInteractionEventManagerAgent::Reset	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.cpp	/^void CInteractionEventManagerAgent::Reset() {}$/;"	f	class:CInteractionEventManagerAgent	signature:()
CInteractionEventManagerAgent::Reset	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.h	/^	virtual void Reset();	\/\/ overwritten Reset$/;"	p	class:CInteractionEventManagerAgent	access:public	signature:()
CInteractionEventManagerAgent::WaitForEvent	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.cpp	/^void CInteractionEventManagerAgent::WaitForEvent() {$/;"	f	class:CInteractionEventManagerAgent	signature:()
CInteractionEventManagerAgent::WaitForEvent	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.h	/^	void WaitForEvent();$/;"	p	class:CInteractionEventManagerAgent	access:public	signature:()
CInteractionEventManagerAgent::analysisInput	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.cpp	/^STRING2STRING &CInteractionEventManagerAgent::analysisInput(string inputString) {$/;"	f	class:CInteractionEventManagerAgent	signature:(string inputString)
CInteractionEventManagerAgent::analysisInput	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.h	/^  STRING2STRING &analysisInput(string inputString);$/;"	p	class:CInteractionEventManagerAgent	access:public	signature:(string inputString)
CInteractionEventManagerAgent::pieLastEvent	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.h	/^	CInteractionEvent *pieLastEvent;$/;"	m	class:CInteractionEventManagerAgent	access:private
CInteractionEventManagerAgent::pieLastInput	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.h	/^	CInteractionEvent *pieLastInput;$/;"	m	class:CInteractionEventManagerAgent	access:private
CInteractionEventManagerAgent::qpieEventQueue	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.h	/^  queue <CInteractionEvent*, list<CInteractionEvent*> > qpieEventQueue;$/;"	m	class:CInteractionEventManagerAgent	access:private
CInteractionEventManagerAgent::vpieEventHistory	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.h	/^	vector <CInteractionEvent*> vpieEventHistory;$/;"	m	class:CInteractionEventManagerAgent	access:private
CInteractionEventManagerAgent::~CInteractionEventManagerAgent	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.cpp	/^CInteractionEventManagerAgent::~CInteractionEventManagerAgent() {}$/;"	f	class:CInteractionEventManagerAgent	signature:()
CInteractionEventManagerAgent::~CInteractionEventManagerAgent	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.h	/^	virtual ~CInteractionEventManagerAgent();$/;"	p	class:CInteractionEventManagerAgent	access:public	signature:()
CLEAR	DialogTask/DialogTask.h	258;"	d
CMAExecute	DMCore/Agents/DialogAgents/BasicAgents/MAExecute.cpp	/^CMAExecute::CMAExecute(string sAName, $/;"	f	class:CMAExecute	signature:(string sAName, string sAConfiguration, string sAType)
CMAExecute	DMCore/Agents/DialogAgents/BasicAgents/MAExecute.h	/^	CMAExecute(string sAName, $/;"	p	class:CMAExecute	access:public	signature:(string sAName, string sAConfiguration = Ó, string sAType = Ó)
CMAExecute	DMCore/Agents/DialogAgents/BasicAgents/MAExecute.h	/^class CMAExecute: public CDialogAgent {$/;"	c	inherits:CDialogAgent
CMAExecute::AgentFactory	DMCore/Agents/DialogAgents/BasicAgents/MAExecute.cpp	/^CAgent* CMAExecute::AgentFactory(string sAName, string sAConfiguration) {$/;"	f	class:CMAExecute	signature:(string sAName, string sAConfiguration)
CMAExecute::AgentFactory	DMCore/Agents/DialogAgents/BasicAgents/MAExecute.h	/^	static CAgent* AgentFactory(string sAName, string sAConfiguration);$/;"	p	class:CMAExecute	access:public	signature:(string sAName, string sAConfiguration)
CMAExecute::CMAExecute	DMCore/Agents/DialogAgents/BasicAgents/MAExecute.cpp	/^CMAExecute::CMAExecute(string sAName, $/;"	f	class:CMAExecute	signature:(string sAName, string sAConfiguration, string sAType)
CMAExecute::CMAExecute	DMCore/Agents/DialogAgents/BasicAgents/MAExecute.h	/^	CMAExecute(string sAName, $/;"	p	class:CMAExecute	access:public	signature:(string sAName, string sAConfiguration = Ó, string sAType = Ó)
CMAExecute::Execute	DMCore/Agents/DialogAgents/BasicAgents/MAExecute.cpp	/^TDialogExecuteReturnCode CMAExecute::Execute() {$/;"	f	class:CMAExecute	signature:()
CMAExecute::Execute	DMCore/Agents/DialogAgents/BasicAgents/MAExecute.h	/^	virtual TDialogExecuteReturnCode Execute();$/;"	p	class:CMAExecute	access:public	signature:()
CMAExecute::ExecuteRoutine	DMCore/Agents/DialogAgents/BasicAgents/MAExecute.cpp	/^void CMAExecute::ExecuteRoutine() {$/;"	f	class:CMAExecute	signature:()
CMAExecute::ExecuteRoutine	DMCore/Agents/DialogAgents/BasicAgents/MAExecute.h	/^	virtual void ExecuteRoutine();$/;"	p	class:CMAExecute	access:public	signature:()
CMAExecute::GetExecuteCall	DMCore/Agents/DialogAgents/BasicAgents/MAExecute.cpp	/^string CMAExecute::GetExecuteCall() {$/;"	f	class:CMAExecute	signature:()
CMAExecute::GetExecuteCall	DMCore/Agents/DialogAgents/BasicAgents/MAExecute.h	/^	virtual string GetExecuteCall();$/;"	p	class:CMAExecute	access:public	signature:()
CMAExecute::SuccessCriteriaSatisfied	DMCore/Agents/DialogAgents/BasicAgents/MAExecute.cpp	/^bool CMAExecute::SuccessCriteriaSatisfied() {$/;"	f	class:CMAExecute	signature:()
CMAExecute::SuccessCriteriaSatisfied	DMCore/Agents/DialogAgents/BasicAgents/MAExecute.h	/^	virtual bool SuccessCriteriaSatisfied();$/;"	p	class:CMAExecute	access:public	signature:()
CMAExecute::~CMAExecute	DMCore/Agents/DialogAgents/BasicAgents/MAExecute.cpp	/^CMAExecute::~CMAExecute() {$/;"	f	class:CMAExecute	signature:()
CMAExecute::~CMAExecute	DMCore/Agents/DialogAgents/BasicAgents/MAExecute.h	/^	virtual ~CMAExecute();$/;"	p	class:CMAExecute	access:public	signature:()
CMAExpect	DMCore/Agents/DialogAgents/BasicAgents/MAExpect.cpp	/^CMAExpect::CMAExpect(string sAName, string sAConfiguration, string sAType): $/;"	f	class:CMAExpect	signature:(string sAName, string sAConfiguration, string sAType)
CMAExpect	DMCore/Agents/DialogAgents/BasicAgents/MAExpect.h	/^	CMAExpect(string sAName,$/;"	p	class:CMAExpect	access:public	signature:(string sAName, string sAConfiguration, string sAType = Ó)
CMAExpect	DMCore/Agents/DialogAgents/BasicAgents/MAExpect.h	/^class CMAExpect: public CDialogAgent {$/;"	c	inherits:CDialogAgent
CMAExpect::AgentFactory	DMCore/Agents/DialogAgents/BasicAgents/MAExpect.cpp	/^CAgent* CMAExpect::AgentFactory(string sAName, string sAConfiguration) {$/;"	f	class:CMAExpect	signature:(string sAName, string sAConfiguration)
CMAExpect::AgentFactory	DMCore/Agents/DialogAgents/BasicAgents/MAExpect.h	/^	static CAgent* AgentFactory(string sAName, string sAConfiguration);$/;"	p	class:CMAExpect	access:public	signature:(string sAName, string sAConfiguration)
CMAExpect::CMAExpect	DMCore/Agents/DialogAgents/BasicAgents/MAExpect.cpp	/^CMAExpect::CMAExpect(string sAName, string sAConfiguration, string sAType): $/;"	f	class:CMAExpect	signature:(string sAName, string sAConfiguration, string sAType)
CMAExpect::CMAExpect	DMCore/Agents/DialogAgents/BasicAgents/MAExpect.h	/^	CMAExpect(string sAName,$/;"	p	class:CMAExpect	access:public	signature:(string sAName, string sAConfiguration, string sAType = Ó)
CMAExpect::DeclareExpectations	DMCore/Agents/DialogAgents/BasicAgents/MAExpect.cpp	/^int CMAExpect::DeclareExpectations(TConceptExpectationList& $/;"	f	class:CMAExpect	signature:(TConceptExpectationList& celExpectationList)
CMAExpect::DeclareExpectations	DMCore/Agents/DialogAgents/BasicAgents/MAExpect.h	/^	virtual int DeclareExpectations(TConceptExpectationList&$/;"	p	class:CMAExpect	access:public	signature:(TConceptExpectationList& celExpectationList)
CMAExpect::Execute	DMCore/Agents/DialogAgents/BasicAgents/MAExpect.cpp	/^TDialogExecuteReturnCode CMAExpect::Execute() {$/;"	f	class:CMAExpect	signature:()
CMAExpect::Execute	DMCore/Agents/DialogAgents/BasicAgents/MAExpect.h	/^	virtual TDialogExecuteReturnCode Execute();$/;"	p	class:CMAExpect	access:public	signature:()
CMAExpect::ExpectedConcept	DMCore/Agents/DialogAgents/BasicAgents/MAExpect.cpp	/^CConcept* CMAExpect::ExpectedConcept() {$/;"	f	class:CMAExpect	signature:()
CMAExpect::ExpectedConcept	DMCore/Agents/DialogAgents/BasicAgents/MAExpect.h	/^	virtual CConcept* ExpectedConcept();$/;"	p	class:CMAExpect	access:public	signature:()
CMAExpect::ExpectedConceptName	DMCore/Agents/DialogAgents/BasicAgents/MAExpect.cpp	/^string CMAExpect::ExpectedConceptName() {$/;"	f	class:CMAExpect	signature:()
CMAExpect::ExpectedConceptName	DMCore/Agents/DialogAgents/BasicAgents/MAExpect.h	/^	virtual string ExpectedConceptName();$/;"	p	class:CMAExpect	access:public	signature:()
CMAExpect::GrammarMapping	DMCore/Agents/DialogAgents/BasicAgents/MAExpect.cpp	/^string CMAExpect::GrammarMapping() {$/;"	f	class:CMAExpect	signature:()
CMAExpect::GrammarMapping	DMCore/Agents/DialogAgents/BasicAgents/MAExpect.h	/^	virtual string GrammarMapping();$/;"	p	class:CMAExpect	access:public	signature:()
CMAExpect::IsExecutable	DMCore/Agents/DialogAgents/BasicAgents/MAExpect.cpp	/^bool CMAExpect::IsExecutable() {$/;"	f	class:CMAExpect	signature:()
CMAExpect::IsExecutable	DMCore/Agents/DialogAgents/BasicAgents/MAExpect.h	/^	virtual bool IsExecutable();$/;"	p	class:CMAExpect	access:public	signature:()
CMAExpect::PreconditionsSatisfied	DMCore/Agents/DialogAgents/BasicAgents/MAExpect.cpp	/^bool CMAExpect::PreconditionsSatisfied() {$/;"	f	class:CMAExpect	signature:()
CMAExpect::PreconditionsSatisfied	DMCore/Agents/DialogAgents/BasicAgents/MAExpect.h	/^	virtual bool PreconditionsSatisfied();$/;"	p	class:CMAExpect	access:public	signature:()
CMAExpect::SetCompleted	DMCore/Agents/DialogAgents/BasicAgents/MAExpect.cpp	/^void CMAExpect::SetCompleted(TCompletionType ctACompletionType) {$/;"	f	class:CMAExpect	signature:(TCompletionType ctACompletionType)
CMAExpect::SetCompleted	DMCore/Agents/DialogAgents/BasicAgents/MAExpect.h	/^	virtual void SetCompleted(TCompletionType ctACompletionType = ctSuccess);$/;"	p	class:CMAExpect	access:public	signature:(TCompletionType ctACompletionType = ctSuccess)
CMAExpect::~CMAExpect	DMCore/Agents/DialogAgents/BasicAgents/MAExpect.cpp	/^CMAExpect::~CMAExpect() {$/;"	f	class:CMAExpect	signature:()
CMAExpect::~CMAExpect	DMCore/Agents/DialogAgents/BasicAgents/MAExpect.h	/^	virtual ~CMAExpect();$/;"	p	class:CMAExpect	access:public	signature:()
CMAInform	DMCore/Agents/DialogAgents/BasicAgents/MAInform.cpp	/^CMAInform::CMAInform(string sAName, string sAConfiguration, string sAType): $/;"	f	class:CMAInform	signature:(string sAName, string sAConfiguration, string sAType)
CMAInform	DMCore/Agents/DialogAgents/BasicAgents/MAInform.h	/^	CMAInform(string sAName, $/;"	p	class:CMAInform	access:public	signature:(string sAName, string sAConfiguration = Ó, string sAType = Ó)
CMAInform	DMCore/Agents/DialogAgents/BasicAgents/MAInform.h	/^class CMAInform: public CDialogAgent {$/;"	c	inherits:CDialogAgent
CMAInform::AgentFactory	DMCore/Agents/DialogAgents/BasicAgents/MAInform.cpp	/^CAgent* CMAInform::AgentFactory(string sAName, string sAConfiguration) {$/;"	f	class:CMAInform	signature:(string sAName, string sAConfiguration)
CMAInform::AgentFactory	DMCore/Agents/DialogAgents/BasicAgents/MAInform.h	/^	static CAgent* AgentFactory(string sAName, string sAConfiguration);$/;"	p	class:CMAInform	access:public	signature:(string sAName, string sAConfiguration)
CMAInform::CMAInform	DMCore/Agents/DialogAgents/BasicAgents/MAInform.cpp	/^CMAInform::CMAInform(string sAName, string sAConfiguration, string sAType): $/;"	f	class:CMAInform	signature:(string sAName, string sAConfiguration, string sAType)
CMAInform::CMAInform	DMCore/Agents/DialogAgents/BasicAgents/MAInform.h	/^	CMAInform(string sAName, $/;"	p	class:CMAInform	access:public	signature:(string sAName, string sAConfiguration = Ó, string sAType = Ó)
CMAInform::Execute	DMCore/Agents/DialogAgents/BasicAgents/MAInform.cpp	/^TDialogExecuteReturnCode CMAInform::Execute() {$/;"	f	class:CMAInform	signature:()
CMAInform::Execute	DMCore/Agents/DialogAgents/BasicAgents/MAInform.h	/^	virtual TDialogExecuteReturnCode Execute();$/;"	p	class:CMAInform	access:public	signature:()
CMAInform::Prompt	DMCore/Agents/DialogAgents/BasicAgents/MAInform.cpp	/^string CMAInform::Prompt() {$/;"	f	class:CMAInform	signature:()
CMAInform::Prompt	DMCore/Agents/DialogAgents/BasicAgents/MAInform.h	/^	virtual string Prompt();$/;"	p	class:CMAInform	access:public	signature:()
CMAInform::ReOpenTopic	DMCore/Agents/DialogAgents/BasicAgents/MAInform.cpp	/^void CMAInform::ReOpenTopic() {$/;"	f	class:CMAInform	signature:()
CMAInform::ReOpenTopic	DMCore/Agents/DialogAgents/BasicAgents/MAInform.h	/^	virtual void ReOpenTopic();$/;"	p	class:CMAInform	access:public	signature:()
CMAInform::RequiresFloor	DMCore/Agents/DialogAgents/BasicAgents/MAInform.h	/^	virtual bool RequiresFloor() {return true;}$/;"	f	class:CMAInform	access:public	signature:()
CMAInform::Reset	DMCore/Agents/DialogAgents/BasicAgents/MAInform.cpp	/^void CMAInform::Reset() {$/;"	f	class:CMAInform	signature:()
CMAInform::Reset	DMCore/Agents/DialogAgents/BasicAgents/MAInform.h	/^	virtual void Reset();$/;"	p	class:CMAInform	access:public	signature:()
CMAInform::SuccessCriteriaSatisfied	DMCore/Agents/DialogAgents/BasicAgents/MAInform.cpp	/^bool CMAInform::SuccessCriteriaSatisfied() {$/;"	f	class:CMAInform	signature:()
CMAInform::SuccessCriteriaSatisfied	DMCore/Agents/DialogAgents/BasicAgents/MAInform.h	/^	virtual bool SuccessCriteriaSatisfied();$/;"	p	class:CMAInform	access:public	signature:()
CMAInform::voOutputs	DMCore/Agents/DialogAgents/BasicAgents/MAInform.h	/^	vector<COutput*> voOutputs;$/;"	m	class:CMAInform	access:protected
CMAInform::~CMAInform	DMCore/Agents/DialogAgents/BasicAgents/MAInform.cpp	/^CMAInform::~CMAInform() {$/;"	f	class:CMAInform	signature:()
CMAInform::~CMAInform	DMCore/Agents/DialogAgents/BasicAgents/MAInform.h	/^	virtual ~CMAInform();$/;"	p	class:CMAInform	access:public	signature:()
CMAKE_BINARY_DIR	Makefile	/^CMAKE_BINARY_DIR = \/home\/alex\/c++\/DM$/;"	m
CMAKE_COMMAND	Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_SOURCE_DIR	Makefile	/^CMAKE_SOURCE_DIR = \/home\/alex\/c++\/DM$/;"	m
CMARequest	DMCore/Agents/DialogAgents/BasicAgents/MARequest.cpp	/^CMARequest::CMARequest(string sAName, string sAConfiguration, string sAType): $/;"	f	class:CMARequest	signature:(string sAName, string sAConfiguration, string sAType)
CMARequest	DMCore/Agents/DialogAgents/BasicAgents/MARequest.h	/^	CMARequest(string sAName, $/;"	p	class:CMARequest	access:public	signature:(string sAName, string sAConfiguration = Ó, string sAType = Ó)
CMARequest	DMCore/Agents/DialogAgents/BasicAgents/MARequest.h	/^class CMARequest: public CDialogAgent {$/;"	c	inherits:CDialogAgent
CMARequest::AgentFactory	DMCore/Agents/DialogAgents/BasicAgents/MARequest.cpp	/^CAgent* CMARequest::AgentFactory(string sAName, string sAConfiguration) {$/;"	f	class:CMARequest	signature:(string sAName, string sAConfiguration)
CMARequest::AgentFactory	DMCore/Agents/DialogAgents/BasicAgents/MARequest.h	/^	static CAgent* AgentFactory(string sAName, string sAConfiguration);$/;"	p	class:CMARequest	access:public	signature:(string sAName, string sAConfiguration)
CMARequest::CMARequest	DMCore/Agents/DialogAgents/BasicAgents/MARequest.cpp	/^CMARequest::CMARequest(string sAName, string sAConfiguration, string sAType): $/;"	f	class:CMARequest	signature:(string sAName, string sAConfiguration, string sAType)
CMARequest::CMARequest	DMCore/Agents/DialogAgents/BasicAgents/MARequest.h	/^	CMARequest(string sAName, $/;"	p	class:CMARequest	access:public	signature:(string sAName, string sAConfiguration = Ó, string sAType = Ó)
CMARequest::DeclareExpectations	DMCore/Agents/DialogAgents/BasicAgents/MARequest.cpp	/^int CMARequest::DeclareExpectations(TConceptExpectationList&$/;"	f	class:CMARequest	signature:(TConceptExpectationList& celExpectationList)
CMARequest::DeclareExpectations	DMCore/Agents/DialogAgents/BasicAgents/MARequest.h	/^	virtual int DeclareExpectations(TConceptExpectationList&$/;"	p	class:CMARequest	access:public	signature:(TConceptExpectationList& celExpectationList)
CMARequest::Execute	DMCore/Agents/DialogAgents/BasicAgents/MARequest.cpp	/^TDialogExecuteReturnCode CMARequest::Execute() {$/;"	f	class:CMARequest	signature:()
CMARequest::Execute	DMCore/Agents/DialogAgents/BasicAgents/MARequest.h	/^	virtual TDialogExecuteReturnCode Execute();$/;"	p	class:CMARequest	access:public	signature:()
CMARequest::FailureCriteriaSatisfied	DMCore/Agents/DialogAgents/BasicAgents/MARequest.cpp	/^bool CMARequest::FailureCriteriaSatisfied() {$/;"	f	class:CMARequest	signature:()
CMARequest::FailureCriteriaSatisfied	DMCore/Agents/DialogAgents/BasicAgents/MARequest.h	/^	virtual bool FailureCriteriaSatisfied();$/;"	p	class:CMARequest	access:public	signature:()
CMARequest::GetNonunderstandingThreshold	DMCore/Agents/DialogAgents/BasicAgents/MARequest.cpp	/^float CMARequest::GetNonunderstandingThreshold() {$/;"	f	class:CMARequest	signature:()
CMARequest::GetNonunderstandingThreshold	DMCore/Agents/DialogAgents/BasicAgents/MARequest.h	/^    virtual float GetNonunderstandingThreshold();$/;"	p	class:CMARequest	access:public	signature:()
CMARequest::GetTimeoutPeriod	DMCore/Agents/DialogAgents/BasicAgents/MARequest.cpp	/^int CMARequest::GetTimeoutPeriod() {$/;"	f	class:CMARequest	signature:()
CMARequest::GetTimeoutPeriod	DMCore/Agents/DialogAgents/BasicAgents/MARequest.h	/^	virtual int GetTimeoutPeriod();$/;"	p	class:CMARequest	access:public	signature:()
CMARequest::GrammarMapping	DMCore/Agents/DialogAgents/BasicAgents/MARequest.cpp	/^string CMARequest::GrammarMapping() {$/;"	f	class:CMARequest	signature:()
CMARequest::GrammarMapping	DMCore/Agents/DialogAgents/BasicAgents/MARequest.h	/^	virtual string GrammarMapping();$/;"	p	class:CMARequest	access:public	signature:()
CMARequest::PreconditionsSatisfied	DMCore/Agents/DialogAgents/BasicAgents/MARequest.cpp	/^bool CMARequest::PreconditionsSatisfied() {$/;"	f	class:CMARequest	signature:()
CMARequest::PreconditionsSatisfied	DMCore/Agents/DialogAgents/BasicAgents/MARequest.h	/^	virtual bool PreconditionsSatisfied();$/;"	p	class:CMARequest	access:public	signature:()
CMARequest::Prompt	DMCore/Agents/DialogAgents/BasicAgents/MARequest.cpp	/^string CMARequest::Prompt() {$/;"	f	class:CMARequest	signature:()
CMARequest::Prompt	DMCore/Agents/DialogAgents/BasicAgents/MARequest.h	/^	virtual string Prompt();$/;"	p	class:CMARequest	access:public	signature:()
CMARequest::RequestedConcept	DMCore/Agents/DialogAgents/BasicAgents/MARequest.cpp	/^CConcept* CMARequest::RequestedConcept() {$/;"	f	class:CMARequest	signature:()
CMARequest::RequestedConcept	DMCore/Agents/DialogAgents/BasicAgents/MARequest.h	/^	virtual CConcept* RequestedConcept();$/;"	p	class:CMARequest	access:public	signature:()
CMARequest::RequestedConceptName	DMCore/Agents/DialogAgents/BasicAgents/MARequest.cpp	/^string CMARequest::RequestedConceptName() {$/;"	f	class:CMARequest	signature:()
CMARequest::RequestedConceptName	DMCore/Agents/DialogAgents/BasicAgents/MARequest.h	/^	virtual string RequestedConceptName();$/;"	p	class:CMARequest	access:public	signature:()
CMARequest::RequiresFloor	DMCore/Agents/DialogAgents/BasicAgents/MARequest.h	/^	virtual bool RequiresFloor() {return true;}$/;"	f	class:CMARequest	access:public	signature:()
CMARequest::Reset	DMCore/Agents/DialogAgents/BasicAgents/MARequest.cpp	/^void CMARequest::Reset() {$/;"	f	class:CMARequest	signature:()
CMARequest::Reset	DMCore/Agents/DialogAgents/BasicAgents/MARequest.h	/^	virtual void Reset();$/;"	p	class:CMARequest	access:public	signature:()
CMARequest::SuccessCriteriaSatisfied	DMCore/Agents/DialogAgents/BasicAgents/MARequest.cpp	/^bool CMARequest::SuccessCriteriaSatisfied() {$/;"	f	class:CMARequest	signature:()
CMARequest::SuccessCriteriaSatisfied	DMCore/Agents/DialogAgents/BasicAgents/MARequest.h	/^	virtual bool SuccessCriteriaSatisfied();$/;"	p	class:CMARequest	access:public	signature:()
CMARequest::iInputTurnNumberAtExecution	DMCore/Agents/DialogAgents/BasicAgents/MARequest.h	/^	int iInputTurnNumberAtExecution;$/;"	m	class:CMARequest	access:protected
CMARequest::voOutputs	DMCore/Agents/DialogAgents/BasicAgents/MARequest.h	/^	vector<COutput*> voOutputs;$/;"	m	class:CMARequest	access:protected
CMARequest::~CMARequest	DMCore/Agents/DialogAgents/BasicAgents/MARequest.cpp	/^CMARequest::~CMARequest() {$/;"	f	class:CMARequest	signature:()
CMARequest::~CMARequest	DMCore/Agents/DialogAgents/BasicAgents/MARequest.h	/^	virtual ~CMARequest();$/;"	p	class:CMARequest	access:public	signature:()
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	103;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	110;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	117;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	124;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	132;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	137;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	144;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	147;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	14;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	150;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	153;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	168;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	182;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	190;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	208;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	217;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	220;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	227;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	245;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	248;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	251;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	37;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	45;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	51;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	57;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	66;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	75;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	89;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	96;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	101;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	108;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	115;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	122;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	129;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	137;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	13;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	142;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	149;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	152;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	155;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	170;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	184;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	192;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	19;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	210;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	219;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	222;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	240;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	243;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	246;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	42;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	50;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	56;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	62;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	71;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	80;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	94;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	105;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	112;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	119;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	125;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	133;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	139;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	157;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	172;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	183;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	192;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	19;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	211;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	222;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	230;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	235;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	38;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	46;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	53;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	59;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	68;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	78;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	83;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	91;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	98;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	103;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	110;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	117;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	124;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	130;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	138;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	144;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	159;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	15;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	174;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	185;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	194;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	213;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	225;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	230;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	24;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	43;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	51;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	58;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	64;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	73;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	83;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	88;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	96;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	106;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	113;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	120;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	126;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	134;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	140;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	158;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	173;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	184;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	193;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	20;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	212;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	223;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	231;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	236;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	39;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	47;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	54;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	60;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	69;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	79;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	84;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	92;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	99;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	104;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	111;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	118;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	125;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	131;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	139;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	145;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	160;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	16;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	175;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	186;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	195;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	214;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	226;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	231;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	25;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	44;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	52;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	59;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	65;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	74;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	84;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	89;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	97;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	100;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	107;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	114;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	121;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	128;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	141;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	159;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	174;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	186;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	197;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	200;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	213;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	224;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	22;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	232;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	237;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	24;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	41;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	48;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	62;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	71;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	80;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	85;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	93;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	105;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	112;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	119;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	126;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	133;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	146;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	161;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	176;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	188;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	199;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	202;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	215;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	227;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	232;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	27;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	29;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	46;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	53;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	67;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	76;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	85;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	90;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	98;"	d	file:
COMPILER_VERSION_TWEAK	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	165;"	d	file:
COMPILER_VERSION_TWEAK	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	204;"	d	file:
COMPILER_VERSION_TWEAK	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	28;"	d	file:
COMPILER_VERSION_TWEAK	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	167;"	d	file:
COMPILER_VERSION_TWEAK	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	206;"	d	file:
COMPILER_VERSION_TWEAK	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	33;"	d	file:
COMPLETED	DialogTask/DialogTask.h	226;"	d
CONCEPT_BINDING_POLICY	DMCore/Agents/DialogAgents/DialogAgent.h	701;"	d
CONCEPT_EQUALS_SIGN	DMCore/Concepts/Concept.h	141;"	d
CONCEPT_STREAM	DMCore/Log.h	112;"	d
CORETHREAD_STREAM	DMCore/Log.h	85;"	d
CORE_CONFIGURATION	DialogTask/DialogTask.h	94;"	d
COutput	DMCore/Outputs/Output.cpp	/^COutput::COutput() {$/;"	f	class:COutput	signature:()
COutput	DMCore/Outputs/Output.h	/^	COutput();$/;"	p	class:COutput	access:public	signature:()
COutput	DMCore/Outputs/Output.h	/^class COutput {$/;"	c
COutput::COutput	DMCore/Outputs/Output.cpp	/^COutput::COutput() {$/;"	f	class:COutput	signature:()
COutput::COutput	DMCore/Outputs/Output.h	/^	COutput();$/;"	p	class:COutput	access:public	signature:()
COutput::CancelConceptNotificationRequest	DMCore/Outputs/Output.cpp	/^void COutput::CancelConceptNotificationRequest(CConcept* pConcept) {$/;"	f	class:COutput	signature:(CConcept* pConcept)
COutput::CancelConceptNotificationRequest	DMCore/Outputs/Output.h	/^  void CancelConceptNotificationRequest(CConcept* pConcept);$/;"	p	class:COutput	access:public	signature:(CConcept* pConcept)
COutput::ChangeConceptNotificationPointer	DMCore/Outputs/Output.cpp	/^void COutput::ChangeConceptNotificationPointer(CConcept* pOldConcept, $/;"	f	class:COutput	signature:(CConcept* pOldConcept, CConcept* pNewConcept)
COutput::ChangeConceptNotificationPointer	DMCore/Outputs/Output.h	/^  void ChangeConceptNotificationPointer(CConcept* pOldConcept, $/;"	p	class:COutput	access:public	signature:(CConcept* pOldConcept, CConcept* pNewConcept)
COutput::CheckFlag	DMCore/Outputs/Output.cpp	/^bool COutput::CheckFlag(string sFlag) {$/;"	f	class:COutput	signature:(string sFlag)
COutput::CheckFlag	DMCore/Outputs/Output.h	/^  bool CheckFlag(string sFlag);$/;"	p	class:COutput	access:public	signature:(string sFlag)
COutput::Clone	DMCore/Outputs/Output.h	/^	virtual COutput* Clone(int iNewOutputId) = 0;$/;"	p	class:COutput	access:public	signature:(int iNewOutputId)
COutput::Create	DMCore/Outputs/Output.h	/^	virtual bool Create(string sAGeneratorAgentName, int iAExecutionIndex,$/;"	p	class:COutput	access:public	signature:(string sAGeneratorAgentName, int iAExecutionIndex, string sAPrompt, TFloorStatus fsAFloor, int iAOutputId)
COutput::GetAct	DMCore/Outputs/Output.cpp	/^string COutput::GetAct() {$/;"	f	class:COutput	signature:()
COutput::GetAct	DMCore/Outputs/Output.h	/^	string GetAct();$/;"	p	class:COutput	access:public	signature:()
COutput::GetConceptByName	DMCore/Outputs/Output.cpp	/^CConcept* COutput::GetConceptByName(string sConceptName) {$/;"	f	class:COutput	signature:(string sConceptName)
COutput::GetConceptByName	DMCore/Outputs/Output.h	/^  virtual CConcept* GetConceptByName(string sConceptName);$/;"	p	class:COutput	access:public	signature:(string sConceptName)
COutput::GetConveyance	DMCore/Outputs/Output.cpp	/^TConveyance COutput::GetConveyance() {$/;"	f	class:COutput	signature:()
COutput::GetConveyance	DMCore/Outputs/Output.h	/^	TConveyance GetConveyance();$/;"	p	class:COutput	access:public	signature:()
COutput::GetDialogState	DMCore/Outputs/Output.cpp	/^string COutput::GetDialogState() {$/;"	f	class:COutput	signature:()
COutput::GetDialogState	DMCore/Outputs/Output.h	/^	string GetDialogState();$/;"	p	class:COutput	access:public	signature:()
COutput::GetDialogStateIndex	DMCore/Outputs/Output.cpp	/^int COutput::GetDialogStateIndex() {$/;"	f	class:COutput	signature:()
COutput::GetDialogStateIndex	DMCore/Outputs/Output.h	/^	int GetDialogStateIndex();$/;"	p	class:COutput	access:public	signature:()
COutput::GetFinalFloorStatus	DMCore/Outputs/Output.cpp	/^TFloorStatus COutput::GetFinalFloorStatus() {$/;"	f	class:COutput	signature:()
COutput::GetFinalFloorStatus	DMCore/Outputs/Output.h	/^	TFloorStatus GetFinalFloorStatus();$/;"	p	class:COutput	access:public	signature:()
COutput::GetFinalFloorStatusLabel	DMCore/Outputs/Output.cpp	/^string COutput::GetFinalFloorStatusLabel() {$/;"	f	class:COutput	signature:()
COutput::GetFinalFloorStatusLabel	DMCore/Outputs/Output.h	/^	string GetFinalFloorStatusLabel();$/;"	p	class:COutput	access:public	signature:()
COutput::GetGeneratorAgentName	DMCore/Outputs/Output.cpp	/^string COutput::GetGeneratorAgentName() {$/;"	f	class:COutput	signature:()
COutput::GetGeneratorAgentName	DMCore/Outputs/Output.h	/^	string GetGeneratorAgentName();$/;"	p	class:COutput	access:public	signature:()
COutput::GetRepeatCounter	DMCore/Outputs/Output.cpp	/^int COutput::GetRepeatCounter() {$/;"	f	class:COutput	signature:()
COutput::GetRepeatCounter	DMCore/Outputs/Output.h	/^	int GetRepeatCounter();$/;"	p	class:COutput	access:public	signature:()
COutput::IncrementRepeatCounter	DMCore/Outputs/Output.cpp	/^void COutput::IncrementRepeatCounter() {$/;"	f	class:COutput	signature:()
COutput::IncrementRepeatCounter	DMCore/Outputs/Output.h	/^	void IncrementRepeatCounter();$/;"	p	class:COutput	access:public	signature:()
COutput::NotifyConceptConveyance	DMCore/Outputs/Output.cpp	/^void COutput::NotifyConceptConveyance(string sConceptName, $/;"	f	class:COutput	signature:(string sConceptName, TConveyance cAConveyance)
COutput::NotifyConceptConveyance	DMCore/Outputs/Output.h	/^  void NotifyConceptConveyance(string sConceptName, $/;"	p	class:COutput	access:public	signature:(string sConceptName, TConveyance cAConveyance)
COutput::SetAct	DMCore/Outputs/Output.cpp	/^void COutput::SetAct(string sAAct) {$/;"	f	class:COutput	signature:(string sAAct)
COutput::SetAct	DMCore/Outputs/Output.h	/^	void SetAct(string sAAct);$/;"	p	class:COutput	access:public	signature:(string sAAct)
COutput::SetConveyance	DMCore/Outputs/Output.cpp	/^void COutput::SetConveyance(TConveyance cAConveyance) {$/;"	f	class:COutput	signature:(TConveyance cAConveyance)
COutput::SetConveyance	DMCore/Outputs/Output.h	/^	void SetConveyance(TConveyance cAConveyance);$/;"	p	class:COutput	access:public	signature:(TConveyance cAConveyance)
COutput::SetDialogState	DMCore/Outputs/Output.cpp	/^void COutput::SetDialogState(string sADialogState) {$/;"	f	class:COutput	signature:(string sADialogState)
COutput::SetDialogState	DMCore/Outputs/Output.h	/^	void SetDialogState(string sADialogState);$/;"	p	class:COutput	access:public	signature:(string sADialogState)
COutput::SetDialogStateIndex	DMCore/Outputs/Output.cpp	/^void COutput::SetDialogStateIndex(int iAExecutionIndex) {$/;"	f	class:COutput	signature:(int iAExecutionIndex)
COutput::SetDialogStateIndex	DMCore/Outputs/Output.h	/^	void SetDialogStateIndex(int iAExecutionIndex);$/;"	p	class:COutput	access:public	signature:(int iAExecutionIndex)
COutput::SetFinalFloorStatus	DMCore/Outputs/Output.cpp	/^void COutput::SetFinalFloorStatus(TFloorStatus fsAFloor){$/;"	f	class:COutput	signature:(TFloorStatus fsAFloor)
COutput::SetFinalFloorStatus	DMCore/Outputs/Output.h	/^	void SetFinalFloorStatus(TFloorStatus fsAFloor);$/;"	p	class:COutput	access:public	signature:(TFloorStatus fsAFloor)
COutput::ToString	DMCore/Outputs/Output.h	/^	virtual string ToString() = 0; $/;"	p	class:COutput	access:public	signature:()
COutput::cConveyance	DMCore/Outputs/Output.h	/^	TConveyance cConveyance;			\/\/ whether the output was fully conveyed$/;"	m	class:COutput	access:protected
COutput::clone	DMCore/Outputs/Output.cpp	/^void COutput::clone(COutput * opClone, int iNewOutputId) {$/;"	f	class:COutput	signature:(COutput * opClone, int iNewOutputId)
COutput::clone	DMCore/Outputs/Output.h	/^	virtual void clone(COutput* pOutput, int iNewOutputId);$/;"	p	class:COutput	access:protected	signature:(COutput* pOutput, int iNewOutputId)
COutput::fsFinalFloorStatus	DMCore/Outputs/Output.h	/^	TFloorStatus fsFinalFloorStatus;			\/\/ the floor status at the end of this output$/;"	m	class:COutput	access:protected
COutput::iExecutionIndex	DMCore/Outputs/Output.h	/^	int iExecutionIndex;				\/\/ the index of the execution item$/;"	m	class:COutput	access:protected
COutput::iOutputId	DMCore/Outputs/Output.h	/^	int iOutputId;						\/\/ the output id$/;"	m	class:COutput	access:protected
COutput::iRepeatCounter	DMCore/Outputs/Output.h	/^	int iRepeatCounter;					\/\/ the number of times this output has $/;"	m	class:COutput	access:protected
COutput::sAct	DMCore/Outputs/Output.h	/^	string sAct;						\/\/ the act (dialog move)$/;"	m	class:COutput	access:protected
COutput::sDialogState	DMCore/Outputs/Output.h	/^	string sDialogState;				\/\/ a string representing the dialog $/;"	m	class:COutput	access:protected
COutput::sGeneratorAgentName	DMCore/Outputs/Output.h	/^	string sGeneratorAgentName;			\/\/ name of the agent that ordered this$/;"	m	class:COutput	access:protected
COutput::sObject	DMCore/Outputs/Output.h	/^	string sObject;					    \/\/ the object (acted on or with)$/;"	m	class:COutput	access:protected
COutput::sOutputDeviceName	DMCore/Outputs/Output.h	/^	string sOutputDeviceName;			\/\/ the name of the device this output$/;"	m	class:COutput	access:protected
COutput::vbNotifyConcept	DMCore/Outputs/Output.h	/^  vector<bool> vbNotifyConcept;       \/\/ parallel vector indicating whether$/;"	m	class:COutput	access:protected
COutput::vcpConcepts	DMCore/Outputs/Output.h	/^	vector<CConcept *> vcpConcepts;		\/\/ the list of concepts referred in $/;"	m	class:COutput	access:protected
COutput::vsFlags	DMCore/Outputs/Output.h	/^	vector<string> vsFlags;				\/\/ flags for the output$/;"	m	class:COutput	access:protected
COutput::~COutput	DMCore/Outputs/Output.cpp	/^COutput::~COutput() {$/;"	f	class:COutput	signature:()
COutput::~COutput	DMCore/Outputs/Output.h	/^	virtual ~COutput();$/;"	p	class:COutput	access:public	signature:()
COutputHistory	DMCore/Agents/CoreAgents/OutputManagerAgent.cpp	/^COutputHistory::COutputHistory() {$/;"	f	class:COutputHistory	signature:()
COutputHistory	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^	COutputHistory();$/;"	p	class:COutputHistory	access:public	signature:()
COutputHistory	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^class COutputHistory {$/;"	c
COutputHistory::AddOutput	DMCore/Agents/CoreAgents/OutputManagerAgent.cpp	/^unsigned int COutputHistory::AddOutput(COutput* pOutput, string sUtterance) {$/;"	f	class:COutputHistory	signature:(COutput* pOutput, string sUtterance)
COutputHistory::AddOutput	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^	unsigned int AddOutput(COutput* pOutput, string sUtterance);$/;"	p	class:COutputHistory	access:public	signature:(COutput* pOutput, string sUtterance)
COutputHistory::COutputHistory	DMCore/Agents/CoreAgents/OutputManagerAgent.cpp	/^COutputHistory::COutputHistory() {$/;"	f	class:COutputHistory	signature:()
COutputHistory::COutputHistory	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^	COutputHistory();$/;"	p	class:COutputHistory	access:public	signature:()
COutputHistory::Clear	DMCore/Agents/CoreAgents/OutputManagerAgent.cpp	/^void COutputHistory::Clear() {$/;"	f	class:COutputHistory	signature:()
COutputHistory::Clear	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^	void Clear();$/;"	p	class:COutputHistory	access:public	signature:()
COutputHistory::GetOutputAt	DMCore/Agents/CoreAgents/OutputManagerAgent.cpp	/^COutput* COutputHistory::GetOutputAt(unsigned int iIndex) {$/;"	f	class:COutputHistory	signature:(unsigned int iIndex)
COutputHistory::GetOutputAt	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^	COutput* GetOutputAt(unsigned int iIndex);$/;"	p	class:COutputHistory	access:public	signature:(unsigned int iIndex)
COutputHistory::GetSize	DMCore/Agents/CoreAgents/OutputManagerAgent.cpp	/^unsigned int COutputHistory::GetSize() {$/;"	f	class:COutputHistory	signature:()
COutputHistory::GetSize	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^	unsigned int GetSize();$/;"	p	class:COutputHistory	access:public	signature:()
COutputHistory::GetUtteranceAt	DMCore/Agents/CoreAgents/OutputManagerAgent.cpp	/^string COutputHistory::GetUtteranceAt(unsigned int iIndex) {$/;"	f	class:COutputHistory	signature:(unsigned int iIndex)
COutputHistory::GetUtteranceAt	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^	string GetUtteranceAt(unsigned int iIndex);$/;"	p	class:COutputHistory	access:public	signature:(unsigned int iIndex)
COutputHistory::ToString	DMCore/Agents/CoreAgents/OutputManagerAgent.cpp	/^string COutputHistory::ToString() {$/;"	f	class:COutputHistory	signature:()
COutputHistory::ToString	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^	string ToString();$/;"	p	class:COutputHistory	access:public	signature:()
COutputHistory::operator []	DMCore/Agents/CoreAgents/OutputManagerAgent.cpp	/^inline COutput* COutputHistory::operator [](unsigned int iIndex) {$/;"	f	class:COutputHistory	signature:(unsigned int iIndex)
COutputHistory::operator []	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^	COutput* operator[](unsigned int iIndex);$/;"	p	class:COutputHistory	access:public	signature:(unsigned int iIndex)
COutputHistory::uiCurrentID	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^	unsigned int uiCurrentID;			\/\/ next id to be added to history$/;"	m	class:COutputHistory	access:private
COutputHistory::vopOutputs	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^	vector<COutput*> vopOutputs;		\/\/ history of outputs$/;"	m	class:COutputHistory	access:private
COutputHistory::vsUtterances	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^	vector<string> vsUtterances;		\/\/ history of utterances as strings$/;"	m	class:COutputHistory	access:private
COutputHistory::~COutputHistory	DMCore/Agents/CoreAgents/OutputManagerAgent.cpp	/^COutputHistory::~COutputHistory() {$/;"	f	class:COutputHistory	signature:()
COutputHistory::~COutputHistory	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^	virtual ~COutputHistory();$/;"	p	class:COutputHistory	access:public	signature:()
COutputManagerAgent	DMCore/Agents/CoreAgents/OutputManagerAgent.cpp	/^COutputManagerAgent::COutputManagerAgent(string sAName,$/;"	f	class:COutputManagerAgent	signature:(string sAName, string sAConfiguration, string sAType)
COutputManagerAgent	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^	COutputManagerAgent(string sAName, $/;"	p	class:COutputManagerAgent	access:public	signature:(string sAName, string sAConfiguration = Ó, string sAType = Ó)
COutputManagerAgent	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^class COutputManagerAgent : public CAgent {$/;"	c	inherits:CAgent
COutputManagerAgent::AgentFactory	DMCore/Agents/CoreAgents/OutputManagerAgent.cpp	/^CAgent* COutputManagerAgent::AgentFactory(string sAName, string sAConfiguration) {$/;"	f	class:COutputManagerAgent	signature:(string sAName, string sAConfiguration)
COutputManagerAgent::AgentFactory	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^	static CAgent* AgentFactory(string sAName, string sAConfiguration);$/;"	p	class:COutputManagerAgent	access:public	signature:(string sAName, string sAConfiguration)
COutputManagerAgent::COutputManagerAgent	DMCore/Agents/CoreAgents/OutputManagerAgent.cpp	/^COutputManagerAgent::COutputManagerAgent(string sAName,$/;"	f	class:COutputManagerAgent	signature:(string sAName, string sAConfiguration, string sAType)
COutputManagerAgent::COutputManagerAgent	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^	COutputManagerAgent(string sAName, $/;"	p	class:COutputManagerAgent	access:public	signature:(string sAName, string sAConfiguration = Ó, string sAType = Ó)
COutputManagerAgent::CancelConceptNotificationRequest	DMCore/Agents/CoreAgents/OutputManagerAgent.cpp	/^void COutputManagerAgent::CancelConceptNotificationRequest($/;"	f	class:COutputManagerAgent	signature:( CConcept* pConcept)
COutputManagerAgent::CancelConceptNotificationRequest	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^    void CancelConceptNotificationRequest(CConcept* pConcept);$/;"	p	class:COutputManagerAgent	access:public	signature:(CConcept* pConcept)
COutputManagerAgent::ChangeConceptNotificationPointer	DMCore/Agents/CoreAgents/OutputManagerAgent.cpp	/^void COutputManagerAgent::ChangeConceptNotificationPointer($/;"	f	class:COutputManagerAgent	signature:( CConcept* pOldConcept, CConcept* pNewConcept)
COutputManagerAgent::ChangeConceptNotificationPointer	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^    void ChangeConceptNotificationPointer(CConcept* pOldConcept, $/;"	p	class:COutputManagerAgent	access:public	signature:(CConcept* pOldConcept, CConcept* pNewConcept)
COutputManagerAgent::GetDefaultOutputDevice	DMCore/Agents/CoreAgents/OutputManagerAgent.cpp	/^TOutputDevice *COutputManagerAgent::GetDefaultOutputDevice() {$/;"	f	class:COutputManagerAgent	signature:()
COutputManagerAgent::GetDefaultOutputDevice	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^	TOutputDevice *GetDefaultOutputDevice();$/;"	p	class:COutputManagerAgent	access:public	signature:()
COutputManagerAgent::GetDefaultOutputDeviceName	DMCore/Agents/CoreAgents/OutputManagerAgent.cpp	/^string COutputManagerAgent::GetDefaultOutputDeviceName() {$/;"	f	class:COutputManagerAgent	signature:()
COutputManagerAgent::GetDefaultOutputDeviceName	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^	string GetDefaultOutputDeviceName();$/;"	p	class:COutputManagerAgent	access:public	signature:()
COutputManagerAgent::GetOutputDevice	DMCore/Agents/CoreAgents/OutputManagerAgent.cpp	/^TOutputDevice *COutputManagerAgent::GetOutputDevice(string sName) {$/;"	f	class:COutputManagerAgent	signature:(string sName)
COutputManagerAgent::GetOutputDevice	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^	TOutputDevice *GetOutputDevice(string sName);$/;"	p	class:COutputManagerAgent	access:public	signature:(string sName)
COutputManagerAgent::GetPromptsWaitingForNotification	DMCore/Agents/CoreAgents/OutputManagerAgent.cpp	/^string COutputManagerAgent::GetPromptsWaitingForNotification() {$/;"	f	class:COutputManagerAgent	signature:()
COutputManagerAgent::GetPromptsWaitingForNotification	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^	string GetPromptsWaitingForNotification();$/;"	p	class:COutputManagerAgent	access:public	signature:()
COutputManagerAgent::Notify	DMCore/Agents/CoreAgents/OutputManagerAgent.cpp	/^void COutputManagerAgent::Notify(int iOutputId, int iBargeinPos, $/;"	f	class:COutputManagerAgent	signature:(int iOutputId, int iBargeinPos, string sConveyance, string sTaggedUtt)
COutputManagerAgent::Notify	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^	void Notify(int iOutputId, int iBargeinPos, string sConveyance, $/;"	p	class:COutputManagerAgent	access:public	signature:(int iOutputId, int iBargeinPos, string sConveyance, string sTaggedUtt)
COutputManagerAgent::Output	DMCore/Agents/CoreAgents/OutputManagerAgent.cpp	/^vector<COutput*> COutputManagerAgent::Output(CDialogAgent* pGeneratorAgent, $/;"	f	class:COutputManagerAgent	signature:(CDialogAgent* pGeneratorAgent, string sPrompts, TFloorStatus fsFinalFloorStatus)
COutputManagerAgent::Output	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^	vector<COutput*> Output(CDialogAgent* pGeneratorAgent, string sPrompts, TFloorStatus fsFinalFloorStatus);	$/;"	p	class:COutputManagerAgent	access:public	signature:(CDialogAgent* pGeneratorAgent, string sPrompts, TFloorStatus fsFinalFloorStatus)
COutputManagerAgent::PreliminaryNotify	DMCore/Agents/CoreAgents/OutputManagerAgent.cpp	/^void COutputManagerAgent::PreliminaryNotify(int iOutputId, string sTaggedUtt) {$/;"	f	class:COutputManagerAgent	signature:(int iOutputId, string sTaggedUtt)
COutputManagerAgent::PreliminaryNotify	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^	void PreliminaryNotify(int iOutputId, string sTaggedUtt);$/;"	p	class:COutputManagerAgent	access:public	signature:(int iOutputId, string sTaggedUtt)
COutputManagerAgent::RegisterOutputDevice	DMCore/Agents/CoreAgents/OutputManagerAgent.cpp	/^bool COutputManagerAgent::RegisterOutputDevice(string sName, string sServerCall,$/;"	f	class:COutputManagerAgent	signature:(string sName, string sServerCall, int iParams )
COutputManagerAgent::RegisterOutputDevice	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^	bool RegisterOutputDevice(string sName, string sServerCall, $/;"	p	class:COutputManagerAgent	access:public	signature:(string sName, string sServerCall, int iParams = 0)
COutputManagerAgent::Repeat	DMCore/Agents/CoreAgents/OutputManagerAgent.cpp	/^void COutputManagerAgent::Repeat() {$/;"	f	class:COutputManagerAgent	signature:()
COutputManagerAgent::Repeat	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^	void Repeat();$/;"	p	class:COutputManagerAgent	access:public	signature:()
COutputManagerAgent::Reset	DMCore/Agents/CoreAgents/OutputManagerAgent.cpp	/^void COutputManagerAgent::Reset() {$/;"	f	class:COutputManagerAgent	signature:()
COutputManagerAgent::Reset	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^	virtual void Reset();	\/\/ overwritten Reset$/;"	p	class:COutputManagerAgent	access:public	signature:()
COutputManagerAgent::SetDefaultOutputDevice	DMCore/Agents/CoreAgents/OutputManagerAgent.cpp	/^void COutputManagerAgent::SetDefaultOutputDevice(string sName) {$/;"	f	class:COutputManagerAgent	signature:(string sName)
COutputManagerAgent::SetDefaultOutputDevice	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^	void SetDefaultOutputDevice(string sName);$/;"	p	class:COutputManagerAgent	access:public	signature:(string sName)
COutputManagerAgent::SetOutputClass	DMCore/Agents/CoreAgents/OutputManagerAgent.cpp	/^void COutputManagerAgent::SetOutputClass(string sAOutputClass) {$/;"	f	class:COutputManagerAgent	signature:(string sAOutputClass)
COutputManagerAgent::SetOutputClass	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^    void SetOutputClass(string sAOutputClass);$/;"	p	class:COutputManagerAgent	access:public	signature:(string sAOutputClass)
COutputManagerAgent::getRecentOutputIndex	DMCore/Agents/CoreAgents/OutputManagerAgent.cpp	/^unsigned int COutputManagerAgent::getRecentOutputIndex(int iOutputId) {$/;"	f	class:COutputManagerAgent	signature:(int iOutputId)
COutputManagerAgent::getRecentOutputIndex	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^	unsigned int getRecentOutputIndex(int iConceptId);$/;"	p	class:COutputManagerAgent	access:private	signature:(int iConceptId)
COutputManagerAgent::iDefaultOutputDevice	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^	unsigned int iDefaultOutputDevice;$/;"	m	class:COutputManagerAgent	access:private
COutputManagerAgent::iOutputCounter	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^	int iOutputCounter;$/;"	m	class:COutputManagerAgent	access:private
COutputManagerAgent::ohHistory	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^	COutputHistory ohHistory;			$/;"	m	class:COutputManagerAgent	access:private
COutputManagerAgent::output	DMCore/Agents/CoreAgents/OutputManagerAgent.cpp	/^string COutputManagerAgent::output(COutput* pOutput) {$/;"	f	class:COutputManagerAgent	signature:(COutput* pOutput)
COutputManagerAgent::output	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^	string output(COutput* pOutput);$/;"	p	class:COutputManagerAgent	access:private	signature:(COutput* pOutput)
COutputManagerAgent::sOutputClass	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^    string sOutputClass;$/;"	m	class:COutputManagerAgent	access:private
COutputManagerAgent::vodOutputDevices	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^	vector <TOutputDevice> vodOutputDevices;$/;"	m	class:COutputManagerAgent	access:private
COutputManagerAgent::vopRecentOutputs	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^	vector <COutput *> vopRecentOutputs; 	$/;"	m	class:COutputManagerAgent	access:private
COutputManagerAgent::~COutputManagerAgent	DMCore/Agents/CoreAgents/OutputManagerAgent.cpp	/^COutputManagerAgent::~COutputManagerAgent() {$/;"	f	class:COutputManagerAgent	signature:()
COutputManagerAgent::~COutputManagerAgent	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^	virtual ~COutputManagerAgent();$/;"	p	class:COutputManagerAgent	access:public	signature:()
CRegistry	DMCore/Agents/Registry.cpp	/^CRegistry::CRegistry() {$/;"	f	class:CRegistry	signature:()
CRegistry	DMCore/Agents/Registry.h	/^	CRegistry();$/;"	p	class:CRegistry	access:public	signature:()
CRegistry	DMCore/Agents/Registry.h	/^class CRegistry {$/;"	c
CRegistry::AgentsHash	DMCore/Agents/Registry.h	/^	TAgentsHash AgentsHash;		$/;"	m	class:CRegistry	access:private
CRegistry::AgentsTypeHash	DMCore/Agents/Registry.h	/^	TAgentsTypeHash AgentsTypeHash; $/;"	m	class:CRegistry	access:private
CRegistry::CRegistry	DMCore/Agents/Registry.cpp	/^CRegistry::CRegistry() {$/;"	f	class:CRegistry	signature:()
CRegistry::CRegistry	DMCore/Agents/Registry.h	/^	CRegistry();$/;"	p	class:CRegistry	access:public	signature:()
CRegistry::Clear	DMCore/Agents/Registry.cpp	/^void CRegistry::Clear() {$/;"	f	class:CRegistry	signature:()
CRegistry::Clear	DMCore/Agents/Registry.h	/^	void Clear();$/;"	p	class:CRegistry	access:public	signature:()
CRegistry::CreateAgent	DMCore/Agents/Registry.cpp	/^CAgent* CRegistry::CreateAgent(string sAgentTypeName, string sAgentName, string sAgentConfiguration) {$/;"	f	class:CRegistry	signature:(string sAgentTypeName, string sAgentName, string sAgentConfiguration)
CRegistry::CreateAgent	DMCore/Agents/Registry.h	/^	CAgent* CreateAgent(string sAgentTypeName, string sAgentName, $/;"	p	class:CRegistry	access:public	signature:(string sAgentTypeName, string sAgentName, string sAgentConfiguration = Ó)
CRegistry::IsRegisteredAgent	DMCore/Agents/Registry.cpp	/^bool CRegistry::IsRegisteredAgent(string sAgentName) {$/;"	f	class:CRegistry	signature:(string sAgentName)
CRegistry::IsRegisteredAgent	DMCore/Agents/Registry.h	/^	bool IsRegisteredAgent(string sAgentName);$/;"	p	class:CRegistry	access:public	signature:(string sAgentName)
CRegistry::IsRegisteredAgentType	DMCore/Agents/Registry.cpp	/^bool CRegistry::IsRegisteredAgentType(string sAgentTypeName) {$/;"	f	class:CRegistry	signature:(string sAgentTypeName)
CRegistry::IsRegisteredAgentType	DMCore/Agents/Registry.h	/^	bool IsRegisteredAgentType(string sAgentType);$/;"	p	class:CRegistry	access:public	signature:(string sAgentType)
CRegistry::RegisterAgent	DMCore/Agents/Registry.cpp	/^void CRegistry::RegisterAgent(string sAgentName, CAgent* pAgent)$/;"	f	class:CRegistry	signature:(string sAgentName, CAgent* pAgent)
CRegistry::RegisterAgent	DMCore/Agents/Registry.h	/^	void RegisterAgent(string sAgentName, CAgent* pAgent);$/;"	p	class:CRegistry	access:public	signature:(string sAgentName, CAgent* pAgent)
CRegistry::RegisterAgentType	DMCore/Agents/Registry.cpp	/^void CRegistry::RegisterAgentType(string sAgentTypeName, $/;"	f	class:CRegistry	signature:(string sAgentTypeName, FCreateAgent fctCreateAgent)
CRegistry::RegisterAgentType	DMCore/Agents/Registry.h	/^	void RegisterAgentType(string sAgentTypeName, FCreateAgent fctCreateAgent);$/;"	p	class:CRegistry	access:public	signature:(string sAgentTypeName, FCreateAgent fctCreateAgent)
CRegistry::UnRegisterAgent	DMCore/Agents/Registry.cpp	/^void CRegistry::UnRegisterAgent(string sAgentName) {$/;"	f	class:CRegistry	signature:(string sAgentName)
CRegistry::UnRegisterAgent	DMCore/Agents/Registry.h	/^	void UnRegisterAgent(string sAgentName);$/;"	p	class:CRegistry	access:public	signature:(string sAgentName)
CRegistry::UnRegisterAgentType	DMCore/Agents/Registry.cpp	/^void CRegistry::UnRegisterAgentType(string sAgentTypeName) {$/;"	f	class:CRegistry	signature:(string sAgentTypeName)
CRegistry::UnRegisterAgentType	DMCore/Agents/Registry.h	/^	void UnRegisterAgentType(string sAgentTypeName);$/;"	p	class:CRegistry	access:public	signature:(string sAgentTypeName)
CRegistry::operator []	DMCore/Agents/Registry.cpp	/^CAgent* CRegistry::operator [](string sAgentName) {$/;"	f	class:CRegistry	signature:(string sAgentName)
CRegistry::operator []	DMCore/Agents/Registry.h	/^	CAgent* operator[](string sAgentName);$/;"	p	class:CRegistry	access:public	signature:(string sAgentName)
CSTRING	spdlog/fmt/bundled/format.h	/^        CSTRING, STRING, WSTRING, POINTER, CUSTOM$/;"	e	enum:fmt::internal::Value::Type
CState	DMCore/Grounding/GroundingUtils.h	/^class CState {$/;"	c
CState::Add	DMCore/Grounding/GroundingUtils.cpp	/^void CState::Add(STRING2STRING s2s) {$/;"	f	class:CState	signature:(STRING2STRING s2s)
CState::Add	DMCore/Grounding/GroundingUtils.h	/^    void Add(STRING2STRING s2s);$/;"	p	class:CState	access:public	signature:(STRING2STRING s2s)
CState::Clear	DMCore/Grounding/GroundingUtils.cpp	/^void CState::Clear() {$/;"	f	class:CState	signature:()
CState::Clear	DMCore/Grounding/GroundingUtils.h	/^    void Clear();$/;"	p	class:CState	access:public	signature:()
CState::ToString	DMCore/Grounding/GroundingUtils.cpp	/^string CState::ToString() {$/;"	f	class:CState	signature:()
CState::ToString	DMCore/Grounding/GroundingUtils.h	/^    string ToString();$/;"	p	class:CState	access:public	signature:()
CState::operator []	DMCore/Grounding/GroundingUtils.cpp	/^string& CState::operator[] (string sIndex) {$/;"	f	class:CState	signature:(string sIndex)
CState::operator []	DMCore/Grounding/GroundingUtils.h	/^    string& operator[] (string sIndex);$/;"	p	class:CState	access:public	signature:(string sIndex)
CState::s2sStateVars	DMCore/Grounding/GroundingUtils.h	/^    STRING2STRING s2sStateVars;$/;"	m	class:CState	access:private
CStateManagerAgent	DMCore/Agents/CoreAgents/StateManagerAgent.cpp	/^CStateManagerAgent::CStateManagerAgent(string sAName, $/;"	f	class:CStateManagerAgent	signature:(string sAName, string sAConfiguration, string sAType)
CStateManagerAgent	DMCore/Agents/CoreAgents/StateManagerAgent.h	/^	CStateManagerAgent(string sAName, $/;"	p	class:CStateManagerAgent	access:public	signature:(string sAName, string sAConfiguration = Ó, string sAType = Ó)
CStateManagerAgent	DMCore/Agents/CoreAgents/StateManagerAgent.h	/^class CStateManagerAgent : public CAgent {$/;"	c	inherits:CAgent
CStateManagerAgent::AgentFactory	DMCore/Agents/CoreAgents/StateManagerAgent.cpp	/^CAgent* CStateManagerAgent::AgentFactory(string sAName, string sAConfiguration) {$/;"	f	class:CStateManagerAgent	signature:(string sAName, string sAConfiguration)
CStateManagerAgent::AgentFactory	DMCore/Agents/CoreAgents/StateManagerAgent.h	/^	static CAgent* AgentFactory(string sAName, string sAConfiguration);$/;"	p	class:CStateManagerAgent	access:public	signature:(string sAName, string sAConfiguration)
CStateManagerAgent::BroadcastState	DMCore/Agents/CoreAgents/StateManagerAgent.cpp	/^void CStateManagerAgent::BroadcastState() {$/;"	f	class:CStateManagerAgent	signature:()
CStateManagerAgent::BroadcastState	DMCore/Agents/CoreAgents/StateManagerAgent.h	/^  void BroadcastState();$/;"	p	class:CStateManagerAgent	access:public	signature:()
CStateManagerAgent::CStateManagerAgent	DMCore/Agents/CoreAgents/StateManagerAgent.cpp	/^CStateManagerAgent::CStateManagerAgent(string sAName, $/;"	f	class:CStateManagerAgent	signature:(string sAName, string sAConfiguration, string sAType)
CStateManagerAgent::CStateManagerAgent	DMCore/Agents/CoreAgents/StateManagerAgent.h	/^	CStateManagerAgent(string sAName, $/;"	p	class:CStateManagerAgent	access:public	signature:(string sAName, string sAConfiguration = Ó, string sAType = Ó)
CStateManagerAgent::GetLastState	DMCore/Agents/CoreAgents/StateManagerAgent.cpp	/^TDialogState &CStateManagerAgent::GetLastState() {$/;"	f	class:CStateManagerAgent	signature:()
CStateManagerAgent::GetLastState	DMCore/Agents/CoreAgents/StateManagerAgent.h	/^  TDialogState &GetLastState();$/;"	p	class:CStateManagerAgent	access:public	signature:()
CStateManagerAgent::GetStateAsString	DMCore/Agents/CoreAgents/StateManagerAgent.cpp	/^string CStateManagerAgent::GetStateAsString() {$/;"	f	class:CStateManagerAgent	signature:()
CStateManagerAgent::GetStateAsString	DMCore/Agents/CoreAgents/StateManagerAgent.cpp	/^string CStateManagerAgent::GetStateAsString(TDialogState dsState) {$/;"	f	class:CStateManagerAgent	signature:(TDialogState dsState)
CStateManagerAgent::GetStateAsString	DMCore/Agents/CoreAgents/StateManagerAgent.h	/^	string GetStateAsString();$/;"	p	class:CStateManagerAgent	access:public	signature:()
CStateManagerAgent::GetStateAsString	DMCore/Agents/CoreAgents/StateManagerAgent.h	/^	string GetStateAsString(TDialogState dsState);$/;"	p	class:CStateManagerAgent	access:public	signature:(TDialogState dsState)
CStateManagerAgent::GetStateHistoryLength	DMCore/Agents/CoreAgents/StateManagerAgent.cpp	/^int CStateManagerAgent::GetStateHistoryLength() {$/;"	f	class:CStateManagerAgent	signature:()
CStateManagerAgent::GetStateHistoryLength	DMCore/Agents/CoreAgents/StateManagerAgent.h	/^	int GetStateHistoryLength();$/;"	p	class:CStateManagerAgent	access:public	signature:()
CStateManagerAgent::LoadDialogStateNames	DMCore/Agents/CoreAgents/StateManagerAgent.cpp	/^void CStateManagerAgent::LoadDialogStateNames(string sFileName) {$/;"	f	class:CStateManagerAgent	signature:(string sFileName)
CStateManagerAgent::LoadDialogStateNames	DMCore/Agents/CoreAgents/StateManagerAgent.h	/^	void LoadDialogStateNames(string sFileName);$/;"	p	class:CStateManagerAgent	access:public	signature:(string sFileName)
CStateManagerAgent::Reset	DMCore/Agents/CoreAgents/StateManagerAgent.cpp	/^void CStateManagerAgent::Reset() {$/;"	f	class:CStateManagerAgent	signature:()
CStateManagerAgent::Reset	DMCore/Agents/CoreAgents/StateManagerAgent.h	/^	virtual void Reset();	\/\/ overwritten Reset$/;"	p	class:CStateManagerAgent	access:public	signature:()
CStateManagerAgent::SetStateBroadcastAddress	DMCore/Agents/CoreAgents/StateManagerAgent.cpp	/^void CStateManagerAgent::SetStateBroadcastAddress($/;"	f	class:CStateManagerAgent	signature:( string sAStateBroadcastAddress)
CStateManagerAgent::SetStateBroadcastAddress	DMCore/Agents/CoreAgents/StateManagerAgent.h	/^  void SetStateBroadcastAddress(string sAStateBroadcastAddress);$/;"	p	class:CStateManagerAgent	access:public	signature:(string sAStateBroadcastAddress)
CStateManagerAgent::UpdateState	DMCore/Agents/CoreAgents/StateManagerAgent.cpp	/^void CStateManagerAgent::UpdateState() {$/;"	f	class:CStateManagerAgent	signature:()
CStateManagerAgent::UpdateState	DMCore/Agents/CoreAgents/StateManagerAgent.h	/^	void UpdateState();$/;"	p	class:CStateManagerAgent	access:public	signature:()
CStateManagerAgent::operator []	DMCore/Agents/CoreAgents/StateManagerAgent.cpp	/^TDialogState &CStateManagerAgent::operator[](unsigned int i) {$/;"	f	class:CStateManagerAgent	signature:(unsigned int i)
CStateManagerAgent::operator []	DMCore/Agents/CoreAgents/StateManagerAgent.h	/^	TDialogState &operator[](unsigned int i);$/;"	p	class:CStateManagerAgent	access:public	signature:(unsigned int i)
CStateManagerAgent::s2sDialogStateNames	DMCore/Agents/CoreAgents/StateManagerAgent.h	/^	STRING2STRING s2sDialogStateNames;$/;"	m	class:CStateManagerAgent	access:public
CStateManagerAgent::sStateBroadcastAddress	DMCore/Agents/CoreAgents/StateManagerAgent.h	/^    string sStateBroadcastAddress;$/;"	m	class:CStateManagerAgent	access:public
CStateManagerAgent::vStateHistory	DMCore/Agents/CoreAgents/StateManagerAgent.h	/^	vector<TDialogState, allocator<TDialogState> > vStateHistory;$/;"	m	class:CStateManagerAgent	access:public
CStateManagerAgent::~CStateManagerAgent	DMCore/Agents/CoreAgents/StateManagerAgent.cpp	/^CStateManagerAgent::~CStateManagerAgent() {$/;"	f	class:CStateManagerAgent	signature:()
CStateManagerAgent::~CStateManagerAgent	DMCore/Agents/CoreAgents/StateManagerAgent.h	/^	virtual ~CStateManagerAgent();$/;"	p	class:CStateManagerAgent	access:public	signature:()
CString	DMCore/Concepts/StringConcept.h	162;"	d
CStringConcept	DMCore/Concepts/StringConcept.cpp	/^CStringConcept::CStringConcept(string sAName, TConceptSource csAConceptSource):$/;"	f	class:CStringConcept	signature:(string sAName, TConceptSource csAConceptSource)
CStringConcept	DMCore/Concepts/StringConcept.cpp	/^CStringConcept::CStringConcept(string sAName, string sAValue, float fAConfidence,$/;"	f	class:CStringConcept	signature:(string sAName, string sAValue, float fAConfidence, TConceptSource csAConceptSource)
CStringConcept	DMCore/Concepts/StringConcept.h	/^	CStringConcept(CStringConcept& rAConcept);$/;"	p	class:CStringConcept	access:public	signature:(CStringConcept& rAConcept)
CStringConcept	DMCore/Concepts/StringConcept.h	/^	CStringConcept(string sAName = "NONAME",$/;"	p	class:CStringConcept	access:public	signature:(string sAName = Ó, TConceptSource csAConceptSource = csUser)
CStringConcept	DMCore/Concepts/StringConcept.h	/^	CStringConcept(string sAName, string sAValue, float fAConfidence = 1.0,$/;"	p	class:CStringConcept	access:public	signature:(string sAName, string sAValue, float fAConfidence = 1.0, TConceptSource csAConceptSource = csUser)
CStringConcept	DMCore/Concepts/StringConcept.h	/^class CStringConcept: public CConcept {$/;"	c	inherits:CConcept
CStringConcept::CStringConcept	DMCore/Concepts/StringConcept.cpp	/^CStringConcept::CStringConcept(string sAName, TConceptSource csAConceptSource):$/;"	f	class:CStringConcept	signature:(string sAName, TConceptSource csAConceptSource)
CStringConcept::CStringConcept	DMCore/Concepts/StringConcept.cpp	/^CStringConcept::CStringConcept(string sAName, string sAValue, float fAConfidence,$/;"	f	class:CStringConcept	signature:(string sAName, string sAValue, float fAConfidence, TConceptSource csAConceptSource)
CStringConcept::CStringConcept	DMCore/Concepts/StringConcept.h	/^	CStringConcept(CStringConcept& rAConcept);$/;"	p	class:CStringConcept	access:public	signature:(CStringConcept& rAConcept)
CStringConcept::CStringConcept	DMCore/Concepts/StringConcept.h	/^	CStringConcept(string sAName = "NONAME",$/;"	p	class:CStringConcept	access:public	signature:(string sAName = Ó, TConceptSource csAConceptSource = csUser)
CStringConcept::CStringConcept	DMCore/Concepts/StringConcept.h	/^	CStringConcept(string sAName, string sAValue, float fAConfidence = 1.0,$/;"	p	class:CStringConcept	access:public	signature:(string sAName, string sAValue, float fAConfidence = 1.0, TConceptSource csAConceptSource = csUser)
CStringConcept::EmptyClone	DMCore/Concepts/StringConcept.cpp	/^CConcept* CStringConcept::EmptyClone() {$/;"	f	class:CStringConcept	signature:()
CStringConcept::EmptyClone	DMCore/Concepts/StringConcept.h	/^    virtual CConcept* EmptyClone();$/;"	p	class:CStringConcept	access:public	signature:()
CStringConcept::HypFactory	DMCore/Concepts/StringConcept.cpp	/^CHyp* CStringConcept::HypFactory() {$/;"	f	class:CStringConcept	signature:()
CStringConcept::HypFactory	DMCore/Concepts/StringConcept.h	/^    virtual CHyp* HypFactory();$/;"	p	class:CStringConcept	access:public	signature:()
CStringConcept::operator =	DMCore/Concepts/StringConcept.cpp	/^CConcept& CStringConcept::operator = (bool bAValue) {$/;"	f	class:CStringConcept	signature:(bool bAValue)
CStringConcept::operator =	DMCore/Concepts/StringConcept.cpp	/^CConcept& CStringConcept::operator = (double dAValue) {$/;"	f	class:CStringConcept	signature:(double dAValue)
CStringConcept::operator =	DMCore/Concepts/StringConcept.cpp	/^CConcept& CStringConcept::operator = (float fAValue) {$/;"	f	class:CStringConcept	signature:(float fAValue)
CStringConcept::operator =	DMCore/Concepts/StringConcept.cpp	/^CConcept& CStringConcept::operator = (int iAValue) {$/;"	f	class:CStringConcept	signature:(int iAValue)
CStringConcept::operator =	DMCore/Concepts/StringConcept.h	/^	virtual CConcept& operator = (bool bAValue);$/;"	p	class:CStringConcept	access:public	signature:(bool bAValue)
CStringConcept::operator =	DMCore/Concepts/StringConcept.h	/^	virtual CConcept& operator = (double dAValue);$/;"	p	class:CStringConcept	access:public	signature:(double dAValue)
CStringConcept::operator =	DMCore/Concepts/StringConcept.h	/^	virtual CConcept& operator = (float fAValue);$/;"	p	class:CStringConcept	access:public	signature:(float fAValue)
CStringConcept::operator =	DMCore/Concepts/StringConcept.h	/^	virtual CConcept& operator = (int iAValue);$/;"	p	class:CStringConcept	access:public	signature:(int iAValue)
CStringHyp	DMCore/Concepts/StringConcept.cpp	/^CStringHyp::CStringHyp() {$/;"	f	class:CStringHyp	signature:()
CStringHyp	DMCore/Concepts/StringConcept.cpp	/^CStringHyp::CStringHyp(CStringHyp& rAStringHyp) {$/;"	f	class:CStringHyp	signature:(CStringHyp& rAStringHyp)
CStringHyp	DMCore/Concepts/StringConcept.cpp	/^CStringHyp::CStringHyp(string sAValue, float fAConfidence) {$/;"	f	class:CStringHyp	signature:(string sAValue, float fAConfidence)
CStringHyp	DMCore/Concepts/StringConcept.h	/^	CStringHyp();$/;"	p	class:CStringHyp	access:public	signature:()
CStringHyp	DMCore/Concepts/StringConcept.h	/^	CStringHyp(string sAValue, float fAConfidence = 1.0);$/;"	p	class:CStringHyp	access:public	signature:(string sAValue, float fAConfidence = 1.0)
CStringHyp	DMCore/Concepts/StringConcept.h	/^    CStringHyp(CStringHyp& rAStringHyp);$/;"	p	class:CStringHyp	access:public	signature:(CStringHyp& rAStringHyp)
CStringHyp	DMCore/Concepts/StringConcept.h	/^class CStringHyp : public CHyp {$/;"	c	inherits:CHyp
CStringHyp::CStringHyp	DMCore/Concepts/StringConcept.cpp	/^CStringHyp::CStringHyp() {$/;"	f	class:CStringHyp	signature:()
CStringHyp::CStringHyp	DMCore/Concepts/StringConcept.cpp	/^CStringHyp::CStringHyp(CStringHyp& rAStringHyp) {$/;"	f	class:CStringHyp	signature:(CStringHyp& rAStringHyp)
CStringHyp::CStringHyp	DMCore/Concepts/StringConcept.cpp	/^CStringHyp::CStringHyp(string sAValue, float fAConfidence) {$/;"	f	class:CStringHyp	signature:(string sAValue, float fAConfidence)
CStringHyp::CStringHyp	DMCore/Concepts/StringConcept.h	/^	CStringHyp();$/;"	p	class:CStringHyp	access:public	signature:()
CStringHyp::CStringHyp	DMCore/Concepts/StringConcept.h	/^	CStringHyp(string sAValue, float fAConfidence = 1.0);$/;"	p	class:CStringHyp	access:public	signature:(string sAValue, float fAConfidence = 1.0)
CStringHyp::CStringHyp	DMCore/Concepts/StringConcept.h	/^    CStringHyp(CStringHyp& rAStringHyp);$/;"	p	class:CStringHyp	access:public	signature:(CStringHyp& rAStringHyp)
CStringHyp::FromString	DMCore/Concepts/StringConcept.cpp	/^void CStringHyp::FromString(string sString) {$/;"	f	class:CStringHyp	signature:(string sString)
CStringHyp::FromString	DMCore/Concepts/StringConcept.h	/^	virtual void FromString(string sString);$/;"	p	class:CStringHyp	access:public	signature:(string sString)
CStringHyp::ToString	DMCore/Concepts/StringConcept.cpp	/^string CStringHyp::ToString() {$/;"	f	class:CStringHyp	signature:()
CStringHyp::ToString	DMCore/Concepts/StringConcept.h	/^	virtual string ToString();$/;"	p	class:CStringHyp	access:public	signature:()
CStringHyp::ValueToString	DMCore/Concepts/StringConcept.cpp	/^string CStringHyp::ValueToString() {$/;"	f	class:CStringHyp	signature:()
CStringHyp::ValueToString	DMCore/Concepts/StringConcept.h	/^	virtual string ValueToString();$/;"	p	class:CStringHyp	access:public	signature:()
CStringHyp::operator <	DMCore/Concepts/StringConcept.cpp	/^bool CStringHyp::operator < (CHyp& rAHyp) {    $/;"	f	class:CStringHyp	signature:(CHyp& rAHyp)
CStringHyp::operator <	DMCore/Concepts/StringConcept.h	/^    virtual bool operator < (CHyp& rAHyp);$/;"	p	class:CStringHyp	access:public	signature:(CHyp& rAHyp)
CStringHyp::operator <=	DMCore/Concepts/StringConcept.cpp	/^bool CStringHyp::operator <= (CHyp& rAHyp) {    $/;"	f	class:CStringHyp	signature:(CHyp& rAHyp)
CStringHyp::operator <=	DMCore/Concepts/StringConcept.h	/^    virtual bool operator <= (CHyp& rAHyp);$/;"	p	class:CStringHyp	access:public	signature:(CHyp& rAHyp)
CStringHyp::operator =	DMCore/Concepts/StringConcept.cpp	/^CHyp& CStringHyp::operator = (CHyp& rAHyp) {$/;"	f	class:CStringHyp	signature:(CHyp& rAHyp)
CStringHyp::operator =	DMCore/Concepts/StringConcept.cpp	/^CHyp& CStringHyp::operator = (char *lpszValue) {$/;"	f	class:CStringHyp	signature:(char *lpszValue)
CStringHyp::operator =	DMCore/Concepts/StringConcept.cpp	/^CHyp& CStringHyp::operator = (string sAValue) {$/;"	f	class:CStringHyp	signature:(string sAValue)
CStringHyp::operator =	DMCore/Concepts/StringConcept.h	/^	CHyp& operator = (char *lpszValue);$/;"	p	class:CStringHyp	access:public	signature:(char *lpszValue)
CStringHyp::operator =	DMCore/Concepts/StringConcept.h	/^	CHyp& operator = (string sAValue);$/;"	p	class:CStringHyp	access:public	signature:(string sAValue)
CStringHyp::operator =	DMCore/Concepts/StringConcept.h	/^	virtual CHyp& operator = (CHyp& rAHyp);$/;"	p	class:CStringHyp	access:public	signature:(CHyp& rAHyp)
CStringHyp::operator ==	DMCore/Concepts/StringConcept.cpp	/^bool CStringHyp::operator == (CHyp& rAHyp) {$/;"	f	class:CStringHyp	signature:(CHyp& rAHyp)
CStringHyp::operator ==	DMCore/Concepts/StringConcept.h	/^    virtual bool operator == (CHyp& rAHyp);$/;"	p	class:CStringHyp	access:public	signature:(CHyp& rAHyp)
CStringHyp::operator >	DMCore/Concepts/StringConcept.cpp	/^bool CStringHyp::operator > (CHyp& rAHyp) {    $/;"	f	class:CStringHyp	signature:(CHyp& rAHyp)
CStringHyp::operator >	DMCore/Concepts/StringConcept.h	/^    virtual bool operator > (CHyp& rAHyp);$/;"	p	class:CStringHyp	access:public	signature:(CHyp& rAHyp)
CStringHyp::operator >=	DMCore/Concepts/StringConcept.cpp	/^bool CStringHyp::operator >= (CHyp& rAHyp) {    $/;"	f	class:CStringHyp	signature:(CHyp& rAHyp)
CStringHyp::operator >=	DMCore/Concepts/StringConcept.h	/^    virtual bool operator >= (CHyp& rAHyp);$/;"	p	class:CStringHyp	access:public	signature:(CHyp& rAHyp)
CStringHyp::operator []	DMCore/Concepts/StringConcept.cpp	/^CHyp* CStringHyp::operator [] (string sItem) {$/;"	f	class:CStringHyp	signature:(string sItem)
CStringHyp::operator []	DMCore/Concepts/StringConcept.h	/^    virtual CHyp* operator [](string sItem);$/;"	p	class:CStringHyp	access:public	signature:(string sItem)
CStringHyp::sValue	DMCore/Concepts/StringConcept.h	/^	string sValue;$/;"	m	class:CStringHyp	access:protected
CStringRef	spdlog/fmt/bundled/format.h	/^typedef BasicCStringRef<char> CStringRef;$/;"	t	namespace:fmt
CStructConcept	DMCore/Concepts/StructConcept.cpp	/^CStructConcept::CStructConcept(string sAName, TConceptSource csAConceptSource): $/;"	f	class:CStructConcept	signature:(string sAName, TConceptSource csAConceptSource)
CStructConcept	DMCore/Concepts/StructConcept.h	/^	CStructConcept(string sAName = "NONAME", $/;"	p	class:CStructConcept	access:public	signature:(string sAName = Ó, TConceptSource csAConceptSource = csUser)
CStructConcept	DMCore/Concepts/StructConcept.h	/^class CStructConcept: public CConcept {$/;"	c	inherits:CConcept
CStructConcept::AddNewHyp	DMCore/Concepts/StructConcept.cpp	/^int CStructConcept::AddNewHyp() {$/;"	f	class:CStructConcept	signature:()
CStructConcept::AddNewHyp	DMCore/Concepts/StructConcept.h	/^    virtual int AddNewHyp();$/;"	p	class:CStructConcept	access:public	signature:()
CStructConcept::AddNewPartialHyp	DMCore/Concepts/StructConcept.cpp	/^int CStructConcept::AddNewPartialHyp() {$/;"	f	class:CStructConcept	signature:()
CStructConcept::AddNewPartialHyp	DMCore/Concepts/StructConcept.h	/^    virtual int AddNewPartialHyp();$/;"	p	class:CStructConcept	access:public	signature:()
CStructConcept::AddNullHyp	DMCore/Concepts/StructConcept.cpp	/^int CStructConcept::AddNullHyp() {$/;"	f	class:CStructConcept	signature:()
CStructConcept::AddNullHyp	DMCore/Concepts/StructConcept.h	/^    virtual int AddNullHyp();$/;"	p	class:CStructConcept	access:public	signature:()
CStructConcept::AddNullPartialHyp	DMCore/Concepts/StructConcept.cpp	/^int CStructConcept::AddNullPartialHyp() {$/;"	f	class:CStructConcept	signature:()
CStructConcept::AddNullPartialHyp	DMCore/Concepts/StructConcept.h	/^    virtual int AddNullPartialHyp();$/;"	p	class:CStructConcept	access:public	signature:()
CStructConcept::CStructConcept	DMCore/Concepts/StructConcept.cpp	/^CStructConcept::CStructConcept(string sAName, TConceptSource csAConceptSource): $/;"	f	class:CStructConcept	signature:(string sAName, TConceptSource csAConceptSource)
CStructConcept::CStructConcept	DMCore/Concepts/StructConcept.h	/^	CStructConcept(string sAName = "NONAME", $/;"	p	class:CStructConcept	access:public	signature:(string sAName = Ó, TConceptSource csAConceptSource = csUser)
CStructConcept::ClearCurrentHypSet	DMCore/Concepts/StructConcept.cpp	/^void CStructConcept::ClearCurrentHypSet() {$/;"	f	class:CStructConcept	signature:()
CStructConcept::ClearCurrentHypSet	DMCore/Concepts/StructConcept.h	/^    virtual void ClearCurrentHypSet();$/;"	p	class:CStructConcept	access:public	signature:()
CStructConcept::Clone	DMCore/Concepts/StructConcept.cpp	/^CConcept* CStructConcept::Clone(bool bCloneHistory) {$/;"	f	class:CStructConcept	signature:(bool bCloneHistory)
CStructConcept::Clone	DMCore/Concepts/StructConcept.h	/^	virtual CConcept* Clone(bool bCloneHistory = true);$/;"	p	class:CStructConcept	access:public	signature:(bool bCloneHistory = true)
CStructConcept::CreateGroundingModel	DMCore/Concepts/StructConcept.cpp	/^void CStructConcept::CreateGroundingModel(string sGroundingModelSpec) {$/;"	f	class:CStructConcept	signature:(string sGroundingModelSpec)
CStructConcept::CreateGroundingModel	DMCore/Concepts/StructConcept.h	/^    virtual void CreateGroundingModel(string sGroundingModelSpec);$/;"	p	class:CStructConcept	access:public	signature:(string sGroundingModelSpec)
CStructConcept::CreateStructure	DMCore/Concepts/StructConcept.cpp	/^void CStructConcept::CreateStructure() {$/;"	f	class:CStructConcept	signature:()
CStructConcept::CreateStructure	DMCore/Concepts/StructConcept.h	/^	virtual void CreateStructure();$/;"	p	class:CStructConcept	access:public	signature:()
CStructConcept::DeclareConcepts	DMCore/Concepts/StructConcept.cpp	/^void CStructConcept::DeclareConcepts($/;"	f	class:CStructConcept	signature:( TConceptPointersVector& rcpvConcepts, TConceptPointersSet& rcpsExclude)
CStructConcept::DeclareConcepts	DMCore/Concepts/StructConcept.h	/^    virtual void DeclareConcepts($/;"	p	class:CStructConcept	access:public	signature:( TConceptPointersVector& rcpvConcepts, TConceptPointersSet& rcpsExclude)
CStructConcept::DeclareGroundingModels	DMCore/Concepts/StructConcept.cpp	/^void CStructConcept::DeclareGroundingModels($/;"	f	class:CStructConcept	signature:( TGroundingModelPointersVector& rgmpvModels, TGroundingModelPointersSet& rgmpsExclude)
CStructConcept::DeclareGroundingModels	DMCore/Concepts/StructConcept.h	/^    virtual void DeclareGroundingModels($/;"	p	class:CStructConcept	access:public	signature:( TGroundingModelPointersVector& rgmpvModels, TGroundingModelPointersSet& rgmpsExclude)
CStructConcept::DeleteHyp	DMCore/Concepts/StructConcept.cpp	/^void CStructConcept::DeleteHyp(int iIndex) {$/;"	f	class:CStructConcept	signature:(int iIndex)
CStructConcept::DeleteHyp	DMCore/Concepts/StructConcept.h	/^	virtual void DeleteHyp(int iIndex);$/;"	p	class:CStructConcept	access:public	signature:(int iIndex)
CStructConcept::DestroyStructure	DMCore/Concepts/StructConcept.cpp	/^void CStructConcept::DestroyStructure() {$/;"	f	class:CStructConcept	signature:()
CStructConcept::DestroyStructure	DMCore/Concepts/StructConcept.h	/^	virtual void DestroyStructure();$/;"	p	class:CStructConcept	access:public	signature:()
CStructConcept::HypFactory	DMCore/Concepts/StructConcept.cpp	/^CHyp* CStructConcept::HypFactory() {$/;"	f	class:CStructConcept	signature:()
CStructConcept::HypFactory	DMCore/Concepts/StructConcept.h	/^    virtual CHyp* HypFactory();$/;"	p	class:CStructConcept	access:public	signature:()
CStructConcept::HypSetToString	DMCore/Concepts/StructConcept.cpp	/^string CStructConcept::HypSetToString() {$/;"	f	class:CStructConcept	signature:()
CStructConcept::HypSetToString	DMCore/Concepts/StructConcept.h	/^	virtual string HypSetToString();$/;"	p	class:CStructConcept	access:public	signature:()
CStructConcept::ItemMap	DMCore/Concepts/StructConcept.h	/^	TItemMap ItemMap;$/;"	m	class:CStructConcept	access:protected
CStructConcept::SetChangeNotification	DMCore/Concepts/StructConcept.cpp	/^void CStructConcept::SetChangeNotification($/;"	f	class:CStructConcept	signature:( bool bAChangeNotification)
CStructConcept::SetChangeNotification	DMCore/Concepts/StructConcept.h	/^	virtual void SetChangeNotification($/;"	p	class:CStructConcept	access:public	signature:( bool bAChangeNotification = true)
CStructConcept::SetHistoryConcept	DMCore/Concepts/StructConcept.cpp	/^void CStructConcept::SetHistoryConcept(bool bAHistoryConcept) {$/;"	f	class:CStructConcept	signature:(bool bAHistoryConcept)
CStructConcept::SetHistoryConcept	DMCore/Concepts/StructConcept.h	/^	virtual void SetHistoryConcept(bool bAHistoryConcept = true);$/;"	p	class:CStructConcept	access:public	signature:(bool bAHistoryConcept = true)
CStructConcept::SetHyp	DMCore/Concepts/StructConcept.cpp	/^void CStructConcept::SetHyp(int iIndex, CHyp* pHyp) {$/;"	f	class:CStructConcept	signature:(int iIndex, CHyp* pHyp)
CStructConcept::SetHyp	DMCore/Concepts/StructConcept.h	/^    virtual void SetHyp(int iIndex, CHyp* pHyp);$/;"	p	class:CStructConcept	access:public	signature:(int iIndex, CHyp* pHyp)
CStructConcept::SetName	DMCore/Concepts/StructConcept.cpp	/^void CStructConcept::SetName(string sAName) {$/;"	f	class:CStructConcept	signature:(string sAName)
CStructConcept::SetName	DMCore/Concepts/StructConcept.h	/^    virtual void SetName(string sAName);$/;"	p	class:CStructConcept	access:public	signature:(string sAName)
CStructConcept::SetNullHyp	DMCore/Concepts/StructConcept.cpp	/^void CStructConcept::SetNullHyp(int iIndex) {$/;"	f	class:CStructConcept	signature:(int iIndex)
CStructConcept::SetNullHyp	DMCore/Concepts/StructConcept.h	/^    virtual void SetNullHyp(int iIndex);$/;"	p	class:CStructConcept	access:public	signature:(int iIndex)
CStructConcept::SetOwnerDialogAgent	DMCore/Concepts/StructConcept.cpp	/^void CStructConcept::SetOwnerDialogAgent(CDialogAgent* pADialogAgent) {$/;"	f	class:CStructConcept	signature:(CDialogAgent* pADialogAgent)
CStructConcept::SetOwnerDialogAgent	DMCore/Concepts/StructConcept.h	/^    virtual void SetOwnerDialogAgent(CDialogAgent* pADialogAgent);$/;"	p	class:CStructConcept	access:public	signature:(CDialogAgent* pADialogAgent)
CStructConcept::Update_NPU_AssignFromString	DMCore/Concepts/StructConcept.cpp	/^void CStructConcept::Update_NPU_AssignFromString(void* pUpdateData) {$/;"	f	class:CStructConcept	signature:(void* pUpdateData)
CStructConcept::Update_NPU_AssignFromString	DMCore/Concepts/StructConcept.h	/^	virtual void Update_NPU_AssignFromString(void* pUpdateData);$/;"	p	class:CStructConcept	access:public	signature:(void* pUpdateData)
CStructConcept::Update_PartialFromString	DMCore/Concepts/StructConcept.cpp	/^void CStructConcept::Update_PartialFromString(void* pUpdateData) {$/;"	f	class:CStructConcept	signature:(void* pUpdateData)
CStructConcept::Update_PartialFromString	DMCore/Concepts/StructConcept.h	/^	virtual void Update_PartialFromString(void* pUpdateData);$/;"	p	class:CStructConcept	access:public	signature:(void* pUpdateData)
CStructConcept::operator <	DMCore/Concepts/StructConcept.cpp	/^bool CStructConcept::operator < (CConcept& rAConcept) {$/;"	f	class:CStructConcept	signature:(CConcept& rAConcept)
CStructConcept::operator <	DMCore/Concepts/StructConcept.h	/^    virtual bool operator < (CConcept& rAConcept);$/;"	p	class:CStructConcept	access:public	signature:(CConcept& rAConcept)
CStructConcept::operator <=	DMCore/Concepts/StructConcept.cpp	/^bool CStructConcept::operator <= (CConcept& rAConcept) {$/;"	f	class:CStructConcept	signature:(CConcept& rAConcept)
CStructConcept::operator <=	DMCore/Concepts/StructConcept.h	/^    virtual bool operator <= (CConcept& rAConcept);$/;"	p	class:CStructConcept	access:public	signature:(CConcept& rAConcept)
CStructConcept::operator >	DMCore/Concepts/StructConcept.cpp	/^bool CStructConcept::operator > (CConcept& rAConcept) {$/;"	f	class:CStructConcept	signature:(CConcept& rAConcept)
CStructConcept::operator >	DMCore/Concepts/StructConcept.h	/^    virtual bool operator > (CConcept& rAConcept);$/;"	p	class:CStructConcept	access:public	signature:(CConcept& rAConcept)
CStructConcept::operator >=	DMCore/Concepts/StructConcept.cpp	/^bool CStructConcept::operator >= (CConcept& rAConcept) {$/;"	f	class:CStructConcept	signature:(CConcept& rAConcept)
CStructConcept::operator >=	DMCore/Concepts/StructConcept.h	/^    virtual bool operator >= (CConcept& rAConcept);$/;"	p	class:CStructConcept	access:public	signature:(CConcept& rAConcept)
CStructConcept::operator []	DMCore/Concepts/StructConcept.cpp	/^CConcept& CStructConcept::operator [](string sAItemName) {$/;"	f	class:CStructConcept	signature:(string sAItemName)
CStructConcept::operator []	DMCore/Concepts/StructConcept.h	/^	virtual CConcept& operator [] (string sAItemName);$/;"	p	class:CStructConcept	access:public	signature:(string sAItemName)
CStructConcept::svItems	DMCore/Concepts/StructConcept.h	/^	TStringVector svItems;$/;"	m	class:CStructConcept	access:protected
CStructConcept::updateFromString	DMCore/Concepts/StructConcept.cpp	/^void CStructConcept::updateFromString(void* pUpdateData, string sUpdateType) {$/;"	f	class:CStructConcept	signature:(void* pUpdateData, string sUpdateType)
CStructConcept::updateFromString	DMCore/Concepts/StructConcept.h	/^	virtual void updateFromString(void* pUpdateData, string sUpdateType);$/;"	p	class:CStructConcept	access:protected	signature:(void* pUpdateData, string sUpdateType)
CStructConcept::~CStructConcept	DMCore/Concepts/StructConcept.cpp	/^CStructConcept::~CStructConcept() {$/;"	f	class:CStructConcept	signature:()
CStructConcept::~CStructConcept	DMCore/Concepts/StructConcept.h	/^    ~CStructConcept();$/;"	p	class:CStructConcept	access:public	signature:()
CStructHyp	DMCore/Concepts/StructConcept.cpp	/^CStructHyp::CStructHyp(CStructHyp& rAStructHyp) {$/;"	f	class:CStructHyp	signature:(CStructHyp& rAStructHyp)
CStructHyp	DMCore/Concepts/StructConcept.cpp	/^CStructHyp::CStructHyp(TItemMap* pAItemMap, TStringVector* psvAItems, $/;"	f	class:CStructHyp	signature:(TItemMap* pAItemMap, TStringVector* psvAItems, int iAHypIndex, bool bComplete)
CStructHyp	DMCore/Concepts/StructConcept.h	/^	CStructHyp(TItemMap* pAItemMap = NULL, TStringVector* psvAItems = NULL, $/;"	p	class:CStructHyp	access:public	signature:(TItemMap* pAItemMap = NULL, TStringVector* psvAItems = NULL, int iAHypIndex = -1, bool bComplete = true)
CStructHyp	DMCore/Concepts/StructConcept.h	/^    CStructHyp(CStructHyp& rAStructHyp);$/;"	p	class:CStructHyp	access:public	signature:(CStructHyp& rAStructHyp)
CStructHyp	DMCore/Concepts/StructConcept.h	/^class CStructHyp : public CHyp {$/;"	c	inherits:CHyp
CStructHyp::CStructHyp	DMCore/Concepts/StructConcept.cpp	/^CStructHyp::CStructHyp(CStructHyp& rAStructHyp) {$/;"	f	class:CStructHyp	signature:(CStructHyp& rAStructHyp)
CStructHyp::CStructHyp	DMCore/Concepts/StructConcept.cpp	/^CStructHyp::CStructHyp(TItemMap* pAItemMap, TStringVector* psvAItems, $/;"	f	class:CStructHyp	signature:(TItemMap* pAItemMap, TStringVector* psvAItems, int iAHypIndex, bool bComplete)
CStructHyp::CStructHyp	DMCore/Concepts/StructConcept.h	/^	CStructHyp(TItemMap* pAItemMap = NULL, TStringVector* psvAItems = NULL, $/;"	p	class:CStructHyp	access:public	signature:(TItemMap* pAItemMap = NULL, TStringVector* psvAItems = NULL, int iAHypIndex = -1, bool bComplete = true)
CStructHyp::CStructHyp	DMCore/Concepts/StructConcept.h	/^    CStructHyp(CStructHyp& rAStructHyp);$/;"	p	class:CStructHyp	access:public	signature:(CStructHyp& rAStructHyp)
CStructHyp::FromString	DMCore/Concepts/StructConcept.cpp	/^void CStructHyp::FromString(string sString) {$/;"	f	class:CStructHyp	signature:(string sString)
CStructHyp::FromString	DMCore/Concepts/StructConcept.h	/^	virtual void FromString(string sString);$/;"	p	class:CStructHyp	access:public	signature:(string sString)
CStructHyp::SetConfidence	DMCore/Concepts/StructConcept.cpp	/^void CStructHyp::SetConfidence(float fAConfidence) {$/;"	f	class:CStructHyp	signature:(float fAConfidence)
CStructHyp::SetConfidence	DMCore/Concepts/StructConcept.h	/^    virtual void SetConfidence(float fAConfidence);$/;"	p	class:CStructHyp	access:public	signature:(float fAConfidence)
CStructHyp::SetHypIndex	DMCore/Concepts/StructConcept.cpp	/^void CStructHyp::SetHypIndex(int iAHypIndex) {$/;"	f	class:CStructHyp	signature:(int iAHypIndex)
CStructHyp::SetHypIndex	DMCore/Concepts/StructConcept.h	/^    void SetHypIndex(int iAHypIndex);$/;"	p	class:CStructHyp	access:public	signature:(int iAHypIndex)
CStructHyp::ToString	DMCore/Concepts/StructConcept.cpp	/^string CStructHyp::ToString() {$/;"	f	class:CStructHyp	signature:()
CStructHyp::ToString	DMCore/Concepts/StructConcept.h	/^	virtual string ToString();$/;"	p	class:CStructHyp	access:public	signature:()
CStructHyp::ValueToString	DMCore/Concepts/StructConcept.cpp	/^string CStructHyp::ValueToString() {$/;"	f	class:CStructHyp	signature:()
CStructHyp::ValueToString	DMCore/Concepts/StructConcept.h	/^	virtual string ValueToString();$/;"	p	class:CStructHyp	access:public	signature:()
CStructHyp::iHypIndex	DMCore/Concepts/StructConcept.h	/^	int	iHypIndex;$/;"	m	class:CStructHyp	access:protected
CStructHyp::operator <	DMCore/Concepts/StructConcept.cpp	/^bool CStructHyp::operator < (CHyp& rAHyp) {   $/;"	f	class:CStructHyp	signature:(CHyp& rAHyp)
CStructHyp::operator <	DMCore/Concepts/StructConcept.h	/^    virtual bool operator < (CHyp& rAHyp);$/;"	p	class:CStructHyp	access:public	signature:(CHyp& rAHyp)
CStructHyp::operator <=	DMCore/Concepts/StructConcept.cpp	/^bool CStructHyp::operator <= (CHyp& rAHyp) {   $/;"	f	class:CStructHyp	signature:(CHyp& rAHyp)
CStructHyp::operator <=	DMCore/Concepts/StructConcept.h	/^    virtual bool operator <= (CHyp& rAHyp);$/;"	p	class:CStructHyp	access:public	signature:(CHyp& rAHyp)
CStructHyp::operator =	DMCore/Concepts/StructConcept.cpp	/^CHyp& CStructHyp::operator = (CHyp& rAHyp) {$/;"	f	class:CStructHyp	signature:(CHyp& rAHyp)
CStructHyp::operator =	DMCore/Concepts/StructConcept.h	/^	virtual CHyp& operator = (CHyp& rAHyp);$/;"	p	class:CStructHyp	access:public	signature:(CHyp& rAHyp)
CStructHyp::operator ==	DMCore/Concepts/StructConcept.cpp	/^bool CStructHyp::operator == (CHyp& rAHyp) {$/;"	f	class:CStructHyp	signature:(CHyp& rAHyp)
CStructHyp::operator ==	DMCore/Concepts/StructConcept.h	/^    virtual bool operator == (CHyp& rAHyp);$/;"	p	class:CStructHyp	access:public	signature:(CHyp& rAHyp)
CStructHyp::operator >	DMCore/Concepts/StructConcept.cpp	/^bool CStructHyp::operator > (CHyp& rAHyp) {   $/;"	f	class:CStructHyp	signature:(CHyp& rAHyp)
CStructHyp::operator >	DMCore/Concepts/StructConcept.h	/^    virtual bool operator > (CHyp& rAHyp);$/;"	p	class:CStructHyp	access:public	signature:(CHyp& rAHyp)
CStructHyp::operator >=	DMCore/Concepts/StructConcept.cpp	/^bool CStructHyp::operator >= (CHyp& rAHyp) {   $/;"	f	class:CStructHyp	signature:(CHyp& rAHyp)
CStructHyp::operator >=	DMCore/Concepts/StructConcept.h	/^    virtual bool operator >= (CHyp& rAHyp);$/;"	p	class:CStructHyp	access:public	signature:(CHyp& rAHyp)
CStructHyp::operator []	DMCore/Concepts/StructConcept.cpp	/^CHyp* CStructHyp::operator [](string sItem) {$/;"	f	class:CStructHyp	signature:(string sItem)
CStructHyp::operator []	DMCore/Concepts/StructConcept.h	/^    virtual CHyp* operator [](string sItem);$/;"	p	class:CStructHyp	access:public	signature:(string sItem)
CStructHyp::pItemMap	DMCore/Concepts/StructConcept.h	/^	TItemMap* pItemMap;$/;"	m	class:CStructHyp	access:protected
CStructHyp::psvItems	DMCore/Concepts/StructConcept.h	/^	TStringVector* psvItems;$/;"	m	class:CStructHyp	access:protected
CTrafficManagerAgent	DMCore/Agents/CoreAgents/TrafficManagerAgent.cpp	/^CTrafficManagerAgent::CTrafficManagerAgent(string sAName, $/;"	f	class:CTrafficManagerAgent	signature:(string sAName, string sAConfiguration, string sAType)
CTrafficManagerAgent	DMCore/Agents/CoreAgents/TrafficManagerAgent.h	/^	CTrafficManagerAgent(string sAName, $/;"	p	class:CTrafficManagerAgent	access:public	signature:(string sAName, string sAConfiguration = Ó, string sAType = Ó)
CTrafficManagerAgent	DMCore/Agents/CoreAgents/TrafficManagerAgent.h	/^class CTrafficManagerAgent : public CAgent {$/;"	c	inherits:CAgent
CTrafficManagerAgent::AgentFactory	DMCore/Agents/CoreAgents/TrafficManagerAgent.cpp	/^CAgent* CTrafficManagerAgent::AgentFactory(string sAName, $/;"	f	class:CTrafficManagerAgent	signature:(string sAName, string sAConfiguration)
CTrafficManagerAgent::AgentFactory	DMCore/Agents/CoreAgents/TrafficManagerAgent.h	/^	static CAgent* AgentFactory(string sAName, string sAConfiguration);$/;"	p	class:CTrafficManagerAgent	access:public	signature:(string sAName, string sAConfiguration)
CTrafficManagerAgent::CTrafficManagerAgent	DMCore/Agents/CoreAgents/TrafficManagerAgent.cpp	/^CTrafficManagerAgent::CTrafficManagerAgent(string sAName, $/;"	f	class:CTrafficManagerAgent	signature:(string sAName, string sAConfiguration, string sAType)
CTrafficManagerAgent::CTrafficManagerAgent	DMCore/Agents/CoreAgents/TrafficManagerAgent.h	/^	CTrafficManagerAgent(string sAName, $/;"	p	class:CTrafficManagerAgent	access:public	signature:(string sAName, string sAConfiguration = Ó, string sAType = Ó)
CTrafficManagerAgent::Call	DMCore/Agents/CoreAgents/TrafficManagerAgent.cpp	/^void CTrafficManagerAgent::Call(CDialogAgent* pCallerAgent, string sCall) {$/;"	f	class:CTrafficManagerAgent	signature:(CDialogAgent* pCallerAgent, string sCall)
CTrafficManagerAgent::Call	DMCore/Agents/CoreAgents/TrafficManagerAgent.h	/^	void Call(CDialogAgent* pCallerAgent, string sCall);$/;"	p	class:CTrafficManagerAgent	access:public	signature:(CDialogAgent* pCallerAgent, string sCall)
CTrafficManagerAgent::galaxyCall	DMCore/Agents/CoreAgents/TrafficManagerAgent.h	/^	void galaxyCall(TExternalCallSpec ecsCall);$/;"	p	class:CTrafficManagerAgent	access:private	signature:(TExternalCallSpec ecsCall)
CTrafficManagerAgent::oaaCall	DMCore/Agents/CoreAgents/TrafficManagerAgent.h	/^	void oaaCall(TExternalCallSpec ecsCall);$/;"	p	class:CTrafficManagerAgent	access:private	signature:(TExternalCallSpec ecsCall)
CTrafficManagerAgent::~CTrafficManagerAgent	DMCore/Agents/CoreAgents/TrafficManagerAgent.cpp	/^CTrafficManagerAgent::~CTrafficManagerAgent() {$/;"	f	class:CTrafficManagerAgent	signature:()
CTrafficManagerAgent::~CTrafficManagerAgent	DMCore/Agents/CoreAgents/TrafficManagerAgent.h	/^	virtual ~CTrafficManagerAgent();$/;"	p	class:CTrafficManagerAgent	access:public	signature:()
CUSTOM	spdlog/fmt/bundled/format.h	/^        CSTRING, STRING, WSTRING, POINTER, CUSTOM$/;"	e	enum:fmt::internal::Value::Type
CUSTOM_ITEM	DialogTask/DialogTask.h	200;"	d
CUSTOM_START_OVER	DialogTask/DialogTask.h	178;"	d
CUSTOM_SYSTEM_CONCEPT	DialogTask/DialogTask.h	208;"	d
CUSTOM_USER_CONCEPT	DialogTask/DialogTask.h	222;"	d
CU_ASSIGN_FROM_CONCEPT	DMCore/Concepts/Concept.h	241;"	d
CU_ASSIGN_FROM_STRING	DMCore/Concepts/Concept.h	240;"	d
CU_COLLAPSE_TO_MODE	DMCore/Concepts/Concept.h	243;"	d
CU_PARTIAL_FROM_STRING	DMCore/Concepts/Concept.h	244;"	d
CU_UPDATE_WITH_CONCEPT	DMCore/Concepts/Concept.h	242;"	d
CYAN	spdlog/fmt/bundled/format.h	/^    BLACK, RED, GREEN, YELLOW, BLUE, MAGENTA, CYAN, WHITE$/;"	e	enum:Color
CYAN	spdlog/sinks/wincolor_sink.h	/^    const WORD CYAN = FOREGROUND_GREEN | FOREGROUND_BLUE;$/;"	m	class:spdlog::sinks::wincolor_sink	access:public
C_formatter	spdlog/details/pattern_formatter_impl.h	/^class C_formatter:public flag_formatter$/;"	c	namespace:spdlog::details	inherits:flag_formatter
Call	DMCore/Agents/CoreAgents/TrafficManagerAgent.cpp	/^void CTrafficManagerAgent::Call(CDialogAgent* pCallerAgent, string sCall) {$/;"	f	class:CTrafficManagerAgent	signature:(CDialogAgent* pCallerAgent, string sCall)
Call	DMCore/Agents/CoreAgents/TrafficManagerAgent.h	/^	void Call(CDialogAgent* pCallerAgent, string sCall);$/;"	p	class:CTrafficManagerAgent	access:public	signature:(CDialogAgent* pCallerAgent, string sCall)
CancelConceptNotificationRequest	DMCore/Agents/CoreAgents/OutputManagerAgent.cpp	/^void COutputManagerAgent::CancelConceptNotificationRequest($/;"	f	class:COutputManagerAgent	signature:( CConcept* pConcept)
CancelConceptNotificationRequest	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^    void CancelConceptNotificationRequest(CConcept* pConcept);$/;"	p	class:COutputManagerAgent	access:public	signature:(CConcept* pConcept)
CancelConceptNotificationRequest	DMCore/Outputs/Output.cpp	/^void COutput::CancelConceptNotificationRequest(CConcept* pConcept) {$/;"	f	class:COutput	signature:(CConcept* pConcept)
CancelConceptNotificationRequest	DMCore/Outputs/Output.h	/^  void CancelConceptNotificationRequest(CConcept* pConcept);$/;"	p	class:COutput	access:public	signature:(CConcept* pConcept)
ChangeConceptNotificationPointer	DMCore/Agents/CoreAgents/OutputManagerAgent.cpp	/^void COutputManagerAgent::ChangeConceptNotificationPointer($/;"	f	class:COutputManagerAgent	signature:( CConcept* pOldConcept, CConcept* pNewConcept)
ChangeConceptNotificationPointer	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^    void ChangeConceptNotificationPointer(CConcept* pOldConcept, $/;"	p	class:COutputManagerAgent	access:public	signature:(CConcept* pOldConcept, CConcept* pNewConcept)
ChangeConceptNotificationPointer	DMCore/Outputs/Output.cpp	/^void COutput::ChangeConceptNotificationPointer(CConcept* pOldConcept, $/;"	f	class:COutput	signature:(CConcept* pOldConcept, CConcept* pNewConcept)
ChangeConceptNotificationPointer	DMCore/Outputs/Output.h	/^  void ChangeConceptNotificationPointer(CConcept* pOldConcept, $/;"	p	class:COutput	access:public	signature:(CConcept* pOldConcept, CConcept* pNewConcept)
Char	spdlog/fmt/bundled/format.h	/^    typedef CharType Char;$/;"	t	class:fmt::BasicFormatter	access:public
Char	spdlog/fmt/bundled/format.h	/^    typedef char Char;  \/\/ For FMT_VARIADIC_CTOR.$/;"	t	class:SystemError	access:protected
Char	spdlog/fmt/bundled/format.h	/^    typedef typename Formatter::Char Char;$/;"	t	class:fmt::internal::MakeValue	access:public
CharConverter	spdlog/fmt/bundled/printf.h	/^    explicit CharConverter(internal::Arg &arg): arg_(arg)$/;"	f	class:fmt::internal::CharConverter	access:public	signature:(internal::Arg &arg)
CharConverter	spdlog/fmt/bundled/printf.h	/^class CharConverter: public ArgVisitor<CharConverter, void>$/;"	c	namespace:fmt::internal	inherits:ArgVisitor
CharPtr	spdlog/fmt/bundled/format.h	/^    typedef stdext::checked_array_iterator<Char*> CharPtr;$/;"	t	class:fmt::internal::BasicCharTraits	access:public
CharPtr	spdlog/fmt/bundled/format.h	/^    typedef typename internal::CharTraits<Char>::CharPtr CharPtr;$/;"	t	class:BasicWriter	access:private
CharTraits	spdlog/fmt/bundled/format.h	/^class CharTraits<char>: public BasicCharTraits<char>$/;"	c	namespace:fmt::internal	inherits:BasicCharTraits
CharTraits	spdlog/fmt/bundled/format.h	/^class CharTraits<wchar_t>: public BasicCharTraits<wchar_t>$/;"	c	namespace:fmt::internal	inherits:BasicCharTraits
CheckFlag	DMCore/Outputs/Output.cpp	/^bool COutput::CheckFlag(string sFlag) {$/;"	f	class:COutput	signature:(string sFlag)
CheckFlag	DMCore/Outputs/Output.h	/^  bool CheckFlag(string sFlag);$/;"	p	class:COutput	access:public	signature:(string sFlag)
ClaimsFocus	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^bool CDialogAgent::ClaimsFocus() {$/;"	f	class:CDialogAgent	signature:()
ClaimsFocus	DMCore/Agents/DialogAgents/DialogAgent.h	/^	virtual bool ClaimsFocus();$/;"	p	class:CDialogAgent	access:public	signature:()
ClaimsFocusDuringGrounding	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^bool CDialogAgent::ClaimsFocusDuringGrounding() {$/;"	f	class:CDialogAgent	signature:()
ClaimsFocusDuringGrounding	DMCore/Agents/DialogAgents/DialogAgent.h	/^	virtual bool ClaimsFocusDuringGrounding();$/;"	p	class:CDialogAgent	access:public	signature:()
Clear	DMCore/Agents/CoreAgents/OutputManagerAgent.cpp	/^void COutputHistory::Clear() {$/;"	f	class:COutputHistory	signature:()
Clear	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^	void Clear();$/;"	p	class:COutputHistory	access:public	signature:()
Clear	DMCore/Agents/Registry.cpp	/^void CRegistry::Clear() {$/;"	f	class:CRegistry	signature:()
Clear	DMCore/Agents/Registry.h	/^	void Clear();$/;"	p	class:CRegistry	access:public	signature:()
Clear	DMCore/Concepts/Concept.cpp	/^void CConcept::Clear() {$/;"	f	class:CConcept	signature:()
Clear	DMCore/Concepts/Concept.h	/^    virtual void Clear();$/;"	p	class:CConcept	access:public	signature:()
Clear	DMCore/Concepts/FrameConcept.cpp	/^void CFrameConcept::Clear() {$/;"	f	class:CFrameConcept	signature:()
Clear	DMCore/Concepts/FrameConcept.h	/^    virtual void Clear();$/;"	p	class:CFrameConcept	access:public	signature:()
Clear	DMCore/Grounding/GroundingUtils.cpp	/^void CState::Clear() {$/;"	f	class:CState	signature:()
Clear	DMCore/Grounding/GroundingUtils.h	/^    void Clear();$/;"	p	class:CState	access:public	signature:()
ClearBeliefUpdatingFeatures	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^void CGroundingManagerAgent::ClearBeliefUpdatingFeatures() {$/;"	f	class:CGroundingManagerAgent	signature:()
ClearBeliefUpdatingFeatures	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^	virtual void ClearBeliefUpdatingFeatures();$/;"	p	class:CGroundingManagerAgent	access:public	signature:()
ClearConceptNotificationPointer	DMCore/Concepts/Concept.cpp	/^void CConcept::ClearConceptNotificationPointer() {$/;"	f	class:CConcept	signature:()
ClearConceptNotificationPointer	DMCore/Concepts/Concept.h	/^	virtual void ClearConceptNotificationPointer();$/;"	p	class:CConcept	access:public	signature:()
ClearCurrentHypSet	DMCore/Concepts/ArrayConcept.cpp	/^void CArrayConcept::ClearCurrentHypSet() {$/;"	f	class:CArrayConcept	signature:()
ClearCurrentHypSet	DMCore/Concepts/ArrayConcept.h	/^    virtual void ClearCurrentHypSet();$/;"	p	class:CArrayConcept	access:public	signature:()
ClearCurrentHypSet	DMCore/Concepts/Concept.cpp	/^void CConcept::ClearCurrentHypSet() {$/;"	f	class:CConcept	signature:()
ClearCurrentHypSet	DMCore/Concepts/Concept.h	/^    virtual void ClearCurrentHypSet();$/;"	p	class:CConcept	access:public	signature:()
ClearCurrentHypSet	DMCore/Concepts/FrameConcept.cpp	/^void CFrameConcept::ClearCurrentHypSet() {$/;"	f	class:CFrameConcept	signature:()
ClearCurrentHypSet	DMCore/Concepts/FrameConcept.h	/^    virtual void ClearCurrentHypSet();$/;"	p	class:CFrameConcept	access:public	signature:()
ClearCurrentHypSet	DMCore/Concepts/StructConcept.cpp	/^void CStructConcept::ClearCurrentHypSet() {$/;"	f	class:CStructConcept	signature:()
ClearCurrentHypSet	DMCore/Concepts/StructConcept.h	/^    virtual void ClearCurrentHypSet();$/;"	p	class:CStructConcept	access:public	signature:()
ClearCurrentValue	DMCore/Concepts/Concept.cpp	/^void CConcept::ClearCurrentValue() {$/;"	f	class:CConcept	signature:()
ClearCurrentValue	DMCore/Concepts/Concept.h	/^    virtual void ClearCurrentValue();$/;"	p	class:CConcept	access:public	signature:()
ClearCurrentValue	DMCore/Concepts/FrameConcept.cpp	/^void CFrameConcept::ClearCurrentValue() {$/;"	f	class:CFrameConcept	signature:()
ClearCurrentValue	DMCore/Concepts/FrameConcept.h	/^    virtual void ClearCurrentValue();$/;"	p	class:CFrameConcept	access:public	signature:()
ClearExplicitlyConfirmedHyp	DMCore/Concepts/Concept.cpp	/^void CConcept::ClearExplicitlyConfirmedHyp() {$/;"	f	class:CConcept	signature:()
ClearExplicitlyConfirmedHyp	DMCore/Concepts/Concept.h	/^	virtual void ClearExplicitlyConfirmedHyp();$/;"	p	class:CConcept	access:public	signature:()
ClearExplicitlyConfirmedHyp	DMCore/Concepts/FrameConcept.cpp	/^void CFrameConcept::ClearExplicitlyConfirmedHyp() {$/;"	f	class:CFrameConcept	signature:()
ClearExplicitlyConfirmedHyp	DMCore/Concepts/FrameConcept.h	/^    virtual void ClearExplicitlyConfirmedHyp();    $/;"	p	class:CFrameConcept	access:public	signature:()
ClearExplicitlyDisconfirmedHyp	DMCore/Concepts/Concept.cpp	/^void CConcept::ClearExplicitlyDisconfirmedHyp() {$/;"	f	class:CConcept	signature:()
ClearExplicitlyDisconfirmedHyp	DMCore/Concepts/Concept.h	/^	virtual void ClearExplicitlyDisconfirmedHyp();$/;"	p	class:CConcept	access:public	signature:()
ClearExplicitlyDisconfirmedHyp	DMCore/Concepts/FrameConcept.cpp	/^void CFrameConcept::ClearExplicitlyDisconfirmedHyp() {$/;"	f	class:CFrameConcept	signature:()
ClearExplicitlyDisconfirmedHyp	DMCore/Concepts/FrameConcept.h	/^    virtual void ClearExplicitlyDisconfirmedHyp();    $/;"	p	class:CFrameConcept	access:public	signature:()
ClearHistory	DMCore/Concepts/Concept.cpp	/^void CConcept::ClearHistory() {$/;"	f	class:CConcept	signature:()
ClearHistory	DMCore/Concepts/Concept.h	/^    virtual void ClearHistory();$/;"	p	class:CConcept	access:public	signature:()
ClearHistory	DMCore/Concepts/FrameConcept.cpp	/^void CFrameConcept::ClearHistory() {$/;"	f	class:CFrameConcept	signature:()
ClearHistory	DMCore/Concepts/FrameConcept.h	/^    virtual void ClearHistory();$/;"	p	class:CFrameConcept	access:public	signature:()
ClearPartialHypSet	DMCore/Concepts/Concept.cpp	/^void CConcept::ClearPartialHypSet() {$/;"	f	class:CConcept	signature:()
ClearPartialHypSet	DMCore/Concepts/Concept.h	/^    virtual void ClearPartialHypSet();$/;"	p	class:CConcept	access:public	signature:()
ClearWaitingConveyance	DMCore/Concepts/Concept.cpp	/^void CConcept::ClearWaitingConveyance() {$/;"	f	class:CConcept	signature:()
ClearWaitingConveyance	DMCore/Concepts/Concept.h	/^    void ClearWaitingConveyance();$/;"	p	class:CConcept	access:public	signature:()
Clone	DMCore/Concepts/ArrayConcept.cpp	/^CConcept* CArrayConcept::Clone(bool bCloneHistory) {$/;"	f	class:CArrayConcept	signature:(bool bCloneHistory)
Clone	DMCore/Concepts/ArrayConcept.h	/^	virtual CConcept* Clone(bool bCloneHistory = true);$/;"	p	class:CArrayConcept	access:public	signature:(bool bCloneHistory = true)
Clone	DMCore/Concepts/Concept.cpp	/^CConcept* CConcept::Clone(bool bCloneHistory) {$/;"	f	class:CConcept	signature:(bool bCloneHistory)
Clone	DMCore/Concepts/Concept.h	/^	virtual CConcept* Clone(bool bCloneHistory = true);$/;"	p	class:CConcept	access:public	signature:(bool bCloneHistory = true)
Clone	DMCore/Concepts/StructConcept.cpp	/^CConcept* CStructConcept::Clone(bool bCloneHistory) {$/;"	f	class:CStructConcept	signature:(bool bCloneHistory)
Clone	DMCore/Concepts/StructConcept.h	/^	virtual CConcept* Clone(bool bCloneHistory = true);$/;"	p	class:CStructConcept	access:public	signature:(bool bCloneHistory = true)
Clone	DMCore/Grounding/GroundingModels/GMConcept.cpp	/^CGroundingModel* CGMConcept::Clone() {$/;"	f	class:CGMConcept	signature:()
Clone	DMCore/Grounding/GroundingModels/GMConcept.h	/^    virtual CGroundingModel* Clone();$/;"	p	class:CGMConcept	access:public	signature:()
Clone	DMCore/Grounding/GroundingModels/GMRequestAgent.cpp	/^CGroundingModel* CGMRequestAgent::Clone() {$/;"	f	class:CGMRequestAgent	signature:()
Clone	DMCore/Grounding/GroundingModels/GMRequestAgent.h	/^    virtual CGroundingModel* Clone();$/;"	p	class:CGMRequestAgent	access:public	signature:()
Clone	DMCore/Grounding/GroundingModels/GMRequestAgent_Experiment.cpp	/^CGroundingModel* CGMRequestAgent_Experiment::Clone() {$/;"	f	class:CGMRequestAgent_Experiment	signature:()
Clone	DMCore/Grounding/GroundingModels/GMRequestAgent_Experiment.h	/^    virtual CGroundingModel* Clone();$/;"	p	class:CGMRequestAgent_Experiment	access:public	signature:()
Clone	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.cpp	/^CGroundingModel* CGMRequestAgent_HandCrafted::Clone() {$/;"	f	class:CGMRequestAgent_HandCrafted	signature:()
Clone	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.h	/^    virtual CGroundingModel* Clone();$/;"	p	class:CGMRequestAgent_HandCrafted	access:public	signature:()
Clone	DMCore/Grounding/GroundingModels/GMRequestAgent_LR.cpp	/^CGroundingModel* CGMRequestAgent_LR::Clone() {$/;"	f	class:CGMRequestAgent_LR	signature:()
Clone	DMCore/Grounding/GroundingModels/GMRequestAgent_LR.h	/^    virtual CGroundingModel* Clone();$/;"	p	class:CGMRequestAgent_LR	access:public	signature:()
Clone	DMCore/Grounding/GroundingModels/GMRequestAgent_NumNonu.cpp	/^CGroundingModel* CGMRequestAgent_NumNonu::Clone() {$/;"	f	class:CGMRequestAgent_NumNonu	signature:()
Clone	DMCore/Grounding/GroundingModels/GMRequestAgent_NumNonu.h	/^    virtual CGroundingModel* Clone();$/;"	p	class:CGMRequestAgent_NumNonu	access:public	signature:()
Clone	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    virtual CGroundingModel* Clone() = 0;$/;"	p	class:CGroundingModel	access:public	signature:()
Clone	DMCore/Outputs/FrameOutput.cpp	/^COutput* CFrameOutput::Clone(int iNewOutputId) {$/;"	f	class:CFrameOutput	signature:(int iNewOutputId)
Clone	DMCore/Outputs/FrameOutput.h	/^	virtual COutput* Clone(int iNewOutputId);$/;"	p	class:CFrameOutput	access:public	signature:(int iNewOutputId)
Clone	DMCore/Outputs/Output.h	/^	virtual COutput* Clone(int iNewOutputId) = 0;$/;"	p	class:COutput	access:public	signature:(int iNewOutputId)
CollectWarnings	Tools/RavenClawLogParser/RavenClawLogParser.pm	/^sub CollectWarnings {$/;"	s
Color	spdlog/fmt/bundled/format.h	/^enum Color$/;"	g
ComputeActionValuesDistribution	DMCore/Grounding/GroundingModels/GMRequestAgent_LR.cpp	/^void CGMRequestAgent_LR::ComputeActionValuesDistribution() {$/;"	f	class:CGMRequestAgent_LR	signature:()
ComputeActionValuesDistribution	DMCore/Grounding/GroundingModels/GMRequestAgent_LR.h	/^    virtual void ComputeActionValuesDistribution();$/;"	p	class:CGMRequestAgent_LR	access:public	signature:()
ComputeActionValuesDistribution	DMCore/Grounding/GroundingModels/GroundingModel.cpp	/^void CGroundingModel::ComputeActionValuesDistribution() {$/;"	f	class:CGroundingModel	signature:()
ComputeActionValuesDistribution	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    virtual void ComputeActionValuesDistribution();$/;"	p	class:CGroundingModel	access:public	signature:()
ComputeNonunderstandingSegmentsInfo	Tools/RavenClawLogParser/RavenClawLogParser.pm	/^sub ComputeNonunderstandingSegmentsInfo {$/;"	s
ComputeState	DMCore/Grounding/GroundingModels/GroundingModel.cpp	/^void CGroundingModel::ComputeState() {$/;"	f	class:CGroundingModel	signature:()
ComputeState	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    virtual void ComputeState();$/;"	p	class:CGroundingModel	access:public	signature:()
ComputeSuggestedActionIndex	DMCore/Grounding/GroundingModels/GMRequestAgent_LR.cpp	/^int CGMRequestAgent_LR::ComputeSuggestedActionIndex() {$/;"	f	class:CGMRequestAgent_LR	signature:()
ComputeSuggestedActionIndex	DMCore/Grounding/GroundingModels/GMRequestAgent_LR.h	/^    virtual int ComputeSuggestedActionIndex();$/;"	p	class:CGMRequestAgent_LR	access:public	signature:()
ComputeSuggestedActionIndex	DMCore/Grounding/GroundingModels/GroundingModel.cpp	/^int CExternalPolicyInterface::ComputeSuggestedActionIndex(CState& rState) {$/;"	f	class:CExternalPolicyInterface	signature:(CState& rState)
ComputeSuggestedActionIndex	DMCore/Grounding/GroundingModels/GroundingModel.cpp	/^int CGroundingModel::ComputeSuggestedActionIndex() {$/;"	f	class:CGroundingModel	signature:()
ComputeSuggestedActionIndex	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    int ComputeSuggestedActionIndex(CState& rState);$/;"	p	class:CExternalPolicyInterface	access:public	signature:(CState& rState)
ComputeSuggestedActionIndex	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    virtual int ComputeSuggestedActionIndex();$/;"	p	class:CGroundingModel	access:public	signature:()
ConceptArray	DMCore/Concepts/ArrayConcept.h	/^	vector <CConcept*, allocator <CConcept*> > ConceptArray;$/;"	m	class:CArrayConcept	access:protected
ConceptGroundingModelFactory	DMCore/Grounding/GroundingModels/AllGroundingModels.cpp	/^CGMConcept* ConceptGroundingModelFactory( string sType, string sSpec) {$/;"	f	signature:( string sType, string sSpec)
ConceptGroundingRequestCompleted	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^void CGroundingManagerAgent::ConceptGroundingRequestCompleted($/;"	f	class:CGroundingManagerAgent	signature:( CConcept* pConcept)
ConceptGroundingRequestCompleted	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    void ConceptGroundingRequestCompleted(CConcept* pConcept);$/;"	p	class:CGroundingManagerAgent	access:public	signature:(CConcept* pConcept)
ConceptTypeAsString	DMCore/Concepts/Concept.h	/^static string ConceptTypeAsString[] = {"Unknown", "Int", "Bool", "String", $/;"	v
Concepts	DMCore/Agents/DialogAgents/DialogAgent.h	/^	TConceptPointersVector Concepts;$/;"	m	class:CDialogAgent	access:protected
Conditional	spdlog/fmt/bundled/format.h	/^struct Conditional$/;"	s	namespace:fmt::internal
Conditional	spdlog/fmt/bundled/format.h	/^struct Conditional<false, T, F>$/;"	s	namespace:fmt::internal
ConfigureRavenClawLogParsing	Tools/RavenClawLogParser/RavenClawLogParser.pm	/^sub ConfigureRavenClawLogParsing {$/;"	s
ContinueWith	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^void CDMCoreAgent::ContinueWith(CAgent* paPusher, CDialogAgent* pdaDialogAgent) {$/;"	f	class:CDMCoreAgent	signature:(CAgent* paPusher, CDialogAgent* pdaDialogAgent)
ContinueWith	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	void ContinueWith(CAgent* paPusher, CDialogAgent* pdaDialogAgent);$/;"	p	class:CDMCoreAgent	access:public	signature:(CAgent* paPusher, CDialogAgent* pdaDialogAgent)
ConvertToInt	spdlog/fmt/bundled/format.h	/^struct ConvertToInt$/;"	s	namespace:fmt::internal
ConvertToIntImpl	spdlog/fmt/bundled/format.h	/^struct ConvertToIntImpl$/;"	s	namespace:fmt::internal
ConvertToIntImpl	spdlog/fmt/bundled/ostream.h	/^struct ConvertToIntImpl<T, true>$/;"	s	namespace:fmt::internal
ConvertToIntImpl2	spdlog/fmt/bundled/format.h	/^struct ConvertToIntImpl2$/;"	s	namespace:fmt::internal
ConvertToIntImpl2	spdlog/fmt/bundled/format.h	/^struct ConvertToIntImpl2<T, true>$/;"	s	namespace:fmt::internal
ConveyanceAsString	DMCore/Concepts/Concept.h	/^static string ConveyanceAsString[] = {"Conveyed", "Not conveyed", "Failed"};$/;"	v
CopyCurrentHypSetFrom	DMCore/Concepts/ArrayConcept.cpp	/^void CArrayConcept::CopyCurrentHypSetFrom(CConcept& rAConcept) {$/;"	f	class:CArrayConcept	signature:(CConcept& rAConcept)
CopyCurrentHypSetFrom	DMCore/Concepts/ArrayConcept.h	/^    virtual void CopyCurrentHypSetFrom(CConcept& rAConcept);$/;"	p	class:CArrayConcept	access:public	signature:(CConcept& rAConcept)
CopyCurrentHypSetFrom	DMCore/Concepts/Concept.cpp	/^void CConcept::CopyCurrentHypSetFrom(CConcept& rAConcept) {$/;"	f	class:CConcept	signature:(CConcept& rAConcept)
CopyCurrentHypSetFrom	DMCore/Concepts/Concept.h	/^    virtual void CopyCurrentHypSetFrom(CConcept& rAConcept);$/;"	p	class:CConcept	access:public	signature:(CConcept& rAConcept)
CopyCurrentHypSetFrom	DMCore/Concepts/FrameConcept.cpp	/^void CFrameConcept::CopyCurrentHypSetFrom(CConcept& rAConcept) {$/;"	f	class:CFrameConcept	signature:(CConcept& rAConcept)
CopyCurrentHypSetFrom	DMCore/Concepts/FrameConcept.h	/^    virtual void CopyCurrentHypSetFrom(CConcept& rAConcept);$/;"	p	class:CFrameConcept	access:public	signature:(CConcept& rAConcept)
Create	DMCore/Agents/Agent.cpp	/^void CAgent::Create() {$/;"	f	class:CAgent	signature:()
Create	DMCore/Agents/Agent.h	/^	virtual void Create();$/;"	p	class:CAgent	access:public	signature:()
Create	DMCore/Agents/DialogAgents/BasicAgents/DialogAgency.cpp	/^void CDialogAgency::Create() {$/;"	f	class:CDialogAgency	signature:()
Create	DMCore/Agents/DialogAgents/BasicAgents/DialogAgency.h	/^	virtual void Create();$/;"	p	class:CDialogAgency	access:public	signature:()
Create	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^void CDialogAgent::Create() {$/;"	f	class:CDialogAgent	signature:()
Create	DMCore/Agents/DialogAgents/DialogAgent.h	/^	virtual void Create();$/;"	p	class:CDialogAgent	access:public	signature:()
Create	DMCore/Outputs/FrameOutput.cpp	/^bool CFrameOutput::Create(string sAGeneratorAgentName, $/;"	f	class:CFrameOutput	signature:(string sAGeneratorAgentName, int iAExecutionIndex, string sAOutput, TFloorStatus fsAFloor, int iAOutputId)
Create	DMCore/Outputs/FrameOutput.h	/^	virtual bool Create(string sAGeneratorAgentName, int iAExecutionIndex,$/;"	p	class:CFrameOutput	access:public	signature:(string sAGeneratorAgentName, int iAExecutionIndex, string sAOutput, TFloorStatus fsAFloor, int iAOutputId)
Create	DMCore/Outputs/Output.h	/^	virtual bool Create(string sAGeneratorAgentName, int iAExecutionIndex,$/;"	p	class:COutput	access:public	signature:(string sAGeneratorAgentName, int iAExecutionIndex, string sAPrompt, TFloorStatus fsAFloor, int iAOutputId)
CreateAgent	DMCore/Agents/Registry.cpp	/^CAgent* CRegistry::CreateAgent(string sAgentTypeName, string sAgentName, string sAgentConfiguration) {$/;"	f	class:CRegistry	signature:(string sAgentTypeName, string sAgentName, string sAgentConfiguration)
CreateAgent	DMCore/Agents/Registry.h	/^	CAgent* CreateAgent(string sAgentTypeName, string sAgentName, $/;"	p	class:CRegistry	access:public	signature:(string sAgentTypeName, string sAgentName, string sAgentConfiguration = Ó)
CreateConcepts	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^void CDialogAgent::CreateConcepts() {$/;"	f	class:CDialogAgent	signature:()
CreateConcepts	DMCore/Agents/DialogAgents/DialogAgent.h	/^	virtual void CreateConcepts();$/;"	p	class:CDialogAgent	access:public	signature:()
CreateDialogTaskAgentome	DMCore/Agents/CoreAgents/DTTManagerAgent.h	/^	void CreateDialogTaskAgentome();	\/\/ registers all the dialog task $/;"	p	class:CDTTManagerAgent	access:public	signature:()
CreateDialogTaskTree	DMCore/Agents/CoreAgents/DTTManagerAgent.h	/^	void CreateDialogTaskTree();		\/\/ creates the task part$/;"	p	class:CDTTManagerAgent	access:public	signature:()
CreateDialogTree	DMCore/Agents/CoreAgents/DTTManagerAgent.cpp	/^void CDTTManagerAgent::CreateDialogTree() {$/;"	f	class:CDTTManagerAgent	signature:()
CreateDialogTree	DMCore/Agents/CoreAgents/DTTManagerAgent.h	/^	void CreateDialogTree();			\/\/ creates the dialog tree$/;"	p	class:CDTTManagerAgent	access:public	signature:()
CreateElement	DMCore/Concepts/ArrayConcept.h	/^	virtual CConcept* CreateElement() = 0;$/;"	p	class:CArrayConcept	access:public	signature:()
CreateExternalPolicyInterface	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^CExternalPolicyInterface* CGroundingManagerAgent::CreateExternalPolicyInterface($/;"	f	class:CGroundingManagerAgent	signature:( string sAHost)
CreateExternalPolicyInterface	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    CExternalPolicyInterface* CreateExternalPolicyInterface(string sAHost);$/;"	p	class:CGroundingManagerAgent	access:public	signature:(string sAHost)
CreateGroundingModel	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^CGroundingModel* CGroundingManagerAgent::CreateGroundingModel($/;"	f	class:CGroundingManagerAgent	signature:( string sModelType, string sModelPolicy)
CreateGroundingModel	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    CGroundingModel* CreateGroundingModel(string sModelType, $/;"	p	class:CGroundingManagerAgent	access:public	signature:(string sModelType, string sModelPolicy)
CreateGroundingModel	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^void CDialogAgent::CreateGroundingModel(string sGroundingModelSpec) {$/;"	f	class:CDialogAgent	signature:(string sGroundingModelSpec)
CreateGroundingModel	DMCore/Agents/DialogAgents/DialogAgent.h	/^    virtual void CreateGroundingModel(string sGroundingModelSpec);$/;"	p	class:CDialogAgent	access:public	signature:(string sGroundingModelSpec)
CreateGroundingModel	DMCore/Concepts/ArrayConcept.cpp	/^void CArrayConcept::CreateGroundingModel(string sGroundingModelSpec) {$/;"	f	class:CArrayConcept	signature:(string sGroundingModelSpec)
CreateGroundingModel	DMCore/Concepts/ArrayConcept.h	/^    virtual void CreateGroundingModel(string sGroundingModelSpec);$/;"	p	class:CArrayConcept	access:public	signature:(string sGroundingModelSpec)
CreateGroundingModel	DMCore/Concepts/Concept.cpp	/^void CConcept::CreateGroundingModel(string sGroundingModelSpec) {$/;"	f	class:CConcept	signature:(string sGroundingModelSpec)
CreateGroundingModel	DMCore/Concepts/Concept.h	/^    virtual void CreateGroundingModel(string sGroundingModelSpec);$/;"	p	class:CConcept	access:public	signature:(string sGroundingModelSpec)
CreateGroundingModel	DMCore/Concepts/FrameConcept.cpp	/^void CFrameConcept::CreateGroundingModel(string sGroundingModelSpec) {$/;"	f	class:CFrameConcept	signature:(string sGroundingModelSpec)
CreateGroundingModel	DMCore/Concepts/FrameConcept.h	/^    virtual void CreateGroundingModel(string sGroundingModelSpec);$/;"	p	class:CFrameConcept	access:public	signature:(string sGroundingModelSpec)
CreateGroundingModel	DMCore/Concepts/StructConcept.cpp	/^void CStructConcept::CreateGroundingModel(string sGroundingModelSpec) {$/;"	f	class:CStructConcept	signature:(string sGroundingModelSpec)
CreateGroundingModel	DMCore/Concepts/StructConcept.h	/^    virtual void CreateGroundingModel(string sGroundingModelSpec);$/;"	p	class:CStructConcept	access:public	signature:(string sGroundingModelSpec)
CreateMergedHistoryConcept	DMCore/Concepts/Concept.cpp	/^CConcept* CConcept::CreateMergedHistoryConcept() {$/;"	f	class:CConcept	signature:()
CreateMergedHistoryConcept	DMCore/Concepts/Concept.h	/^    virtual CConcept* CreateMergedHistoryConcept();$/;"	p	class:CConcept	access:public	signature:()
CreateMergedHistoryConcept	DMCore/Concepts/FrameConcept.cpp	/^CConcept* CFrameConcept::CreateMergedHistoryConcept() {$/;"	f	class:CFrameConcept	signature:()
CreateMergedHistoryConcept	DMCore/Concepts/FrameConcept.h	/^    virtual CConcept* CreateMergedHistoryConcept();$/;"	p	class:CFrameConcept	access:public	signature:()
CreateStructure	DMCore/Concepts/StructConcept.cpp	/^void CStructConcept::CreateStructure() {$/;"	f	class:CStructConcept	signature:()
CreateStructure	DMCore/Concepts/StructConcept.h	/^	virtual void CreateStructure();$/;"	p	class:CStructConcept	access:public	signature:()
CreateSubAgents	DMCore/Agents/DialogAgents/BasicAgents/DialogAgency.cpp	/^void CDialogAgency::CreateSubAgents() {$/;"	f	class:CDialogAgency	signature:()
CreateSubAgents	DMCore/Agents/DialogAgents/BasicAgents/DialogAgency.h	/^	virtual void CreateSubAgents();$/;"	p	class:CDialogAgency	access:public	signature:()
CreateTriggerConcept	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^void CDialogAgent::CreateTriggerConcept() {$/;"	f	class:CDialogAgent	signature:()
CreateTriggerConcept	DMCore/Agents/DialogAgents/DialogAgent.h	/^	void CreateTriggerConcept();$/;"	p	class:CDialogAgent	access:public	signature:()
CreateVersionedPrompt	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^string CDialogAgent::CreateVersionedPrompt(string sVersion) {$/;"	f	class:CDialogAgent	signature:(string sVersion)
CreateVersionedPrompt	DMCore/Agents/DialogAgents/DialogAgent.h	/^    virtual string CreateVersionedPrompt(string sVersion);$/;"	p	class:CDialogAgent	access:public	signature:(string sVersion)
CustomValue	spdlog/fmt/bundled/format.h	/^    struct CustomValue$/;"	s	struct:fmt::internal::Value	access:public
DEC	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	409;"	d	file:
DEC	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	404;"	d	file:
DECLARE_AGENT	DMCore/Agents/CoreAgents/DTTManagerAgent.h	248;"	d
DECLARE_AGENTS	DMCore/Agents/CoreAgents/DTTManagerAgent.h	240;"	d
DECLARE_DIALOG_TASK_ROOT	DMCore/Agents/CoreAgents/DTTManagerAgent.h	225;"	d
DEFAULT_BOOL_CARDINALITY	DMCore/Concepts/BoolConcept.h	155;"	d
DEFAULT_FLOAT_CARDINALITY	DMCore/Concepts/FloatConcept.h	155;"	d
DEFAULT_HYPSET_CARDINALITY	DMCore/Concepts/Concept.h	222;"	d
DEFAULT_INT_CARDINALITY	DMCore/Concepts/IntConcept.h	155;"	d
DEFAULT_LOG_FILENAME	DMCore/Log.h	161;"	d
DEFAULT_OUTPUT_DEVICE	DialogTask/DialogTask.h	117;"	d
DEFAULT_STRING_CARDINALITY	DMCore/Concepts/StringConcept.h	159;"	d
DEFAULT_STRUCT_CARDINALITY	DMCore/Concepts/StructConcept.h	163;"	d
DEFAULT_TIMEOUT_PERIOD	DialogTask/DialogTask.h	126;"	d
DEFINE_AGENCY	DMCore/Agents/DialogAgents/BasicAgents/DialogAgency.h	165;"	d
DEFINE_ARRAY_CONCEPT_TYPE	DMCore/Concepts/ArrayConcept.h	365;"	d
DEFINE_CONCEPTS	DMCore/Agents/DialogAgents/BasicAgents/DialogAgency.h	206;"	d
DEFINE_CONCEPT_TYPE	DMCore/Concepts/Concept.h	822;"	d
DEFINE_CONFIDENCE_SLOTNAME	DialogTask/DialogTask.h	103;"	d
DEFINE_CONFUSABILITY	DMCore/Concepts/Concept.h	842;"	d
DEFINE_EXECUTE_AGENT	DMCore/Agents/DialogAgents/BasicAgents/MAExecute.h	141;"	d
DEFINE_EXPECT_AGENT	DMCore/Agents/DialogAgents/BasicAgents/MAExpect.h	156;"	d
DEFINE_FRAME_CONCEPT_TYPE	DMCore/Concepts/FrameConcept.h	361;"	d
DEFINE_INFORM_AGENT	DMCore/Agents/DialogAgents/BasicAgents/MAInform.h	144;"	d
DEFINE_PRIOR	DMCore/Concepts/Concept.h	835;"	d
DEFINE_REQUEST_AGENT	DMCore/Agents/DialogAgents/BasicAgents/MARequest.h	187;"	d
DEFINE_STRUCT_CONCEPT_TYPE	DMCore/Concepts/StructConcept.h	344;"	d
DEFINE_SUBAGENTS	DMCore/Agents/DialogAgents/BasicAgents/DialogAgency.h	188;"	d
DIALOGTASK_STREAM	DMCore/Log.h	110;"	d
DIGITS	spdlog/fmt/bundled/format.cc	/^	const char internal::BasicData<T>::DIGITS[] =$/;"	m	class:fmt::internal::BasicData	file:
DMCORE_STREAM	DMCore/Log.h	89;"	d
DMSERVER_CONFIGURATION	DialogTask/DialogTask.h	86;"	d
DOES_NOT_REQUIRE_FLOOR	DMCore/Agents/DialogAgents/DialogAgent.h	780;"	d
DOUBLE	spdlog/fmt/bundled/format.h	/^        DOUBLE, LONG_DOUBLE, LAST_NUMERIC_TYPE = LONG_DOUBLE,$/;"	e	enum:fmt::internal::Value::Type
DTTMANAGER_STREAM	DMCore/Log.h	92;"	d
D_formatter	spdlog/details/pattern_formatter_impl.h	/^class D_formatter:public flag_formatter$/;"	c	namespace:spdlog::details	inherits:flag_formatter
DeclareBindingPolicy	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^string CDialogAgent::DeclareBindingPolicy() {$/;"	f	class:CDialogAgent	signature:()
DeclareBindingPolicy	DMCore/Agents/DialogAgents/DialogAgent.h	/^	virtual string DeclareBindingPolicy();$/;"	p	class:CDialogAgent	access:public	signature:()
DeclareConcepts	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^void CDialogAgent::DeclareConcepts($/;"	f	class:CDialogAgent	signature:( TConceptPointersVector& rcpvConcepts, TConceptPointersSet& rcpsExclude)
DeclareConcepts	DMCore/Agents/DialogAgents/DialogAgent.h	/^    virtual void DeclareConcepts($/;"	p	class:CDialogAgent	access:public	signature:( TConceptPointersVector& rcpvConcepts, TConceptPointersSet& rcpsExclude)
DeclareConcepts	DMCore/Concepts/ArrayConcept.cpp	/^void CArrayConcept::DeclareConcepts($/;"	f	class:CArrayConcept	signature:( TConceptPointersVector& rcpvConcepts, TConceptPointersSet& rcpsExclude)
DeclareConcepts	DMCore/Concepts/ArrayConcept.h	/^    virtual void DeclareConcepts($/;"	p	class:CArrayConcept	access:public	signature:( TConceptPointersVector& rcpvConcepts, TConceptPointersSet& rcpsExclude)
DeclareConcepts	DMCore/Concepts/Concept.cpp	/^void CConcept::DeclareConcepts(TConceptPointersVector& rcpvConcepts, $/;"	f	class:CConcept	signature:(TConceptPointersVector& rcpvConcepts, TConceptPointersSet& rcpsExclude)
DeclareConcepts	DMCore/Concepts/Concept.h	/^    virtual void DeclareConcepts($/;"	p	class:CConcept	access:public	signature:( TConceptPointersVector& rcpvConcepts, TConceptPointersSet& rcpsExclude)
DeclareConcepts	DMCore/Concepts/StructConcept.cpp	/^void CStructConcept::DeclareConcepts($/;"	f	class:CStructConcept	signature:( TConceptPointersVector& rcpvConcepts, TConceptPointersSet& rcpsExclude)
DeclareConcepts	DMCore/Concepts/StructConcept.h	/^    virtual void DeclareConcepts($/;"	p	class:CStructConcept	access:public	signature:( TConceptPointersVector& rcpvConcepts, TConceptPointersSet& rcpsExclude)
DeclareExpectations	DMCore/Agents/DialogAgents/BasicAgents/MAExpect.cpp	/^int CMAExpect::DeclareExpectations(TConceptExpectationList& $/;"	f	class:CMAExpect	signature:(TConceptExpectationList& celExpectationList)
DeclareExpectations	DMCore/Agents/DialogAgents/BasicAgents/MAExpect.h	/^	virtual int DeclareExpectations(TConceptExpectationList&$/;"	p	class:CMAExpect	access:public	signature:(TConceptExpectationList& celExpectationList)
DeclareExpectations	DMCore/Agents/DialogAgents/BasicAgents/MARequest.cpp	/^int CMARequest::DeclareExpectations(TConceptExpectationList&$/;"	f	class:CMARequest	signature:(TConceptExpectationList& celExpectationList)
DeclareExpectations	DMCore/Agents/DialogAgents/BasicAgents/MARequest.h	/^	virtual int DeclareExpectations(TConceptExpectationList&$/;"	p	class:CMARequest	access:public	signature:(TConceptExpectationList& celExpectationList)
DeclareExpectations	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^int CDialogAgent::DeclareExpectations(TConceptExpectationList& $/;"	f	class:CDialogAgent	signature:(TConceptExpectationList& rcelExpectationList)
DeclareExpectations	DMCore/Agents/DialogAgents/DialogAgent.h	/^	virtual int DeclareExpectations(TConceptExpectationList& $/;"	p	class:CDialogAgent	access:public	signature:(TConceptExpectationList& rcelExpectationList)
DeclareFocusClaims	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^int CDialogAgent::DeclareFocusClaims(TFocusClaimsList& fclFocusClaims) {$/;"	f	class:CDialogAgent	signature:(TFocusClaimsList& fclFocusClaims)
DeclareFocusClaims	DMCore/Agents/DialogAgents/DialogAgent.h	/^	virtual int DeclareFocusClaims(TFocusClaimsList& fclFocusClaims);$/;"	p	class:CDialogAgent	access:public	signature:(TFocusClaimsList& fclFocusClaims)
DeclareGroundingModels	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^void CDialogAgent::DeclareGroundingModels($/;"	f	class:CDialogAgent	signature:( TGroundingModelPointersVector& rgmpvModels, TGroundingModelPointersSet& rgmpsExclude)
DeclareGroundingModels	DMCore/Agents/DialogAgents/DialogAgent.h	/^    virtual void DeclareGroundingModels($/;"	p	class:CDialogAgent	access:public	signature:( TGroundingModelPointersVector& rgmpvModels, TGroundingModelPointersSet& rgmpsExclude)
DeclareGroundingModels	DMCore/Concepts/ArrayConcept.cpp	/^void CArrayConcept::DeclareGroundingModels($/;"	f	class:CArrayConcept	signature:( TGroundingModelPointersVector& rgmpvModels, TGroundingModelPointersSet& rgmpsExclude)
DeclareGroundingModels	DMCore/Concepts/ArrayConcept.h	/^    virtual void DeclareGroundingModels($/;"	p	class:CArrayConcept	access:public	signature:( TGroundingModelPointersVector& rgmpvModels, TGroundingModelPointersSet& rgmpsExclude)
DeclareGroundingModels	DMCore/Concepts/Concept.cpp	/^void CConcept::DeclareGroundingModels($/;"	f	class:CConcept	signature:( TGroundingModelPointersVector& rgmpvModels, TGroundingModelPointersSet& rgmpsExclude)
DeclareGroundingModels	DMCore/Concepts/Concept.h	/^    virtual void DeclareGroundingModels($/;"	p	class:CConcept	access:public	signature:( TGroundingModelPointersVector& rgmpvModels, TGroundingModelPointersSet& rgmpsExclude)
DeclareGroundingModels	DMCore/Concepts/StructConcept.cpp	/^void CStructConcept::DeclareGroundingModels($/;"	f	class:CStructConcept	signature:( TGroundingModelPointersVector& rgmpvModels, TGroundingModelPointersSet& rgmpsExclude)
DeclareGroundingModels	DMCore/Concepts/StructConcept.h	/^    virtual void DeclareGroundingModels($/;"	p	class:CStructConcept	access:public	signature:( TGroundingModelPointersVector& rgmpvModels, TGroundingModelPointersSet& rgmpsExclude)
DeleteAt	DMCore/Concepts/ArrayConcept.cpp	/^void CArrayConcept::DeleteAt(unsigned int iIndex) {$/;"	f	class:CArrayConcept	signature:(unsigned int iIndex)
DeleteAt	DMCore/Concepts/ArrayConcept.h	/^	virtual void DeleteAt(unsigned int iIndex);   $/;"	p	class:CArrayConcept	access:public	signature:(unsigned int iIndex)
DeleteAt	DMCore/Concepts/Concept.cpp	/^void CConcept::DeleteAt(unsigned int iIndex) {$/;"	f	class:CConcept	signature:(unsigned int iIndex)
DeleteAt	DMCore/Concepts/Concept.h	/^	virtual void DeleteAt(unsigned int iIndex);   $/;"	p	class:CConcept	access:public	signature:(unsigned int iIndex)
DeleteDynamicSubAgents	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^void CDialogAgent::DeleteDynamicSubAgents() {$/;"	f	class:CDialogAgent	signature:()
DeleteDynamicSubAgents	DMCore/Agents/DialogAgents/DialogAgent.h	/^    void DeleteDynamicSubAgents();$/;"	p	class:CDialogAgent	access:public	signature:()
DeleteHyp	DMCore/Concepts/ArrayConcept.cpp	/^void CArrayConcept::DeleteHyp(int iIndex) {$/;"	f	class:CArrayConcept	signature:(int iIndex)
DeleteHyp	DMCore/Concepts/ArrayConcept.h	/^	virtual void DeleteHyp(int iIndex);$/;"	p	class:CArrayConcept	access:public	signature:(int iIndex)
DeleteHyp	DMCore/Concepts/Concept.cpp	/^void CConcept::DeleteHyp(int iIndex) {$/;"	f	class:CConcept	signature:(int iIndex)
DeleteHyp	DMCore/Concepts/Concept.h	/^	virtual void DeleteHyp(int iIndex);$/;"	p	class:CConcept	access:public	signature:(int iIndex)
DeleteHyp	DMCore/Concepts/FrameConcept.cpp	/^void CFrameConcept::DeleteHyp(int iIndex) {$/;"	f	class:CFrameConcept	signature:(int iIndex)
DeleteHyp	DMCore/Concepts/FrameConcept.h	/^	virtual void DeleteHyp(int iIndex);$/;"	p	class:CFrameConcept	access:public	signature:(int iIndex)
DeleteHyp	DMCore/Concepts/StructConcept.cpp	/^void CStructConcept::DeleteHyp(int iIndex) {$/;"	f	class:CStructConcept	signature:(int iIndex)
DeleteHyp	DMCore/Concepts/StructConcept.h	/^	virtual void DeleteHyp(int iIndex);$/;"	p	class:CStructConcept	access:public	signature:(int iIndex)
DeleteLoggingStream	DMCore/Log.cpp	/^void DeleteLoggingStream(string sStreamName) {$/;"	f	signature:(string sStreamName)
DeleteLoggingStream	DMCore/Log.h	/^void DeleteLoggingStream(string sStreamName);$/;"	p	signature:(string sStreamName)
DeleteSubAgent	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^void CDialogAgent::DeleteSubAgent(CDialogAgent* pdaWho) {$/;"	f	class:CDialogAgent	signature:(CDialogAgent* pdaWho)
DeleteSubAgent	DMCore/Agents/DialogAgents/DialogAgent.h	/^	void DeleteSubAgent(CDialogAgent* pdaWho);$/;"	p	class:CDialogAgent	access:public	signature:(CDialogAgent* pdaWho)
DestroyDialogTree	DMCore/Agents/CoreAgents/DTTManagerAgent.cpp	/^void CDTTManagerAgent::DestroyDialogTree() {$/;"	f	class:CDTTManagerAgent	signature:()
DestroyDialogTree	DMCore/Agents/CoreAgents/DTTManagerAgent.h	/^    void DestroyDialogTree();           \/\/ destroys the dialog tree$/;"	p	class:CDTTManagerAgent	access:public	signature:()
DestroyStructure	DMCore/Concepts/StructConcept.cpp	/^void CStructConcept::DestroyStructure() {$/;"	f	class:CStructConcept	signature:()
DestroyStructure	DMCore/Concepts/StructConcept.h	/^	virtual void DestroyStructure();$/;"	p	class:CStructConcept	access:public	signature:()
DialogCoreThread	DMCore/DMCore.cpp	/^int DialogCoreThread() {$/;"	f	signature:()
DialogCoreThread	DMCore/DMCore.h	/^int DialogCoreThread();$/;"	p	signature:()
DialogTaskOnBeginSession	DialogTask/DialogTask.h	/^void DialogTaskOnBeginSession();$/;"	p	signature:()
DisableAllLoggingStreams	DMCore/Log.cpp	/^void DisableAllLoggingStreams() {$/;"	f	signature:()
DisableAllLoggingStreams	DMCore/Log.h	/^void DisableAllLoggingStreams();$/;"	p	signature:()
DisableChangeNotification	DMCore/Concepts/Concept.cpp	/^void CConcept::DisableChangeNotification() {$/;"	f	class:CConcept	signature:()
DisableChangeNotification	DMCore/Concepts/Concept.h	/^	virtual void DisableChangeNotification();$/;"	p	class:CConcept	access:public	signature:()
DisableLoggingStream	DMCore/Log.cpp	/^void DisableLoggingStream(string sStreamName) {$/;"	f	signature:(string sStreamName)
DisableLoggingStream	DMCore/Log.h	/^void DisableLoggingStream(string sStreamName);$/;"	p	signature:(string sStreamName)
DoPostProcessing	Tools/RavenClawLogParser/RavenClawLogParser.pm	/^sub DoPostProcessing {$/;"	s
DoPreProcessing	Tools/RavenClawLogParser/RavenClawLogParser.pm	/^sub DoPreProcessing {$/;"	s
DummyInt	spdlog/fmt/bundled/format.h	/^struct DummyInt$/;"	s	namespace:fmt::internal
DummyStream	spdlog/fmt/bundled/ostream.h	/^    DummyStream();  \/\/ Suppress a bogus warning in MSVC.$/;"	p	struct:fmt::internal::DummyStream	access:public	signature:()
DummyStream	spdlog/fmt/bundled/ostream.h	/^struct DummyStream: std::ostream$/;"	s	namespace:fmt::internal	inherits:std::ostream
EQUALS	Makefile	/^EQUALS = =$/;"	m
ERROR_STREAM	DMCore/Log.h	80;"	d
EXECUTE	DMCore/Agents/DialogAgents/BasicAgents/MAExecute.h	155;"	d
EXECUTION_POLICY	DMCore/Agents/DialogAgents/BasicAgents/DialogAgency.h	181;"	d
EXPECTATIONAGENDA_STREAM	DMCore/Log.h	90;"	d
EXPECT_CONCEPT	DMCore/Agents/DialogAgents/BasicAgents/MAExpect.h	170;"	d
EXPECT_WHEN	DMCore/Agents/DialogAgents/DialogAgent.h	708;"	d
EXPLAIN_MORE	DMCore/Grounding/GroundingActions/GAExplainMore.h	114;"	d
EXPLICIT_CONFIRM	DMCore/Grounding/GroundingActions/GAExplicitConfirm.h	121;"	d
EmptyClone	DMCore/Concepts/BoolConcept.cpp	/^CConcept* CBoolConcept::EmptyClone() {$/;"	f	class:CBoolConcept	signature:()
EmptyClone	DMCore/Concepts/BoolConcept.h	/^    virtual CConcept* EmptyClone();$/;"	p	class:CBoolConcept	access:public	signature:()
EmptyClone	DMCore/Concepts/Concept.cpp	/^CConcept* CConcept::EmptyClone() {$/;"	f	class:CConcept	signature:()
EmptyClone	DMCore/Concepts/Concept.h	/^    virtual CConcept* EmptyClone();$/;"	p	class:CConcept	access:public	signature:()
EmptyClone	DMCore/Concepts/FloatConcept.cpp	/^CConcept* CFloatConcept::EmptyClone() {$/;"	f	class:CFloatConcept	signature:()
EmptyClone	DMCore/Concepts/FloatConcept.h	/^    virtual CConcept* EmptyClone();$/;"	p	class:CFloatConcept	access:public	signature:()
EmptyClone	DMCore/Concepts/IntConcept.cpp	/^CConcept* CIntConcept::EmptyClone() {$/;"	f	class:CIntConcept	signature:()
EmptyClone	DMCore/Concepts/IntConcept.h	/^    virtual CConcept* EmptyClone();$/;"	p	class:CIntConcept	access:public	signature:()
EmptyClone	DMCore/Concepts/StringConcept.cpp	/^CConcept* CStringConcept::EmptyClone() {$/;"	f	class:CStringConcept	signature:()
EmptyClone	DMCore/Concepts/StringConcept.h	/^    virtual CConcept* EmptyClone();$/;"	p	class:CStringConcept	access:public	signature:()
EmptySpec	spdlog/fmt/bundled/format.h	/^struct EmptySpec$/;"	s	namespace:fmt
EnableAllLoggingStreams	DMCore/Log.cpp	/^void EnableAllLoggingStreams() {$/;"	f	signature:()
EnableAllLoggingStreams	DMCore/Log.h	/^void EnableAllLoggingStreams();$/;"	p	signature:()
EnableChangeNotification	DMCore/Concepts/Concept.cpp	/^void CConcept::EnableChangeNotification() {$/;"	f	class:CConcept	signature:()
EnableChangeNotification	DMCore/Concepts/Concept.h	/^	virtual void EnableChangeNotification();$/;"	p	class:CConcept	access:public	signature:()
EnableIf	spdlog/fmt/bundled/format.h	/^struct EnableIf$/;"	s	namespace:fmt::internal
EnableIf	spdlog/fmt/bundled/format.h	/^struct EnableIf<true, T>$/;"	s	namespace:fmt::internal
EnableLoggingStream	DMCore/Log.cpp	/^void EnableLoggingStream(string sStreamName) {$/;"	f	signature:(string sStreamName)
EnableLoggingStream	DMCore/Log.h	/^void EnableLoggingStream(string sStreamName);$/;"	p	signature:(string sStreamName)
EqualTo	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.h	/^		EqualTo,$/;"	e	enum:CCondition::TComparator
Error	DMCore/Log.h	193;"	d
EstablishContextPrompt	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^string CDialogAgent::EstablishContextPrompt() {$/;"	f	class:CDialogAgent	signature:()
EstablishContextPrompt	DMCore/Agents/DialogAgents/DialogAgent.h	/^	virtual string EstablishContextPrompt();$/;"	p	class:CDialogAgent	access:public	signature:()
Execute	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^void CDMCoreAgent::Execute() {$/;"	f	class:CDMCoreAgent	signature:()
Execute	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	void Execute();$/;"	p	class:CDMCoreAgent	access:public	signature:()
Execute	DMCore/Agents/DialogAgents/BasicAgents/DialogAgency.cpp	/^TDialogExecuteReturnCode CDialogAgency::Execute() {$/;"	f	class:CDialogAgency	signature:()
Execute	DMCore/Agents/DialogAgents/BasicAgents/DialogAgency.h	/^	virtual TDialogExecuteReturnCode Execute(); $/;"	p	class:CDialogAgency	access:public	signature:()
Execute	DMCore/Agents/DialogAgents/BasicAgents/MAExecute.cpp	/^TDialogExecuteReturnCode CMAExecute::Execute() {$/;"	f	class:CMAExecute	signature:()
Execute	DMCore/Agents/DialogAgents/BasicAgents/MAExecute.h	/^	virtual TDialogExecuteReturnCode Execute();$/;"	p	class:CMAExecute	access:public	signature:()
Execute	DMCore/Agents/DialogAgents/BasicAgents/MAExpect.cpp	/^TDialogExecuteReturnCode CMAExpect::Execute() {$/;"	f	class:CMAExpect	signature:()
Execute	DMCore/Agents/DialogAgents/BasicAgents/MAExpect.h	/^	virtual TDialogExecuteReturnCode Execute();$/;"	p	class:CMAExpect	access:public	signature:()
Execute	DMCore/Agents/DialogAgents/BasicAgents/MAInform.cpp	/^TDialogExecuteReturnCode CMAInform::Execute() {$/;"	f	class:CMAInform	signature:()
Execute	DMCore/Agents/DialogAgents/BasicAgents/MAInform.h	/^	virtual TDialogExecuteReturnCode Execute();$/;"	p	class:CMAInform	access:public	signature:()
Execute	DMCore/Agents/DialogAgents/BasicAgents/MARequest.cpp	/^TDialogExecuteReturnCode CMARequest::Execute() {$/;"	f	class:CMARequest	signature:()
Execute	DMCore/Agents/DialogAgents/BasicAgents/MARequest.h	/^	virtual TDialogExecuteReturnCode Execute();$/;"	p	class:CMARequest	access:public	signature:()
Execute	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^TDialogExecuteReturnCode CDialogAgent::Execute() {$/;"	f	class:CDialogAgent	signature:()
Execute	DMCore/Agents/DialogAgents/DialogAgent.h	/^	virtual TDialogExecuteReturnCode Execute();$/;"	p	class:CDialogAgent	access:public	signature:()
ExecuteRoutine	DMCore/Agents/DialogAgents/BasicAgents/MAExecute.cpp	/^void CMAExecute::ExecuteRoutine() {$/;"	f	class:CMAExecute	signature:()
ExecuteRoutine	DMCore/Agents/DialogAgents/BasicAgents/MAExecute.h	/^	virtual void ExecuteRoutine();$/;"	p	class:CMAExecute	access:public	signature:()
ExpectCondition	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^bool CDialogAgent::ExpectCondition() {$/;"	f	class:CDialogAgent	signature:()
ExpectCondition	DMCore/Agents/DialogAgents/DialogAgent.h	/^	virtual bool ExpectCondition();$/;"	p	class:CDialogAgent	access:public	signature:()
ExpectedConcept	DMCore/Agents/DialogAgents/BasicAgents/MAExpect.cpp	/^CConcept* CMAExpect::ExpectedConcept() {$/;"	f	class:CMAExpect	signature:()
ExpectedConcept	DMCore/Agents/DialogAgents/BasicAgents/MAExpect.h	/^	virtual CConcept* ExpectedConcept();$/;"	p	class:CMAExpect	access:public	signature:()
ExpectedConceptName	DMCore/Agents/DialogAgents/BasicAgents/MAExpect.cpp	/^string CMAExpect::ExpectedConceptName() {$/;"	f	class:CMAExpect	signature:()
ExpectedConceptName	DMCore/Agents/DialogAgents/BasicAgents/MAExpect.h	/^	virtual string ExpectedConceptName();$/;"	p	class:CMAExpect	access:public	signature:()
ExplainMorePrompt	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^string CDialogAgent::ExplainMorePrompt() {$/;"	f	class:CDialogAgent	signature:()
ExplainMorePrompt	DMCore/Agents/DialogAgents/DialogAgent.h	/^	virtual string ExplainMorePrompt();$/;"	p	class:CDialogAgent	access:public	signature:()
ExtractFirstLine	Utils/Utils.cpp	/^string ExtractFirstLine(string& rString) {$/;"	f	signature:(string& rString)
ExtractFirstLine	Utils/Utils.h	/^string ExtractFirstLine(string& rString);$/;"	p	signature:(string& rString)
FAILED	DialogTask/DialogTask.h	228;"	d
FAILS_WHEN	DMCore/Agents/DialogAgents/DialogAgent.h	687;"	d
FAIL_REQUEST	DMCore/Grounding/GroundingActions/GAFailRequest.h	110;"	d
FATALERROR_STREAM	DMCore/Log.h	82;"	d
FCU_EXPLICIT_CONFIRM	DMCore/Agents/CoreAgents/DMCoreAgent.h	236;"	d
FCU_IMPLICIT_CONFIRM	DMCore/Agents/CoreAgents/DMCoreAgent.h	237;"	d
FCU_UNPLANNED_IMPLICIT_CONFIRM	DMCore/Agents/CoreAgents/DMCoreAgent.h	238;"	d
FCreateAgent	DMCore/Agents/Registry.h	/^typedef CAgent* (*FCreateAgent)(string, string);$/;"	t
FCreateGroundingModel	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^typedef CGroundingModel* (*FCreateGroundingModel)(string);$/;"	t
FINISH	DialogTask/DialogTask.h	236;"	d
FLOAT_ITEM	DialogTask/DialogTask.h	198;"	d
FLOAT_SYSTEM_CONCEPT	DialogTask/DialogTask.h	207;"	d
FLOAT_USER_CONCEPT	DialogTask/DialogTask.h	220;"	d
FMT_API	spdlog/fmt/bundled/format.h	72;"	d
FMT_API	spdlog/fmt/bundled/format.h	74;"	d
FMT_API	spdlog/fmt/bundled/format.h	78;"	d
FMT_ARG_TYPE_DEFAULT	spdlog/fmt/bundled/format.h	2705;"	d
FMT_ASSERT	spdlog/fmt/bundled/format.h	277;"	d
FMT_ASSIGN_char	spdlog/fmt/bundled/format.h	2720;"	d
FMT_ASSIGN_wchar_t	spdlog/fmt/bundled/format.h	2722;"	d
FMT_BUILTIN_CLZ	spdlog/fmt/bundled/format.h	281;"	d
FMT_BUILTIN_CLZ	spdlog/fmt/bundled/format.h	312;"	d
FMT_BUILTIN_CLZLL	spdlog/fmt/bundled/format.h	285;"	d
FMT_BUILTIN_CLZLL	spdlog/fmt/bundled/format.h	339;"	d
FMT_CATCH	spdlog/fmt/bundled/format.cc	57;"	d	file:
FMT_CONCAT	spdlog/fmt/bundled/format.h	1460;"	d
FMT_CONCAT_	spdlog/fmt/bundled/format.h	1476;"	d
FMT_DEFINE_INT_FORMATTERS	spdlog/fmt/bundled/format.h	2208;"	d
FMT_DELETED_OR_UNDEFINED	spdlog/fmt/bundled/format.h	238;"	d
FMT_DELETED_OR_UNDEFINED	spdlog/fmt/bundled/format.h	243;"	d
FMT_DETECTED_NOEXCEPT	spdlog/fmt/bundled/format.h	189;"	d
FMT_DETECTED_NOEXCEPT	spdlog/fmt/bundled/format.h	191;"	d
FMT_DISABLE_CONVERSION_TO_INT	spdlog/fmt/bundled/format.h	/^FMT_DISABLE_CONVERSION_TO_INT(double);$/;"	p	namespace:fmt::internal	signature:(double)
FMT_DISABLE_CONVERSION_TO_INT	spdlog/fmt/bundled/format.h	/^FMT_DISABLE_CONVERSION_TO_INT(float);$/;"	p	namespace:fmt::internal	signature:(float)
FMT_DISABLE_CONVERSION_TO_INT	spdlog/fmt/bundled/format.h	/^FMT_DISABLE_CONVERSION_TO_INT(long double);$/;"	p	namespace:fmt::internal	signature:(long double)
FMT_DISABLE_CONVERSION_TO_INT	spdlog/fmt/bundled/format.h	1380;"	d
FMT_DISALLOW_COPY_AND_ASSIGN	spdlog/fmt/bundled/format.h	/^    FMT_DISALLOW_COPY_AND_ASSIGN(ArgFormatterBase);$/;"	p	class:fmt::internal::ArgFormatterBase	access:private	signature:(ArgFormatterBase)
FMT_DISALLOW_COPY_AND_ASSIGN	spdlog/fmt/bundled/format.h	/^    FMT_DISALLOW_COPY_AND_ASSIGN(BasicFormatter);$/;"	p	class:fmt::BasicFormatter	access:private	signature:(BasicFormatter)
FMT_DISALLOW_COPY_AND_ASSIGN	spdlog/fmt/bundled/format.h	/^    FMT_DISALLOW_COPY_AND_ASSIGN(BasicWriter);$/;"	p	class:BasicWriter	access:private	signature:(BasicWriter)
FMT_DISALLOW_COPY_AND_ASSIGN	spdlog/fmt/bundled/format.h	/^    FMT_DISALLOW_COPY_AND_ASSIGN(Buffer);$/;"	p	class:fmt::Buffer	access:private	signature:(Buffer)
FMT_DISALLOW_COPY_AND_ASSIGN	spdlog/fmt/bundled/format.h	239;"	d
FMT_DISALLOW_COPY_AND_ASSIGN	spdlog/fmt/bundled/format.h	244;"	d
FMT_DISALLOW_COPY_AND_ASSIGN	spdlog/fmt/bundled/printf.h	/^    FMT_DISALLOW_COPY_AND_ASSIGN(ArgConverter);$/;"	p	class:fmt::internal::ArgConverter	access:private	signature:(ArgConverter)
FMT_DISALLOW_COPY_AND_ASSIGN	spdlog/fmt/bundled/printf.h	/^    FMT_DISALLOW_COPY_AND_ASSIGN(CharConverter);$/;"	p	class:fmt::internal::CharConverter	access:private	signature:(CharConverter)
FMT_DISALLOW_COPY_AND_ASSIGN	spdlog/fmt/bundled/printf.h	/^    FMT_DISALLOW_COPY_AND_ASSIGN(WidthHandler);$/;"	p	class:fmt::internal::WidthHandler	access:private	signature:(WidthHandler)
FMT_DISPATCH	spdlog/fmt/bundled/format.h	1818;"	d
FMT_DTOR_NOEXCEPT	spdlog/fmt/bundled/format.h	/^    ~FormatError() FMT_DTOR_NOEXCEPT;$/;"	m	class:fmt::FormatError	access:public
FMT_DTOR_NOEXCEPT	spdlog/fmt/bundled/format.h	/^    ~RuntimeError() FMT_DTOR_NOEXCEPT;$/;"	m	class:fmt::internal::RuntimeError	access:protected
FMT_DTOR_NOEXCEPT	spdlog/fmt/bundled/format.h	/^    ~SystemError() FMT_DTOR_NOEXCEPT;$/;"	m	class:SystemError	access:public
FMT_DTOR_NOEXCEPT	spdlog/fmt/bundled/format.h	205;"	d
FMT_DTOR_NOEXCEPT	spdlog/fmt/bundled/format.h	207;"	d
FMT_EXCEPTIONS	spdlog/fmt/bundled/format.h	164;"	d
FMT_EXCEPTIONS	spdlog/fmt/bundled/format.h	167;"	d
FMT_EXCEPTIONS	spdlog/fmt/bundled/format.h	170;"	d
FMT_FORMAT_H_	spdlog/fmt/bundled/format.h	29;"	d
FMT_FOR_EACH1	spdlog/fmt/bundled/format.h	2795;"	d
FMT_FOR_EACH10	spdlog/fmt/bundled/format.h	2812;"	d
FMT_FOR_EACH2	spdlog/fmt/bundled/format.h	2796;"	d
FMT_FOR_EACH3	spdlog/fmt/bundled/format.h	2798;"	d
FMT_FOR_EACH4	spdlog/fmt/bundled/format.h	2800;"	d
FMT_FOR_EACH5	spdlog/fmt/bundled/format.h	2802;"	d
FMT_FOR_EACH6	spdlog/fmt/bundled/format.h	2804;"	d
FMT_FOR_EACH7	spdlog/fmt/bundled/format.h	2806;"	d
FMT_FOR_EACH8	spdlog/fmt/bundled/format.h	2808;"	d
FMT_FOR_EACH9	spdlog/fmt/bundled/format.h	2810;"	d
FMT_GCC_EXTENSION	spdlog/fmt/bundled/format.h	100;"	d
FMT_GCC_EXTENSION	spdlog/fmt/bundled/format.h	83;"	d
FMT_GCC_VERSION	spdlog/fmt/bundled/format.h	82;"	d
FMT_GEN	spdlog/fmt/bundled/format.h	2619;"	d
FMT_GEN1	spdlog/fmt/bundled/format.h	2620;"	d
FMT_GEN10	spdlog/fmt/bundled/format.h	2629;"	d
FMT_GEN11	spdlog/fmt/bundled/format.h	2630;"	d
FMT_GEN12	spdlog/fmt/bundled/format.h	2631;"	d
FMT_GEN13	spdlog/fmt/bundled/format.h	2632;"	d
FMT_GEN14	spdlog/fmt/bundled/format.h	2633;"	d
FMT_GEN15	spdlog/fmt/bundled/format.h	/^inline uint64_t make_type(FMT_GEN15(FMT_ARG_TYPE_DEFAULT))$/;"	f	namespace:fmt	signature:(FMT_ARG_TYPE_DEFAULT)
FMT_GEN15	spdlog/fmt/bundled/format.h	2634;"	d
FMT_GEN2	spdlog/fmt/bundled/format.h	2621;"	d
FMT_GEN3	spdlog/fmt/bundled/format.h	2622;"	d
FMT_GEN4	spdlog/fmt/bundled/format.h	2623;"	d
FMT_GEN5	spdlog/fmt/bundled/format.h	2624;"	d
FMT_GEN6	spdlog/fmt/bundled/format.h	2625;"	d
FMT_GEN7	spdlog/fmt/bundled/format.h	2626;"	d
FMT_GEN8	spdlog/fmt/bundled/format.h	2627;"	d
FMT_GEN9	spdlog/fmt/bundled/format.h	2628;"	d
FMT_GNUC_LIBSTD_VERSION	spdlog/fmt/bundled/format.h	116;"	d
FMT_HAS_BUILTIN	spdlog/fmt/bundled/format.h	126;"	d
FMT_HAS_BUILTIN	spdlog/fmt/bundled/format.h	128;"	d
FMT_HAS_CPP_ATTRIBUTE	spdlog/fmt/bundled/format.h	132;"	d
FMT_HAS_CPP_ATTRIBUTE	spdlog/fmt/bundled/format.h	134;"	d
FMT_HAS_FEATURE	spdlog/fmt/bundled/format.h	120;"	d
FMT_HAS_FEATURE	spdlog/fmt/bundled/format.h	122;"	d
FMT_HAS_GXX_CXX11	spdlog/fmt/bundled/format.h	97;"	d
FMT_HEADER_ONLY	spdlog/fmt/fmt.h	16;"	d
FMT_ICC_VERSION	spdlog/fmt/bundled/format.h	104;"	d
FMT_ICC_VERSION	spdlog/fmt/bundled/format.h	106;"	d
FMT_MAKE_ARG	spdlog/fmt/bundled/format.h	2719;"	d
FMT_MAKE_ARG_TYPE	spdlog/fmt/bundled/format.h	2718;"	d
FMT_MAKE_STR_VALUE	spdlog/fmt/bundled/format.h	1606;"	d
FMT_MAKE_TEMPLATE_ARG	spdlog/fmt/bundled/format.h	2717;"	d
FMT_MAKE_VALUE	spdlog/fmt/bundled/format.h	1550;"	d
FMT_MAKE_VALUE_	spdlog/fmt/bundled/format.h	1546;"	d
FMT_MAKE_WSTR_VALUE	spdlog/fmt/bundled/format.h	1620;"	d
FMT_MSC_VER	spdlog/fmt/bundled/format.h	57;"	d
FMT_MSC_VER	spdlog/fmt/bundled/format.h	59;"	d
FMT_NOEXCEPT	spdlog/fmt/bundled/format.h	/^                                  fmt::StringRef message) FMT_NOEXCEPT;$/;"	m	namespace:fmt::internal
FMT_NOEXCEPT	spdlog/fmt/bundled/format.h	196;"	d
FMT_NOEXCEPT	spdlog/fmt/bundled/format.h	198;"	d
FMT_NULL	spdlog/fmt/bundled/format.h	224;"	d
FMT_NULL	spdlog/fmt/bundled/format.h	226;"	d
FMT_OSTREAM_H_	spdlog/fmt/bundled/ostream.h	11;"	d
FMT_OVERRIDE	spdlog/fmt/bundled/format.h	/^    FMT_API void grow(std::size_t size) FMT_OVERRIDE;$/;"	m	class:fmt::internal::FixedBuffer	access:protected
FMT_OVERRIDE	spdlog/fmt/bundled/format.h	/^    void grow(std::size_t size) FMT_OVERRIDE;$/;"	m	class:fmt::internal::MemoryBuffer	access:protected
FMT_OVERRIDE	spdlog/fmt/bundled/format.h	214;"	d
FMT_OVERRIDE	spdlog/fmt/bundled/format.h	216;"	d
FMT_POWERS_OF_10	spdlog/fmt/bundled/format.cc	292;"	d	file:
FMT_PRINTF_H_	spdlog/fmt/bundled/printf.h	11;"	d
FMT_SECURE_SCL	spdlog/fmt/bundled/format.h	47;"	d
FMT_SECURE_SCL	spdlog/fmt/bundled/format.h	49;"	d
FMT_SNPRINTF	spdlog/fmt/bundled/format.cc	95;"	d	file:
FMT_SPECIALIZE_MAKE_UNSIGNED	spdlog/fmt/bundled/format.h	/^FMT_SPECIALIZE_MAKE_UNSIGNED(LongLong, ULongLong);$/;"	p	namespace:fmt::internal	signature:(LongLong, ULongLong)
FMT_SPECIALIZE_MAKE_UNSIGNED	spdlog/fmt/bundled/format.h	/^FMT_SPECIALIZE_MAKE_UNSIGNED(char, unsigned char);$/;"	p	namespace:fmt::internal	signature:(char, unsigned char)
FMT_SPECIALIZE_MAKE_UNSIGNED	spdlog/fmt/bundled/format.h	/^FMT_SPECIALIZE_MAKE_UNSIGNED(int, unsigned);$/;"	p	namespace:fmt::internal	signature:(int, unsigned)
FMT_SPECIALIZE_MAKE_UNSIGNED	spdlog/fmt/bundled/format.h	/^FMT_SPECIALIZE_MAKE_UNSIGNED(long, unsigned long);$/;"	p	namespace:fmt::internal	signature:(long, unsigned long)
FMT_SPECIALIZE_MAKE_UNSIGNED	spdlog/fmt/bundled/format.h	/^FMT_SPECIALIZE_MAKE_UNSIGNED(short, unsigned short);$/;"	p	namespace:fmt::internal	signature:(short, unsigned short)
FMT_SPECIALIZE_MAKE_UNSIGNED	spdlog/fmt/bundled/format.h	/^FMT_SPECIALIZE_MAKE_UNSIGNED(signed char, unsigned char);$/;"	p	namespace:fmt::internal	signature:(signed char, unsigned char)
FMT_SPECIALIZE_MAKE_UNSIGNED	spdlog/fmt/bundled/format.h	673;"	d
FMT_STATIC_ASSERT	spdlog/fmt/bundled/format.h	1474;"	d
FMT_STATIC_ASSERT	spdlog/fmt/bundled/format.h	1477;"	d
FMT_SWPRINTF	spdlog/fmt/bundled/format.cc	109;"	d	file:
FMT_THROW	spdlog/fmt/bundled/format.h	175;"	d
FMT_THROW	spdlog/fmt/bundled/format.h	177;"	d
FMT_TRY	spdlog/fmt/bundled/format.cc	56;"	d	file:
FMT_UNUSED	spdlog/fmt/bundled/format.h	1463;"	d
FMT_UNUSED	spdlog/fmt/bundled/format.h	1465;"	d
FMT_USE_DELETED_FUNCTIONS	spdlog/fmt/bundled/format.h	233;"	d
FMT_USE_EXTERN_TEMPLATES	spdlog/fmt/bundled/format.h	265;"	d
FMT_USE_EXTERN_TEMPLATES	spdlog/fmt/bundled/format.h	272;"	d
FMT_USE_EXTERN_TEMPLATES	spdlog/fmt/bundled/format.h	273;"	d
FMT_USE_NOEXCEPT	spdlog/fmt/bundled/format.h	183;"	d
FMT_USE_RVALUE_REFERENCES	spdlog/fmt/bundled/format.h	150;"	d
FMT_USE_RVALUE_REFERENCES	spdlog/fmt/bundled/format.h	152;"	d
FMT_USE_STATIC_ASSERT	spdlog/fmt/bundled/format.h	1469;"	d
FMT_USE_USER_DEFINED_LITERALS	spdlog/fmt/bundled/format.h	254;"	d
FMT_USE_VARIADIC_TEMPLATES	spdlog/fmt/bundled/format.h	141;"	d
FMT_USE_WINDOWS_H	spdlog/fmt/bundled/format.h	1178;"	d
FMT_USE_WINDOWS_H	spdlog/fmt/bundled/format.h	1180;"	d
FMT_USE_WINDOWS_H	spdlog/fmt/fmt.h	19;"	d
FMT_VARIADIC_CTOR	spdlog/fmt/bundled/format.h	2737;"	d
FMT_VARIADIC_VOID	spdlog/fmt/bundled/format.h	2727;"	d
FMT_VERSION	spdlog/fmt/bundled/format.h	44;"	d
FPUtil	spdlog/fmt/bundled/format.h	/^typedef std::numeric_limits<fmt::internal::DummyInt> FPUtil;$/;"	t	namespace:fmt::internal
FREE_PROB_MASS	DMCore/Concepts/Concept.h	226;"	d
FRegisterAgent	DMCore/Agents/Registry.h	/^typedef void (*FRegisterAgent)(void);$/;"	t
FULL_HELP	DMCore/Grounding/GroundingActions/GAFullHelp.h	114;"	d
F_formatter	spdlog/details/pattern_formatter_impl.h	/^class F_formatter:public flag_formatter$/;"	c	namespace:spdlog::details	inherits:flag_formatter
FailureCriteriaSatisfied	DMCore/Agents/DialogAgents/BasicAgents/MARequest.cpp	/^bool CMARequest::FailureCriteriaSatisfied() {$/;"	f	class:CMARequest	signature:()
FailureCriteriaSatisfied	DMCore/Agents/DialogAgents/BasicAgents/MARequest.h	/^	virtual bool FailureCriteriaSatisfied();$/;"	p	class:CMARequest	access:public	signature:()
FailureCriteriaSatisfied	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^bool CDialogAgent::FailureCriteriaSatisfied() {$/;"	f	class:CDialogAgent	signature:()
FailureCriteriaSatisfied	DMCore/Agents/DialogAgents/DialogAgent.h	/^	virtual bool FailureCriteriaSatisfied();$/;"	p	class:CDialogAgent	access:public	signature:()
False	spdlog/fmt/bundled/format.h	/^struct False$/;"	s	namespace:fmt::internal
FatalError	DMCore/Log.h	199;"	d
FindClosingQuoteChar	Utils/Utils.cpp	/^unsigned int FindClosingQuoteChar(string sString, unsigned int iStartPos, $/;"	f	signature:(string sString, unsigned int iStartPos, char cOpenQuote, char cCloseQuote)
FindClosingQuoteChar	Utils/Utils.h	/^unsigned int FindClosingQuoteChar(string sString, unsigned int iStartPos, $/;"	p	signature:(string sString, unsigned int iStartPos, char cOpenQuote, char cCloseQuote)
FixedBuffer	spdlog/fmt/bundled/format.h	/^    FixedBuffer(Char *array, std::size_t size): fmt::Buffer<Char>(array, size)$/;"	f	class:fmt::internal::FixedBuffer	access:public	signature:(Char *array, std::size_t size)
FixedBuffer	spdlog/fmt/bundled/format.h	/^class FixedBuffer: public fmt::Buffer<Char>$/;"	c	namespace:fmt::internal	inherits:fmt::Buffer
FloatToString	Utils/Utils.cpp	/^string FloatToString(float fFloat) {$/;"	f	signature:(float fFloat)
FloatToString	Utils/Utils.h	/^string FloatToString(float fFloat);$/;"	p	signature:(float fFloat)
FloorStatusToString	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^string CDMCoreAgent::FloorStatusToString(TFloorStatus fsAFloor) {$/;"	f	class:CDMCoreAgent	signature:(TFloorStatus fsAFloor)
FloorStatusToString	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	string FloorStatusToString(TFloorStatus fsAFloor);$/;"	p	class:CDMCoreAgent	access:public	signature:(TFloorStatus fsAFloor)
FormatBuf	spdlog/fmt/bundled/ostream.h	/^    FormatBuf(Buffer<Char> &buffer): buffer_(buffer), start_(&buffer[0])$/;"	f	class:fmt::internal::FormatBuf	access:public	signature:(Buffer<Char> &buffer)
FormatBuf	spdlog/fmt/bundled/ostream.h	/^class FormatBuf: public std::basic_streambuf<Char>$/;"	c	namespace:fmt::internal	inherits:std::basic_streambuf
FormatError	spdlog/fmt/bundled/format.h	/^    FormatError(const FormatError &ferr): std::runtime_error(ferr)$/;"	f	class:fmt::FormatError	access:public	signature:(const FormatError &ferr)
FormatError	spdlog/fmt/bundled/format.h	/^    explicit FormatError(CStringRef message)$/;"	f	class:fmt::FormatError	access:public	signature:(CStringRef message)
FormatError	spdlog/fmt/bundled/format.h	/^class FormatError: public std::runtime_error$/;"	c	namespace:fmt	inherits:std::runtime_error
FormatFunc	spdlog/fmt/bundled/format.cc	/^		typedef void(*FormatFunc)(Writer &, int, StringRef);$/;"	t	namespace:fmt::__anon2	file:
FormatFunc	spdlog/fmt/bundled/format.h	/^    typedef void(*FormatFunc)($/;"	t	struct:fmt::internal::Value	access:public
FormatInt	spdlog/fmt/bundled/format.h	/^    explicit FormatInt(LongLong value)$/;"	f	class:FormatInt	access:public	signature:(LongLong value)
FormatInt	spdlog/fmt/bundled/format.h	/^    explicit FormatInt(ULongLong value): str_(format_decimal(value))$/;"	f	class:FormatInt	access:public	signature:(ULongLong value)
FormatInt	spdlog/fmt/bundled/format.h	/^    explicit FormatInt(int value)$/;"	f	class:FormatInt	access:public	signature:(int value)
FormatInt	spdlog/fmt/bundled/format.h	/^    explicit FormatInt(long value)$/;"	f	class:FormatInt	access:public	signature:(long value)
FormatInt	spdlog/fmt/bundled/format.h	/^    explicit FormatInt(unsigned long value): str_(format_decimal(value))$/;"	f	class:FormatInt	access:public	signature:(unsigned long value)
FormatInt	spdlog/fmt/bundled/format.h	/^    explicit FormatInt(unsigned value): str_(format_decimal(value))$/;"	f	class:FormatInt	access:public	signature:(unsigned value)
FormatInt	spdlog/fmt/bundled/format.h	/^class FormatInt$/;"	c
FormatInt::BUFFER_SIZE	spdlog/fmt/bundled/format.h	/^        BUFFER_SIZE = std::numeric_limits<ULongLong>::digits10 + 3$/;"	e	enum:FormatInt::__anon30
FormatInt::FormatInt	spdlog/fmt/bundled/format.h	/^    explicit FormatInt(LongLong value)$/;"	f	class:FormatInt	access:public	signature:(LongLong value)
FormatInt::FormatInt	spdlog/fmt/bundled/format.h	/^    explicit FormatInt(ULongLong value): str_(format_decimal(value))$/;"	f	class:FormatInt	access:public	signature:(ULongLong value)
FormatInt::FormatInt	spdlog/fmt/bundled/format.h	/^    explicit FormatInt(int value)$/;"	f	class:FormatInt	access:public	signature:(int value)
FormatInt::FormatInt	spdlog/fmt/bundled/format.h	/^    explicit FormatInt(long value)$/;"	f	class:FormatInt	access:public	signature:(long value)
FormatInt::FormatInt	spdlog/fmt/bundled/format.h	/^    explicit FormatInt(unsigned long value): str_(format_decimal(value))$/;"	f	class:FormatInt	access:public	signature:(unsigned long value)
FormatInt::FormatInt	spdlog/fmt/bundled/format.h	/^    explicit FormatInt(unsigned value): str_(format_decimal(value))$/;"	f	class:FormatInt	access:public	signature:(unsigned value)
FormatInt::FormatSigned	spdlog/fmt/bundled/format.h	/^    void FormatSigned(LongLong value)$/;"	f	class:FormatInt	access:private	signature:(LongLong value)
FormatInt::buffer_	spdlog/fmt/bundled/format.h	/^    mutable char buffer_[BUFFER_SIZE];$/;"	m	class:FormatInt	access:private
FormatInt::c_str	spdlog/fmt/bundled/format.h	/^    const char *c_str() const$/;"	f	class:FormatInt	access:public	signature:() const
FormatInt::data	spdlog/fmt/bundled/format.h	/^    const char *data() const$/;"	f	class:FormatInt	access:public	signature:() const
FormatInt::format_decimal	spdlog/fmt/bundled/format.h	/^    char *format_decimal(ULongLong value)$/;"	f	class:FormatInt	access:private	signature:(ULongLong value)
FormatInt::size	spdlog/fmt/bundled/format.h	/^    std::size_t size() const$/;"	f	class:FormatInt	access:public	signature:() const
FormatInt::str	spdlog/fmt/bundled/format.h	/^    std::string str() const$/;"	f	class:FormatInt	access:public	signature:() const
FormatInt::str_	spdlog/fmt/bundled/format.h	/^    char *str_;$/;"	m	class:FormatInt	access:private
FormatSigned	spdlog/fmt/bundled/format.h	/^    void FormatSigned(LongLong value)$/;"	f	class:FormatInt	access:private	signature:(LongLong value)
FormatSpec	spdlog/fmt/bundled/format.h	/^    FormatSpec($/;"	f	struct:fmt::FormatSpec	access:public	signature:( unsigned width = 0, char type = 0, wchar_t fill = Ã)
FormatSpec	spdlog/fmt/bundled/format.h	/^struct FormatSpec: AlignSpec$/;"	s	namespace:fmt	inherits:AlignSpec
FormatString	Utils/Utils.cpp	/^string FormatString(const char *lpszFormat, ...) {$/;"	f	signature:(const char *lpszFormat, ...)
FormatString	Utils/Utils.h	/^string FormatString(const char *lpszFormat, ...);$/;"	p	signature:(const char *lpszFormat, ...)
FormatterBase	spdlog/fmt/bundled/format.h	/^    explicit FormatterBase(const ArgList &args)$/;"	f	class:fmt::internal::FormatterBase	access:protected	signature:(const ArgList &args)
FormatterBase	spdlog/fmt/bundled/format.h	/^class FormatterBase$/;"	c	namespace:fmt::internal
FromString	DMCore/Concepts/BoolConcept.cpp	/^void CBoolHyp::FromString(string sString) {$/;"	f	class:CBoolHyp	signature:(string sString)
FromString	DMCore/Concepts/BoolConcept.h	/^	virtual void FromString(string sString);$/;"	p	class:CBoolHyp	access:public	signature:(string sString)
FromString	DMCore/Concepts/Concept.cpp	/^void CHyp::FromString(string sString) {$/;"	f	class:CHyp	signature:(string sString)
FromString	DMCore/Concepts/Concept.h	/^	virtual void FromString(string sString);$/;"	p	class:CHyp	access:public	signature:(string sString)
FromString	DMCore/Concepts/FloatConcept.cpp	/^void CFloatHyp::FromString(string sString) {$/;"	f	class:CFloatHyp	signature:(string sString)
FromString	DMCore/Concepts/FloatConcept.h	/^	virtual void FromString(string sString);$/;"	p	class:CFloatHyp	access:public	signature:(string sString)
FromString	DMCore/Concepts/IntConcept.cpp	/^void CIntHyp::FromString(string sString) {$/;"	f	class:CIntHyp	signature:(string sString)
FromString	DMCore/Concepts/IntConcept.h	/^	virtual void FromString(string sString);$/;"	p	class:CIntHyp	access:public	signature:(string sString)
FromString	DMCore/Concepts/StringConcept.cpp	/^void CStringHyp::FromString(string sString) {$/;"	f	class:CStringHyp	signature:(string sString)
FromString	DMCore/Concepts/StringConcept.h	/^	virtual void FromString(string sString);$/;"	p	class:CStringHyp	access:public	signature:(string sString)
FromString	DMCore/Concepts/StructConcept.cpp	/^void CStructHyp::FromString(string sString) {$/;"	f	class:CStructHyp	signature:(string sString)
FromString	DMCore/Concepts/StructConcept.h	/^	virtual void FromString(string sString);$/;"	p	class:CStructHyp	access:public	signature:(string sString)
GAHAddHistoryItem	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^void CGroundingManagerAgent::GAHAddHistoryItem(string sGroundingModelName, $/;"	f	class:CGroundingManagerAgent	signature:(string sGroundingModelName, string sActionName, int iGroundingActionType)
GAHAddHistoryItem	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    void GAHAddHistoryItem(string sGroundingModelName, $/;"	p	class:CGroundingManagerAgent	access:public	signature:(string sGroundingModelName, string sActionName, int iGroundingActionType)
GAHCountTakenByGroundingModelInLastNTurns	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^int CGroundingManagerAgent::GAHCountTakenByGroundingModelInLastNTurns($/;"	f	class:CGroundingManagerAgent	signature:( bool bAlsoHeard, string sActionName, string sGroundingModelName, int iNumTurns)
GAHCountTakenByGroundingModelInLastNTurns	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    int GAHCountTakenByGroundingModelInLastNTurns(bool bAlsoHeard, $/;"	p	class:CGroundingManagerAgent	access:public	signature:(bool bAlsoHeard, string sActionName, string sGroundingModelName, int iNumTurns = -1)
GAHCountTakenInLastNTurns	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^int CGroundingManagerAgent::GAHCountTakenInLastNTurns(bool bAlsoHeard, $/;"	f	class:CGroundingManagerAgent	signature:(bool bAlsoHeard, string sActionName, int iNumTurns)
GAHCountTakenInLastNTurns	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    int GAHCountTakenInLastNTurns(bool bAlsoHeard, string sActionName, $/;"	p	class:CGroundingManagerAgent	access:public	signature:(bool bAlsoHeard, string sActionName, int iNumTurns = -1)
GAHGetTurnGroundingAction	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^string CGroundingManagerAgent::GAHGetTurnGroundingAction(int iTurnNumber) {$/;"	f	class:CGroundingManagerAgent	signature:(int iTurnNumber)
GAHGetTurnGroundingAction	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    string GAHGetTurnGroundingAction(int iTurnNumber);$/;"	p	class:CGroundingManagerAgent	access:public	signature:(int iTurnNumber)
GAHSetBargeInFlag	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^void CGroundingManagerAgent::GAHSetBargeInFlag(int iTurnNum, bool bBargeInFlag) {$/;"	f	class:CGroundingManagerAgent	signature:(int iTurnNum, bool bBargeInFlag)
GAHSetBargeInFlag	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    void GAHSetBargeInFlag(int iTurnNum, bool bBargeInFlag);$/;"	p	class:CGroundingManagerAgent	access:public	signature:(int iTurnNum, bool bBargeInFlag)
GALS	Utils/Utils.h	143;"	d
GAT_CONCEPT	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	111;"	d
GAT_NONE	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	112;"	d
GAT_TURN	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	110;"	d
GIVE_UP	DMCore/Grounding/GroundingActions/GAGiveUp.h	107;"	d
GRAMMAR_MAPPING	DMCore/Agents/DialogAgents/BasicAgents/MAExpect.h	177;"	d
GRAMMAR_MAPPING	DMCore/Agents/DialogAgents/BasicAgents/MARequest.h	208;"	d
GREEN	spdlog/fmt/bundled/format.h	/^    BLACK, RED, GREEN, YELLOW, BLUE, MAGENTA, CYAN, WHITE$/;"	e	enum:Color
GROUNDINGMANAGER_STREAM	DMCore/Log.h	105;"	d
GROUNDINGMODELX_STREAM	DMCore/Log.h	106;"	d
GROUNDING_ACTION	DialogTask/DialogTask.h	164;"	d
GROUNDING_MODEL_TYPE	DialogTask/DialogTask.h	156;"	d
GRS_DONE	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	92;"	d
GRS_EXECUTING	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	91;"	d
GRS_PENDING	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	88;"	d
GRS_READY	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	89;"	d
GRS_SCHEDULED	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	90;"	d
GRS_UNPROCESSED	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	87;"	d
Get2ndHypIndex	DMCore/Concepts/Concept.cpp	/^int CConcept::Get2ndHypIndex() {$/;"	f	class:CConcept	signature:()
Get2ndHypIndex	DMCore/Concepts/Concept.h	/^	virtual int Get2ndHypIndex();$/;"	p	class:CConcept	access:public	signature:()
GetAct	DMCore/Outputs/Output.cpp	/^string COutput::GetAct() {$/;"	f	class:COutput	signature:()
GetAct	DMCore/Outputs/Output.h	/^	string GetAct();$/;"	p	class:COutput	access:public	signature:()
GetAgentInFocus	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^CDialogAgent* CDMCoreAgent::GetAgentInFocus() {$/;"	f	class:CDMCoreAgent	signature:()
GetAgentInFocus	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	CDialogAgent* GetAgentInFocus();$/;"	p	class:CDMCoreAgent	access:public	signature:()
GetAgentPreviouslyInFocus	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^CDialogAgent* CDMCoreAgent::GetAgentPreviouslyInFocus($/;"	f	class:CDMCoreAgent	signature:( CDialogAgent* pdaDialogAgent)
GetAgentPreviouslyInFocus	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	CDialogAgent* GetAgentPreviouslyInFocus($/;"	p	class:CDMCoreAgent	access:public	signature:( CDialogAgent* pdaDialogAgent = NULL)
GetAgentQualifiedName	DMCore/Concepts/Concept.cpp	/^string CConcept::GetAgentQualifiedName() {$/;"	f	class:CConcept	signature:()
GetAgentQualifiedName	DMCore/Concepts/Concept.h	/^    string GetAgentQualifiedName();$/;"	p	class:CConcept	access:public	signature:()
GetBeliefUpdatingModelForAction	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^STRING2FLOATVECTOR& CGroundingManagerAgent::GetBeliefUpdatingModelForAction($/;"	f	class:CGroundingManagerAgent	signature:( string sSystemAction)
GetBeliefUpdatingModelForAction	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^	virtual STRING2FLOATVECTOR& GetBeliefUpdatingModelForAction($/;"	p	class:CGroundingManagerAgent	access:public	signature:( string sSystemAction)
GetBeliefUpdatingModelName	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^string CGroundingManagerAgent::GetBeliefUpdatingModelName() {$/;"	f	class:CGroundingManagerAgent	signature:()
GetBeliefUpdatingModelName	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^	virtual string GetBeliefUpdatingModelName();$/;"	p	class:CGroundingManagerAgent	access:public	signature:()
GetBindingHistorySize	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^int CDMCoreAgent::GetBindingHistorySize() {$/;"	f	class:CDMCoreAgent	signature:()
GetBindingHistorySize	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^    int GetBindingHistorySize();$/;"	p	class:CDMCoreAgent	access:public	signature:()
GetBindingResult	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^const TBindingsDescr& CDMCoreAgent::GetBindingResult(int iBindingHistoryIndex) {$/;"	f	class:CDMCoreAgent	signature:(int iBindingHistoryIndex)
GetBindingResult	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^    const TBindingsDescr& GetBindingResult(int iBindingHistoryIndex);$/;"	p	class:CDMCoreAgent	access:public	signature:(int iBindingHistoryIndex)
GetCardinality	DMCore/Concepts/Concept.cpp	/^int CConcept::GetCardinality() {$/;"	f	class:CConcept	signature:()
GetCardinality	DMCore/Concepts/Concept.h	/^    virtual int GetCardinality();$/;"	p	class:CConcept	access:public	signature:()
GetConcept	DMCore/Grounding/GroundingModels/GMConcept.cpp	/^CConcept* CGMConcept::GetConcept() {$/;"	f	class:CGMConcept	signature:()
GetConcept	DMCore/Grounding/GroundingModels/GMConcept.h	/^    CConcept* GetConcept();$/;"	p	class:CGMConcept	access:public	signature:()
GetConceptByName	DMCore/Outputs/Output.cpp	/^CConcept* COutput::GetConceptByName(string sConceptName) {$/;"	f	class:COutput	signature:(string sConceptName)
GetConceptByName	DMCore/Outputs/Output.h	/^  virtual CConcept* GetConceptByName(string sConceptName);$/;"	p	class:COutput	access:public	signature:(string sConceptName)
GetConceptGroundingRequestStatus	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^int CGroundingManagerAgent::GetConceptGroundingRequestStatus(CConcept* pConcept) {$/;"	f	class:CGroundingManagerAgent	signature:(CConcept* pConcept)
GetConceptGroundingRequestStatus	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    int GetConceptGroundingRequestStatus(CConcept* pConcept);$/;"	p	class:CGroundingManagerAgent	access:public	signature:(CConcept* pConcept)
GetConceptSource	DMCore/Concepts/Concept.cpp	/^TConceptSource CConcept::GetConceptSource() {$/;"	f	class:CConcept	signature:()
GetConceptSource	DMCore/Concepts/Concept.h	/^	virtual TConceptSource GetConceptSource();$/;"	p	class:CConcept	access:public	signature:()
GetConceptType	DMCore/Concepts/Concept.cpp	/^TConceptType CConcept::GetConceptType() {$/;"	f	class:CConcept	signature:()
GetConceptType	DMCore/Concepts/Concept.h	/^    virtual TConceptType GetConceptType();$/;"	p	class:CConcept	access:public	signature:()
GetConceptTypeInfo	DMCore/Concepts/Concept.cpp	/^string CConcept::GetConceptTypeInfo() {$/;"	f	class:CConcept	signature:()
GetConceptTypeInfo	DMCore/Concepts/Concept.h	/^	virtual string GetConceptTypeInfo();$/;"	p	class:CConcept	access:public	signature:()
GetConceptTypeInfoForConcept	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^string CGroundingManagerAgent::GetConceptTypeInfoForConcept(string sConcept) {$/;"	f	class:CGroundingManagerAgent	signature:(string sConcept)
GetConceptTypeInfoForConcept	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^	virtual string GetConceptTypeInfoForConcept(string sConcept);$/;"	p	class:CGroundingManagerAgent	access:public	signature:(string sConcept)
GetConfidence	DMCore/Concepts/Concept.cpp	/^float CHyp::GetConfidence() {$/;"	f	class:CHyp	signature:()
GetConfidence	DMCore/Concepts/Concept.h	/^    float GetConfidence();$/;"	p	class:CHyp	access:public	signature:()
GetConfidence	DMCore/Events/InteractionEvent.cpp	/^float CInteractionEvent::GetConfidence() {$/;"	f	class:CInteractionEvent	signature:()
GetConfidence	DMCore/Events/InteractionEvent.h	/^	float GetConfidence();$/;"	p	class:CInteractionEvent	access:public	signature:()
GetConfiguration	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^TGroundingManagerConfiguration CGroundingManagerAgent::GetConfiguration() {$/;"	f	class:CGroundingManagerAgent	signature:()
GetConfiguration	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^	TGroundingManagerConfiguration GetConfiguration();$/;"	p	class:CGroundingManagerAgent	access:public	signature:()
GetConfiguration	DMCore/Grounding/GroundingActions/GroundingAction.h	/^	string GetConfiguration();$/;"	p	class:CGroundingAction	access:public	signature:()
GetConfusabilityForConceptHyp	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^float CGroundingManagerAgent::GetConfusabilityForConceptHyp($/;"	f	class:CGroundingManagerAgent	signature:( string sConcept, string sHyp)
GetConfusabilityForConceptHyp	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^	virtual float GetConfusabilityForConceptHyp($/;"	p	class:CGroundingManagerAgent	access:public	signature:( string sConcept, string sHyp)
GetConfusabilityForHyp	DMCore/Concepts/Concept.cpp	/^float CConcept::GetConfusabilityForHyp(CHyp* pHyp) {$/;"	f	class:CConcept	signature:(CHyp* pHyp)
GetConfusabilityForHyp	DMCore/Concepts/Concept.h	/^	virtual float GetConfusabilityForHyp(CHyp* pHyp);$/;"	p	class:CConcept	access:public	signature:(CHyp* pHyp)
GetConstantParameter	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^float CGroundingManagerAgent::GetConstantParameter(string sParam) {$/;"	f	class:CGroundingManagerAgent	signature:(string sParam)
GetConstantParameter	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    virtual float GetConstantParameter(string sParam);$/;"	p	class:CGroundingManagerAgent	access:public	signature:(string sParam)
GetContextAgent	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^CDialogAgent* CDialogAgent::GetContextAgent() {$/;"	f	class:CDialogAgent	signature:()
GetContextAgent	DMCore/Agents/DialogAgents/DialogAgent.h	/^	CDialogAgent* GetContextAgent();$/;"	p	class:CDialogAgent	access:public	signature:()
GetConveyance	DMCore/Concepts/Concept.cpp	/^TConveyance CConcept::GetConveyance() {$/;"	f	class:CConcept	signature:()
GetConveyance	DMCore/Concepts/Concept.h	/^	TConveyance GetConveyance();$/;"	p	class:CConcept	access:public	signature:()
GetConveyance	DMCore/Outputs/Output.cpp	/^TConveyance COutput::GetConveyance() {$/;"	f	class:COutput	signature:()
GetConveyance	DMCore/Outputs/Output.h	/^	TConveyance GetConveyance();$/;"	p	class:COutput	access:public	signature:()
GetCurrentAbsoluteTimestamp	Utils/Utils.h	/^long long GetCurrentAbsoluteTimestamp();$/;"	p	signature:()
GetCurrentMainTopicAgent	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^CDialogAgent* CDMCoreAgent::GetCurrentMainTopicAgent() {$/;"	f	class:CDMCoreAgent	signature:()
GetCurrentMainTopicAgent	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	CDialogAgent* GetCurrentMainTopicAgent();$/;"	p	class:CDMCoreAgent	access:public	signature:()
GetDTSAgentInFocus	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^CDialogAgent* CDMCoreAgent::GetDTSAgentInFocus() {$/;"	f	class:CDMCoreAgent	signature:()
GetDTSAgentInFocus	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^    CDialogAgent* GetDTSAgentInFocus();$/;"	p	class:CDMCoreAgent	access:public	signature:()
GetDTSAgentPreviouslyInFocus	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^CDialogAgent* CDMCoreAgent::GetDTSAgentPreviouslyInFocus($/;"	f	class:CDMCoreAgent	signature:( CDialogAgent* pdaDialogAgent)
GetDTSAgentPreviouslyInFocus	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	CDialogAgent* GetDTSAgentPreviouslyInFocus($/;"	p	class:CDMCoreAgent	access:public	signature:( CDialogAgent* pdaDialogAgent = NULL)
GetDefaultNonunderstandingThreshold	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^float CDMCoreAgent::GetDefaultNonunderstandingThreshold() {$/;"	f	class:CDMCoreAgent	signature:()
GetDefaultNonunderstandingThreshold	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^    float GetDefaultNonunderstandingThreshold();$/;"	p	class:CDMCoreAgent	access:public	signature:()
GetDefaultOutputDevice	DMCore/Agents/CoreAgents/OutputManagerAgent.cpp	/^TOutputDevice *COutputManagerAgent::GetDefaultOutputDevice() {$/;"	f	class:COutputManagerAgent	signature:()
GetDefaultOutputDevice	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^	TOutputDevice *GetDefaultOutputDevice();$/;"	p	class:COutputManagerAgent	access:public	signature:()
GetDefaultOutputDeviceName	DMCore/Agents/CoreAgents/OutputManagerAgent.cpp	/^string COutputManagerAgent::GetDefaultOutputDeviceName() {$/;"	f	class:COutputManagerAgent	signature:()
GetDefaultOutputDeviceName	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^	string GetDefaultOutputDeviceName();$/;"	p	class:COutputManagerAgent	access:public	signature:()
GetDefaultTimeoutPeriod	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^int CDMCoreAgent::GetDefaultTimeoutPeriod() {$/;"	f	class:CDMCoreAgent	signature:()
GetDefaultTimeoutPeriod	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	int GetDefaultTimeoutPeriod();$/;"	p	class:CDMCoreAgent	access:public	signature:()
GetDialogState	DMCore/Outputs/Output.cpp	/^string COutput::GetDialogState() {$/;"	f	class:COutput	signature:()
GetDialogState	DMCore/Outputs/Output.h	/^	string GetDialogState();$/;"	p	class:COutput	access:public	signature:()
GetDialogStateIndex	DMCore/Outputs/Output.cpp	/^int COutput::GetDialogStateIndex() {$/;"	f	class:COutput	signature:()
GetDialogStateIndex	DMCore/Outputs/Output.h	/^	int GetDialogStateIndex();$/;"	p	class:COutput	access:public	signature:()
GetDialogTaskTreeRoot	DMCore/Agents/CoreAgents/DTTManagerAgent.cpp	/^CDialogAgent* CDTTManagerAgent::GetDialogTaskTreeRoot() {$/;"	f	class:CDTTManagerAgent	signature:()
GetDialogTaskTreeRoot	DMCore/Agents/CoreAgents/DTTManagerAgent.h	/^	CDialogAgent* GetDialogTaskTreeRoot();$/;"	p	class:CDTTManagerAgent	access:public	signature:()
GetDynamicAgentID	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^string CDialogAgent::GetDynamicAgentID() {$/;"	f	class:CDialogAgent	signature:()
GetDynamicAgentID	DMCore/Agents/DialogAgents/DialogAgent.h	/^    string GetDynamicAgentID();$/;"	p	class:CDialogAgent	access:public	signature:()
GetEpsilonGreedyEvent	DMCore/Grounding/GroundingUtils.cpp	/^int CBeliefDistribution::GetEpsilonGreedyEvent(float fEpsilon) {$/;"	f	class:CBeliefDistribution	signature:(float fEpsilon)
GetEpsilonGreedyEvent	DMCore/Grounding/GroundingUtils.h	/^    int GetEpsilonGreedyEvent(float fEpsilon);$/;"	p	class:CBeliefDistribution	access:public	signature:(float fEpsilon)
GetExecuteCall	DMCore/Agents/DialogAgents/BasicAgents/MAExecute.cpp	/^string CMAExecute::GetExecuteCall() {$/;"	f	class:CMAExecute	signature:()
GetExecuteCall	DMCore/Agents/DialogAgents/BasicAgents/MAExecute.h	/^	virtual string GetExecuteCall();$/;"	p	class:CMAExecute	access:public	signature:()
GetExecuteCounter	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^int CDialogAgent::GetExecuteCounter() {$/;"	f	class:CDialogAgent	signature:()
GetExecuteCounter	DMCore/Agents/DialogAgents/DialogAgent.h	/^    int GetExecuteCounter();$/;"	p	class:CDialogAgent	access:public	signature:()
GetExecutionPolicy	DMCore/Agents/DialogAgents/BasicAgents/DialogAgency.cpp	/^string CDialogAgency::GetExecutionPolicy() {$/;"	f	class:CDialogAgency	signature:()
GetExecutionPolicy	DMCore/Agents/DialogAgents/BasicAgents/DialogAgency.h	/^	virtual string GetExecutionPolicy();$/;"	p	class:CDialogAgency	access:public	signature:()
GetExplicitlyConfirmedHypAsString	DMCore/Concepts/Concept.cpp	/^string CConcept::GetExplicitlyConfirmedHypAsString() {$/;"	f	class:CConcept	signature:()
GetExplicitlyConfirmedHypAsString	DMCore/Concepts/Concept.h	/^	virtual string GetExplicitlyConfirmedHypAsString();$/;"	p	class:CConcept	access:public	signature:()
GetExplicitlyDisconfirmedHypAsString	DMCore/Concepts/Concept.cpp	/^string CConcept::GetExplicitlyDisconfirmedHypAsString() {$/;"	f	class:CConcept	signature:()
GetExplicitlyDisconfirmedHypAsString	DMCore/Concepts/Concept.h	/^	virtual string GetExplicitlyDisconfirmedHypAsString();$/;"	p	class:CConcept	access:public	signature:()
GetFinalFloorStatus	DMCore/Outputs/Output.cpp	/^TFloorStatus COutput::GetFinalFloorStatus() {$/;"	f	class:COutput	signature:()
GetFinalFloorStatus	DMCore/Outputs/Output.h	/^	TFloorStatus GetFinalFloorStatus();$/;"	p	class:COutput	access:public	signature:()
GetFinalFloorStatusLabel	DMCore/Outputs/Output.cpp	/^string COutput::GetFinalFloorStatusLabel() {$/;"	f	class:COutput	signature:()
GetFinalFloorStatusLabel	DMCore/Outputs/Output.h	/^	string GetFinalFloorStatusLabel();$/;"	p	class:COutput	access:public	signature:()
GetFloatProperty	DMCore/Events/InteractionEvent.cpp	/^float CInteractionEvent::GetFloatProperty(string sSlot) {$/;"	f	class:CInteractionEvent	signature:(string sSlot)
GetFloatProperty	DMCore/Events/InteractionEvent.h	/^	float GetFloatProperty(string sSlot);$/;"	p	class:CInteractionEvent	access:public	signature:(string sSlot)
GetFloorStatus	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^TFloorStatus CDMCoreAgent::GetFloorStatus() {$/;"	f	class:CDMCoreAgent	signature:()
GetFloorStatus	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^    TFloorStatus GetFloorStatus();$/;"	p	class:CDMCoreAgent	access:public	signature:()
GetGeneratorAgentName	DMCore/Outputs/Output.cpp	/^string COutput::GetGeneratorAgentName() {$/;"	f	class:COutput	signature:()
GetGeneratorAgentName	DMCore/Outputs/Output.h	/^	string GetGeneratorAgentName();$/;"	p	class:COutput	access:public	signature:()
GetGroundedFlag	DMCore/Concepts/Concept.cpp	/^bool CConcept::GetGroundedFlag() {$/;"	f	class:CConcept	signature:()
GetGroundedFlag	DMCore/Concepts/Concept.h	/^	virtual bool GetGroundedFlag();$/;"	p	class:CConcept	access:public	signature:()
GetGroundingFeature	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^float CGroundingManagerAgent::GetGroundingFeature(string sFeatureName) {$/;"	f	class:CGroundingManagerAgent	signature:(string sFeatureName)
GetGroundingFeature	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^	virtual float GetGroundingFeature(string sFeatureName);$/;"	p	class:CGroundingManagerAgent	access:public	signature:(string sFeatureName)
GetGroundingFeatureAsString	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^string CGroundingManagerAgent::GetGroundingFeatureAsString(string sFeatureName) {$/;"	f	class:CGroundingManagerAgent	signature:(string sFeatureName)
GetGroundingFeatureAsString	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^	virtual string GetGroundingFeatureAsString(string sFeatureName);$/;"	p	class:CGroundingManagerAgent	access:public	signature:(string sFeatureName)
GetGroundingModel	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^CGroundingModel* CDialogAgent::GetGroundingModel() {$/;"	f	class:CDialogAgent	signature:()
GetGroundingModel	DMCore/Agents/DialogAgents/DialogAgent.h	/^    virtual CGroundingModel* GetGroundingModel();$/;"	p	class:CDialogAgent	access:public	signature:()
GetGroundingModel	DMCore/Concepts/Concept.cpp	/^CGMConcept* CConcept::GetGroundingModel() {$/;"	f	class:CConcept	signature:()
GetGroundingModel	DMCore/Concepts/Concept.h	/^    CGMConcept* GetGroundingModel();$/;"	p	class:CConcept	access:public	signature:()
GetHistorySize	DMCore/Concepts/Concept.cpp	/^int CConcept::GetHistorySize() {$/;"	f	class:CConcept	signature:()
GetHistorySize	DMCore/Concepts/Concept.h	/^    int GetHistorySize();$/;"	p	class:CConcept	access:public	signature:()
GetHistoryVersion	DMCore/Concepts/Concept.cpp	/^CConcept& CConcept::GetHistoryVersion(int iIndex) {$/;"	f	class:CConcept	signature:(int iIndex)
GetHistoryVersion	DMCore/Concepts/Concept.h	/^    virtual CConcept& GetHistoryVersion(int iIndex);$/;"	p	class:CConcept	access:public	signature:(int iIndex)
GetHyp	DMCore/Concepts/ArrayConcept.cpp	/^CHyp* CArrayConcept::GetHyp(int iIndex) {$/;"	f	class:CArrayConcept	signature:(int iIndex)
GetHyp	DMCore/Concepts/ArrayConcept.h	/^	virtual CHyp* GetHyp(int iIndex);$/;"	p	class:CArrayConcept	access:public	signature:(int iIndex)
GetHyp	DMCore/Concepts/Concept.cpp	/^CHyp* CConcept::GetHyp(int iIndex) {$/;"	f	class:CConcept	signature:(int iIndex)
GetHyp	DMCore/Concepts/Concept.h	/^	virtual CHyp* GetHyp(int iIndex);$/;"	p	class:CConcept	access:public	signature:(int iIndex)
GetHyp	DMCore/Concepts/FrameConcept.cpp	/^CHyp* CFrameConcept::GetHyp(int iIndex) {$/;"	f	class:CFrameConcept	signature:(int iIndex)
GetHyp	DMCore/Concepts/FrameConcept.h	/^	virtual CHyp* GetHyp(int iIndex);$/;"	p	class:CFrameConcept	access:public	signature:(int iIndex)
GetHypConfidence	DMCore/Concepts/ArrayConcept.cpp	/^float CArrayConcept::GetHypConfidence(int iIndex) {$/;"	f	class:CArrayConcept	signature:(int iIndex)
GetHypConfidence	DMCore/Concepts/ArrayConcept.h	/^	virtual float GetHypConfidence(int iIndex);$/;"	p	class:CArrayConcept	access:public	signature:(int iIndex)
GetHypConfidence	DMCore/Concepts/Concept.cpp	/^float CConcept::GetHypConfidence(int iIndex) {$/;"	f	class:CConcept	signature:(int iIndex)
GetHypConfidence	DMCore/Concepts/Concept.h	/^	virtual float GetHypConfidence(int iIndex);$/;"	p	class:CConcept	access:public	signature:(int iIndex)
GetHypConfidence	DMCore/Concepts/FrameConcept.cpp	/^float CFrameConcept::GetHypConfidence(int iIndex) {$/;"	f	class:CFrameConcept	signature:(int iIndex)
GetHypConfidence	DMCore/Concepts/FrameConcept.h	/^	virtual float GetHypConfidence(int iIndex);$/;"	p	class:CFrameConcept	access:public	signature:(int iIndex)
GetHypIndex	DMCore/Concepts/ArrayConcept.cpp	/^int CArrayConcept::GetHypIndex(CHyp* pHypIndex) {$/;"	f	class:CArrayConcept	signature:(CHyp* pHypIndex)
GetHypIndex	DMCore/Concepts/ArrayConcept.h	/^    virtual int GetHypIndex(CHyp* pHyp);$/;"	p	class:CArrayConcept	access:public	signature:(CHyp* pHyp)
GetHypIndex	DMCore/Concepts/Concept.cpp	/^int CConcept::GetHypIndex(CHyp* pHyp) {$/;"	f	class:CConcept	signature:(CHyp* pHyp)
GetHypIndex	DMCore/Concepts/Concept.h	/^    virtual int GetHypIndex(CHyp* pHyp);$/;"	p	class:CConcept	access:public	signature:(CHyp* pHyp)
GetHypIndex	DMCore/Concepts/FrameConcept.cpp	/^int CFrameConcept::GetHypIndex(CHyp* pHypIndex) {$/;"	f	class:CFrameConcept	signature:(CHyp* pHypIndex)
GetHypIndex	DMCore/Concepts/FrameConcept.h	/^    virtual int GetHypIndex(CHyp* pHyp);$/;"	p	class:CFrameConcept	access:public	signature:(CHyp* pHyp)
GetHypType	DMCore/Concepts/Concept.cpp	/^TConceptType CHyp::GetHypType() {$/;"	f	class:CHyp	signature:()
GetHypType	DMCore/Concepts/Concept.h	/^	TConceptType GetHypType();$/;"	p	class:CHyp	access:public	signature:()
GetID	DMCore/Events/InteractionEvent.cpp	/^int CInteractionEvent::GetID() {$/;"	f	class:CInteractionEvent	signature:()
GetID	DMCore/Events/InteractionEvent.h	/^	int GetID();$/;"	p	class:CInteractionEvent	access:public	signature:()
GetInputConfigurationParameterValue	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^string CDialogAgent::GetInputConfigurationParameterValue( string sSlot) {$/;"	f	class:CDialogAgent	signature:( string sSlot)
GetInputConfigurationParameterValue	DMCore/Agents/DialogAgents/DialogAgent.h	/^	string GetInputConfigurationParameterValue( string sSlot);$/;"	p	class:CDialogAgent	access:public	signature:( string sSlot)
GetInputLineConfiguration	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^STRING2STRING CDialogAgent::GetInputLineConfiguration() {$/;"	f	class:CDialogAgent	signature:()
GetInputLineConfiguration	DMCore/Agents/DialogAgents/DialogAgent.h	/^	STRING2STRING GetInputLineConfiguration();$/;"	p	class:CDialogAgent	access:public	signature:()
GetIntProperty	DMCore/Events/InteractionEvent.cpp	/^int CInteractionEvent::GetIntProperty(string sSlot) {$/;"	f	class:CInteractionEvent	signature:(string sSlot)
GetIntProperty	DMCore/Events/InteractionEvent.h	/^	int GetIntProperty(string sSlot);$/;"	p	class:CInteractionEvent	access:public	signature:(string sSlot)
GetIntSessionID	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^int CDMCoreAgent::GetIntSessionID() {$/;"	f	class:CDMCoreAgent	signature:()
GetIntSessionID	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	int GetIntSessionID();$/;"	p	class:CDMCoreAgent	access:public	signature:()
GetInvalidatedFlag	DMCore/Concepts/Concept.cpp	/^bool CConcept::GetInvalidatedFlag() {$/;"	f	class:CConcept	signature:()
GetInvalidatedFlag	DMCore/Concepts/Concept.h	/^	virtual bool GetInvalidatedFlag();$/;"	p	class:CConcept	access:public	signature:()
GetInvalidatedFlag	DMCore/Concepts/FrameConcept.cpp	/^bool CFrameConcept::GetInvalidatedFlag() {$/;"	f	class:CFrameConcept	signature:()
GetInvalidatedFlag	DMCore/Concepts/FrameConcept.h	/^	virtual bool GetInvalidatedFlag();$/;"	p	class:CFrameConcept	access:public	signature:()
GetLastBindingsIndex	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^int CDialogAgent::GetLastBindingsIndex() {$/;"	f	class:CDialogAgent	signature:()
GetLastBindingsIndex	DMCore/Agents/DialogAgents/DialogAgent.h	/^    int GetLastBindingsIndex();$/;"	p	class:CDialogAgent	access:public	signature:()
GetLastEvent	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.cpp	/^CInteractionEvent *CInteractionEventManagerAgent::GetLastEvent() {$/;"	f	class:CInteractionEventManagerAgent	signature:()
GetLastEvent	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.h	/^	CInteractionEvent *GetLastEvent();$/;"	p	class:CInteractionEventManagerAgent	access:public	signature:()
GetLastEventConfidence	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.cpp	/^float CInteractionEventManagerAgent::GetLastEventConfidence() {$/;"	f	class:CInteractionEventManagerAgent	signature:()
GetLastEventConfidence	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.h	/^  float GetLastEventConfidence();$/;"	p	class:CInteractionEventManagerAgent	access:public	signature:()
GetLastExecutionIndex	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^int CDialogAgent::GetLastExecutionIndex() {$/;"	f	class:CDialogAgent	signature:()
GetLastExecutionIndex	DMCore/Agents/DialogAgents/DialogAgent.h	/^    int GetLastExecutionIndex();$/;"	p	class:CDialogAgent	access:public	signature:()
GetLastExecutionInputIndex	DMCore/Agents/DialogAgents/DialogAgent.h	/^    int GetLastExecutionInputIndex();$/;"	p	class:CDialogAgent	access:public	signature:()
GetLastInput	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.cpp	/^CInteractionEvent *CInteractionEventManagerAgent::GetLastInput() {$/;"	f	class:CInteractionEventManagerAgent	signature:()
GetLastInput	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.h	/^	CInteractionEvent *GetLastInput();$/;"	p	class:CInteractionEventManagerAgent	access:public	signature:()
GetLastInputIndex	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^int CDialogAgent::GetLastInputIndex() {$/;"	f	class:CDialogAgent	signature:()
GetLastInputIndex	DMCore/Agents/DialogAgents/DialogAgent.h	/^    int GetLastInputIndex();$/;"	p	class:CDialogAgent	access:public	signature:()
GetLastInputTurnNumber	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^int CDMCoreAgent::GetLastInputTurnNumber() {$/;"	f	class:CDMCoreAgent	signature:()
GetLastInputTurnNumber	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	int GetLastInputTurnNumber();$/;"	p	class:CDMCoreAgent	access:public	signature:()
GetLastState	DMCore/Agents/CoreAgents/StateManagerAgent.cpp	/^TDialogState &CStateManagerAgent::GetLastState() {$/;"	f	class:CStateManagerAgent	signature:()
GetLastState	DMCore/Agents/CoreAgents/StateManagerAgent.h	/^  TDialogState &GetLastState();$/;"	p	class:CStateManagerAgent	access:public	signature:()
GetMainTopic	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^CDialogAgent* CDialogAgent::GetMainTopic() {$/;"	f	class:CDialogAgent	signature:()
GetMainTopic	DMCore/Agents/DialogAgents/DialogAgent.h	/^	CDialogAgent* GetMainTopic();$/;"	p	class:CDialogAgent	access:public	signature:()
GetMaxExecuteCounter	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^int CDialogAgent::GetMaxExecuteCounter() {$/;"	f	class:CDialogAgent	signature:()
GetMaxExecuteCounter	DMCore/Agents/DialogAgents/DialogAgent.h	/^    virtual int GetMaxExecuteCounter();$/;"	p	class:CDialogAgent	access:public	signature:()
GetMaxHiBoundEvent	DMCore/Grounding/GroundingUtils.cpp	/^int CBeliefDistribution::GetMaxHiBoundEvent() {$/;"	f	class:CBeliefDistribution	signature:()
GetMaxHiBoundEvent	DMCore/Grounding/GroundingUtils.h	/^	int GetMaxHiBoundEvent();$/;"	p	class:CBeliefDistribution	access:public	signature:()
GetModeEvent	DMCore/Grounding/GroundingUtils.cpp	/^int CBeliefDistribution::GetModeEvent() {$/;"	f	class:CBeliefDistribution	signature:()
GetModeEvent	DMCore/Grounding/GroundingUtils.h	/^    int GetModeEvent();$/;"	p	class:CBeliefDistribution	access:public	signature:()
GetModelPolicy	DMCore/Grounding/GroundingModels/GroundingModel.cpp	/^string CGroundingModel::GetModelPolicy() {$/;"	f	class:CGroundingModel	signature:()
GetModelPolicy	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    virtual string GetModelPolicy();$/;"	p	class:CGroundingModel	access:public	signature:()
GetName	DMCore/Agents/Agent.cpp	/^string CAgent::GetName() {$/;"	f	class:CAgent	signature:()
GetName	DMCore/Agents/Agent.h	/^	string GetName();$/;"	p	class:CAgent	access:public	signature:()
GetName	DMCore/Concepts/Concept.cpp	/^string CConcept::GetName() {$/;"	f	class:CConcept	signature:()
GetName	DMCore/Concepts/Concept.h	/^	string GetName();$/;"	p	class:CConcept	access:public	signature:()
GetName	DMCore/Grounding/GroundingActions/GAAccept.cpp	/^string CGAAccept::GetName() {$/;"	f	class:CGAAccept	signature:()
GetName	DMCore/Grounding/GroundingActions/GAAccept.h	/^    virtual string GetName();$/;"	p	class:CGAAccept	access:public	signature:()
GetName	DMCore/Grounding/GroundingActions/GAAskRepeat.cpp	/^string CGAAskRepeat::GetName() {$/;"	f	class:CGAAskRepeat	signature:()
GetName	DMCore/Grounding/GroundingActions/GAAskRepeat.h	/^    virtual string GetName();$/;"	p	class:CGAAskRepeat	access:public	signature:()
GetName	DMCore/Grounding/GroundingActions/GAAskRephrase.cpp	/^string CGAAskRephrase::GetName() {$/;"	f	class:CGAAskRephrase	signature:()
GetName	DMCore/Grounding/GroundingActions/GAAskRephrase.h	/^    virtual string GetName();$/;"	p	class:CGAAskRephrase	access:public	signature:()
GetName	DMCore/Grounding/GroundingActions/GAAskShortAnswerAndReprompt.cpp	/^string CGAAskShortAnswerAndReprompt::GetName() {$/;"	f	class:CGAAskShortAnswerAndReprompt	signature:()
GetName	DMCore/Grounding/GroundingActions/GAAskShortAnswerAndReprompt.h	/^    virtual string GetName();$/;"	p	class:CGAAskShortAnswerAndReprompt	access:public	signature:()
GetName	DMCore/Grounding/GroundingActions/GAAskShortAnswerAndWhatCanISay.cpp	/^string CGAAskShortAnswerAndWhatCanISay::GetName() {$/;"	f	class:CGAAskShortAnswerAndWhatCanISay	signature:()
GetName	DMCore/Grounding/GroundingActions/GAAskShortAnswerAndWhatCanISay.h	/^    virtual string GetName();$/;"	p	class:CGAAskShortAnswerAndWhatCanISay	access:public	signature:()
GetName	DMCore/Grounding/GroundingActions/GAAskStartOver.cpp	/^string CGAAskStartOver::GetName() {$/;"	f	class:CGAAskStartOver	signature:()
GetName	DMCore/Grounding/GroundingActions/GAAskStartOver.h	/^    virtual string GetName();$/;"	p	class:CGAAskStartOver	access:public	signature:()
GetName	DMCore/Grounding/GroundingActions/GAExplainMore.cpp	/^string CGAExplainMore::GetName() {$/;"	f	class:CGAExplainMore	signature:()
GetName	DMCore/Grounding/GroundingActions/GAExplainMore.h	/^    virtual string GetName();$/;"	p	class:CGAExplainMore	access:public	signature:()
GetName	DMCore/Grounding/GroundingActions/GAExplicitConfirm.cpp	/^string CGAExplicitConfirm::GetName() {$/;"	f	class:CGAExplicitConfirm	signature:()
GetName	DMCore/Grounding/GroundingActions/GAExplicitConfirm.h	/^    virtual string GetName();$/;"	p	class:CGAExplicitConfirm	access:public	signature:()
GetName	DMCore/Grounding/GroundingActions/GAFailRequest.cpp	/^string CGAFailRequest::GetName() {$/;"	f	class:CGAFailRequest	signature:()
GetName	DMCore/Grounding/GroundingActions/GAFailRequest.h	/^    virtual string GetName();$/;"	p	class:CGAFailRequest	access:public	signature:()
GetName	DMCore/Grounding/GroundingActions/GAFullHelp.cpp	/^string CGAFullHelp::GetName() {$/;"	f	class:CGAFullHelp	signature:()
GetName	DMCore/Grounding/GroundingActions/GAFullHelp.h	/^    virtual string GetName();$/;"	p	class:CGAFullHelp	access:public	signature:()
GetName	DMCore/Grounding/GroundingActions/GAGiveUp.cpp	/^string CGAGiveUp::GetName() {$/;"	f	class:CGAGiveUp	signature:()
GetName	DMCore/Grounding/GroundingActions/GAGiveUp.h	/^    virtual string GetName();$/;"	p	class:CGAGiveUp	access:public	signature:()
GetName	DMCore/Grounding/GroundingActions/GAImplicitConfirm.cpp	/^string CGAImplicitConfirm::GetName() {$/;"	f	class:CGAImplicitConfirm	signature:()
GetName	DMCore/Grounding/GroundingActions/GAImplicitConfirm.h	/^    virtual string GetName();$/;"	p	class:CGAImplicitConfirm	access:public	signature:()
GetName	DMCore/Grounding/GroundingActions/GAInteractionTips.cpp	/^string CGAInteractionTips::GetName() {$/;"	f	class:CGAInteractionTips	signature:()
GetName	DMCore/Grounding/GroundingActions/GAInteractionTips.h	/^    virtual string GetName();$/;"	p	class:CGAInteractionTips	access:public	signature:()
GetName	DMCore/Grounding/GroundingActions/GAMoveOn.cpp	/^string CGAMoveOn::GetName() {$/;"	f	class:CGAMoveOn	signature:()
GetName	DMCore/Grounding/GroundingActions/GAMoveOn.h	/^    virtual string GetName();$/;"	p	class:CGAMoveOn	access:public	signature:()
GetName	DMCore/Grounding/GroundingActions/GANoAction.cpp	/^string CGANoAction::GetName() {$/;"	f	class:CGANoAction	signature:()
GetName	DMCore/Grounding/GroundingActions/GANoAction.h	/^    virtual string GetName();$/;"	p	class:CGANoAction	access:public	signature:()
GetName	DMCore/Grounding/GroundingActions/GANotifyNonunderstanding.cpp	/^string CGANotifyNonunderstanding::GetName() {$/;"	f	class:CGANotifyNonunderstanding	signature:()
GetName	DMCore/Grounding/GroundingActions/GANotifyNonunderstanding.h	/^    virtual string GetName();$/;"	p	class:CGANotifyNonunderstanding	access:public	signature:()
GetName	DMCore/Grounding/GroundingActions/GARepeatPrompt.cpp	/^string CGARepeatPrompt::GetName() {$/;"	f	class:CGARepeatPrompt	signature:()
GetName	DMCore/Grounding/GroundingActions/GARepeatPrompt.h	/^    virtual string GetName();$/;"	p	class:CGARepeatPrompt	access:public	signature:()
GetName	DMCore/Grounding/GroundingActions/GASpeakLessLoudAndReprompt.cpp	/^string CGASpeakLessLoudAndReprompt::GetName() {$/;"	f	class:CGASpeakLessLoudAndReprompt	signature:()
GetName	DMCore/Grounding/GroundingActions/GASpeakLessLoudAndReprompt.h	/^    virtual string GetName();$/;"	p	class:CGASpeakLessLoudAndReprompt	access:public	signature:()
GetName	DMCore/Grounding/GroundingActions/GAWhatCanISay.cpp	/^string CGAWhatCanISay::GetName() {$/;"	f	class:CGAWhatCanISay	signature:()
GetName	DMCore/Grounding/GroundingActions/GAWhatCanISay.h	/^    virtual string GetName();$/;"	p	class:CGAWhatCanISay	access:public	signature:()
GetName	DMCore/Grounding/GroundingActions/GAYieldTurn.cpp	/^string CGAYieldTurn::GetName() {$/;"	f	class:CGAYieldTurn	signature:()
GetName	DMCore/Grounding/GroundingActions/GAYieldTurn.h	/^    virtual string GetName();$/;"	p	class:CGAYieldTurn	access:public	signature:()
GetName	DMCore/Grounding/GroundingActions/GroundingAction.h	/^    virtual string GetName() = 0;$/;"	p	class:CGroundingAction	access:public	signature:()
GetName	DMCore/Grounding/GroundingModels/GMConcept.cpp	/^string CGMConcept::GetName() {$/;"	f	class:CGMConcept	signature:()
GetName	DMCore/Grounding/GroundingModels/GMConcept.h	/^    virtual string GetName();$/;"	p	class:CGMConcept	access:public	signature:()
GetName	DMCore/Grounding/GroundingModels/GMRequestAgent.cpp	/^string CGMRequestAgent::GetName() {$/;"	f	class:CGMRequestAgent	signature:()
GetName	DMCore/Grounding/GroundingModels/GMRequestAgent.h	/^    virtual string GetName();$/;"	p	class:CGMRequestAgent	access:public	signature:()
GetName	DMCore/Grounding/GroundingModels/GroundingModel.cpp	/^string CGroundingModel::GetName() {$/;"	f	class:CGroundingModel	signature:()
GetName	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    virtual string GetName();$/;"	p	class:CGroundingModel	access:public	signature:()
GetNextEvent	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.cpp	/^CInteractionEvent *CInteractionEventManagerAgent::GetNextEvent() {$/;"	f	class:CInteractionEventManagerAgent	signature:()
GetNextEvent	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.h	/^	CInteractionEvent *GetNextEvent();$/;"	p	class:CInteractionEventManagerAgent	access:public	signature:()
GetNonunderstandingThreshold	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^float CDMCoreAgent::GetNonunderstandingThreshold() {$/;"	f	class:CDMCoreAgent	signature:()
GetNonunderstandingThreshold	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^    float GetNonunderstandingThreshold();$/;"	p	class:CDMCoreAgent	access:public	signature:()
GetNonunderstandingThreshold	DMCore/Agents/DialogAgents/BasicAgents/MARequest.cpp	/^float CMARequest::GetNonunderstandingThreshold() {$/;"	f	class:CMARequest	signature:()
GetNonunderstandingThreshold	DMCore/Agents/DialogAgents/BasicAgents/MARequest.h	/^    virtual float GetNonunderstandingThreshold();$/;"	p	class:CMARequest	access:public	signature:()
GetNumHyps	DMCore/Concepts/ArrayConcept.cpp	/^int CArrayConcept::GetNumHyps() {$/;"	f	class:CArrayConcept	signature:()
GetNumHyps	DMCore/Concepts/ArrayConcept.h	/^	virtual int GetNumHyps();$/;"	p	class:CArrayConcept	access:public	signature:()
GetNumHyps	DMCore/Concepts/Concept.cpp	/^int CConcept::GetNumHyps() {$/;"	f	class:CConcept	signature:()
GetNumHyps	DMCore/Concepts/Concept.h	/^	virtual int GetNumHyps();$/;"	p	class:CConcept	access:public	signature:()
GetNumHyps	DMCore/Concepts/FrameConcept.cpp	/^int CFrameConcept::GetNumHyps() {$/;"	f	class:CFrameConcept	signature:()
GetNumHyps	DMCore/Concepts/FrameConcept.h	/^	virtual int GetNumHyps();$/;"	p	class:CFrameConcept	access:public	signature:()
GetNumPartialHyps	DMCore/Concepts/Concept.cpp	/^int CConcept::GetNumPartialHyps() {$/;"	f	class:CConcept	signature:()
GetNumPartialHyps	DMCore/Concepts/Concept.h	/^	virtual int GetNumPartialHyps();$/;"	p	class:CConcept	access:public	signature:()
GetNumValidHyps	DMCore/Concepts/ArrayConcept.cpp	/^int CArrayConcept::GetNumValidHyps() {$/;"	f	class:CArrayConcept	signature:()
GetNumValidHyps	DMCore/Concepts/ArrayConcept.h	/^	virtual int GetNumValidHyps();$/;"	p	class:CArrayConcept	access:public	signature:()
GetNumValidHyps	DMCore/Concepts/Concept.cpp	/^int CConcept::GetNumValidHyps() {$/;"	f	class:CConcept	signature:()
GetNumValidHyps	DMCore/Concepts/Concept.h	/^	virtual int GetNumValidHyps();$/;"	p	class:CConcept	access:public	signature:()
GetNumValidHyps	DMCore/Concepts/FrameConcept.cpp	/^int CFrameConcept::GetNumValidHyps() {$/;"	f	class:CFrameConcept	signature:()
GetNumValidHyps	DMCore/Concepts/FrameConcept.h	/^	virtual int GetNumValidHyps();$/;"	p	class:CFrameConcept	access:public	signature:()
GetNumValidPartialHyps	DMCore/Concepts/Concept.cpp	/^int CConcept::GetNumValidPartialHyps() {$/;"	f	class:CConcept	signature:()
GetNumValidPartialHyps	DMCore/Concepts/Concept.h	/^	virtual int GetNumValidPartialHyps();$/;"	p	class:CConcept	access:public	signature:()
GetNumberNonUnderstandings	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^int CDMCoreAgent::GetNumberNonUnderstandings() {$/;"	f	class:CDMCoreAgent	signature:()
GetNumberNonUnderstandings	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^    int GetNumberNonUnderstandings();$/;"	p	class:CDMCoreAgent	access:public	signature:()
GetOutputAt	DMCore/Agents/CoreAgents/OutputManagerAgent.cpp	/^COutput* COutputHistory::GetOutputAt(unsigned int iIndex) {$/;"	f	class:COutputHistory	signature:(unsigned int iIndex)
GetOutputAt	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^	COutput* GetOutputAt(unsigned int iIndex);$/;"	p	class:COutputHistory	access:public	signature:(unsigned int iIndex)
GetOutputDevice	DMCore/Agents/CoreAgents/OutputManagerAgent.cpp	/^TOutputDevice *COutputManagerAgent::GetOutputDevice(string sName) {$/;"	f	class:COutputManagerAgent	signature:(string sName)
GetOutputDevice	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^	TOutputDevice *GetOutputDevice(string sName);$/;"	p	class:COutputManagerAgent	access:public	signature:(string sName)
GetOwnerConcept	DMCore/Concepts/Concept.cpp	/^CConcept* CConcept::GetOwnerConcept() {$/;"	f	class:CConcept	signature:()
GetOwnerConcept	DMCore/Concepts/Concept.h	/^    CConcept* GetOwnerConcept();$/;"	p	class:CConcept	access:public	signature:()
GetOwnerDialogAgent	DMCore/Concepts/Concept.cpp	/^CDialogAgent* CConcept::GetOwnerDialogAgent() {$/;"	f	class:CConcept	signature:()
GetOwnerDialogAgent	DMCore/Concepts/Concept.h	/^    CDialogAgent* GetOwnerDialogAgent();$/;"	p	class:CConcept	access:public	signature:()
GetParameterValue	DMCore/Agents/Agent.cpp	/^string CAgent::GetParameterValue(string sSlot) {$/;"	f	class:CAgent	signature:(string sSlot)
GetParameterValue	DMCore/Agents/Agent.h	/^	string GetParameterValue(string sParam);$/;"	p	class:CAgent	access:public	signature:(string sParam)
GetParent	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^CDialogAgent* CDialogAgent::GetParent() {$/;"	f	class:CDialogAgent	signature:()
GetParent	DMCore/Agents/DialogAgents/DialogAgent.h	/^	CDialogAgent* GetParent();$/;"	p	class:CDialogAgent	access:public	signature:()
GetParentName	DMCore/Agents/CoreAgents/DTTManagerAgent.cpp	/^string CDTTManagerAgent::GetParentName(string sAgentPath) {$/;"	f	class:CDTTManagerAgent	signature:(string sAgentPath)
GetParentName	DMCore/Agents/CoreAgents/DTTManagerAgent.h	/^	string GetParentName(string sAgentPath);$/;"	p	class:CDTTManagerAgent	access:public	signature:(string sAgentPath)
GetPartialHyp	DMCore/Concepts/Concept.cpp	/^CHyp* CConcept::GetPartialHyp(int iIndex) {$/;"	f	class:CConcept	signature:(int iIndex)
GetPartialHyp	DMCore/Concepts/Concept.h	/^	virtual CHyp* GetPartialHyp(int iIndex);$/;"	p	class:CConcept	access:public	signature:(int iIndex)
GetPolicy	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^string CGroundingManagerAgent::GetPolicy(string sModelName) {$/;"	f	class:CGroundingManagerAgent	signature:(string sModelName)
GetPolicy	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    virtual string GetPolicy(string sModelName);$/;"	p	class:CGroundingManagerAgent	access:public	signature:(string sModelName)
GetPriorForConceptHyp	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^float CGroundingManagerAgent::GetPriorForConceptHyp($/;"	f	class:CGroundingManagerAgent	signature:( string sConcept, string sHyp)
GetPriorForConceptHyp	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^	virtual float GetPriorForConceptHyp(string sConcept, string sHyp);$/;"	p	class:CGroundingManagerAgent	access:public	signature:(string sConcept, string sHyp)
GetPriorForHyp	DMCore/Concepts/Concept.cpp	/^float CConcept::GetPriorForHyp(CHyp* pHyp) {$/;"	f	class:CConcept	signature:(CHyp* pHyp)
GetPriorForHyp	DMCore/Concepts/Concept.h	/^	virtual float GetPriorForHyp(CHyp* pHyp);$/;"	p	class:CConcept	access:public	signature:(CHyp* pHyp)
GetPromptsWaitingForNotification	DMCore/Agents/CoreAgents/OutputManagerAgent.cpp	/^string COutputManagerAgent::GetPromptsWaitingForNotification() {$/;"	f	class:COutputManagerAgent	signature:()
GetPromptsWaitingForNotification	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^	string GetPromptsWaitingForNotification();$/;"	p	class:COutputManagerAgent	access:public	signature:()
GetProperties	DMCore/Events/InteractionEvent.cpp	/^STRING2STRING &CInteractionEvent::GetProperties() {$/;"	f	class:CInteractionEvent	signature:()
GetProperties	DMCore/Events/InteractionEvent.h	/^	STRING2STRING &GetProperties();$/;"	p	class:CInteractionEvent	access:public	signature:()
GetRandomIntID	Utils/Utils.cpp	/^int GetRandomIntID() {$/;"	f	signature:()
GetRandomIntID	Utils/Utils.h	/^int GetRandomIntID();$/;"	p	signature:()
GetRandomlyDrawnEvent	DMCore/Grounding/GroundingUtils.cpp	/^int CBeliefDistribution::GetRandomlyDrawnEvent() {$/;"	f	class:CBeliefDistribution	signature:()
GetRandomlyDrawnEvent	DMCore/Grounding/GroundingUtils.h	/^    int GetRandomlyDrawnEvent();$/;"	p	class:CBeliefDistribution	access:public	signature:()
GetRepeatCounter	DMCore/Outputs/Output.cpp	/^int COutput::GetRepeatCounter() {$/;"	f	class:COutput	signature:()
GetRepeatCounter	DMCore/Outputs/Output.h	/^	int GetRepeatCounter();$/;"	p	class:COutput	access:public	signature:()
GetRequestAgent	DMCore/Grounding/GroundingModels/GMRequestAgent.cpp	/^CDialogAgent* CGMRequestAgent::GetRequestAgent() {$/;"	f	class:CGMRequestAgent	signature:()
GetRequestAgent	DMCore/Grounding/GroundingModels/GMRequestAgent.h	/^    CDialogAgent* GetRequestAgent();$/;"	p	class:CGMRequestAgent	access:public	signature:()
GetRestoredForGroundingFlag	DMCore/Concepts/Concept.cpp	/^bool CConcept::GetRestoredForGroundingFlag() {$/;"	f	class:CConcept	signature:()
GetRestoredForGroundingFlag	DMCore/Concepts/Concept.h	/^	virtual bool GetRestoredForGroundingFlag();$/;"	p	class:CConcept	access:public	signature:()
GetRestoredForGroundingFlag	DMCore/Concepts/FrameConcept.cpp	/^bool CFrameConcept::GetRestoredForGroundingFlag() {$/;"	f	class:CFrameConcept	signature:()
GetRestoredForGroundingFlag	DMCore/Concepts/FrameConcept.h	/^	virtual bool GetRestoredForGroundingFlag();$/;"	p	class:CFrameConcept	access:public	signature:()
GetScheduledGroundingActionOnConcept	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^string CGroundingManagerAgent::GetScheduledGroundingActionOnConcept(CConcept* pConcept) {$/;"	f	class:CGroundingManagerAgent	signature:(CConcept* pConcept)
GetScheduledGroundingActionOnConcept	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    string GetScheduledGroundingActionOnConcept(CConcept* pConcept);$/;"	p	class:CGroundingManagerAgent	access:public	signature:(CConcept* pConcept)
GetSessionStartTimestamp	Utils/Utils.h	/^long long GetSessionStartTimestamp();$/;"	p	signature:()
GetSessionTimestamp	Utils/Utils.h	/^long GetSessionTimestamp();$/;"	p	signature:()
GetSessionTimestamp	Utils/Utils.h	/^long GetSessionTimestamp(long long liTimestamp);$/;"	p	signature:(long long liTimestamp)
GetSize	DMCore/Agents/CoreAgents/OutputManagerAgent.cpp	/^unsigned int COutputHistory::GetSize() {$/;"	f	class:COutputHistory	signature:()
GetSize	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^	unsigned int GetSize();$/;"	p	class:COutputHistory	access:public	signature:()
GetSize	DMCore/Concepts/ArrayConcept.cpp	/^int CArrayConcept::GetSize() {$/;"	f	class:CArrayConcept	signature:()
GetSize	DMCore/Concepts/ArrayConcept.h	/^    virtual int GetSize();$/;"	p	class:CArrayConcept	access:public	signature:()
GetSize	DMCore/Concepts/Concept.cpp	/^int CConcept::GetSize() {$/;"	f	class:CConcept	signature:()
GetSize	DMCore/Concepts/Concept.h	/^    virtual int GetSize();$/;"	p	class:CConcept	access:public	signature:()
GetSmallName	DMCore/Concepts/Concept.cpp	/^string CConcept::GetSmallName() {$/;"	f	class:CConcept	signature:()
GetSmallName	DMCore/Concepts/Concept.h	/^	string GetSmallName();$/;"	p	class:CConcept	access:public	signature:()
GetSoftMaxEvent	DMCore/Grounding/GroundingUtils.cpp	/^int CBeliefDistribution::GetSoftMaxEvent(float fTemperature) {$/;"	f	class:CBeliefDistribution	signature:(float fTemperature)
GetSoftMaxEvent	DMCore/Grounding/GroundingUtils.h	/^    int GetSoftMaxEvent(float fTemperature);$/;"	p	class:CBeliefDistribution	access:public	signature:(float fTemperature)
GetStateAsString	DMCore/Agents/CoreAgents/StateManagerAgent.cpp	/^string CStateManagerAgent::GetStateAsString() {$/;"	f	class:CStateManagerAgent	signature:()
GetStateAsString	DMCore/Agents/CoreAgents/StateManagerAgent.cpp	/^string CStateManagerAgent::GetStateAsString(TDialogState dsState) {$/;"	f	class:CStateManagerAgent	signature:(TDialogState dsState)
GetStateAsString	DMCore/Agents/CoreAgents/StateManagerAgent.h	/^	string GetStateAsString();$/;"	p	class:CStateManagerAgent	access:public	signature:()
GetStateAsString	DMCore/Agents/CoreAgents/StateManagerAgent.h	/^	string GetStateAsString(TDialogState dsState);$/;"	p	class:CStateManagerAgent	access:public	signature:(TDialogState dsState)
GetStateHistoryLength	DMCore/Agents/CoreAgents/StateManagerAgent.cpp	/^int CStateManagerAgent::GetStateHistoryLength() {$/;"	f	class:CStateManagerAgent	signature:()
GetStateHistoryLength	DMCore/Agents/CoreAgents/StateManagerAgent.h	/^	int GetStateHistoryLength();$/;"	p	class:CStateManagerAgent	access:public	signature:()
GetStringProperty	DMCore/Events/InteractionEvent.cpp	/^string CInteractionEvent::GetStringProperty(string sSlot) {$/;"	f	class:CInteractionEvent	signature:(string sSlot)
GetStringProperty	DMCore/Events/InteractionEvent.h	/^	string GetStringProperty(string sSlot);$/;"	p	class:CInteractionEvent	access:public	signature:(string sSlot)
GetSystemActionOnConcept	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^TSystemActionOnConcept CDMCoreAgent::GetSystemActionOnConcept(CConcept* pConcept) {$/;"	f	class:CDMCoreAgent	signature:(CConcept* pConcept)
GetSystemActionOnConcept	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	TSystemActionOnConcept GetSystemActionOnConcept(CConcept* pConcept);$/;"	p	class:CDMCoreAgent	access:public	signature:(CConcept* pConcept)
GetTime	Utils/Utils.h	/^timeb GetTime();$/;"	p	signature:()
GetTimeAsString	Utils/Utils.h	/^string GetTimeAsString();$/;"	p	signature:()
GetTimeoutPeriod	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^int CDMCoreAgent::GetTimeoutPeriod() {$/;"	f	class:CDMCoreAgent	signature:()
GetTimeoutPeriod	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	int GetTimeoutPeriod();$/;"	p	class:CDMCoreAgent	access:public	signature:()
GetTimeoutPeriod	DMCore/Agents/DialogAgents/BasicAgents/MARequest.cpp	/^int CMARequest::GetTimeoutPeriod() {$/;"	f	class:CMARequest	signature:()
GetTimeoutPeriod	DMCore/Agents/DialogAgents/BasicAgents/MARequest.h	/^	virtual int GetTimeoutPeriod();$/;"	p	class:CMARequest	access:public	signature:()
GetTopHyp	DMCore/Concepts/ArrayConcept.cpp	/^CHyp* CArrayConcept::GetTopHyp() {$/;"	f	class:CArrayConcept	signature:()
GetTopHyp	DMCore/Concepts/ArrayConcept.h	/^    virtual CHyp* GetTopHyp();$/;"	p	class:CArrayConcept	access:public	signature:()
GetTopHyp	DMCore/Concepts/Concept.cpp	/^CHyp* CConcept::GetTopHyp() {$/;"	f	class:CConcept	signature:()
GetTopHyp	DMCore/Concepts/Concept.h	/^    virtual CHyp* GetTopHyp();$/;"	p	class:CConcept	access:public	signature:()
GetTopHyp	DMCore/Concepts/FrameConcept.cpp	/^CHyp* CFrameConcept::GetTopHyp() {$/;"	f	class:CFrameConcept	signature:()
GetTopHyp	DMCore/Concepts/FrameConcept.h	/^    virtual CHyp* GetTopHyp();$/;"	p	class:CFrameConcept	access:public	signature:()
GetTopHypConfidence	DMCore/Concepts/ArrayConcept.cpp	/^float CArrayConcept::GetTopHypConfidence() {$/;"	f	class:CArrayConcept	signature:()
GetTopHypConfidence	DMCore/Concepts/ArrayConcept.h	/^    virtual float GetTopHypConfidence();$/;"	p	class:CArrayConcept	access:public	signature:()
GetTopHypConfidence	DMCore/Concepts/Concept.cpp	/^float CConcept::GetTopHypConfidence() {$/;"	f	class:CConcept	signature:()
GetTopHypConfidence	DMCore/Concepts/Concept.h	/^    virtual float GetTopHypConfidence();$/;"	p	class:CConcept	access:public	signature:()
GetTopHypConfidence	DMCore/Concepts/FrameConcept.cpp	/^float CFrameConcept::GetTopHypConfidence() {$/;"	f	class:CFrameConcept	signature:()
GetTopHypConfidence	DMCore/Concepts/FrameConcept.h	/^    virtual float GetTopHypConfidence();$/;"	p	class:CFrameConcept	access:public	signature:()
GetTopHypIndex	DMCore/Concepts/ArrayConcept.cpp	/^int CArrayConcept::GetTopHypIndex() {$/;"	f	class:CArrayConcept	signature:()
GetTopHypIndex	DMCore/Concepts/ArrayConcept.h	/^    virtual int GetTopHypIndex();$/;"	p	class:CArrayConcept	access:public	signature:()
GetTopHypIndex	DMCore/Concepts/Concept.cpp	/^int CConcept::GetTopHypIndex() {$/;"	f	class:CConcept	signature:()
GetTopHypIndex	DMCore/Concepts/Concept.h	/^    virtual int GetTopHypIndex();$/;"	p	class:CConcept	access:public	signature:()
GetTopHypIndex	DMCore/Concepts/FrameConcept.cpp	/^int CFrameConcept::GetTopHypIndex() {$/;"	f	class:CFrameConcept	signature:()
GetTopHypIndex	DMCore/Concepts/FrameConcept.h	/^    virtual int GetTopHypIndex();$/;"	p	class:CFrameConcept	access:public	signature:()
GetTopPartialHyp	DMCore/Concepts/Concept.cpp	/^CHyp* CConcept::GetTopPartialHyp() {$/;"	f	class:CConcept	signature:()
GetTopPartialHyp	DMCore/Concepts/Concept.h	/^	virtual CHyp* GetTopPartialHyp();$/;"	p	class:CConcept	access:public	signature:()
GetTopPartialHypConfidence	DMCore/Concepts/Concept.cpp	/^float CConcept::GetTopPartialHypConfidence() {$/;"	f	class:CConcept	signature:()
GetTopPartialHypConfidence	DMCore/Concepts/Concept.h	/^	virtual float GetTopPartialHypConfidence();$/;"	p	class:CConcept	access:public	signature:()
GetTopPartialHypIndex	DMCore/Concepts/Concept.cpp	/^int CConcept::GetTopPartialHypIndex() {$/;"	f	class:CConcept	signature:()
GetTopPartialHypIndex	DMCore/Concepts/Concept.h	/^	virtual int GetTopPartialHypIndex();$/;"	p	class:CConcept	access:public	signature:()
GetTotalNumberNonUnderstandings	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^int CDMCoreAgent::GetTotalNumberNonUnderstandings() {$/;"	f	class:CDMCoreAgent	signature:()
GetTotalNumberNonUnderstandings	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	int GetTotalNumberNonUnderstandings();$/;"	p	class:CDMCoreAgent	access:public	signature:()
GetTurnLastUpdated	DMCore/Concepts/ArrayConcept.cpp	/^int CArrayConcept::GetTurnLastUpdated() {$/;"	f	class:CArrayConcept	signature:()
GetTurnLastUpdated	DMCore/Concepts/ArrayConcept.h	/^    virtual int GetTurnLastUpdated();$/;"	p	class:CArrayConcept	access:public	signature:()
GetTurnLastUpdated	DMCore/Concepts/Concept.cpp	/^int CConcept::GetTurnLastUpdated() {$/;"	f	class:CConcept	signature:()
GetTurnLastUpdated	DMCore/Concepts/Concept.h	/^    virtual int GetTurnLastUpdated();$/;"	p	class:CConcept	access:public	signature:()
GetTurnLastUpdated	DMCore/Concepts/FrameConcept.cpp	/^int CFrameConcept::GetTurnLastUpdated() {$/;"	f	class:CFrameConcept	signature:()
GetTurnLastUpdated	DMCore/Concepts/FrameConcept.h	/^    virtual int GetTurnLastUpdated();$/;"	p	class:CFrameConcept	access:public	signature:()
GetTurnsInFocusCounter	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^int CDialogAgent::GetTurnsInFocusCounter() {$/;"	f	class:CDialogAgent	signature:()
GetTurnsInFocusCounter	DMCore/Agents/DialogAgents/DialogAgent.h	/^    int GetTurnsInFocusCounter();$/;"	p	class:CDialogAgent	access:public	signature:()
GetTurnsSinceLastUpdated	DMCore/Concepts/Concept.cpp	/^int CConcept::GetTurnsSinceLastUpdated() {$/;"	f	class:CConcept	signature:()
GetTurnsSinceLastUpdated	DMCore/Concepts/Concept.h	/^    int GetTurnsSinceLastUpdated();$/;"	p	class:CConcept	access:public	signature:()
GetType	DMCore/Agents/Agent.cpp	/^string CAgent::GetType() {$/;"	f	class:CAgent	signature:()
GetType	DMCore/Agents/Agent.h	/^	string GetType();$/;"	p	class:CAgent	access:public	signature:()
GetType	DMCore/Events/InteractionEvent.cpp	/^string CInteractionEvent::GetType() {$/;"	f	class:CInteractionEvent	signature:()
GetType	DMCore/Events/InteractionEvent.h	/^	string GetType();$/;"	p	class:CInteractionEvent	access:public	signature:()
GetType	DMCore/Grounding/GroundingModels/GMConcept.cpp	/^string CGMConcept::GetType() {$/;"	f	class:CGMConcept	signature:()
GetType	DMCore/Grounding/GroundingModels/GMConcept.h	/^    virtual string GetType();$/;"	p	class:CGMConcept	access:public	signature:()
GetType	DMCore/Grounding/GroundingModels/GMRequestAgent.cpp	/^string CGMRequestAgent::GetType() {$/;"	f	class:CGMRequestAgent	signature:()
GetType	DMCore/Grounding/GroundingModels/GMRequestAgent.h	/^    virtual string GetType();$/;"	p	class:CGMRequestAgent	access:public	signature:()
GetType	DMCore/Grounding/GroundingModels/GMRequestAgent_Experiment.cpp	/^string CGMRequestAgent_Experiment::GetType() {$/;"	f	class:CGMRequestAgent_Experiment	signature:()
GetType	DMCore/Grounding/GroundingModels/GMRequestAgent_Experiment.h	/^    virtual string GetType();$/;"	p	class:CGMRequestAgent_Experiment	access:public	signature:()
GetType	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.cpp	/^string CGMRequestAgent_HandCrafted::GetType() {$/;"	f	class:CGMRequestAgent_HandCrafted	signature:()
GetType	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.h	/^    virtual string GetType();$/;"	p	class:CGMRequestAgent_HandCrafted	access:public	signature:()
GetType	DMCore/Grounding/GroundingModels/GMRequestAgent_LR.cpp	/^string CGMRequestAgent_LR::GetType() {$/;"	f	class:CGMRequestAgent_LR	signature:()
GetType	DMCore/Grounding/GroundingModels/GMRequestAgent_LR.h	/^    virtual string GetType();$/;"	p	class:CGMRequestAgent_LR	access:public	signature:()
GetType	DMCore/Grounding/GroundingModels/GMRequestAgent_NumNonu.cpp	/^string CGMRequestAgent_NumNonu::GetType() {$/;"	f	class:CGMRequestAgent_NumNonu	signature:()
GetType	DMCore/Grounding/GroundingModels/GMRequestAgent_NumNonu.h	/^    virtual string GetType();$/;"	p	class:CGMRequestAgent_NumNonu	access:public	signature:()
GetType	DMCore/Grounding/GroundingModels/GroundingModel.cpp	/^string CGroundingModel::GetType() {$/;"	f	class:CGroundingModel	signature:()
GetType	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    virtual string GetType();$/;"	p	class:CGroundingModel	access:public	signature:()
GetUniqueIntID	Utils/Utils.cpp	/^int GetUniqueIntID() {$/;"	f	signature:()
GetUniqueIntID	Utils/Utils.h	/^int GetUniqueIntID();$/;"	p	signature:()
GetUniqueStringID	Utils/Utils.cpp	/^string GetUniqueStringID() {$/;"	f	signature:()
GetUniqueStringID	Utils/Utils.h	/^string GetUniqueStringID();$/;"	p	signature:()
GetUtteranceAt	DMCore/Agents/CoreAgents/OutputManagerAgent.cpp	/^string COutputHistory::GetUtteranceAt(unsigned int iIndex) {$/;"	f	class:COutputHistory	signature:(unsigned int iIndex)
GetUtteranceAt	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^	string GetUtteranceAt(unsigned int iIndex);$/;"	p	class:COutputHistory	access:public	signature:(unsigned int iIndex)
GetValidEventsNumber	DMCore/Grounding/GroundingUtils.cpp	/^int CBeliefDistribution::GetValidEventsNumber() {$/;"	f	class:CBeliefDistribution	signature:()
GetValidEventsNumber	DMCore/Grounding/GroundingUtils.h	/^    int GetValidEventsNumber();$/;"	p	class:CBeliefDistribution	access:public	signature:()
GetValueForExpectation	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.cpp	/^string CInteractionEventManagerAgent::GetValueForExpectation(string sGrammarExpectation) {$/;"	f	class:CInteractionEventManagerAgent	signature:(string sGrammarExpectation)
GetValueForExpectation	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.h	/^	string GetValueForExpectation(string sGrammarExpectation);$/;"	p	class:CInteractionEventManagerAgent	access:public	signature:(string sGrammarExpectation)
GetValueForExpectation	DMCore/Events/InteractionEvent.cpp	/^string CInteractionEvent::GetValueForExpectation(string sGrammarExpectation) {$/;"	f	class:CInteractionEvent	signature:(string sGrammarExpectation)
GetValueForExpectation	DMCore/Events/InteractionEvent.h	/^	string GetValueForExpectation(string sGrammarExpectation);$/;"	p	class:CInteractionEvent	access:public	signature:(string sGrammarExpectation)
GrammarMapping	DMCore/Agents/DialogAgents/BasicAgents/MAExpect.cpp	/^string CMAExpect::GrammarMapping() {$/;"	f	class:CMAExpect	signature:()
GrammarMapping	DMCore/Agents/DialogAgents/BasicAgents/MAExpect.h	/^	virtual string GrammarMapping();$/;"	p	class:CMAExpect	access:public	signature:()
GrammarMapping	DMCore/Agents/DialogAgents/BasicAgents/MARequest.cpp	/^string CMARequest::GrammarMapping() {$/;"	f	class:CMARequest	signature:()
GrammarMapping	DMCore/Agents/DialogAgents/BasicAgents/MARequest.h	/^	virtual string GrammarMapping();$/;"	p	class:CMARequest	access:public	signature:()
GreaterThan	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.h	/^		GreaterThan,$/;"	e	enum:CCondition::TComparator
GreaterThanOrEqualTo	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.h	/^		GreaterThanOrEqualTo,$/;"	e	enum:CCondition::TComparator
GroundedHypToString	DMCore/Concepts/ArrayConcept.cpp	/^string CArrayConcept::GroundedHypToString() {$/;"	f	class:CArrayConcept	signature:()
GroundedHypToString	DMCore/Concepts/ArrayConcept.h	/^	virtual string GroundedHypToString();$/;"	p	class:CArrayConcept	access:public	signature:()
GroundedHypToString	DMCore/Concepts/Concept.cpp	/^string CConcept::GroundedHypToString() {$/;"	f	class:CConcept	signature:()
GroundedHypToString	DMCore/Concepts/Concept.h	/^	virtual string GroundedHypToString();$/;"	p	class:CConcept	access:public	signature:()
GroundedHypToString	DMCore/Concepts/FrameConcept.cpp	/^string CFrameConcept::GroundedHypToString() {$/;"	f	class:CFrameConcept	signature:()
GroundedHypToString	DMCore/Concepts/FrameConcept.h	/^	virtual string GroundedHypToString();$/;"	p	class:CFrameConcept	access:public	signature:()
GroundingActionIndexToName	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^string CGroundingManagerAgent::GroundingActionIndexToName($/;"	f	class:CGroundingManagerAgent	signature:( unsigned int iGroundingActionIndex)
GroundingActionIndexToName	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    string GroundingActionIndexToName(unsigned int iGroundingActionIndex);$/;"	p	class:CGroundingManagerAgent	access:public	signature:(unsigned int iGroundingActionIndex)
GroundingActionNameToIndex	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^int CGroundingManagerAgent::GroundingActionNameToIndex($/;"	f	class:CGroundingManagerAgent	signature:( string sGroundingActionName)
GroundingActionNameToIndex	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    int GroundingActionNameToIndex(string sGroundingActionName);$/;"	p	class:CGroundingManagerAgent	access:public	signature:(string sGroundingActionName)
GroundingInProgressOnConcept	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^bool CGroundingManagerAgent::GroundingInProgressOnConcept(CConcept* pConcept) {$/;"	f	class:CGroundingManagerAgent	signature:(CConcept* pConcept)
GroundingInProgressOnConcept	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    bool GroundingInProgressOnConcept(CConcept* pConcept);$/;"	p	class:CGroundingManagerAgent	access:public	signature:(CConcept* pConcept)
GroundingModelFactory	DMCore/Grounding/GroundingModels/GMConcept.cpp	/^CGroundingModel* CGMConcept::GroundingModelFactory(string sModelPolicy) {$/;"	f	class:CGMConcept	signature:(string sModelPolicy)
GroundingModelFactory	DMCore/Grounding/GroundingModels/GMConcept.h	/^    static CGroundingModel* GroundingModelFactory(string sModelPolicy);$/;"	p	class:CGMConcept	access:public	signature:(string sModelPolicy)
GroundingModelFactory	DMCore/Grounding/GroundingModels/GMRequestAgent.cpp	/^CGroundingModel* CGMRequestAgent::GroundingModelFactory(string sModelPolicy) {$/;"	f	class:CGMRequestAgent	signature:(string sModelPolicy)
GroundingModelFactory	DMCore/Grounding/GroundingModels/GMRequestAgent.h	/^    static CGroundingModel* GroundingModelFactory(string sModelPolicy);$/;"	p	class:CGMRequestAgent	access:public	signature:(string sModelPolicy)
GroundingModelFactory	DMCore/Grounding/GroundingModels/GMRequestAgent_Experiment.cpp	/^CGroundingModel* CGMRequestAgent_Experiment::GroundingModelFactory($/;"	f	class:CGMRequestAgent_Experiment	signature:( string sModelPolicy)
GroundingModelFactory	DMCore/Grounding/GroundingModels/GMRequestAgent_Experiment.h	/^    static CGroundingModel* GroundingModelFactory(string sModelPolicy);$/;"	p	class:CGMRequestAgent_Experiment	access:public	signature:(string sModelPolicy)
GroundingModelFactory	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.cpp	/^CGroundingModel* CGMRequestAgent_HandCrafted::GroundingModelFactory(string sModelPolicy) {$/;"	f	class:CGMRequestAgent_HandCrafted	signature:(string sModelPolicy)
GroundingModelFactory	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.h	/^    static CGroundingModel* GroundingModelFactory(string sModelPolicy);$/;"	p	class:CGMRequestAgent_HandCrafted	access:public	signature:(string sModelPolicy)
GroundingModelFactory	DMCore/Grounding/GroundingModels/GMRequestAgent_LR.cpp	/^CGroundingModel* CGMRequestAgent_LR::GroundingModelFactory(string sModelPolicy) {$/;"	f	class:CGMRequestAgent_LR	signature:(string sModelPolicy)
GroundingModelFactory	DMCore/Grounding/GroundingModels/GMRequestAgent_LR.h	/^    static CGroundingModel* GroundingModelFactory(string sModelPolicy);$/;"	p	class:CGMRequestAgent_LR	access:public	signature:(string sModelPolicy)
GroundingModelFactory	DMCore/Grounding/GroundingModels/GMRequestAgent_NumNonu.cpp	/^CGroundingModel* CGMRequestAgent_NumNonu::GroundingModelFactory($/;"	f	class:CGMRequestAgent_NumNonu	signature:( string sModelPolicy)
GroundingModelFactory	DMCore/Grounding/GroundingModels/GMRequestAgent_NumNonu.h	/^    static CGroundingModel* GroundingModelFactory(string sModelPolicy);$/;"	p	class:CGMRequestAgent_NumNonu	access:public	signature:(string sModelPolicy)
GroundingModelFactory	DMCore/Grounding/GroundingModels/GroundingModel.cpp	/^CGroundingModel* CGroundingModel::GroundingModelFactory(string sModelPolicy) {$/;"	f	class:CGroundingModel	signature:(string sModelPolicy)
GroundingModelFactory	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    static CGroundingModel* GroundingModelFactory(string sModelPolicy);$/;"	p	class:CGroundingModel	access:public	signature:(string sModelPolicy)
HASH_FLAG	spdlog/fmt/bundled/format.h	/^    SIGN_FLAG = 1, PLUS_FLAG = 2, MINUS_FLAG = 4, HASH_FLAG = 8,$/;"	e	enum:fmt::__anon29
HAS_HISTORY	DialogTask/DialogTask.h	250;"	d
HEX	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	420;"	d	file:
HEX	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	415;"	d	file:
HYPS_SEPARATOR	DMCore/Concepts/Concept.h	140;"	d
H_formatter	spdlog/details/pattern_formatter_impl.h	/^class H_formatter:public flag_formatter$/;"	c	namespace:spdlog::details	inherits:flag_formatter
HasCompleted	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^bool CDialogAgent::HasCompleted() {$/;"	f	class:CDialogAgent	signature:()
HasCompleted	DMCore/Agents/DialogAgents/DialogAgent.h	/^	bool HasCompleted(); $/;"	p	class:CDialogAgent	access:public	signature:()
HasEvent	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.cpp	/^bool CInteractionEventManagerAgent::HasEvent() {$/;"	f	class:CInteractionEventManagerAgent	signature:()
HasEvent	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.h	/^	bool HasEvent();$/;"	p	class:CInteractionEventManagerAgent	access:public	signature:()
HasExecutingConceptGroundingRequests	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^bool CGroundingManagerAgent::HasExecutingConceptGroundingRequests() {$/;"	f	class:CGroundingManagerAgent	signature:()
HasExecutingConceptGroundingRequests	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    bool HasExecutingConceptGroundingRequests();$/;"	p	class:CGroundingManagerAgent	access:public	signature:()
HasFailed	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^bool CDialogAgent::HasFailed() {$/;"	f	class:CDialogAgent	signature:()
HasFailed	DMCore/Agents/DialogAgents/DialogAgent.h	/^    bool HasFailed();$/;"	p	class:CDialogAgent	access:public	signature:()
HasInputConfigurationParameter	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^bool CDialogAgent::HasInputConfigurationParameter( string sSlot) {$/;"	f	class:CDialogAgent	signature:( string sSlot)
HasInputConfigurationParameter	DMCore/Agents/DialogAgents/DialogAgent.h	/^	bool HasInputConfigurationParameter( string sSlot);$/;"	p	class:CDialogAgent	access:public	signature:( string sSlot)
HasParameter	DMCore/Agents/Agent.cpp	/^bool CAgent::HasParameter(string sParam) {$/;"	f	class:CAgent	signature:(string sParam)
HasParameter	DMCore/Agents/Agent.h	/^	bool HasParameter(string sParam);$/;"	p	class:CAgent	access:public	signature:(string sParam)
HasPartialHyp	DMCore/Concepts/Concept.cpp	/^bool CConcept::HasPartialHyp() {$/;"	f	class:CConcept	signature:()
HasPartialHyp	DMCore/Concepts/Concept.h	/^	virtual bool HasPartialHyp();$/;"	p	class:CConcept	access:public	signature:()
HasPartialUpdate	DMCore/Concepts/Concept.cpp	/^bool CConcept::HasPartialUpdate() {$/;"	f	class:CConcept	signature:()
HasPartialUpdate	DMCore/Concepts/Concept.h	/^	virtual bool HasPartialUpdate();$/;"	p	class:CConcept	access:public	signature:()
HasPendingConceptGroundingRequests	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^bool CGroundingManagerAgent::HasPendingConceptGroundingRequests() {$/;"	f	class:CGroundingManagerAgent	signature:()
HasPendingConceptGroundingRequests	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    bool HasPendingConceptGroundingRequests();$/;"	p	class:CGroundingManagerAgent	access:public	signature:()
HasPendingRequests	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^bool CGroundingManagerAgent::HasPendingRequests() {$/;"	f	class:CGroundingManagerAgent	signature:()
HasPendingRequests	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    bool HasPendingRequests();$/;"	p	class:CGroundingManagerAgent	access:public	signature:()
HasPendingTurnGroundingRequest	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^bool CGroundingManagerAgent::HasPendingTurnGroundingRequest() {$/;"	f	class:CGroundingManagerAgent	signature:()
HasPendingTurnGroundingRequest	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    bool HasPendingTurnGroundingRequest();$/;"	p	class:CGroundingManagerAgent	access:public	signature:()
HasProperty	DMCore/Events/InteractionEvent.cpp	/^bool CInteractionEvent::HasProperty(string sSlot) {$/;"	f	class:CInteractionEvent	signature:(string sSlot)
HasProperty	DMCore/Events/InteractionEvent.h	/^	bool HasProperty(string sSlot);$/;"	p	class:CInteractionEvent	access:public	signature:(string sSlot)
HasScheduledConceptGroundingRequests	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^bool CGroundingManagerAgent::HasScheduledConceptGroundingRequests() {$/;"	f	class:CGroundingManagerAgent	signature:()
HasScheduledConceptGroundingRequests	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    bool HasScheduledConceptGroundingRequests();$/;"	p	class:CGroundingManagerAgent	access:public	signature:()
HasSucceeded	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^bool CDialogAgent::HasSucceeded() {$/;"	f	class:CDialogAgent	signature:()
HasSucceeded	DMCore/Agents/DialogAgents/DialogAgent.h	/^    bool HasSucceeded();$/;"	p	class:CDialogAgent	access:public	signature:()
HasUnprocessedConceptGroundingRequests	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^bool CGroundingManagerAgent::HasUnprocessedConceptGroundingRequests() {$/;"	f	class:CGroundingManagerAgent	signature:()
HasUnprocessedConceptGroundingRequests	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    bool HasUnprocessedConceptGroundingRequests();$/;"	p	class:CGroundingManagerAgent	access:public	signature:()
HiBound	DMCore/Grounding/GroundingUtils.cpp	/^float& CBeliefDistribution::HiBound(unsigned int iIndex) {$/;"	f	class:CBeliefDistribution	signature:(unsigned int iIndex)
HiBound	DMCore/Grounding/GroundingUtils.h	/^	float& HiBound(unsigned int iIndex);$/;"	p	class:CBeliefDistribution	access:public	signature:(unsigned int iIndex)
HypFactory	DMCore/Concepts/ArrayConcept.cpp	/^CHyp* CArrayConcept::HypFactory() {$/;"	f	class:CArrayConcept	signature:()
HypFactory	DMCore/Concepts/ArrayConcept.h	/^    virtual CHyp* HypFactory();$/;"	p	class:CArrayConcept	access:public	signature:()
HypFactory	DMCore/Concepts/BoolConcept.cpp	/^CHyp* CBoolConcept::HypFactory() {$/;"	f	class:CBoolConcept	signature:()
HypFactory	DMCore/Concepts/BoolConcept.h	/^    virtual CHyp* HypFactory();$/;"	p	class:CBoolConcept	access:public	signature:()
HypFactory	DMCore/Concepts/Concept.cpp	/^CHyp* CConcept::HypFactory() {$/;"	f	class:CConcept	signature:()
HypFactory	DMCore/Concepts/Concept.h	/^    virtual CHyp* HypFactory();$/;"	p	class:CConcept	access:public	signature:()
HypFactory	DMCore/Concepts/FloatConcept.cpp	/^CHyp* CFloatConcept::HypFactory() {$/;"	f	class:CFloatConcept	signature:()
HypFactory	DMCore/Concepts/FloatConcept.h	/^    virtual CHyp* HypFactory();$/;"	p	class:CFloatConcept	access:public	signature:()
HypFactory	DMCore/Concepts/FrameConcept.cpp	/^CHyp* CFrameConcept::HypFactory() {$/;"	f	class:CFrameConcept	signature:()
HypFactory	DMCore/Concepts/FrameConcept.h	/^    virtual CHyp* HypFactory();$/;"	p	class:CFrameConcept	access:public	signature:()
HypFactory	DMCore/Concepts/IntConcept.cpp	/^CHyp* CIntConcept::HypFactory() {$/;"	f	class:CIntConcept	signature:()
HypFactory	DMCore/Concepts/IntConcept.h	/^    virtual CHyp* HypFactory();$/;"	p	class:CIntConcept	access:public	signature:()
HypFactory	DMCore/Concepts/StringConcept.cpp	/^CHyp* CStringConcept::HypFactory() {$/;"	f	class:CStringConcept	signature:()
HypFactory	DMCore/Concepts/StringConcept.h	/^    virtual CHyp* HypFactory();$/;"	p	class:CStringConcept	access:public	signature:()
HypFactory	DMCore/Concepts/StructConcept.cpp	/^CHyp* CStructConcept::HypFactory() {$/;"	f	class:CStructConcept	signature:()
HypFactory	DMCore/Concepts/StructConcept.h	/^    virtual CHyp* HypFactory();$/;"	p	class:CStructConcept	access:public	signature:()
HypSetToString	DMCore/Concepts/ArrayConcept.cpp	/^string CArrayConcept::HypSetToString() {$/;"	f	class:CArrayConcept	signature:()
HypSetToString	DMCore/Concepts/ArrayConcept.h	/^	virtual string HypSetToString();$/;"	p	class:CArrayConcept	access:public	signature:()
HypSetToString	DMCore/Concepts/Concept.cpp	/^string CConcept::HypSetToString() {$/;"	f	class:CConcept	signature:()
HypSetToString	DMCore/Concepts/Concept.h	/^	virtual string HypSetToString();$/;"	p	class:CConcept	access:public	signature:()
HypSetToString	DMCore/Concepts/FrameConcept.cpp	/^string CFrameConcept::HypSetToString() {$/;"	f	class:CFrameConcept	signature:()
HypSetToString	DMCore/Concepts/FrameConcept.h	/^	virtual string HypSetToString();$/;"	p	class:CFrameConcept	access:public	signature:()
HypSetToString	DMCore/Concepts/StructConcept.cpp	/^string CStructConcept::HypSetToString() {$/;"	f	class:CStructConcept	signature:()
HypSetToString	DMCore/Concepts/StructConcept.h	/^	virtual string HypSetToString();$/;"	p	class:CStructConcept	access:public	signature:()
ID_VOID_MAIN	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	6;"	d	file:
IET_DIALOG_STATE_CHANGE	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.h	10;"	d
IET_FLOOR_OWNER_CHANGES	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.h	17;"	d
IET_GUI	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.h	19;"	d
IET_PARTIAL_USER_UTT	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.h	13;"	d
IET_SESSION	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.h	18;"	d
IET_SYSTEM_UTT_CANCELED	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.h	16;"	d
IET_SYSTEM_UTT_END	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.h	15;"	d
IET_SYSTEM_UTT_START	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.h	14;"	d
IET_USER_UTT_END	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.h	12;"	d
IET_USER_UTT_START	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.h	11;"	d
IMPLICIT_CONFIRM	DMCore/Grounding/GroundingActions/GAImplicitConfirm.h	101;"	d
INLINE_BUFFER_SIZE	spdlog/fmt/bundled/format.h	/^    INLINE_BUFFER_SIZE = 500$/;"	e	enum:fmt::internal::__anon17
INPUTMANAGER_STREAM	DMCore/Log.h	94;"	d
INPUT_LINE_CONFIGURATION	DMCore/Agents/DialogAgents/DialogAgent.h	836;"	d
INT	spdlog/fmt/bundled/format.h	/^        INT, UINT, LONG_LONG, ULONG_LONG, BOOL, CHAR, LAST_INTEGER_TYPE = CHAR,$/;"	e	enum:fmt::internal::Value::Type
INTERACTION_TIPS	DMCore/Grounding/GroundingActions/GAInteractionTips.h	108;"	d
INT_ITEM	DialogTask/DialogTask.h	192;"	d
INT_SYSTEM_CONCEPT	DialogTask/DialogTask.h	204;"	d
INT_USER_CONCEPT	DialogTask/DialogTask.h	214;"	d
INVALIDATED	DialogTask/DialogTask.h	247;"	d
INVALIDATED_CONCEPT	DMCore/Concepts/Concept.h	145;"	d
INVALID_EVENT	DMCore/Grounding/GroundingUtils.h	71;"	d
IS_ACTIVE_TOPIC	DialogTask/DialogTask.h	231;"	d
IS_CONVERSATION_SYNCHRONOUS	DMCore/Agents/DialogAgents/DialogAgent.h	843;"	d
IS_FALSE	DialogTask/DialogTask.h	249;"	d
IS_FOCUSED	DialogTask/DialogTask.h	232;"	d
IS_MAIN_TOPIC	DMCore/Agents/DialogAgents/DialogAgent.h	787;"	d
IS_NOT_DTS_AGENT	DMCore/Agents/DialogAgents/DialogAgent.h	794;"	d
IS_TRUE	DialogTask/DialogTask.h	248;"	d
ITEM	DMCore/Concepts/StructConcept.h	365;"	d
ITEMS	DMCore/Concepts/StructConcept.h	359;"	d
I_formatter	spdlog/details/pattern_formatter_impl.h	/^class I_formatter:public flag_formatter$/;"	c	namespace:spdlog::details	inherits:flag_formatter
IncrementExecuteCounter	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^void CDialogAgent::IncrementExecuteCounter() {$/;"	f	class:CDialogAgent	signature:()
IncrementExecuteCounter	DMCore/Agents/DialogAgents/DialogAgent.h	/^    void IncrementExecuteCounter();$/;"	p	class:CDialogAgent	access:public	signature:()
IncrementRepeatCounter	DMCore/Outputs/Output.cpp	/^void COutput::IncrementRepeatCounter() {$/;"	f	class:COutput	signature:()
IncrementRepeatCounter	DMCore/Outputs/Output.h	/^	void IncrementRepeatCounter();$/;"	p	class:COutput	access:public	signature:()
IncrementTurnsInFocusCounter	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^void CDialogAgent::IncrementTurnsInFocusCounter() {$/;"	f	class:CDialogAgent	signature:()
IncrementTurnsInFocusCounter	DMCore/Agents/DialogAgents/DialogAgent.h	/^    void IncrementTurnsInFocusCounter();$/;"	p	class:CDialogAgent	access:public	signature:()
InheritParentInputConfiguration	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^void CDialogAgent::InheritParentInputConfiguration() {$/;"	f	class:CDialogAgent	signature:()
InheritParentInputConfiguration	DMCore/Agents/DialogAgents/DialogAgent.h	/^	void InheritParentInputConfiguration();$/;"	p	class:CDialogAgent	access:public	signature:()
Initialize	DMCore/Agents/Agent.cpp	/^void CAgent::Initialize() {$/;"	f	class:CAgent	signature:()
Initialize	DMCore/Agents/Agent.h	/^	virtual void Initialize();$/;"	p	class:CAgent	access:public	signature:()
Initialize	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.cpp	/^void CInteractionEventManagerAgent::Initialize() {$/;"	f	class:CInteractionEventManagerAgent	signature:()
Initialize	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.h	/^	virtual void Initialize();	\/\/ overwritten Initialize$/;"	p	class:CInteractionEventManagerAgent	access:public	signature:()
Initialize	DMCore/Agents/DialogAgents/BasicAgents/DialogAgency.cpp	/^void CDialogAgency::Initialize() {$/;"	f	class:CDialogAgency	signature:()
Initialize	DMCore/Agents/DialogAgents/BasicAgents/DialogAgency.h	/^	virtual void Initialize();$/;"	p	class:CDialogAgency	access:public	signature:()
Initialize	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^void CDialogAgent::Initialize() {	$/;"	f	class:CDialogAgent	signature:()
Initialize	DMCore/Agents/DialogAgents/DialogAgent.h	/^	virtual void Initialize();$/;"	p	class:CDialogAgent	access:public	signature:()
Initialize	DMCore/Grounding/GroundingModels/GroundingModel.cpp	/^void CGroundingModel::Initialize() {$/;"	f	class:CGroundingModel	signature:()
Initialize	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    virtual void Initialize();$/;"	p	class:CGroundingModel	access:public	signature:()
InitializeDialogCore	DMCore/DMCore.cpp	/^void InitializeDialogCore() {$/;"	f	signature:()
InitializeHighResolutionTimer	Utils/Utils.h	/^void InitializeHighResolutionTimer();$/;"	p	signature:()
InitializeLogging	DMCore/Log.cpp	/^void InitializeLogging(string sALogFolder, string sALogPrefix, string sALogFilename, $/;"	f	signature:(string sALogFolder, string sALogPrefix, string sALogFilename, string sLoggedStreamsList, string sDisplayedStreamsList, string sAExitOnFatalError)
InitializeLogging	DMCore/Log.h	/^void InitializeLogging(string sALogFolder, string sALogPrefix, string sALogFilename,$/;"	p	signature:(string sALogFolder, string sALogPrefix, string sALogFilename, string sLoggedStreamsList, string sDisplayedStreamsList, string sAExitOnFatalError)
InputLineConfigurationInitString	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^string CDialogAgent::InputLineConfigurationInitString() {$/;"	f	class:CDialogAgent	signature:()
InputLineConfigurationInitString	DMCore/Agents/DialogAgents/DialogAgent.h	/^	virtual string InputLineConfigurationInitString();$/;"	p	class:CDialogAgent	access:public	signature:()
InsertAt	DMCore/Concepts/ArrayConcept.cpp	/^void CArrayConcept::InsertAt(unsigned int iIndex, CConcept &rAConcept) {$/;"	f	class:CArrayConcept	signature:(unsigned int iIndex, CConcept &rAConcept)
InsertAt	DMCore/Concepts/ArrayConcept.h	/^	virtual void InsertAt(unsigned int iIndex, CConcept &rAConcept);   $/;"	p	class:CArrayConcept	access:public	signature:(unsigned int iIndex, CConcept &rAConcept)
InsertAt	DMCore/Concepts/Concept.cpp	/^void CConcept::InsertAt(unsigned int iIndex, CConcept &rAConcept) {$/;"	f	class:CConcept	signature:(unsigned int iIndex, CConcept &rAConcept)
InsertAt	DMCore/Concepts/Concept.h	/^	virtual void InsertAt(unsigned int iIndex, CConcept &rAConcept);   $/;"	p	class:CConcept	access:public	signature:(unsigned int iIndex, CConcept &rAConcept)
IntChecker	spdlog/fmt/bundled/printf.h	/^struct IntChecker$/;"	s	namespace:fmt::internal
IntChecker	spdlog/fmt/bundled/printf.h	/^struct IntChecker<true>$/;"	s	namespace:fmt::internal
IntFormatSpec	spdlog/fmt/bundled/format.h	/^    IntFormatSpec(T val, const SpecT &spec = SpecT())$/;"	f	class:fmt::IntFormatSpec	access:public	signature:(T val, const SpecT &spec = SpecT())
IntFormatSpec	spdlog/fmt/bundled/format.h	/^class IntFormatSpec: public SpecT$/;"	c	namespace:fmt	inherits:SpecT
IntToString	Utils/Utils.cpp	/^string IntToString(int iInt) {$/;"	f	signature:(int iInt)
IntToString	Utils/Utils.h	/^string IntToString(int iInt);$/;"	p	signature:(int iInt)
IntTraits	spdlog/fmt/bundled/format.h	/^struct IntTraits$/;"	s	namespace:fmt::internal
IsAMainTopic	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^bool CDialogAgent::IsAMainTopic() {$/;"	f	class:CDialogAgent	signature:()
IsAMainTopic	DMCore/Agents/DialogAgents/DialogAgent.h	/^	virtual bool IsAMainTopic();$/;"	p	class:CDialogAgent	access:public	signature:()
IsANumber	Utils/Utils.cpp	/^bool IsANumber(string sStr) {$/;"	f	signature:(string sStr)
IsANumber	Utils/Utils.h	/^bool IsANumber(string sStr);$/;"	p	signature:(string sStr)
IsAgentPathBlocked	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^bool CDialogAgent::IsAgentPathBlocked() {$/;"	f	class:CDialogAgent	signature:()
IsAgentPathBlocked	DMCore/Agents/DialogAgents/DialogAgent.h	/^	bool IsAgentPathBlocked(); $/;"	p	class:CDialogAgent	access:public	signature:()
IsAncestorOf	DMCore/Agents/CoreAgents/DTTManagerAgent.cpp	/^bool CDTTManagerAgent::IsAncestorOf(string sAncestorAgentPath, string sAgentPath) {$/;"	f	class:CDTTManagerAgent	signature:(string sAncestorAgentPath, string sAgentPath)
IsAncestorOf	DMCore/Agents/CoreAgents/DTTManagerAgent.h	/^	bool IsAncestorOf(string sAncestorAgentPath, string sAgentPath);$/;"	p	class:CDTTManagerAgent	access:public	signature:(string sAncestorAgentPath, string sAgentPath)
IsAncestorOrEqualOf	DMCore/Agents/CoreAgents/DTTManagerAgent.cpp	/^bool CDTTManagerAgent::IsAncestorOrEqualOf(string sAncestorAgentPath, string sAgentPath) {$/;"	f	class:CDTTManagerAgent	signature:(string sAncestorAgentPath, string sAgentPath)
IsAncestorOrEqualOf	DMCore/Agents/CoreAgents/DTTManagerAgent.h	/^	bool IsAncestorOrEqualOf(string sAncestorAgentPath, string sAgentPath);$/;"	p	class:CDTTManagerAgent	access:public	signature:(string sAncestorAgentPath, string sAgentPath)
IsAvailable	DMCore/Concepts/Concept.cpp	/^bool CConcept::IsAvailable() {$/;"	f	class:CConcept	signature:()
IsAvailable	DMCore/Concepts/Concept.h	/^	virtual bool IsAvailable();$/;"	p	class:CConcept	access:public	signature:()
IsAvailable	DMCore/Concepts/FrameConcept.cpp	/^bool CFrameConcept::IsAvailable() {$/;"	f	class:CFrameConcept	signature:()
IsAvailable	DMCore/Concepts/FrameConcept.h	/^	virtual bool IsAvailable();$/;"	p	class:CFrameConcept	access:public	signature:()
IsAvailableAndGrounded	DMCore/Concepts/Concept.cpp	/^bool CConcept::IsAvailableAndGrounded() {$/;"	f	class:CConcept	signature:()
IsAvailableAndGrounded	DMCore/Concepts/Concept.h	/^	virtual bool IsAvailableAndGrounded();$/;"	p	class:CConcept	access:public	signature:()
IsAvailableAndGrounded	DMCore/Concepts/FrameConcept.cpp	/^bool CFrameConcept::IsAvailableAndGrounded() {$/;"	f	class:CFrameConcept	signature:()
IsAvailableAndGrounded	DMCore/Concepts/FrameConcept.h	/^	virtual bool IsAvailableAndGrounded();$/;"	p	class:CFrameConcept	access:public	signature:()
IsBlocked	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^bool CDialogAgent::IsBlocked() {$/;"	f	class:CDialogAgent	signature:()
IsBlocked	DMCore/Agents/DialogAgents/DialogAgent.h	/^	virtual bool IsBlocked();$/;"	p	class:CDialogAgent	access:public	signature:()
IsChildOf	DMCore/Agents/CoreAgents/DTTManagerAgent.cpp	/^bool CDTTManagerAgent::IsChildOf(string sChildAgentPath, string sAgentPath) {$/;"	f	class:CDTTManagerAgent	signature:(string sChildAgentPath, string sAgentPath)
IsChildOf	DMCore/Agents/CoreAgents/DTTManagerAgent.h	/^	bool IsChildOf(string sChildAgentPath, string sAgentPath);$/;"	p	class:CDTTManagerAgent	access:public	signature:(string sChildAgentPath, string sAgentPath)
IsComplete	DMCore/Events/InteractionEvent.cpp	/^bool CInteractionEvent::IsComplete() {$/;"	f	class:CInteractionEvent	signature:()
IsComplete	DMCore/Events/InteractionEvent.h	/^	bool IsComplete();$/;"	p	class:CInteractionEvent	access:public	signature:()
IsConversationSynchronous	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^bool CDialogAgent::IsConversationSynchronous() {$/;"	f	class:CDialogAgent	signature:()
IsConversationSynchronous	DMCore/Agents/DialogAgents/DialogAgent.h	/^    virtual bool IsConversationSynchronous();$/;"	p	class:CDialogAgent	access:public	signature:()
IsDTSAgent	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^bool CDialogAgent::IsDTSAgent() {$/;"	f	class:CDialogAgent	signature:()
IsDTSAgent	DMCore/Agents/DialogAgents/DialogAgent.h	/^    virtual bool IsDTSAgent();$/;"	p	class:CDialogAgent	access:public	signature:()
IsDescendantOf	DMCore/Agents/CoreAgents/DTTManagerAgent.cpp	/^bool CDTTManagerAgent::IsDescendantOf(string sDescendantAgentPath, $/;"	f	class:CDTTManagerAgent	signature:(string sDescendantAgentPath, string sAgentPath)
IsDescendantOf	DMCore/Agents/CoreAgents/DTTManagerAgent.h	/^	bool IsDescendantOf(string sDescendantAgentPath, string sAgentPath);$/;"	p	class:CDTTManagerAgent	access:public	signature:(string sDescendantAgentPath, string sAgentPath)
IsDynamicAgent	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^bool CDialogAgent::IsDynamicAgent() {$/;"	f	class:CDialogAgent	signature:()
IsDynamicAgent	DMCore/Agents/DialogAgents/DialogAgent.h	/^    bool IsDynamicAgent();$/;"	p	class:CDialogAgent	access:public	signature:()
IsExecutable	DMCore/Agents/DialogAgents/BasicAgents/MAExpect.cpp	/^bool CMAExpect::IsExecutable() {$/;"	f	class:CMAExpect	signature:()
IsExecutable	DMCore/Agents/DialogAgents/BasicAgents/MAExpect.h	/^	virtual bool IsExecutable();$/;"	p	class:CMAExpect	access:public	signature:()
IsExecutable	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^bool CDialogAgent::IsExecutable() {$/;"	f	class:CDialogAgent	signature:()
IsExecutable	DMCore/Agents/DialogAgents/DialogAgent.h	/^	virtual bool IsExecutable();$/;"	p	class:CDialogAgent	access:public	signature:()
IsGrounded	DMCore/Concepts/Concept.cpp	/^bool CConcept::IsGrounded() {$/;"	f	class:CConcept	signature:()
IsGrounded	DMCore/Concepts/Concept.h	/^	virtual bool IsGrounded();$/;"	p	class:CConcept	access:public	signature:()
IsHistoryConcept	DMCore/Concepts/Concept.cpp	/^bool CConcept::IsHistoryConcept() {$/;"	f	class:CConcept	signature:()
IsHistoryConcept	DMCore/Concepts/Concept.h	/^	virtual bool IsHistoryConcept();$/;"	p	class:CConcept	access:public	signature:()
IsInvalidated	DMCore/Concepts/Concept.cpp	/^bool CConcept::IsInvalidated() {$/;"	f	class:CConcept	signature:()
IsInvalidated	DMCore/Concepts/Concept.h	/^    virtual bool IsInvalidated();$/;"	p	class:CConcept	access:public	signature:()
IsParentOf	DMCore/Agents/CoreAgents/DTTManagerAgent.cpp	/^bool CDTTManagerAgent::IsParentOf(string sParentAgentPath, string sAgentPath) {$/;"	f	class:CDTTManagerAgent	signature:(string sParentAgentPath, string sAgentPath)
IsParentOf	DMCore/Agents/CoreAgents/DTTManagerAgent.h	/^	bool IsParentOf(string sParentAgentPath, string sAgentPath);$/;"	p	class:CDTTManagerAgent	access:public	signature:(string sParentAgentPath, string sAgentPath)
IsRegisteredAgent	DMCore/Agents/Registry.cpp	/^bool CRegistry::IsRegisteredAgent(string sAgentName) {$/;"	f	class:CRegistry	signature:(string sAgentName)
IsRegisteredAgent	DMCore/Agents/Registry.h	/^	bool IsRegisteredAgent(string sAgentName);$/;"	p	class:CRegistry	access:public	signature:(string sAgentName)
IsRegisteredAgentType	DMCore/Agents/Registry.cpp	/^bool CRegistry::IsRegisteredAgentType(string sAgentTypeName) {$/;"	f	class:CRegistry	signature:(string sAgentTypeName)
IsRegisteredAgentType	DMCore/Agents/Registry.h	/^	bool IsRegisteredAgentType(string sAgentType);$/;"	p	class:CRegistry	access:public	signature:(string sAgentType)
IsRestoredForGrounding	DMCore/Concepts/Concept.cpp	/^bool CConcept::IsRestoredForGrounding() {$/;"	f	class:CConcept	signature:()
IsRestoredForGrounding	DMCore/Concepts/Concept.h	/^    virtual bool IsRestoredForGrounding();$/;"	p	class:CConcept	access:public	signature:()
IsSealed	DMCore/Concepts/Concept.cpp	/^bool CConcept::IsSealed() {$/;"	f	class:CConcept	signature:()
IsSealed	DMCore/Concepts/Concept.h	/^	virtual bool IsSealed();$/;"	p	class:CConcept	access:public	signature:()
IsSiblingOf	DMCore/Agents/CoreAgents/DTTManagerAgent.cpp	/^bool CDTTManagerAgent::IsSiblingOf(string sAgent1Path, string sAgent2Path) {$/;"	f	class:CDTTManagerAgent	signature:(string sAgent1Path, string sAgent2Path)
IsSiblingOf	DMCore/Agents/CoreAgents/DTTManagerAgent.h	/^	bool IsSiblingOf(string sAgent1Path, string sAgent2Path);$/;"	p	class:CDTTManagerAgent	access:public	signature:(string sAgent1Path, string sAgent2Path)
IsUndergoingGrounding	DMCore/Concepts/ArrayConcept.cpp	/^bool CArrayConcept::IsUndergoingGrounding() {$/;"	f	class:CArrayConcept	signature:()
IsUndergoingGrounding	DMCore/Concepts/ArrayConcept.h	/^    virtual bool IsUndergoingGrounding();$/;"	p	class:CArrayConcept	access:public	signature:()
IsUndergoingGrounding	DMCore/Concepts/Concept.cpp	/^bool CConcept::IsUndergoingGrounding() {$/;"	f	class:CConcept	signature:()
IsUndergoingGrounding	DMCore/Concepts/Concept.h	/^    virtual bool IsUndergoingGrounding();$/;"	p	class:CConcept	access:public	signature:()
IsUndergoingGrounding	DMCore/Concepts/FrameConcept.cpp	/^bool CFrameConcept::IsUndergoingGrounding() { 	$/;"	f	class:CFrameConcept	signature:()
IsUndergoingGrounding	DMCore/Concepts/FrameConcept.h	/^    virtual bool IsUndergoingGrounding();$/;"	p	class:CFrameConcept	access:public	signature:()
IsUpdated	DMCore/Concepts/ArrayConcept.cpp	/^bool CArrayConcept::IsUpdated() {$/;"	f	class:CArrayConcept	signature:()
IsUpdated	DMCore/Concepts/ArrayConcept.h	/^	virtual bool IsUpdated();$/;"	p	class:CArrayConcept	access:public	signature:()
IsUpdated	DMCore/Concepts/Concept.cpp	/^bool CConcept::IsUpdated() {$/;"	f	class:CConcept	signature:()
IsUpdated	DMCore/Concepts/Concept.h	/^    virtual bool IsUpdated();$/;"	p	class:CConcept	access:public	signature:()
IsUpdated	DMCore/Concepts/FrameConcept.cpp	/^bool CFrameConcept::IsUpdated() {	$/;"	f	class:CFrameConcept	signature:()
IsUpdated	DMCore/Concepts/FrameConcept.h	/^    virtual bool IsUpdated();$/;"	p	class:CFrameConcept	access:public	signature:()
IsUpdatedAndGrounded	DMCore/Concepts/Concept.cpp	/^bool CConcept::IsUpdatedAndGrounded() {$/;"	f	class:CConcept	signature:()
IsUpdatedAndGrounded	DMCore/Concepts/Concept.h	/^    virtual bool IsUpdatedAndGrounded();$/;"	p	class:CConcept	access:public	signature:()
IsUpdatedAndGrounded	DMCore/Concepts/FrameConcept.cpp	/^bool CFrameConcept::IsUpdatedAndGrounded() {$/;"	f	class:CFrameConcept	signature:()
IsUpdatedAndGrounded	DMCore/Concepts/FrameConcept.h	/^    virtual bool IsUpdatedAndGrounded();$/;"	p	class:CFrameConcept	access:public	signature:()
IsValidHyp	DMCore/Concepts/ArrayConcept.cpp	/^bool CArrayConcept::IsValidHyp(int iIndex) {$/;"	f	class:CArrayConcept	signature:(int iIndex)
IsValidHyp	DMCore/Concepts/ArrayConcept.h	/^	virtual bool IsValidHyp(int iIndex);$/;"	p	class:CArrayConcept	access:public	signature:(int iIndex)
IsValidHyp	DMCore/Concepts/Concept.cpp	/^bool CConcept::IsValidHyp(int iIndex) {$/;"	f	class:CConcept	signature:(int iIndex)
IsValidHyp	DMCore/Concepts/Concept.h	/^	virtual bool IsValidHyp(int iIndex);$/;"	p	class:CConcept	access:public	signature:(int iIndex)
IsValidHyp	DMCore/Concepts/FrameConcept.cpp	/^bool CFrameConcept::IsValidHyp(int iIndex) {$/;"	f	class:CFrameConcept	signature:(int iIndex)
IsValidHyp	DMCore/Concepts/FrameConcept.h	/^	virtual bool IsValidHyp(int iIndex);$/;"	p	class:CFrameConcept	access:public	signature:(int iIndex)
IsValidPartialHyp	DMCore/Concepts/Concept.cpp	/^bool CConcept::IsValidPartialHyp(int iIndex) {$/;"	f	class:CConcept	signature:(int iIndex)
IsValidPartialHyp	DMCore/Concepts/Concept.h	/^	bool IsValidPartialHyp(int iIndex);$/;"	p	class:CConcept	access:public	signature:(int iIndex)
IsZeroInt	spdlog/fmt/bundled/printf.h	/^class IsZeroInt: public ArgVisitor<IsZeroInt, bool>$/;"	c	namespace:fmt::internal	inherits:ArgVisitor
ItemMap	DMCore/Concepts/StructConcept.h	/^	TItemMap ItemMap;$/;"	m	class:CStructConcept	access:protected
LAST_INTEGER_TYPE	spdlog/fmt/bundled/format.h	/^        INT, UINT, LONG_LONG, ULONG_LONG, BOOL, CHAR, LAST_INTEGER_TYPE = CHAR,$/;"	e	enum:fmt::internal::Value::Type
LAST_NUMERIC_TYPE	spdlog/fmt/bundled/format.h	/^        DOUBLE, LONG_DOUBLE, LAST_NUMERIC_TYPE = LONG_DOUBLE,$/;"	e	enum:fmt::internal::Value::Type
LConvCheck	spdlog/fmt/bundled/format.h	/^    LConvCheck(int)$/;"	f	struct:fmt::internal::LConvCheck	access:public	signature:(int)
LConvCheck	spdlog/fmt/bundled/format.h	/^template <typename T, T> struct LConvCheck$/;"	s	namespace:fmt::internal
LEFT_TO_RIGHT_ENFORCED	DMCore/Agents/DialogAgents/BasicAgents/DialogAgency.h	95;"	d
LEFT_TO_RIGHT_OPEN	DMCore/Agents/DialogAgents/BasicAgents/DialogAgency.h	90;"	d
LIBRARY_AGENT	DialogTask/DialogTask.h	136;"	d
LOG	DialogTask/DialogTask.h	182;"	d
LONG_DOUBLE	spdlog/fmt/bundled/format.h	/^        DOUBLE, LONG_DOUBLE, LAST_NUMERIC_TYPE = LONG_DOUBLE,$/;"	e	enum:fmt::internal::Value::Type
LONG_LONG	spdlog/fmt/bundled/format.h	/^        INT, UINT, LONG_LONG, ULONG_LONG, BOOL, CHAR, LAST_INTEGER_TYPE = CHAR,$/;"	e	enum:fmt::internal::Value::Type
LastEventIsComplete	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.cpp	/^bool CInteractionEventManagerAgent::LastEventIsComplete() {$/;"	f	class:CInteractionEventManagerAgent	signature:()
LastEventIsComplete	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.h	/^  bool LastEventIsComplete();$/;"	p	class:CInteractionEventManagerAgent	access:public	signature:()
LastEventMatches	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.cpp	/^bool CInteractionEventManagerAgent::LastEventMatches(string sGrammarExpectation) {$/;"	f	class:CInteractionEventManagerAgent	signature:(string sGrammarExpectation)
LastEventMatches	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.h	/^	bool LastEventMatches(string sGrammarExpectation);$/;"	p	class:CInteractionEventManagerAgent	access:public	signature:(string sGrammarExpectation)
LastInputMatches	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.cpp	/^bool CInteractionEventManagerAgent::LastInputMatches(string sGrammarExpectation) {$/;"	f	class:CInteractionEventManagerAgent	signature:(string sGrammarExpectation)
LastInputMatches	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.h	/^	bool LastInputMatches(string sGrammarExpectation);$/;"	p	class:CInteractionEventManagerAgent	access:public	signature:(string sGrammarExpectation)
LastTurnGetConceptsBound	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^int CDMCoreAgent::LastTurnGetConceptsBound() {$/;"	f	class:CDMCoreAgent	signature:()
LastTurnGetConceptsBound	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^    int LastTurnGetConceptsBound();$/;"	p	class:CDMCoreAgent	access:public	signature:()
LastTurnNonUnderstanding	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^bool CDMCoreAgent::LastTurnNonUnderstanding() {$/;"	f	class:CDMCoreAgent	signature:()
LastTurnNonUnderstanding	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^    bool LastTurnNonUnderstanding();$/;"	p	class:CDMCoreAgent	access:public	signature:()
LessThan	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.h	/^		LessThan,$/;"	e	enum:CCondition::TComparator
LessThanOrEqualTo	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.h	/^		LessThanOrEqualTo$/;"	e	enum:CCondition::TComparator
LoadBeliefUpdatingModel	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^void CGroundingManagerAgent::LoadBeliefUpdatingModel(string sAFileName) {$/;"	f	class:CGroundingManagerAgent	signature:(string sAFileName)
LoadBeliefUpdatingModel	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^	virtual void LoadBeliefUpdatingModel(string sAFileName);$/;"	p	class:CGroundingManagerAgent	access:public	signature:(string sAFileName)
LoadDialogStateNames	DMCore/Agents/CoreAgents/StateManagerAgent.cpp	/^void CStateManagerAgent::LoadDialogStateNames(string sFileName) {$/;"	f	class:CStateManagerAgent	signature:(string sFileName)
LoadDialogStateNames	DMCore/Agents/CoreAgents/StateManagerAgent.h	/^	void LoadDialogStateNames(string sFileName);$/;"	p	class:CStateManagerAgent	access:public	signature:(string sFileName)
LoadPoliciesFromFile	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^void CGroundingManagerAgent::LoadPoliciesFromFile(string sFileName) {$/;"	f	class:CGroundingManagerAgent	signature:(string sFileName)
LoadPoliciesFromFile	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    virtual void LoadPoliciesFromFile(string sFileName);$/;"	p	class:CGroundingManagerAgent	access:public	signature:(string sFileName)
LoadPoliciesFromString	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^void CGroundingManagerAgent::LoadPoliciesFromString(string sPolicies) {$/;"	f	class:CGroundingManagerAgent	signature:(string sPolicies)
LoadPoliciesFromString	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    virtual void LoadPoliciesFromString(string sPolicies);$/;"	p	class:CGroundingManagerAgent	access:public	signature:(string sPolicies)
LoadPolicy	DMCore/Grounding/GroundingModels/GMConcept.cpp	/^bool CGMConcept::LoadPolicy() {$/;"	f	class:CGMConcept	signature:()
LoadPolicy	DMCore/Grounding/GroundingModels/GMConcept.h	/^    virtual bool LoadPolicy();$/;"	p	class:CGMConcept	access:public	signature:()
LoadPolicy	DMCore/Grounding/GroundingModels/GMRequestAgent.cpp	/^bool CGMRequestAgent::LoadPolicy() {$/;"	f	class:CGMRequestAgent	signature:()
LoadPolicy	DMCore/Grounding/GroundingModels/GMRequestAgent.h	/^    virtual bool LoadPolicy();$/;"	p	class:CGMRequestAgent	access:public	signature:()
LoadPolicy	DMCore/Grounding/GroundingModels/GMRequestAgent_Experiment.cpp	/^bool CGMRequestAgent_Experiment::LoadPolicy() {$/;"	f	class:CGMRequestAgent_Experiment	signature:()
LoadPolicy	DMCore/Grounding/GroundingModels/GMRequestAgent_Experiment.h	/^    virtual bool LoadPolicy();$/;"	p	class:CGMRequestAgent_Experiment	access:public	signature:()
LoadPolicy	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.cpp	/^bool CGMRequestAgent_HandCrafted::LoadPolicy() {$/;"	f	class:CGMRequestAgent_HandCrafted	signature:()
LoadPolicy	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.h	/^    virtual bool LoadPolicy();$/;"	p	class:CGMRequestAgent_HandCrafted	access:public	signature:()
LoadPolicy	DMCore/Grounding/GroundingModels/GMRequestAgent_LR.cpp	/^bool CGMRequestAgent_LR::LoadPolicy() {$/;"	f	class:CGMRequestAgent_LR	signature:()
LoadPolicy	DMCore/Grounding/GroundingModels/GMRequestAgent_LR.h	/^    virtual bool LoadPolicy();$/;"	p	class:CGMRequestAgent_LR	access:public	signature:()
LoadPolicy	DMCore/Grounding/GroundingModels/GMRequestAgent_NumNonu.cpp	/^bool CGMRequestAgent_NumNonu::LoadPolicy() {$/;"	f	class:CGMRequestAgent_NumNonu	signature:()
LoadPolicy	DMCore/Grounding/GroundingModels/GMRequestAgent_NumNonu.h	/^    virtual bool LoadPolicy();$/;"	p	class:CGMRequestAgent_NumNonu	access:public	signature:()
LoadPolicy	DMCore/Grounding/GroundingModels/GroundingModel.cpp	/^bool CGroundingModel::LoadPolicy() {$/;"	f	class:CGroundingModel	signature:()
LoadPolicy	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    virtual bool LoadPolicy();$/;"	p	class:CGroundingModel	access:public	signature:()
LocalC	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^CConcept& CDialogAgent::LocalC(string sConceptName) {$/;"	f	class:CDialogAgent	signature:(string sConceptName)
LocalC	DMCore/Agents/DialogAgents/DialogAgent.h	/^	virtual CConcept& LocalC(string sConceptName);$/;"	p	class:CDialogAgent	access:public	signature:(string sConceptName)
LockConceptGroundingRequestsQueue	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^void CGroundingManagerAgent::LockConceptGroundingRequestsQueue() {$/;"	f	class:CGroundingManagerAgent	signature:()
LockConceptGroundingRequestsQueue	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    void LockConceptGroundingRequestsQueue();$/;"	p	class:CGroundingManagerAgent	access:public	signature:()
Log	DMCore/Log.cpp	/^int Log(string sLoggingStream, const char* lpszFormat, ... ) {$/;"	f	signature:(string sLoggingStream, const char* lpszFormat, ... )
Log	DMCore/Log.cpp	/^int Log(string sLoggingStream, string sMessage) {$/;"	f	signature:(string sLoggingStream, string sMessage)
Log	DMCore/Log.h	/^int Log(string sLoggingStream, const char* lpszFormat, ... );$/;"	p	signature:(string sLoggingStream, const char* lpszFormat, ... )
Log	DMCore/Log.h	/^int Log(string sLoggingStream, string sMessage);$/;"	p	signature:(string sLoggingStream, string sMessage)
LogStateAction	DMCore/Grounding/GroundingModels/GMConcept.cpp	/^void CGMConcept::LogStateAction() {$/;"	f	class:CGMConcept	signature:()
LogStateAction	DMCore/Grounding/GroundingModels/GMConcept.h	/^    virtual void LogStateAction();$/;"	p	class:CGMConcept	access:public	signature:()
LogStateAction	DMCore/Grounding/GroundingModels/GMRequestAgent_LR.cpp	/^void CGMRequestAgent_LR::LogStateAction() {$/;"	f	class:CGMRequestAgent_LR	signature:()
LogStateAction	DMCore/Grounding/GroundingModels/GMRequestAgent_LR.h	/^    virtual void LogStateAction();$/;"	p	class:CGMRequestAgent_LR	access:public	signature:()
LogStateAction	DMCore/Grounding/GroundingModels/GroundingModel.cpp	/^void CGroundingModel::LogStateAction() {$/;"	f	class:CGroundingModel	signature:()
LogStateAction	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    virtual void LogStateAction();$/;"	p	class:CGroundingModel	access:public	signature:()
LongLong	spdlog/fmt/bundled/format.h	/^FMT_GCC_EXTENSION typedef long long LongLong;$/;"	t	namespace:fmt
LowBound	DMCore/Grounding/GroundingUtils.cpp	/^float& CBeliefDistribution::LowBound(unsigned int iIndex) {$/;"	f	class:CBeliefDistribution	signature:(unsigned int iIndex)
LowBound	DMCore/Grounding/GroundingUtils.h	/^	float& LowBound(unsigned int iIndex);$/;"	p	class:CBeliefDistribution	access:public	signature:(unsigned int iIndex)
MAGENTA	spdlog/fmt/bundled/format.h	/^    BLACK, RED, GREEN, YELLOW, BLUE, MAGENTA, CYAN, WHITE$/;"	e	enum:Color
MAX_ATTEMPTS	DMCore/Agents/DialogAgents/DialogAgent.h	694;"	d
MAX_PACKED_ARGS	spdlog/fmt/bundled/format.h	/^        MAX_PACKED_ARGS = 16$/;"	e	enum:fmt::ArgList::__anon28
MINUS_FLAG	spdlog/fmt/bundled/format.h	/^    SIGN_FLAG = 1, PLUS_FLAG = 2, MINUS_FLAG = 4, HASH_FLAG = 8,$/;"	e	enum:fmt::__anon29
MIXED_INITIATIVE	DMCore/Agents/DialogAgents/DialogAgent.h	212;"	d
MOVE_ON	DMCore/Grounding/GroundingActions/GAMoveOn.h	105;"	d
M_formatter	spdlog/details/pattern_formatter_impl.h	/^class M_formatter:public flag_formatter$/;"	c	namespace:spdlog::details	inherits:flag_formatter
MakeArg	spdlog/fmt/bundled/format.h	/^    MakeArg()$/;"	f	class:fmt::internal::MakeArg	access:public	signature:()
MakeArg	spdlog/fmt/bundled/format.h	/^    MakeArg(const T &value)$/;"	f	class:fmt::internal::MakeArg	access:public	signature:(const T &value)
MakeArg	spdlog/fmt/bundled/format.h	/^class MakeArg: public Arg$/;"	c	namespace:fmt::internal	inherits:Arg
MakeUnsigned	spdlog/fmt/bundled/format.h	/^struct MakeUnsigned$/;"	s	namespace:fmt::internal
MakeValue	spdlog/fmt/bundled/format.h	/^    MakeValue()$/;"	f	class:fmt::internal::MakeValue	access:public	signature:()
MakeValue	spdlog/fmt/bundled/format.h	/^    MakeValue(T *value);$/;"	p	class:fmt::internal::MakeValue	access:private	signature:(T *value)
MakeValue	spdlog/fmt/bundled/format.h	/^    MakeValue(const NamedArg<Char_> &value)$/;"	f	class:fmt::internal::MakeValue	access:public	signature:(const NamedArg<Char_> &value)
MakeValue	spdlog/fmt/bundled/format.h	/^    MakeValue(const NamedArgWithType<Char_, T> &value)$/;"	f	class:fmt::internal::MakeValue	access:public	signature:(const NamedArgWithType<Char_, T> &value)
MakeValue	spdlog/fmt/bundled/format.h	/^    MakeValue(const T &value,$/;"	f	class:fmt::internal::MakeValue	access:public	signature:(const T &value, typename EnableIf<ConvertToInt<T>::value, int>::type = 0)
MakeValue	spdlog/fmt/bundled/format.h	/^    MakeValue(const T &value,$/;"	f	class:fmt::internal::MakeValue	access:public	signature:(const T &value, typename EnableIf<Not< ConvertToInt<T>::value>::value, int>::type = 0)
MakeValue	spdlog/fmt/bundled/format.h	/^    MakeValue(const T *value);$/;"	p	class:fmt::internal::MakeValue	access:private	signature:(const T *value)
MakeValue	spdlog/fmt/bundled/format.h	/^    MakeValue(long value)$/;"	f	class:fmt::internal::MakeValue	access:public	signature:(long value)
MakeValue	spdlog/fmt/bundled/format.h	/^    MakeValue(typename WCharHelper<WStringRef, Char>::Unsupported);$/;"	p	class:fmt::internal::MakeValue	access:private	signature:(typename WCharHelper<WStringRef, Char>::Unsupported)
MakeValue	spdlog/fmt/bundled/format.h	/^    MakeValue(typename WCharHelper<const std::wstring &, Char>::Unsupported);$/;"	p	class:fmt::internal::MakeValue	access:private	signature:(typename WCharHelper<const std::wstring &, Char>::Unsupported)
MakeValue	spdlog/fmt/bundled/format.h	/^    MakeValue(typename WCharHelper<const wchar_t *, Char>::Unsupported);$/;"	p	class:fmt::internal::MakeValue	access:private	signature:(typename WCharHelper<const wchar_t *, Char>::Unsupported)
MakeValue	spdlog/fmt/bundled/format.h	/^    MakeValue(typename WCharHelper<wchar_t *, Char>::Unsupported);$/;"	p	class:fmt::internal::MakeValue	access:private	signature:(typename WCharHelper<wchar_t *, Char>::Unsupported)
MakeValue	spdlog/fmt/bundled/format.h	/^    MakeValue(typename WCharHelper<wchar_t, Char>::Supported value)$/;"	f	class:fmt::internal::MakeValue	access:public	signature:(typename WCharHelper<wchar_t, Char>::Supported value)
MakeValue	spdlog/fmt/bundled/format.h	/^    MakeValue(typename WCharHelper<wchar_t, Char>::Unsupported);$/;"	p	class:fmt::internal::MakeValue	access:private	signature:(typename WCharHelper<wchar_t, Char>::Unsupported)
MakeValue	spdlog/fmt/bundled/format.h	/^    MakeValue(unsigned long value)$/;"	f	class:fmt::internal::MakeValue	access:public	signature:(unsigned long value)
MakeValue	spdlog/fmt/bundled/format.h	/^class MakeValue: public Arg$/;"	c	namespace:fmt::internal	inherits:Arg
MapType	spdlog/fmt/bundled/format.h	/^    std::pair<fmt::BasicStringRef<Char>, internal::Arg> > MapType;$/;"	t	class:fmt::internal::ArgMap	access:private
MarkTurnLastUpdated	DMCore/Concepts/Concept.cpp	/^void CConcept::MarkTurnLastUpdated() {$/;"	f	class:CConcept	signature:()
MarkTurnLastUpdated	DMCore/Concepts/Concept.h	/^	virtual void MarkTurnLastUpdated();$/;"	p	class:CConcept	access:public	signature:()
Matches	DMCore/Events/InteractionEvent.cpp	/^bool CInteractionEvent::Matches(string sGrammarExpectation) {$/;"	f	class:CInteractionEvent	signature:(string sGrammarExpectation)
Matches	DMCore/Events/InteractionEvent.h	/^	bool Matches(string sGrammarExpectation);$/;"	p	class:CInteractionEvent	access:public	signature:(string sGrammarExpectation)
Matches	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.cpp	/^bool CCondition::Matches(CState &sState) {$/;"	f	class:CCondition	signature:(CState &sState)
Matches	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.cpp	/^bool CGMState::Matches(CState &sState) {$/;"	f	class:CGMState	signature:(CState &sState)
Matches	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.h	/^	bool Matches(CState &sState);$/;"	p	class:CCondition	access:public	signature:(CState &sState)
Matches	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.h	/^	bool Matches(CState &sState);$/;"	p	class:CGMState	access:public	signature:(CState &sState)
MemoryBuffer	spdlog/fmt/bundled/format.h	/^    MemoryBuffer(MemoryBuffer &&other)$/;"	f	class:fmt::internal::MemoryBuffer	access:public	signature:(MemoryBuffer &&other)
MemoryBuffer	spdlog/fmt/bundled/format.h	/^    explicit MemoryBuffer(const Allocator &alloc = Allocator())$/;"	f	class:fmt::internal::MemoryBuffer	access:public	signature:(const Allocator &alloc = Allocator())
MemoryBuffer	spdlog/fmt/bundled/format.h	/^class MemoryBuffer: private Allocator, public Buffer<T>$/;"	c	namespace:fmt::internal	inherits:Allocator,Buffer
MemoryWriter	spdlog/fmt/bundled/format.h	/^typedef BasicMemoryWriter<char> MemoryWriter;$/;"	t
MergeHistory	DMCore/Concepts/Concept.cpp	/^void CConcept::MergeHistory() {$/;"	f	class:CConcept	signature:()
MergeHistory	DMCore/Concepts/Concept.h	/^    virtual void MergeHistory();$/;"	p	class:CConcept	access:public	signature:()
MergeHistory	DMCore/Concepts/FrameConcept.cpp	/^void CFrameConcept::MergeHistory() {$/;"	f	class:CFrameConcept	signature:()
MergeHistory	DMCore/Concepts/FrameConcept.h	/^    virtual void MergeHistory();$/;"	p	class:CFrameConcept	access:public	signature:()
MountAgent	DMCore/Agents/CoreAgents/DTTManagerAgent.cpp	/^CDialogAgent* CDTTManagerAgent::MountAgent(CDialogAgent* pWhere, string sAgentType, $/;"	f	class:CDTTManagerAgent	signature:(CDialogAgent* pWhere, string sAgentType, string sAgentName, string sAgentConfiguration, TMountingMethod mmHow, string sDynamicAgentID)
MountAgent	DMCore/Agents/CoreAgents/DTTManagerAgent.cpp	/^CDialogAgent* MountAgent(CDialogAgent* pWhere, string sAgentType, $/;"	f	signature:(CDialogAgent* pWhere, string sAgentType, string sAgentName, string sAgentConfiguration, TMountingMethod mmHow)
MountAgent	DMCore/Agents/CoreAgents/DTTManagerAgent.cpp	/^void CDTTManagerAgent::MountAgent(CDialogAgent* pdaWhere, CDialogAgent* pdaWho, $/;"	f	class:CDTTManagerAgent	signature:(CDialogAgent* pdaWhere, CDialogAgent* pdaWho, TMountingMethod mmHow, string sDynamicAgentID)
MountAgent	DMCore/Agents/CoreAgents/DTTManagerAgent.h	/^	CDialogAgent* MountAgent(CDialogAgent* pWhere, string sAgentType, $/;"	p	class:CDTTManagerAgent	access:public	signature:(CDialogAgent* pWhere, string sAgentType, string sAgentName, string sAConfiguration, TMountingMethod mmHow, string sDynamicAgentID = Ó)
MountAgent	DMCore/Agents/CoreAgents/DTTManagerAgent.h	/^	void MountAgent(CDialogAgent* pdaWhere, CDialogAgent* pdaWho, $/;"	p	class:CDTTManagerAgent	access:public	signature:(CDialogAgent* pdaWhere, CDialogAgent* pdaWho, TMountingMethod mmHow, string sDynamicAgentID = Ó)
MountAgent	DMCore/Agents/CoreAgents/DTTManagerAgent.h	/^CDialogAgent* MountAgent(CDialogAgent* pWhere, string sAgentType, $/;"	p	signature:(CDialogAgent* pWhere, string sAgentType, string sAgentName, string sAConfiguration, TMountingMethod mmHow)
MountAgentsFromArrayConcept	DMCore/Agents/CoreAgents/DTTManagerAgent.cpp	/^void CDTTManagerAgent::MountAgentsFromArrayConcept($/;"	f	class:CDTTManagerAgent	signature:( CDialogAgent *pdaParent, string sArrayConceptName, string sAgentsType, string sAgentsName, string sAgentsConceptName, string sAgentsDynamicID)
MountAgentsFromArrayConcept	DMCore/Agents/CoreAgents/DTTManagerAgent.cpp	/^void MountAgentsFromArrayConcept(CDialogAgent *pdaParent, $/;"	f	signature:(CDialogAgent *pdaParent, string sArrayConceptName, string sAgentsType, string sAgentsName, string sAgentsConceptName)
MountAgentsFromArrayConcept	DMCore/Agents/CoreAgents/DTTManagerAgent.h	/^	void MountAgentsFromArrayConcept(CDialogAgent *pdaParent,	$/;"	p	class:CDTTManagerAgent	access:public	signature:(CDialogAgent *pdaParent, string sArrayConceptName, string sAgentsType, string sAgentsName, string sAgentsConceptName = Ó, string sAgentsDynamicID = Ó)
MountAgentsFromArrayConcept	DMCore/Agents/CoreAgents/DTTManagerAgent.h	/^void MountAgentsFromArrayConcept(CDialogAgent *pdaParent, $/;"	p	signature:(CDialogAgent *pdaParent, string sArrayConceptName, string sAgentsType, string sAgentsName, string sAgentsConceptName = Ó, string sAgentsDynamicID = Ó)
MountingMethodAsString	DMCore/Agents/CoreAgents/DTTManagerAgent.h	/^static string MountingMethodAsString[] = {"last child", $/;"	v
NAMED_ARG	spdlog/fmt/bundled/format.h	/^        NONE, NAMED_ARG,$/;"	e	enum:fmt::internal::Value::Type
NOMINMAX	spdlog/details/os.h	23;"	d
NOMINMAX	spdlog/fmt/bundled/format.cc	47;"	d	file:
NOMINMAX	spdlog/fmt/bundled/format.cc	49;"	d	file:
NONE	spdlog/fmt/bundled/format.h	/^        NONE, NAMED_ARG,$/;"	e	enum:fmt::internal::Value::Type
NONUNDERSTANDING_THRESHOLD	DMCore/Agents/DialogAgents/BasicAgents/MARequest.h	222;"	d
NON_UNDERSTANDING	DMCore/Core.h	101;"	d
NOTIFY_NONUNDERSTANDING	DMCore/Grounding/GroundingActions/GANotifyNonunderstanding.h	106;"	d
NOT_UPDATED	DialogTask/DialogTask.h	246;"	d
NO_ACTION	DMCore/Grounding/GroundingActions/GANoAction.h	96;"	d
NamedArg	spdlog/fmt/bundled/format.h	/^    NamedArg(BasicStringRef<Char> argname, const T &value)$/;"	f	struct:fmt::internal::NamedArg	access:public	signature:(BasicStringRef<Char> argname, const T &value)
NamedArg	spdlog/fmt/bundled/format.h	/^struct NamedArg: Arg$/;"	s	namespace:fmt::internal	inherits:Arg
NamedArgWithType	spdlog/fmt/bundled/format.h	/^    NamedArgWithType(BasicStringRef<Char> argname, const T &value)$/;"	f	struct:fmt::internal::NamedArgWithType	access:public	signature:(BasicStringRef<Char> argname, const T &value)
NamedArgWithType	spdlog/fmt/bundled/format.h	/^struct NamedArgWithType: NamedArg<Char>$/;"	s	namespace:fmt::internal	inherits:NamedArg
NextAgentToExecute	DMCore/Agents/DialogAgents/BasicAgents/DialogAgency.cpp	/^CDialogAgent* CDialogAgency::NextAgentToExecute() {$/;"	f	class:CDialogAgency	signature:()
NextAgentToExecute	DMCore/Agents/DialogAgents/BasicAgents/DialogAgency.h	/^	virtual CDialogAgent* NextAgentToExecute();$/;"	p	class:CDialogAgency	access:public	signature:()
No	spdlog/fmt/bundled/format.h	/^typedef char No[2];$/;"	t	namespace:fmt::internal
NoThousandsSep	spdlog/fmt/bundled/format.h	/^struct NoThousandsSep$/;"	s	namespace:fmt::internal
Normalize	DMCore/Grounding/GroundingUtils.cpp	/^void CBeliefDistribution::Normalize() {$/;"	f	class:CBeliefDistribution	signature:()
Normalize	DMCore/Grounding/GroundingUtils.h	/^    void Normalize();$/;"	p	class:CBeliefDistribution	access:public	signature:()
Not	spdlog/fmt/bundled/format.h	/^struct Not$/;"	s	namespace:fmt::internal
Not	spdlog/fmt/bundled/format.h	/^struct Not<false>$/;"	s	namespace:fmt::internal
NotEqualTo	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.h	/^		NotEqualTo,$/;"	e	enum:CCondition::TComparator
Notify	DMCore/Agents/CoreAgents/OutputManagerAgent.cpp	/^void COutputManagerAgent::Notify(int iOutputId, int iBargeinPos, $/;"	f	class:COutputManagerAgent	signature:(int iOutputId, int iBargeinPos, string sConveyance, string sTaggedUtt)
Notify	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^	void Notify(int iOutputId, int iBargeinPos, string sConveyance, $/;"	p	class:COutputManagerAgent	access:public	signature:(int iOutputId, int iBargeinPos, string sConveyance, string sTaggedUtt)
NotifyChange	DMCore/Concepts/Concept.cpp	/^void CConcept::NotifyChange() {$/;"	f	class:CConcept	signature:()
NotifyChange	DMCore/Concepts/Concept.h	/^    virtual void NotifyChange();$/;"	p	class:CConcept	access:public	signature:()
NotifyConceptConveyance	DMCore/Outputs/Output.cpp	/^void COutput::NotifyConceptConveyance(string sConceptName, $/;"	f	class:COutput	signature:(string sConceptName, TConveyance cAConveyance)
NotifyConceptConveyance	DMCore/Outputs/Output.h	/^  void NotifyConceptConveyance(string sConceptName, $/;"	p	class:COutput	access:public	signature:(string sConceptName, TConveyance cAConveyance)
Null	spdlog/fmt/bundled/format.h	/^struct Null$/;"	s	namespace:fmt::internal
Number	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.h	/^		Number,$/;"	e	enum:CCondition::TValueType
OAAS	Utils/Utils.h	142;"	d
OD_NOTIFIES	DMCore/Agents/CoreAgents/OutputManagerAgent.h	107;"	d
ON_COMPLETION	DMCore/Agents/DialogAgents/DialogAgent.h	737;"	d
ON_CREATION	DMCore/Agents/DialogAgents/DialogAgent.h	715;"	d
ON_DESTRUCTION	DMCore/Agents/DialogAgents/DialogAgent.h	722;"	d
ON_INITIALIZATION	DMCore/Agents/DialogAgents/DialogAgent.h	729;"	d
ON_REOPEN	DMCore/Agents/DialogAgents/DialogAgent.h	744;"	d
OUTPUTHISTORY_STREAM	DMCore/Log.h	98;"	d
OUTPUTMANAGER_STREAM	DMCore/Log.h	96;"	d
OUTPUT_DEVICE	DialogTask/DialogTask.h	113;"	d
OnCompletion	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^void CDialogAgent::OnCompletion() {$/;"	f	class:CDialogAgent	signature:()
OnCompletion	DMCore/Agents/DialogAgents/DialogAgent.h	/^	virtual void OnCompletion();$/;"	p	class:CDialogAgent	access:public	signature:()
OnCreation	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^void CDialogAgent::OnCreation() {$/;"	f	class:CDialogAgent	signature:()
OnCreation	DMCore/Agents/DialogAgents/DialogAgent.h	/^    virtual void OnCreation();$/;"	p	class:CDialogAgent	access:public	signature:()
OnDestruction	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^void CDialogAgent::OnDestruction() {$/;"	f	class:CDialogAgent	signature:()
OnDestruction	DMCore/Agents/DialogAgents/DialogAgent.h	/^    virtual void OnDestruction();$/;"	p	class:CDialogAgent	access:public	signature:()
OnInitialization	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^void CDialogAgent::OnInitialization() {$/;"	f	class:CDialogAgent	signature:()
OnInitialization	DMCore/Agents/DialogAgents/DialogAgent.h	/^	virtual void OnInitialization();$/;"	p	class:CDialogAgent	access:public	signature:()
Output	DMCore/Agents/CoreAgents/OutputManagerAgent.cpp	/^vector<COutput*> COutputManagerAgent::Output(CDialogAgent* pGeneratorAgent, $/;"	f	class:COutputManagerAgent	signature:(CDialogAgent* pGeneratorAgent, string sPrompts, TFloorStatus fsFinalFloorStatus)
Output	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^	vector<COutput*> Output(CDialogAgent* pGeneratorAgent, string sPrompts, TFloorStatus fsFinalFloorStatus);	$/;"	p	class:COutputManagerAgent	access:public	signature:(CDialogAgent* pGeneratorAgent, string sPrompts, TFloorStatus fsFinalFloorStatus)
PATH_MAX	Utils/Utils.h	117;"	d
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	269;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	272;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	275;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	278;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	281;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	284;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	287;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	290;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	293;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	296;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	299;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	302;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	305;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	308;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	311;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	314;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	317;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	320;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	323;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	326;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	329;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	332;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	335;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	338;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	341;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	345;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	348;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	351;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	354;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	357;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	361;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	264;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	267;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	270;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	273;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	276;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	279;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	282;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	285;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	288;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	291;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	294;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	297;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	300;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	303;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	306;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	309;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	312;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	315;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	318;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	321;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	324;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	327;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	330;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	333;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	336;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	340;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	343;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	346;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	349;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	352;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	356;"	d	file:
PLUS_FLAG	spdlog/fmt/bundled/format.h	/^    SIGN_FLAG = 1, PLUS_FLAG = 2, MINUS_FLAG = 4, HASH_FLAG = 8,$/;"	e	enum:fmt::__anon29
POINTER	spdlog/fmt/bundled/format.h	/^        CSTRING, STRING, WSTRING, POINTER, CUSTOM$/;"	e	enum:fmt::internal::Value::Type
POWERS_OF_10_32	spdlog/fmt/bundled/format.cc	/^	const uint32_t internal::BasicData<T>::POWERS_OF_10_32[] = {$/;"	m	class:fmt::internal::BasicData	file:
POWERS_OF_10_64	spdlog/fmt/bundled/format.cc	/^	const uint64_t internal::BasicData<T>::POWERS_OF_10_64[] = {$/;"	m	class:fmt::internal::BasicData	file:
PRECONDITION	DMCore/Agents/DialogAgents/DialogAgent.h	662;"	d
PROMPT	DMCore/Agents/DialogAgents/DialogAgent.h	801;"	d
PROMPT_ESTABLISHCONTEXT	DMCore/Agents/DialogAgents/DialogAgent.h	822;"	d
PROMPT_EXPLAINMORE	DMCore/Agents/DialogAgents/DialogAgent.h	815;"	d
PROMPT_TIMEOUT	DMCore/Agents/DialogAgents/DialogAgent.h	808;"	d
PROMPT_WHATCANISAY	DMCore/Agents/DialogAgents/DialogAgent.h	829;"	d
Pair	spdlog/fmt/bundled/format.h	/^    typedef typename MapType::value_type Pair;$/;"	t	class:fmt::internal::ArgMap	access:private
ParseBeginSession	Tools/RavenClawLogParser/RavenClawLogParser.pm	/^sub ParseBeginSession {$/;"	s
ParseConceptBindingPhase	Tools/RavenClawLogParser/RavenClawLogParser.pm	/^sub ParseConceptBindingPhase {$/;"	s
ParseExecutionPhase	Tools/RavenClawLogParser/RavenClawLogParser.pm	/^sub ParseExecutionPhase {$/;"	s
ParseExecutionStackDump	Tools/RavenClawLogParser/RavenClawLogParser.pm	/^sub ParseExecutionStackDump {$/;"	s
ParseExpectationAgendaDump	Tools/RavenClawLogParser/RavenClawLogParser.pm	/^sub ParseExpectationAgendaDump {$/;"	s
ParseGroundingPhase	Tools/RavenClawLogParser/RavenClawLogParser.pm	/^sub ParseGroundingPhase {$/;"	s
ParseInput	Tools/RavenClawLogParser/RavenClawLogParser.pm	/^sub ParseInput {$/;"	s
ParseInputPhase	Tools/RavenClawLogParser/RavenClawLogParser.pm	/^sub ParseInputPhase {$/;"	s
ParseRavenClawLog	Tools/RavenClawLogParser/RavenClawLogParser.pm	/^sub ParseRavenClawLog {$/;"	s
PartitionString	Utils/Utils.cpp	/^vector<string> PartitionString(string sString, char * pDividers) {$/;"	f	signature:(string sString, char * pDividers)
PartitionString	Utils/Utils.cpp	/^vector<string> PartitionString(string sString, char * pDividers, char cQuote) {$/;"	f	signature:(string sString, char * pDividers, char cQuote)
PartitionString	Utils/Utils.h	/^vector<string> PartitionString(string sString, char * pDividers);$/;"	p	signature:(string sString, char * pDividers)
PartitionString	Utils/Utils.h	/^vector<string> PartitionString(string sString, char * pDividers, char cQuote);$/;"	p	signature:(string sString, char * pDividers, char cQuote)
PopAgentFromExecutionStack	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^void CDMCoreAgent::PopAgentFromExecutionStack(CDialogAgent* pdaADialogAgent) {$/;"	f	class:CDMCoreAgent	signature:(CDialogAgent* pdaADialogAgent)
PopAgentFromExecutionStack	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^    void PopAgentFromExecutionStack(CDialogAgent* pdaADialogAgent);$/;"	p	class:CDMCoreAgent	access:public	signature:(CDialogAgent* pdaADialogAgent)
PopGroundingAgentsFromExecutionStack	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^void CDMCoreAgent::PopGroundingAgentsFromExecutionStack() {$/;"	f	class:CDMCoreAgent	signature:()
PopGroundingAgentsFromExecutionStack	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^    void PopGroundingAgentsFromExecutionStack();$/;"	p	class:CDMCoreAgent	access:public	signature:()
PopTopicFromExecutionStack	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^void CDMCoreAgent::PopTopicFromExecutionStack(CDialogAgent* pdaADialogAgent) {$/;"	f	class:CDMCoreAgent	signature:(CDialogAgent* pdaADialogAgent)
PopTopicFromExecutionStack	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^    void PopTopicFromExecutionStack(CDialogAgent* pdaADialogAgent);$/;"	p	class:CDMCoreAgent	access:public	signature:(CDialogAgent* pdaADialogAgent)
PrecisionHandler	spdlog/fmt/bundled/printf.h	/^class PrecisionHandler: public ArgVisitor<PrecisionHandler, int>$/;"	c	namespace:fmt::internal	inherits:ArgVisitor
PrecomputeBeliefUpdatingFeatures	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^void CGroundingManagerAgent::PrecomputeBeliefUpdatingFeatures($/;"	f	class:CGroundingManagerAgent	signature:( CConcept* pIConcept, CConcept* pNewConcept, string sSystemAction)
PrecomputeBeliefUpdatingFeatures	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^	virtual void PrecomputeBeliefUpdatingFeatures($/;"	p	class:CGroundingManagerAgent	access:public	signature:( CConcept* pIConcept, CConcept* pNewConcept, string sSystemAction)
PreconditionsSatisfied	DMCore/Agents/DialogAgents/BasicAgents/MAExpect.cpp	/^bool CMAExpect::PreconditionsSatisfied() {$/;"	f	class:CMAExpect	signature:()
PreconditionsSatisfied	DMCore/Agents/DialogAgents/BasicAgents/MAExpect.h	/^	virtual bool PreconditionsSatisfied();$/;"	p	class:CMAExpect	access:public	signature:()
PreconditionsSatisfied	DMCore/Agents/DialogAgents/BasicAgents/MARequest.cpp	/^bool CMARequest::PreconditionsSatisfied() {$/;"	f	class:CMARequest	signature:()
PreconditionsSatisfied	DMCore/Agents/DialogAgents/BasicAgents/MARequest.h	/^	virtual bool PreconditionsSatisfied();$/;"	p	class:CMARequest	access:public	signature:()
PreconditionsSatisfied	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^bool CDialogAgent::PreconditionsSatisfied() {$/;"	f	class:CDialogAgent	signature:()
PreconditionsSatisfied	DMCore/Agents/DialogAgents/DialogAgent.h	/^	virtual bool PreconditionsSatisfied();$/;"	p	class:CDialogAgent	access:public	signature:()
PreliminaryNotify	DMCore/Agents/CoreAgents/OutputManagerAgent.cpp	/^void COutputManagerAgent::PreliminaryNotify(int iOutputId, string sTaggedUtt) {$/;"	f	class:COutputManagerAgent	signature:(int iOutputId, string sTaggedUtt)
PreliminaryNotify	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^	void PreliminaryNotify(int iOutputId, string sTaggedUtt);$/;"	p	class:COutputManagerAgent	access:public	signature:(int iOutputId, string sTaggedUtt)
PrintfArgFormatter	spdlog/fmt/bundled/printf.h	/^    PrintfArgFormatter(BasicWriter<Char> &w, FormatSpec &s)$/;"	f	class:fmt::PrintfArgFormatter	access:public	signature:(BasicWriter<Char> &w, FormatSpec &s)
PrintfArgFormatter	spdlog/fmt/bundled/printf.h	/^class PrintfArgFormatter$/;"	c	namespace:fmt	inherits:BasicPrintfArgFormatter
PrintfFormatter	spdlog/fmt/bundled/printf.h	/^    explicit PrintfFormatter(const ArgList &al, BasicWriter<Char> &w)$/;"	f	class:fmt::PrintfFormatter	access:public	signature:(const ArgList &al, BasicWriter<Char> &w)
PrintfFormatter	spdlog/fmt/bundled/printf.h	/^class PrintfFormatter: private internal::FormatterBase$/;"	c	namespace:fmt	inherits:internal::FormatterBase
Prompt	DMCore/Agents/DialogAgents/BasicAgents/MAInform.cpp	/^string CMAInform::Prompt() {$/;"	f	class:CMAInform	signature:()
Prompt	DMCore/Agents/DialogAgents/BasicAgents/MAInform.h	/^	virtual string Prompt();$/;"	p	class:CMAInform	access:public	signature:()
Prompt	DMCore/Agents/DialogAgents/BasicAgents/MARequest.cpp	/^string CMARequest::Prompt() {$/;"	f	class:CMARequest	signature:()
Prompt	DMCore/Agents/DialogAgents/BasicAgents/MARequest.h	/^	virtual string Prompt();$/;"	p	class:CMARequest	access:public	signature:()
Prompt	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^string CDialogAgent::Prompt() {$/;"	f	class:CDialogAgent	signature:()
Prompt	DMCore/Agents/DialogAgents/DialogAgent.h	/^	virtual string Prompt();$/;"	p	class:CDialogAgent	access:public	signature:()
PurgeConceptGroundingRequestsQueue	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^void CGroundingManagerAgent::PurgeConceptGroundingRequestsQueue() {$/;"	f	class:CGroundingManagerAgent	signature:()
PurgeConceptGroundingRequestsQueue	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    void PurgeConceptGroundingRequestsQueue();$/;"	p	class:CGroundingManagerAgent	access:public	signature:()
RCP_DEFAULT_NONUNDERSTANDING_THRESHOLD	DMCore/Core.h	91;"	d
RCP_DEFAULT_TIMEOUT	DMCore/Core.h	90;"	d
RCP_DIALOG_STATES_FILE	DMCore/Core.h	86;"	d
RCP_DISPLAYED_STREAMS	DMCore/Core.h	82;"	d
RCP_DMI_VERBOSITY	DMCore/Core.h	80;"	d
RCP_EXIT_ON_FATAL_ERROR	DMCore/Core.h	83;"	d
RCP_GROUNDING_MANAGER_CONFIGURATION	DMCore/Core.h	87;"	d
RCP_GROUNDING_POLICIES	DMCore/Core.h	84;"	d
RCP_GROUNDING_POLICIES_FILE	DMCore/Core.h	85;"	d
RCP_LOGGED_STREAMS	DMCore/Core.h	81;"	d
RCP_LOG_DIR	DMCore/Core.h	88;"	d
RCP_LOG_PREFIX	DMCore/Core.h	89;"	d
RCP_SERVER_NAME	DMCore/Core.h	92;"	d
RCP_SERVER_PORT	DMCore/Core.h	93;"	d
RED	spdlog/fmt/bundled/format.h	/^    BLACK, RED, GREEN, YELLOW, BLUE, MAGENTA, CYAN, WHITE$/;"	e	enum:Color
RED	spdlog/sinks/wincolor_sink.h	/^    const WORD RED = FOREGROUND_RED;$/;"	m	class:spdlog::sinks::wincolor_sink	access:public
REGISTRY_STREAM	DMCore/Log.h	87;"	d
REOPEN	DMCore/Agents/DialogAgents/DialogAgent.h	754;"	d
REOPEN_AGENT	DialogTask/DialogTask.h	239;"	d
REOPEN_CONCEPT	DialogTask/DialogTask.h	256;"	d
REOPEN_ON_COMPLETION	DialogTask/DialogTask.h	212;"	d
REOPEN_TOPIC	DialogTask/DialogTask.h	240;"	d
REPEAT_PROMPT	DMCore/Grounding/GroundingActions/GARepeatPrompt.h	112;"	d
REQUEST_CONCEPT	DMCore/Agents/DialogAgents/BasicAgents/MARequest.h	201;"	d
REQUIRES_FLOOR	DMCore/Agents/DialogAgents/DialogAgent.h	773;"	d
RESET	DMCore/Agents/DialogAgents/DialogAgent.h	752;"	d
RESET_AGENT	DialogTask/DialogTask.h	238;"	d
RESET_COLOR	spdlog/fmt/bundled/format.cc	/^		const char RESET_COLOR[] = "\\x1b[0m";$/;"	m	namespace:fmt::__anon2	file:
RESET_ON_COMPLETION	DialogTask/DialogTask.h	211;"	d
RESTORE_CONCEPT	DialogTask/DialogTask.h	257;"	d
RM	Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
R_formatter	spdlog/details/pattern_formatter_impl.h	/^class R_formatter:public flag_formatter$/;"	c	namespace:spdlog::details	inherits:flag_formatter
ReCreateDialogTree	DMCore/Agents/CoreAgents/DTTManagerAgent.cpp	/^void CDTTManagerAgent::ReCreateDialogTree() {$/;"	f	class:CDTTManagerAgent	signature:()
ReCreateDialogTree	DMCore/Agents/CoreAgents/DTTManagerAgent.h	/^    void ReCreateDialogTree();          \/\/ recreates the dialog tree$/;"	p	class:CDTTManagerAgent	access:public	signature:()
ReOpen	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^void CDialogAgent::ReOpen() {$/;"	f	class:CDialogAgent	signature:()
ReOpen	DMCore/Agents/DialogAgents/DialogAgent.h	/^	virtual void ReOpen();$/;"	p	class:CDialogAgent	access:public	signature:()
ReOpen	DMCore/Concepts/Concept.cpp	/^void CConcept::ReOpen() {$/;"	f	class:CConcept	signature:()
ReOpen	DMCore/Concepts/Concept.h	/^    virtual void ReOpen();$/;"	p	class:CConcept	access:public	signature:()
ReOpen	DMCore/Concepts/FrameConcept.cpp	/^void CFrameConcept::ReOpen() {$/;"	f	class:CFrameConcept	signature:()
ReOpen	DMCore/Concepts/FrameConcept.h	/^    virtual void ReOpen();$/;"	p	class:CFrameConcept	access:public	signature:()
ReOpenConcepts	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^void CDialogAgent::ReOpenConcepts() {$/;"	f	class:CDialogAgent	signature:()
ReOpenConcepts	DMCore/Agents/DialogAgents/DialogAgent.h	/^	virtual void ReOpenConcepts();$/;"	p	class:CDialogAgent	access:public	signature:()
ReOpenTopic	DMCore/Agents/DialogAgents/BasicAgents/MAInform.cpp	/^void CMAInform::ReOpenTopic() {$/;"	f	class:CMAInform	signature:()
ReOpenTopic	DMCore/Agents/DialogAgents/BasicAgents/MAInform.h	/^	virtual void ReOpenTopic();$/;"	p	class:CMAInform	access:public	signature:()
ReOpenTopic	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^void CDialogAgent::ReOpenTopic() {$/;"	f	class:CDialogAgent	signature:()
ReOpenTopic	DMCore/Agents/DialogAgents/DialogAgent.h	/^	virtual void ReOpenTopic();$/;"	p	class:CDialogAgent	access:public	signature:()
Register	DMCore/Agents/Agent.cpp	/^void CAgent::Register() {$/;"	f	class:CAgent	signature:()
Register	DMCore/Agents/Agent.h	/^	virtual void Register();$/;"	p	class:CAgent	access:public	signature:()
Register	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^void CDialogAgent::Register() {$/;"	f	class:CDialogAgent	signature:()
Register	DMCore/Agents/DialogAgents/DialogAgent.h	/^	virtual void Register();$/;"	p	class:CDialogAgent	access:public	signature:()
RegisterAgent	DMCore/Agents/Registry.cpp	/^void CRegistry::RegisterAgent(string sAgentName, CAgent* pAgent)$/;"	f	class:CRegistry	signature:(string sAgentName, CAgent* pAgent)
RegisterAgent	DMCore/Agents/Registry.h	/^	void RegisterAgent(string sAgentName, CAgent* pAgent);$/;"	p	class:CRegistry	access:public	signature:(string sAgentName, CAgent* pAgent)
RegisterAgentType	DMCore/Agents/Registry.cpp	/^void CRegistry::RegisterAgentType(string sAgentTypeName, $/;"	f	class:CRegistry	signature:(string sAgentTypeName, FCreateAgent fctCreateAgent)
RegisterAgentType	DMCore/Agents/Registry.h	/^	void RegisterAgentType(string sAgentTypeName, FCreateAgent fctCreateAgent);$/;"	p	class:CRegistry	access:public	signature:(string sAgentTypeName, FCreateAgent fctCreateAgent)
RegisterAllDiscourseAgents	DMCore/Agents/DialogAgents/DiscourseAgents/AllDiscourseAgents.cpp	/^void RegisterAllDiscourseAgents() {$/;"	f	signature:()
RegisterBindingFilter	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^void CDMCoreAgent::RegisterBindingFilter(string sBindingFilterName, $/;"	f	class:CDMCoreAgent	signature:(string sBindingFilterName, TBindingFilterFunct bffFilter)
RegisterBindingFilter	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^    void RegisterBindingFilter(string sBindingFilterName, $/;"	p	class:CDMCoreAgent	access:public	signature:(string sBindingFilterName, TBindingFilterFunct bffFilter)
RegisterCustomStartOver	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^void CDMCoreAgent::RegisterCustomStartOver(TCustomStartOverFunct csoAStartOverFunct) {$/;"	f	class:CDMCoreAgent	signature:(TCustomStartOverFunct csoAStartOverFunct)
RegisterCustomStartOver	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	void RegisterCustomStartOver(TCustomStartOverFunct csoAStartOverFunct);$/;"	p	class:CDMCoreAgent	access:public	signature:(TCustomStartOverFunct csoAStartOverFunct)
RegisterDialogAgency	DMCore/Grounding/GroundingActions/GAAccept.cpp	/^void CGAAccept::RegisterDialogAgency() {$/;"	f	class:CGAAccept	signature:()
RegisterDialogAgency	DMCore/Grounding/GroundingActions/GAAccept.h	/^    virtual void RegisterDialogAgency();$/;"	p	class:CGAAccept	access:public	signature:()
RegisterDialogAgency	DMCore/Grounding/GroundingActions/GAAskRepeat.cpp	/^void CGAAskRepeat::RegisterDialogAgency() {$/;"	f	class:CGAAskRepeat	signature:()
RegisterDialogAgency	DMCore/Grounding/GroundingActions/GAAskRepeat.h	/^    virtual void RegisterDialogAgency();$/;"	p	class:CGAAskRepeat	access:public	signature:()
RegisterDialogAgency	DMCore/Grounding/GroundingActions/GAAskRephrase.cpp	/^void CGAAskRephrase::RegisterDialogAgency() {$/;"	f	class:CGAAskRephrase	signature:()
RegisterDialogAgency	DMCore/Grounding/GroundingActions/GAAskRephrase.h	/^    virtual void RegisterDialogAgency();$/;"	p	class:CGAAskRephrase	access:public	signature:()
RegisterDialogAgency	DMCore/Grounding/GroundingActions/GAAskShortAnswerAndReprompt.cpp	/^void CGAAskShortAnswerAndReprompt::RegisterDialogAgency() {$/;"	f	class:CGAAskShortAnswerAndReprompt	signature:()
RegisterDialogAgency	DMCore/Grounding/GroundingActions/GAAskShortAnswerAndReprompt.h	/^    virtual void RegisterDialogAgency();$/;"	p	class:CGAAskShortAnswerAndReprompt	access:public	signature:()
RegisterDialogAgency	DMCore/Grounding/GroundingActions/GAAskShortAnswerAndWhatCanISay.cpp	/^void CGAAskShortAnswerAndWhatCanISay::RegisterDialogAgency() {$/;"	f	class:CGAAskShortAnswerAndWhatCanISay	signature:()
RegisterDialogAgency	DMCore/Grounding/GroundingActions/GAAskShortAnswerAndWhatCanISay.h	/^    virtual void RegisterDialogAgency();$/;"	p	class:CGAAskShortAnswerAndWhatCanISay	access:public	signature:()
RegisterDialogAgency	DMCore/Grounding/GroundingActions/GAAskStartOver.cpp	/^void CGAAskStartOver::RegisterDialogAgency() {$/;"	f	class:CGAAskStartOver	signature:()
RegisterDialogAgency	DMCore/Grounding/GroundingActions/GAAskStartOver.h	/^    virtual void RegisterDialogAgency();$/;"	p	class:CGAAskStartOver	access:public	signature:()
RegisterDialogAgency	DMCore/Grounding/GroundingActions/GAExplainMore.cpp	/^void CGAExplainMore::RegisterDialogAgency() {$/;"	f	class:CGAExplainMore	signature:()
RegisterDialogAgency	DMCore/Grounding/GroundingActions/GAExplainMore.h	/^    virtual void RegisterDialogAgency();$/;"	p	class:CGAExplainMore	access:public	signature:()
RegisterDialogAgency	DMCore/Grounding/GroundingActions/GAExplicitConfirm.cpp	/^void CGAExplicitConfirm::RegisterDialogAgency() {$/;"	f	class:CGAExplicitConfirm	signature:()
RegisterDialogAgency	DMCore/Grounding/GroundingActions/GAExplicitConfirm.h	/^    virtual void RegisterDialogAgency();$/;"	p	class:CGAExplicitConfirm	access:public	signature:()
RegisterDialogAgency	DMCore/Grounding/GroundingActions/GAFailRequest.cpp	/^void CGAFailRequest::RegisterDialogAgency() {$/;"	f	class:CGAFailRequest	signature:()
RegisterDialogAgency	DMCore/Grounding/GroundingActions/GAFailRequest.h	/^    virtual void RegisterDialogAgency();$/;"	p	class:CGAFailRequest	access:public	signature:()
RegisterDialogAgency	DMCore/Grounding/GroundingActions/GAFullHelp.cpp	/^void CGAFullHelp::RegisterDialogAgency() {$/;"	f	class:CGAFullHelp	signature:()
RegisterDialogAgency	DMCore/Grounding/GroundingActions/GAFullHelp.h	/^    virtual void RegisterDialogAgency();$/;"	p	class:CGAFullHelp	access:public	signature:()
RegisterDialogAgency	DMCore/Grounding/GroundingActions/GAGiveUp.cpp	/^void CGAGiveUp::RegisterDialogAgency() {$/;"	f	class:CGAGiveUp	signature:()
RegisterDialogAgency	DMCore/Grounding/GroundingActions/GAGiveUp.h	/^    virtual void RegisterDialogAgency();$/;"	p	class:CGAGiveUp	access:public	signature:()
RegisterDialogAgency	DMCore/Grounding/GroundingActions/GAImplicitConfirm.cpp	/^void CGAImplicitConfirm::RegisterDialogAgency() {$/;"	f	class:CGAImplicitConfirm	signature:()
RegisterDialogAgency	DMCore/Grounding/GroundingActions/GAImplicitConfirm.h	/^    virtual void RegisterDialogAgency();$/;"	p	class:CGAImplicitConfirm	access:public	signature:()
RegisterDialogAgency	DMCore/Grounding/GroundingActions/GAInteractionTips.cpp	/^void CGAInteractionTips::RegisterDialogAgency() {$/;"	f	class:CGAInteractionTips	signature:()
RegisterDialogAgency	DMCore/Grounding/GroundingActions/GAInteractionTips.h	/^    virtual void RegisterDialogAgency();$/;"	p	class:CGAInteractionTips	access:public	signature:()
RegisterDialogAgency	DMCore/Grounding/GroundingActions/GAMoveOn.cpp	/^void CGAMoveOn::RegisterDialogAgency() {$/;"	f	class:CGAMoveOn	signature:()
RegisterDialogAgency	DMCore/Grounding/GroundingActions/GAMoveOn.h	/^    virtual void RegisterDialogAgency();$/;"	p	class:CGAMoveOn	access:public	signature:()
RegisterDialogAgency	DMCore/Grounding/GroundingActions/GANoAction.cpp	/^void CGANoAction::RegisterDialogAgency() {$/;"	f	class:CGANoAction	signature:()
RegisterDialogAgency	DMCore/Grounding/GroundingActions/GANoAction.h	/^    virtual void RegisterDialogAgency();$/;"	p	class:CGANoAction	access:public	signature:()
RegisterDialogAgency	DMCore/Grounding/GroundingActions/GANotifyNonunderstanding.cpp	/^void CGANotifyNonunderstanding::RegisterDialogAgency() {$/;"	f	class:CGANotifyNonunderstanding	signature:()
RegisterDialogAgency	DMCore/Grounding/GroundingActions/GANotifyNonunderstanding.h	/^    virtual void RegisterDialogAgency();$/;"	p	class:CGANotifyNonunderstanding	access:public	signature:()
RegisterDialogAgency	DMCore/Grounding/GroundingActions/GARepeatPrompt.cpp	/^void CGARepeatPrompt::RegisterDialogAgency() {$/;"	f	class:CGARepeatPrompt	signature:()
RegisterDialogAgency	DMCore/Grounding/GroundingActions/GARepeatPrompt.h	/^    virtual void RegisterDialogAgency();$/;"	p	class:CGARepeatPrompt	access:public	signature:()
RegisterDialogAgency	DMCore/Grounding/GroundingActions/GASpeakLessLoudAndReprompt.cpp	/^void CGASpeakLessLoudAndReprompt::RegisterDialogAgency() {$/;"	f	class:CGASpeakLessLoudAndReprompt	signature:()
RegisterDialogAgency	DMCore/Grounding/GroundingActions/GASpeakLessLoudAndReprompt.h	/^    virtual void RegisterDialogAgency();$/;"	p	class:CGASpeakLessLoudAndReprompt	access:public	signature:()
RegisterDialogAgency	DMCore/Grounding/GroundingActions/GAWhatCanISay.cpp	/^void CGAWhatCanISay::RegisterDialogAgency() {$/;"	f	class:CGAWhatCanISay	signature:()
RegisterDialogAgency	DMCore/Grounding/GroundingActions/GAWhatCanISay.h	/^    virtual void RegisterDialogAgency();$/;"	p	class:CGAWhatCanISay	access:public	signature:()
RegisterDialogAgency	DMCore/Grounding/GroundingActions/GAYieldTurn.cpp	/^void CGAYieldTurn::RegisterDialogAgency() {$/;"	f	class:CGAYieldTurn	signature:()
RegisterDialogAgency	DMCore/Grounding/GroundingActions/GAYieldTurn.h	/^    virtual void RegisterDialogAgency();$/;"	p	class:CGAYieldTurn	access:public	signature:()
RegisterDialogAgency	DMCore/Grounding/GroundingActions/GroundingAction.h	/^    virtual void RegisterDialogAgency() = 0;$/;"	p	class:CGroundingAction	access:public	signature:()
RegisterGroundingModelType	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^void CGroundingManagerAgent::RegisterGroundingModelType(string sName, $/;"	f	class:CGroundingManagerAgent	signature:(string sName, FCreateGroundingModel fctCreateGroundingModel)
RegisterGroundingModelType	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    void RegisterGroundingModelType(string sName, $/;"	p	class:CGroundingManagerAgent	access:public	signature:(string sName, FCreateGroundingModel fctCreateGroundingModel)
RegisterHelpAgent	DMCore/Agents/DialogAgents/DiscourseAgents/DAHelp.cpp	/^void RegisterHelpAgent() {$/;"	f	signature:()
RegisterHelpAgent	DMCore/Agents/DialogAgents/DiscourseAgents/DAHelp.h	/^void RegisterHelpAgent();$/;"	p	signature:()
RegisterHelpEstablishContextAgent	DMCore/Agents/DialogAgents/DiscourseAgents/DAHelp.cpp	/^void RegisterHelpEstablishContextAgent() {$/;"	f	signature:()
RegisterHelpEstablishContextAgent	DMCore/Agents/DialogAgents/DiscourseAgents/DAHelp.h	/^void RegisterHelpEstablishContextAgent();$/;"	p	signature:()
RegisterHelpGetTipsAgent	DMCore/Agents/DialogAgents/DiscourseAgents/DAHelp.cpp	/^void RegisterHelpGetTipsAgent() {$/;"	f	signature:()
RegisterHelpGetTipsAgent	DMCore/Agents/DialogAgents/DiscourseAgents/DAHelp.h	/^void RegisterHelpGetTipsAgent();$/;"	p	signature:()
RegisterHelpSystemCapabilitiesAgent	DMCore/Agents/DialogAgents/DiscourseAgents/DAHelp.cpp	/^void RegisterHelpSystemCapabilitiesAgent() {$/;"	f	signature:()
RegisterHelpSystemCapabilitiesAgent	DMCore/Agents/DialogAgents/DiscourseAgents/DAHelp.h	/^void RegisterHelpSystemCapabilitiesAgent();     $/;"	p	signature:()
RegisterHelpWhatCanISayAgent	DMCore/Agents/DialogAgents/DiscourseAgents/DAHelp.cpp	/^void RegisterHelpWhatCanISayAgent() {$/;"	f	signature:()
RegisterHelpWhatCanISayAgent	DMCore/Agents/DialogAgents/DiscourseAgents/DAHelp.h	/^void RegisterHelpWhatCanISayAgent();$/;"	p	signature:()
RegisterNonUnderstandingAgents	DMCore/Agents/DialogAgents/DiscourseAgents/DANonUnderstanding.cpp	/^void RegisterNonUnderstandingAgents() {$/;"	f	signature:()
RegisterNonUnderstandingAgents	DMCore/Agents/DialogAgents/DiscourseAgents/DANonUnderstanding.h	/^void RegisterNonUnderstandingAgents();$/;"	p	signature:()
RegisterOutputDevice	DMCore/Agents/CoreAgents/OutputManagerAgent.cpp	/^bool COutputManagerAgent::RegisterOutputDevice(string sName, string sServerCall,$/;"	f	class:COutputManagerAgent	signature:(string sName, string sServerCall, int iParams )
RegisterOutputDevice	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^	bool RegisterOutputDevice(string sName, string sServerCall, $/;"	p	class:COutputManagerAgent	access:public	signature:(string sName, string sServerCall, int iParams = 0)
RegisterQuitAgency	DMCore/Agents/DialogAgents/DiscourseAgents/DAQuit.cpp	/^void RegisterQuitAgency() {$/;"	f	signature:()
RegisterQuitAgency	DMCore/Agents/DialogAgents/DiscourseAgents/DAQuit.h	/^void RegisterQuitAgency();$/;"	p	signature:()
RegisterRepeatAgent	DMCore/Agents/DialogAgents/DiscourseAgents/DARepeat.cpp	/^void RegisterRepeatAgent() {$/;"	f	signature:()
RegisterRepeatAgent	DMCore/Agents/DialogAgents/DiscourseAgents/DARepeat.h	/^void RegisterRepeatAgent();$/;"	p	signature:()
RegisterStartOverAgency	DMCore/Agents/DialogAgents/DiscourseAgents/DAStartOver.cpp	/^void RegisterStartOverAgency() {$/;"	f	signature:()
RegisterStartOverAgency	DMCore/Agents/DialogAgents/DiscourseAgents/DAStartOver.h	/^void RegisterStartOverAgency();$/;"	p	signature:()
RegisterSuspendAgency	DMCore/Agents/DialogAgents/DiscourseAgents/DASuspend.cpp	/^void RegisterSuspendAgency() {$/;"	f	signature:()
RegisterSuspendAgency	DMCore/Agents/DialogAgents/DiscourseAgents/DASuspend.h	/^void RegisterSuspendAgency();$/;"	p	signature:()
RegisterTerminateAgent	DMCore/Agents/DialogAgents/DiscourseAgents/DATerminate.cpp	/^void RegisterTerminateAgent() {$/;"	f	signature:()
RegisterTerminateAgent	DMCore/Agents/DialogAgents/DiscourseAgents/DATerminate.h	/^void RegisterTerminateAgent();$/;"	p	signature:()
RegisterTerminateAndCloseSessionAgent	DMCore/Agents/DialogAgents/DiscourseAgents/DATerminate.cpp	/^void RegisterTerminateAndCloseSessionAgent() {$/;"	f	signature:()
RegisterTerminateAndCloseSessionAgent	DMCore/Agents/DialogAgents/DiscourseAgents/DATerminate.h	/^void RegisterTerminateAndCloseSessionAgent();$/;"	p	signature:()
RegisterTimeoutSuspendAgency	DMCore/Agents/DialogAgents/DiscourseAgents/DATimeout.cpp	/^void RegisterTimeoutSuspendAgency() {$/;"	f	signature:()
RegisterTimeoutSuspendAgency	DMCore/Agents/DialogAgents/DiscourseAgents/DATimeout.h	/^void RegisterTimeoutSuspendAgency();$/;"	p	signature:()
RegisterTimeoutTerminateAgency	DMCore/Agents/DialogAgents/DiscourseAgents/DATimeout.cpp	/^void RegisterTimeoutTerminateAgency() {$/;"	f	signature:()
RegisterTimeoutTerminateAgency	DMCore/Agents/DialogAgents/DiscourseAgents/DATimeout.h	/^void RegisterTimeoutTerminateAgency();$/;"	p	signature:()
ReleaseExternalPolicyInterfaces	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^void CGroundingManagerAgent::ReleaseExternalPolicyInterfaces() {$/;"	f	class:CGroundingManagerAgent	signature:()
ReleaseExternalPolicyInterfaces	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    void ReleaseExternalPolicyInterfaces();$/;"	p	class:CGroundingManagerAgent	access:public	signature:()
RemoveConceptGroundingRequest	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^void CGroundingManagerAgent::RemoveConceptGroundingRequest(CConcept* pConcept) {$/;"	f	class:CGroundingManagerAgent	signature:(CConcept* pConcept)
RemoveConceptGroundingRequest	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^	void RemoveConceptGroundingRequest(CConcept* pConcept);$/;"	p	class:CGroundingManagerAgent	access:public	signature:(CConcept* pConcept)
Repeat	DMCore/Agents/CoreAgents/OutputManagerAgent.cpp	/^void COutputManagerAgent::Repeat() {$/;"	f	class:COutputManagerAgent	signature:()
Repeat	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^	void Repeat();$/;"	p	class:COutputManagerAgent	access:public	signature:()
ReplaceSubString	Utils/Utils.cpp	/^string ReplaceSubString(string sSource, string sToReplace, string sReplacement) {$/;"	f	signature:(string sSource, string sToReplace, string sReplacement)
ReplaceSubString	Utils/Utils.h	/^string ReplaceSubString(string sSource, string sToReplace, string sReplacement=string());$/;"	p	signature:(string sSource, string sToReplace, string sReplacement=string())
RequestConceptGrounding	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^void CGroundingManagerAgent::RequestConceptGrounding(CConcept* pConcept) {$/;"	f	class:CGroundingManagerAgent	signature:(CConcept* pConcept)
RequestConceptGrounding	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    void RequestConceptGrounding(CConcept* pConcept);$/;"	p	class:CGroundingManagerAgent	access:public	signature:(CConcept* pConcept)
RequestTurnGrounding	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^void CGroundingManagerAgent::RequestTurnGrounding(bool bATurnGroundingRequest) {$/;"	f	class:CGroundingManagerAgent	signature:(bool bATurnGroundingRequest)
RequestTurnGrounding	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    void RequestTurnGrounding(bool bATurnGroundingRequest = true);$/;"	p	class:CGroundingManagerAgent	access:public	signature:(bool bATurnGroundingRequest = true)
RequestedConcept	DMCore/Agents/DialogAgents/BasicAgents/MARequest.cpp	/^CConcept* CMARequest::RequestedConcept() {$/;"	f	class:CMARequest	signature:()
RequestedConcept	DMCore/Agents/DialogAgents/BasicAgents/MARequest.h	/^	virtual CConcept* RequestedConcept();$/;"	p	class:CMARequest	access:public	signature:()
RequestedConceptName	DMCore/Agents/DialogAgents/BasicAgents/MARequest.cpp	/^string CMARequest::RequestedConceptName() {$/;"	f	class:CMARequest	signature:()
RequestedConceptName	DMCore/Agents/DialogAgents/BasicAgents/MARequest.h	/^	virtual string RequestedConceptName();$/;"	p	class:CMARequest	access:public	signature:()
RequiresFloor	DMCore/Agents/DialogAgents/BasicAgents/MAInform.h	/^	virtual bool RequiresFloor() {return true;}$/;"	f	class:CMAInform	access:public	signature:()
RequiresFloor	DMCore/Agents/DialogAgents/BasicAgents/MARequest.h	/^	virtual bool RequiresFloor() {return true;}$/;"	f	class:CMARequest	access:public	signature:()
RequiresFloor	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^bool CDialogAgent::RequiresFloor() {$/;"	f	class:CDialogAgent	signature:()
RequiresFloor	DMCore/Agents/DialogAgents/DialogAgent.h	/^    virtual bool RequiresFloor();$/;"	p	class:CDialogAgent	access:public	signature:()
Reset	DMCore/Agents/Agent.cpp	/^void CAgent::Reset() {$/;"	f	class:CAgent	signature:()
Reset	DMCore/Agents/Agent.h	/^	virtual void Reset();$/;"	p	class:CAgent	access:public	signature:()
Reset	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^void CDMCoreAgent::Reset() {$/;"	f	class:CDMCoreAgent	signature:()
Reset	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	virtual void Reset();					\/\/ overwritten Reset$/;"	p	class:CDMCoreAgent	access:public	signature:()
Reset	DMCore/Agents/CoreAgents/DTTManagerAgent.cpp	/^void CDTTManagerAgent::Reset() {$/;"	f	class:CDTTManagerAgent	signature:()
Reset	DMCore/Agents/CoreAgents/DTTManagerAgent.h	/^	virtual void Reset();	\/\/ overwritten Reset$/;"	p	class:CDTTManagerAgent	access:public	signature:()
Reset	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.cpp	/^void CInteractionEventManagerAgent::Reset() {}$/;"	f	class:CInteractionEventManagerAgent	signature:()
Reset	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.h	/^	virtual void Reset();	\/\/ overwritten Reset$/;"	p	class:CInteractionEventManagerAgent	access:public	signature:()
Reset	DMCore/Agents/CoreAgents/OutputManagerAgent.cpp	/^void COutputManagerAgent::Reset() {$/;"	f	class:COutputManagerAgent	signature:()
Reset	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^	virtual void Reset();	\/\/ overwritten Reset$/;"	p	class:COutputManagerAgent	access:public	signature:()
Reset	DMCore/Agents/CoreAgents/StateManagerAgent.cpp	/^void CStateManagerAgent::Reset() {$/;"	f	class:CStateManagerAgent	signature:()
Reset	DMCore/Agents/CoreAgents/StateManagerAgent.h	/^	virtual void Reset();	\/\/ overwritten Reset$/;"	p	class:CStateManagerAgent	access:public	signature:()
Reset	DMCore/Agents/DialogAgents/BasicAgents/MAInform.cpp	/^void CMAInform::Reset() {$/;"	f	class:CMAInform	signature:()
Reset	DMCore/Agents/DialogAgents/BasicAgents/MAInform.h	/^	virtual void Reset();$/;"	p	class:CMAInform	access:public	signature:()
Reset	DMCore/Agents/DialogAgents/BasicAgents/MARequest.cpp	/^void CMARequest::Reset() {$/;"	f	class:CMARequest	signature:()
Reset	DMCore/Agents/DialogAgents/BasicAgents/MARequest.h	/^	virtual void Reset();$/;"	p	class:CMARequest	access:public	signature:()
Reset	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^void CDialogAgent::Reset() {$/;"	f	class:CDialogAgent	signature:()
Reset	DMCore/Agents/DialogAgents/DialogAgent.h	/^	virtual void Reset();$/;"	p	class:CDialogAgent	access:public	signature:()
ResetCompleted	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^void CDialogAgent::ResetCompleted() {$/;"	f	class:CDialogAgent	signature:()
ResetCompleted	DMCore/Agents/DialogAgents/DialogAgent.h	/^    void ResetCompleted();$/;"	p	class:CDialogAgent	access:public	signature:()
Resize	DMCore/Grounding/GroundingUtils.cpp	/^void CBeliefDistribution::Resize(int iNumEvents) {$/;"	f	class:CBeliefDistribution	signature:(int iNumEvents)
Resize	DMCore/Grounding/GroundingUtils.h	/^    void Resize(int iNumEvents);$/;"	p	class:CBeliefDistribution	access:public	signature:(int iNumEvents)
RestartTopic	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^void CDMCoreAgent::RestartTopic(CDialogAgent* pdaDialogAgent) {$/;"	f	class:CDMCoreAgent	signature:(CDialogAgent* pdaDialogAgent)
RestartTopic	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^    void RestartTopic(CDialogAgent* pdaDialogAgent);$/;"	p	class:CDMCoreAgent	access:public	signature:(CDialogAgent* pdaDialogAgent)
Restore	DMCore/Concepts/Concept.cpp	/^void CConcept::Restore(int iIndex) {$/;"	f	class:CConcept	signature:(int iIndex)
Restore	DMCore/Concepts/Concept.h	/^    virtual void Restore(int iIndex = -1);$/;"	p	class:CConcept	access:public	signature:(int iIndex = -1)
Run	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^void CGroundingManagerAgent::Run() {$/;"	f	class:CGroundingManagerAgent	signature:()
Run	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    virtual void Run();$/;"	p	class:CGroundingManagerAgent	access:public	signature:()
Run	DMCore/Grounding/GroundingActions/GAAccept.cpp	/^void CGAAccept::Run(void *pParams) {$/;"	f	class:CGAAccept	signature:(void *pParams)
Run	DMCore/Grounding/GroundingActions/GAAccept.h	/^    virtual void Run(void *pParams);$/;"	p	class:CGAAccept	access:public	signature:(void *pParams)
Run	DMCore/Grounding/GroundingActions/GAAskRepeat.cpp	/^void CGAAskRepeat::Run(void *pParams) {$/;"	f	class:CGAAskRepeat	signature:(void *pParams)
Run	DMCore/Grounding/GroundingActions/GAAskRepeat.h	/^    virtual void Run(void *pParams);$/;"	p	class:CGAAskRepeat	access:public	signature:(void *pParams)
Run	DMCore/Grounding/GroundingActions/GAAskRephrase.cpp	/^void CGAAskRephrase::Run(void *pParams) {$/;"	f	class:CGAAskRephrase	signature:(void *pParams)
Run	DMCore/Grounding/GroundingActions/GAAskRephrase.h	/^    virtual void Run(void *pParams);$/;"	p	class:CGAAskRephrase	access:public	signature:(void *pParams)
Run	DMCore/Grounding/GroundingActions/GAAskShortAnswerAndReprompt.cpp	/^void CGAAskShortAnswerAndReprompt::Run(void *pParams) {$/;"	f	class:CGAAskShortAnswerAndReprompt	signature:(void *pParams)
Run	DMCore/Grounding/GroundingActions/GAAskShortAnswerAndReprompt.h	/^    virtual void Run(void *pParams);$/;"	p	class:CGAAskShortAnswerAndReprompt	access:public	signature:(void *pParams)
Run	DMCore/Grounding/GroundingActions/GAAskShortAnswerAndWhatCanISay.cpp	/^void CGAAskShortAnswerAndWhatCanISay::Run(void *pParams) {$/;"	f	class:CGAAskShortAnswerAndWhatCanISay	signature:(void *pParams)
Run	DMCore/Grounding/GroundingActions/GAAskShortAnswerAndWhatCanISay.h	/^    virtual void Run(void *pParams);$/;"	p	class:CGAAskShortAnswerAndWhatCanISay	access:public	signature:(void *pParams)
Run	DMCore/Grounding/GroundingActions/GAAskStartOver.cpp	/^void CGAAskStartOver::Run(void *pParams) {$/;"	f	class:CGAAskStartOver	signature:(void *pParams)
Run	DMCore/Grounding/GroundingActions/GAAskStartOver.h	/^    virtual void Run(void *pParams);$/;"	p	class:CGAAskStartOver	access:public	signature:(void *pParams)
Run	DMCore/Grounding/GroundingActions/GAExplainMore.cpp	/^void CGAExplainMore::Run(void *pParams) {$/;"	f	class:CGAExplainMore	signature:(void *pParams)
Run	DMCore/Grounding/GroundingActions/GAExplainMore.h	/^    virtual void Run(void *pParams);$/;"	p	class:CGAExplainMore	access:public	signature:(void *pParams)
Run	DMCore/Grounding/GroundingActions/GAExplicitConfirm.cpp	/^void CGAExplicitConfirm::Run(void *pParams) {$/;"	f	class:CGAExplicitConfirm	signature:(void *pParams)
Run	DMCore/Grounding/GroundingActions/GAExplicitConfirm.h	/^    virtual void Run(void *pParams);$/;"	p	class:CGAExplicitConfirm	access:public	signature:(void *pParams)
Run	DMCore/Grounding/GroundingActions/GAFailRequest.cpp	/^void CGAFailRequest::Run(void *pParams) {$/;"	f	class:CGAFailRequest	signature:(void *pParams)
Run	DMCore/Grounding/GroundingActions/GAFailRequest.h	/^    virtual void Run(void *pParams);$/;"	p	class:CGAFailRequest	access:public	signature:(void *pParams)
Run	DMCore/Grounding/GroundingActions/GAFullHelp.cpp	/^void CGAFullHelp::Run(void *pParams) {$/;"	f	class:CGAFullHelp	signature:(void *pParams)
Run	DMCore/Grounding/GroundingActions/GAFullHelp.h	/^    virtual void Run(void *pParams);$/;"	p	class:CGAFullHelp	access:public	signature:(void *pParams)
Run	DMCore/Grounding/GroundingActions/GAGiveUp.cpp	/^void CGAGiveUp::Run(void *pParams) {$/;"	f	class:CGAGiveUp	signature:(void *pParams)
Run	DMCore/Grounding/GroundingActions/GAGiveUp.h	/^    virtual void Run(void *pParams);$/;"	p	class:CGAGiveUp	access:public	signature:(void *pParams)
Run	DMCore/Grounding/GroundingActions/GAImplicitConfirm.cpp	/^void CGAImplicitConfirm::Run(void *pParams) {$/;"	f	class:CGAImplicitConfirm	signature:(void *pParams)
Run	DMCore/Grounding/GroundingActions/GAImplicitConfirm.h	/^    virtual void Run(void *pParams);$/;"	p	class:CGAImplicitConfirm	access:public	signature:(void *pParams)
Run	DMCore/Grounding/GroundingActions/GAInteractionTips.cpp	/^void CGAInteractionTips::Run(void *pParams) {$/;"	f	class:CGAInteractionTips	signature:(void *pParams)
Run	DMCore/Grounding/GroundingActions/GAInteractionTips.h	/^    virtual void Run(void *pParams);$/;"	p	class:CGAInteractionTips	access:public	signature:(void *pParams)
Run	DMCore/Grounding/GroundingActions/GAMoveOn.cpp	/^void CGAMoveOn::Run(void *pParams) {$/;"	f	class:CGAMoveOn	signature:(void *pParams)
Run	DMCore/Grounding/GroundingActions/GAMoveOn.h	/^    virtual void Run(void *pParams);$/;"	p	class:CGAMoveOn	access:public	signature:(void *pParams)
Run	DMCore/Grounding/GroundingActions/GANoAction.cpp	/^void CGANoAction::Run(void *pParams) {$/;"	f	class:CGANoAction	signature:(void *pParams)
Run	DMCore/Grounding/GroundingActions/GANoAction.h	/^    virtual void Run(void *pParams);$/;"	p	class:CGANoAction	access:public	signature:(void *pParams)
Run	DMCore/Grounding/GroundingActions/GANotifyNonunderstanding.cpp	/^void CGANotifyNonunderstanding::Run(void *pParams) {$/;"	f	class:CGANotifyNonunderstanding	signature:(void *pParams)
Run	DMCore/Grounding/GroundingActions/GANotifyNonunderstanding.h	/^    virtual void Run(void *pParams);$/;"	p	class:CGANotifyNonunderstanding	access:public	signature:(void *pParams)
Run	DMCore/Grounding/GroundingActions/GARepeatPrompt.cpp	/^void CGARepeatPrompt::Run(void *pParams) {$/;"	f	class:CGARepeatPrompt	signature:(void *pParams)
Run	DMCore/Grounding/GroundingActions/GARepeatPrompt.h	/^    virtual void Run(void *pParams);$/;"	p	class:CGARepeatPrompt	access:public	signature:(void *pParams)
Run	DMCore/Grounding/GroundingActions/GASpeakLessLoudAndReprompt.cpp	/^void CGASpeakLessLoudAndReprompt::Run(void *pParams) {$/;"	f	class:CGASpeakLessLoudAndReprompt	signature:(void *pParams)
Run	DMCore/Grounding/GroundingActions/GASpeakLessLoudAndReprompt.h	/^    virtual void Run(void *pParams);$/;"	p	class:CGASpeakLessLoudAndReprompt	access:public	signature:(void *pParams)
Run	DMCore/Grounding/GroundingActions/GAWhatCanISay.cpp	/^void CGAWhatCanISay::Run(void *pParams) {$/;"	f	class:CGAWhatCanISay	signature:(void *pParams)
Run	DMCore/Grounding/GroundingActions/GAWhatCanISay.h	/^    virtual void Run(void *pParams);$/;"	p	class:CGAWhatCanISay	access:public	signature:(void *pParams)
Run	DMCore/Grounding/GroundingActions/GAYieldTurn.cpp	/^void CGAYieldTurn::Run(void *pParams) {$/;"	f	class:CGAYieldTurn	signature:(void *pParams)
Run	DMCore/Grounding/GroundingActions/GAYieldTurn.h	/^    virtual void Run(void *pParams);$/;"	p	class:CGAYieldTurn	access:public	signature:(void *pParams)
Run	DMCore/Grounding/GroundingActions/GroundingAction.h	/^    virtual void Run(void *pParams = NULL) = 0;$/;"	p	class:CGroundingAction	access:public	signature:(void *pParams = NULL)
Run	DMCore/Grounding/GroundingModels/GroundingModel.cpp	/^void CGroundingModel::Run() {$/;"	f	class:CGroundingModel	signature:()
Run	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    virtual void Run();$/;"	p	class:CGroundingModel	access:public	signature:()
RunAction	DMCore/Grounding/GroundingModels/GMConcept.cpp	/^void CGMConcept::RunAction(int iActionIndex) {$/;"	f	class:CGMConcept	signature:(int iActionIndex)
RunAction	DMCore/Grounding/GroundingModels/GMConcept.h	/^    virtual void RunAction(int iActionIndex);$/;"	p	class:CGMConcept	access:public	signature:(int iActionIndex)
RunAction	DMCore/Grounding/GroundingModels/GMRequestAgent.cpp	/^void CGMRequestAgent::RunAction(int iActionIndex) {$/;"	f	class:CGMRequestAgent	signature:(int iActionIndex)
RunAction	DMCore/Grounding/GroundingModels/GMRequestAgent.h	/^    virtual void RunAction(int iActionIndex);$/;"	p	class:CGMRequestAgent	access:public	signature:(int iActionIndex)
RunAction	DMCore/Grounding/GroundingModels/GroundingModel.cpp	/^void CGroundingModel::RunAction(int iActionIndex) {$/;"	f	class:CGroundingModel	signature:(int iActionIndex)
RunAction	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    virtual void RunAction(int iActionIndex);$/;"	p	class:CGroundingModel	access:public	signature:(int iActionIndex)
RuntimeError	spdlog/fmt/bundled/format.h	/^    RuntimeError(): std::runtime_error("")$/;"	f	class:fmt::internal::RuntimeError	access:protected	signature:()
RuntimeError	spdlog/fmt/bundled/format.h	/^    RuntimeError(const RuntimeError &rerr): std::runtime_error(rerr)$/;"	f	class:fmt::internal::RuntimeError	access:protected	signature:(const RuntimeError &rerr)
RuntimeError	spdlog/fmt/bundled/format.h	/^class RuntimeError: public std::runtime_error$/;"	c	namespace:fmt::internal	inherits:std::runtime_error
S2SHashToString	Utils/Utils.cpp	/^string S2SHashToString(STRING2STRING s2sHash, string sSeparator, $/;"	f	signature:(STRING2STRING s2sHash, string sSeparator, string sEquals)
S2SHashToString	Utils/Utils.h	/^string S2SHashToString(STRING2STRING s2sHash, $/;"	p	signature:(STRING2STRING s2sHash, string sSeparator = Ó, string sEquals = Ó)
SAME_AS_TRIGGER	DMCore/Agents/DialogAgents/DialogAgent.h	669;"	d
SA_EXPL_CONF	DMCore/Agents/CoreAgents/DMCoreAgent.h	292;"	d
SA_IMPL_CONF	DMCore/Agents/CoreAgents/DMCoreAgent.h	293;"	d
SA_OTHER	DMCore/Agents/CoreAgents/DMCoreAgent.h	295;"	d
SA_REQUEST	DMCore/Agents/CoreAgents/DMCoreAgent.h	291;"	d
SA_UNPLANNED_IMPL_CONF	DMCore/Agents/CoreAgents/DMCoreAgent.h	294;"	d
SET_COMPLETED	DialogTask/DialogTask.h	235;"	d
SHELL	Makefile	/^SHELL = \/bin\/sh$/;"	m
SIGN_FLAG	spdlog/fmt/bundled/format.h	/^    SIGN_FLAG = 1, PLUS_FLAG = 2, MINUS_FLAG = 4, HASH_FLAG = 8,$/;"	e	enum:fmt::__anon29
SIMULATE_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	155;"	d	file:
SIMULATE_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	16;"	d	file:
SIMULATE_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	170;"	d	file:
SIMULATE_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	157;"	d	file:
SIMULATE_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	172;"	d	file:
SIMULATE_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	21;"	d	file:
SIMULATE_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	162;"	d	file:
SIMULATE_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	177;"	d	file:
SIMULATE_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	32;"	d	file:
SIMULATE_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	164;"	d	file:
SIMULATE_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	179;"	d	file:
SIMULATE_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	37;"	d	file:
SIMULATE_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	163;"	d	file:
SIMULATE_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	178;"	d	file:
SIMULATE_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	33;"	d	file:
SIMULATE_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	165;"	d	file:
SIMULATE_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	180;"	d	file:
SIMULATE_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	38;"	d	file:
SIZE	DialogTask/DialogTask.h	259;"	d
SI_CONFIDENT	DMCore/Grounding/GroundingModels/GMConcept.h	84;"	d
SI_FAILED	DMCore/Grounding/GroundingModels/GMRequestAgent.h	80;"	d
SI_GROUNDED	DMCore/Grounding/GroundingModels/GMConcept.h	90;"	d
SI_INACTIVE	DMCore/Grounding/GroundingModels/GMConcept.h	81;"	d
SI_NONUNDERSTANDING	DMCore/Grounding/GroundingModels/GMRequestAgent.h	86;"	d
SI_NONUNDERSTANDING_1	DMCore/Grounding/GroundingModels/GMRequestAgent_NumNonu.h	83;"	d
SI_NONUNDERSTANDING_1_CTL	DMCore/Grounding/GroundingModels/GMRequestAgent_Experiment.h	83;"	d
SI_NONUNDERSTANDING_1_EXP	DMCore/Grounding/GroundingModels/GMRequestAgent_Experiment.h	95;"	d
SI_NONUNDERSTANDING_2	DMCore/Grounding/GroundingModels/GMRequestAgent_NumNonu.h	86;"	d
SI_NONUNDERSTANDING_2_CTL	DMCore/Grounding/GroundingModels/GMRequestAgent_Experiment.h	86;"	d
SI_NONUNDERSTANDING_2_EXP	DMCore/Grounding/GroundingModels/GMRequestAgent_Experiment.h	98;"	d
SI_NONUNDERSTANDING_MORE	DMCore/Grounding/GroundingModels/GMRequestAgent_NumNonu.h	89;"	d
SI_NONUNDERSTANDING_MORE_CTL	DMCore/Grounding/GroundingModels/GMRequestAgent_Experiment.h	89;"	d
SI_NONUNDERSTANDING_MORE_EXP	DMCore/Grounding/GroundingModels/GMRequestAgent_Experiment.h	101;"	d
SI_UNCONFIDENT	DMCore/Grounding/GroundingModels/GMConcept.h	87;"	d
SI_UNDERSTANDING	DMCore/Grounding/GroundingModels/GMRequestAgent.h	83;"	d
SI_VERY_FIRST_NONUNDERSTANDING	DMCore/Grounding/GroundingModels/GMRequestAgent_NumNonu.h	80;"	d
SI_VERY_FIRST_NONUNDERSTANDING_CTL	DMCore/Grounding/GroundingModels/GMRequestAgent_Experiment.h	80;"	d
SI_VERY_FIRST_NONUNDERSTANDING_EXP	DMCore/Grounding/GroundingModels/GMRequestAgent_Experiment.h	92;"	d
SPDLOG_CONSTEXPR	spdlog/common.h	26;"	d
SPDLOG_CONSTEXPR	spdlog/common.h	29;"	d
SPDLOG_DEBUG	spdlog/spdlog.h	169;"	d
SPDLOG_DEBUG	spdlog/spdlog.h	171;"	d
SPDLOG_DEPRECATED	spdlog/common.h	33;"	d
SPDLOG_DEPRECATED	spdlog/common.h	35;"	d
SPDLOG_DEPRECATED	spdlog/common.h	37;"	d
SPDLOG_EOL	spdlog/details/os.h	136;"	d
SPDLOG_EOL	spdlog/details/os.h	138;"	d
SPDLOG_FILENAME_T	spdlog/details/os.h	353;"	d
SPDLOG_FILENAME_T	spdlog/details/os.h	360;"	d
SPDLOG_NOEXCEPT	spdlog/common.h	25;"	d
SPDLOG_NOEXCEPT	spdlog/common.h	28;"	d
SPDLOG_NOEXCEPT	spdlog/details/async_log_helper.h	/^async_msg(async_msg&& other) SPDLOG_NOEXCEPT:$/;"	m	struct:spdlog::details::async_log_helper::async_msg	access:public
SPDLOG_STR_H	spdlog/spdlog.h	161;"	d
SPDLOG_STR_HELPER	spdlog/spdlog.h	162;"	d
SPDLOG_TRACE	spdlog/spdlog.h	163;"	d
SPDLOG_TRACE	spdlog/spdlog.h	165;"	d
SPDLOG_VERSION	spdlog/spdlog.h	10;"	d
SPEAK_LESS_LOUD_AND_REPROMPT	DMCore/Grounding/GroundingActions/GASpeakLessLoudAndReprompt.h	105;"	d
SS_CONFIDENT	DMCore/Grounding/GroundingModels/GMConcept.h	85;"	d
SS_FAILED	DMCore/Grounding/GroundingModels/GMRequestAgent.h	81;"	d
SS_GROUNDED	DMCore/Grounding/GroundingModels/GMConcept.h	91;"	d
SS_INACTIVE	DMCore/Grounding/GroundingModels/GMConcept.h	82;"	d
SS_NONUNDERSTANDING	DMCore/Grounding/GroundingModels/GMRequestAgent.h	87;"	d
SS_NONUNDERSTANDING_1	DMCore/Grounding/GroundingModels/GMRequestAgent_NumNonu.h	84;"	d
SS_NONUNDERSTANDING_1_CTL	DMCore/Grounding/GroundingModels/GMRequestAgent_Experiment.h	84;"	d
SS_NONUNDERSTANDING_1_EXP	DMCore/Grounding/GroundingModels/GMRequestAgent_Experiment.h	96;"	d
SS_NONUNDERSTANDING_2	DMCore/Grounding/GroundingModels/GMRequestAgent_NumNonu.h	87;"	d
SS_NONUNDERSTANDING_2_CTL	DMCore/Grounding/GroundingModels/GMRequestAgent_Experiment.h	87;"	d
SS_NONUNDERSTANDING_2_EXP	DMCore/Grounding/GroundingModels/GMRequestAgent_Experiment.h	99;"	d
SS_NONUNDERSTANDING_MORE	DMCore/Grounding/GroundingModels/GMRequestAgent_NumNonu.h	90;"	d
SS_NONUNDERSTANDING_MORE_CTL	DMCore/Grounding/GroundingModels/GMRequestAgent_Experiment.h	90;"	d
SS_NONUNDERSTANDING_MORE_EXP	DMCore/Grounding/GroundingModels/GMRequestAgent_Experiment.h	102;"	d
SS_UNCONFIDENT	DMCore/Grounding/GroundingModels/GMConcept.h	88;"	d
SS_UNDERSTANDING	DMCore/Grounding/GroundingModels/GMRequestAgent.h	84;"	d
SS_VERY_FIRST_NONUNDERSTANDING	DMCore/Grounding/GroundingModels/GMRequestAgent_NumNonu.h	81;"	d
SS_VERY_FIRST_NONUNDERSTANDING_CTL	DMCore/Grounding/GroundingModels/GMRequestAgent_Experiment.h	81;"	d
SS_VERY_FIRST_NONUNDERSTANDING_EXP	DMCore/Grounding/GroundingModels/GMRequestAgent_Experiment.h	93;"	d
START_SESSION	DMCore/Core.h	99;"	d
STATEMANAGER_STREAM	DMCore/Log.h	100;"	d
STRING	spdlog/fmt/bundled/format.h	/^        CSTRING, STRING, WSTRING, POINTER, CUSTOM$/;"	e	enum:fmt::internal::Value::Type
STRING2BFF	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^    less<string>, allocator<TBindingFilterFunct> > STRING2BFF;$/;"	t
STRING2FLOAT	Utils/Utils.h	/^typedef map <string, float> STRING2FLOAT;$/;"	t
STRING2FLOATVECTOR	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^typedef map <string, vector<float> > STRING2FLOATVECTOR;$/;"	t
STRING2LRMODEL	DMCore/Grounding/GroundingModels/GMRequestAgent_LR.h	/^typedef map <string, TLRModel> STRING2LRMODEL;$/;"	t
STRING2STRING	Utils/Utils.h	/^typedef map <string, string> STRING2STRING;$/;"	t
STRING2STRING2FLOAT	Utils/Utils.h	/^typedef map <string, STRING2FLOAT> STRING2STRING2FLOAT;$/;"	t
STRING2STRING2FLOATVECTOR	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^typedef map <string, STRING2FLOATVECTOR> STRING2STRING2FLOATVECTOR;$/;"	t
STRING_ITEM	DialogTask/DialogTask.h	196;"	d
STRING_MAX	Utils/Utils.h	120;"	d
STRING_SYSTEM_CONCEPT	DialogTask/DialogTask.h	206;"	d
STRING_USER_CONCEPT	DialogTask/DialogTask.h	218;"	d
SUBAGENT	DMCore/Agents/DialogAgents/BasicAgents/DialogAgency.h	196;"	d
SUCCEEDED	DialogTask/DialogTask.h	229;"	d
SUCCEEDS_WHEN	DMCore/Agents/DialogAgents/DialogAgent.h	680;"	d
SUFFIXES	Makefile	/^SUFFIXES =$/;"	m
SYSTEM_CONCEPT	DMCore/Agents/DialogAgents/BasicAgents/DialogAgency.h	218;"	d
S_formatter	spdlog/details/pattern_formatter_impl.h	/^class S_formatter:public flag_formatter$/;"	c	namespace:spdlog::details	inherits:flag_formatter
ScheduleConceptGrounding	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^string CGroundingManagerAgent::ScheduleConceptGrounding(CConcept* pConcept) {$/;"	f	class:CGroundingManagerAgent	signature:(CConcept* pConcept)
ScheduleConceptGrounding	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^	string ScheduleConceptGrounding(CConcept* pConcept);$/;"	p	class:CGroundingManagerAgent	access:public	signature:(CConcept* pConcept)
Seal	DMCore/Concepts/Concept.cpp	/^void CConcept::Seal() {$/;"	f	class:CConcept	signature:()
Seal	DMCore/Concepts/Concept.h	/^	virtual void Seal();$/;"	p	class:CConcept	access:public	signature:()
SetAct	DMCore/Outputs/Output.cpp	/^void COutput::SetAct(string sAAct) {$/;"	f	class:COutput	signature:(string sAAct)
SetAct	DMCore/Outputs/Output.h	/^	void SetAct(string sAAct);$/;"	p	class:COutput	access:public	signature:(string sAAct)
SetBeliefUpdatingModelName	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^void CGroundingManagerAgent::SetBeliefUpdatingModelName($/;"	f	class:CGroundingManagerAgent	signature:( string sABeliefUpdatingModelName)
SetBeliefUpdatingModelName	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^	virtual void SetBeliefUpdatingModelName($/;"	p	class:CGroundingManagerAgent	access:public	signature:( string sABeliefUpdatingModelName)
SetCardinality	DMCore/Concepts/Concept.cpp	/^void CConcept::SetCardinality(int iACardinality) {$/;"	f	class:CConcept	signature:(int iACardinality)
SetCardinality	DMCore/Concepts/Concept.h	/^    virtual void SetCardinality(int iACardinality);$/;"	p	class:CConcept	access:public	signature:(int iACardinality)
SetChangeNotification	DMCore/Concepts/ArrayConcept.cpp	/^void CArrayConcept::SetChangeNotification($/;"	f	class:CArrayConcept	signature:( bool bAChangeNotification)
SetChangeNotification	DMCore/Concepts/ArrayConcept.h	/^	virtual void SetChangeNotification($/;"	p	class:CArrayConcept	access:public	signature:( bool bAChangeNotification = true)
SetChangeNotification	DMCore/Concepts/Concept.cpp	/^void CConcept::SetChangeNotification($/;"	f	class:CConcept	signature:( bool bAChangeNotification)
SetChangeNotification	DMCore/Concepts/Concept.h	/^	virtual void SetChangeNotification(bool bAChangeNotification = true);$/;"	p	class:CConcept	access:public	signature:(bool bAChangeNotification = true)
SetChangeNotification	DMCore/Concepts/StructConcept.cpp	/^void CStructConcept::SetChangeNotification($/;"	f	class:CStructConcept	signature:( bool bAChangeNotification)
SetChangeNotification	DMCore/Concepts/StructConcept.h	/^	virtual void SetChangeNotification($/;"	p	class:CStructConcept	access:public	signature:( bool bAChangeNotification = true)
SetComplete	DMCore/Events/InteractionEvent.cpp	/^void CInteractionEvent::SetComplete(bool complete) {$/;"	f	class:CInteractionEvent	signature:(bool complete)
SetComplete	DMCore/Events/InteractionEvent.h	/^  void SetComplete(bool complete = true);$/;"	p	class:CInteractionEvent	access:public	signature:(bool complete = true)
SetCompleted	DMCore/Agents/DialogAgents/BasicAgents/MAExpect.cpp	/^void CMAExpect::SetCompleted(TCompletionType ctACompletionType) {$/;"	f	class:CMAExpect	signature:(TCompletionType ctACompletionType)
SetCompleted	DMCore/Agents/DialogAgents/BasicAgents/MAExpect.h	/^	virtual void SetCompleted(TCompletionType ctACompletionType = ctSuccess);$/;"	p	class:CMAExpect	access:public	signature:(TCompletionType ctACompletionType = ctSuccess)
SetCompleted	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^void CDialogAgent::SetCompleted(TCompletionType ctACompletionType) {$/;"	f	class:CDialogAgent	signature:(TCompletionType ctACompletionType)
SetCompleted	DMCore/Agents/DialogAgents/DialogAgent.h	/^	void SetCompleted(TCompletionType ctACompletionType = ctSuccess);$/;"	p	class:CDialogAgent	access:public	signature:(TCompletionType ctACompletionType = ctSuccess)
SetConcept	DMCore/Grounding/GroundingModels/GMConcept.cpp	/^void CGMConcept::SetConcept(CConcept* pAConcept) {$/;"	f	class:CGMConcept	signature:(CConcept* pAConcept)
SetConcept	DMCore/Grounding/GroundingModels/GMConcept.h	/^    void SetConcept(CConcept* pAConcept);$/;"	p	class:CGMConcept	access:public	signature:(CConcept* pAConcept)
SetConceptGroundingRequestStatus	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^void CGroundingManagerAgent::SetConceptGroundingRequestStatus($/;"	f	class:CGroundingManagerAgent	signature:( CConcept* pConcept, int iAGroundingRequestStatus)
SetConceptGroundingRequestStatus	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    void SetConceptGroundingRequestStatus(CConcept* pConcept, $/;"	p	class:CGroundingManagerAgent	access:public	signature:(CConcept* pConcept, int iAGroundingRequestStatus)
SetConceptSource	DMCore/Concepts/Concept.cpp	/^void CConcept::SetConceptSource(TConceptSource csAConceptSource) {$/;"	f	class:CConcept	signature:(TConceptSource csAConceptSource)
SetConceptSource	DMCore/Concepts/Concept.h	/^	virtual void SetConceptSource(TConceptSource csAConceptSource);$/;"	p	class:CConcept	access:public	signature:(TConceptSource csAConceptSource)
SetConceptType	DMCore/Concepts/Concept.cpp	/^void CConcept::SetConceptType(TConceptType ctAConceptType) {$/;"	f	class:CConcept	signature:(TConceptType ctAConceptType)
SetConceptType	DMCore/Concepts/Concept.h	/^	virtual void SetConceptType(TConceptType ctAConceptType);$/;"	p	class:CConcept	access:public	signature:(TConceptType ctAConceptType)
SetConfidence	DMCore/Concepts/Concept.cpp	/^void CHyp::SetConfidence(float fAConfidence) {$/;"	f	class:CHyp	signature:(float fAConfidence)
SetConfidence	DMCore/Concepts/Concept.h	/^    virtual void SetConfidence(float fAConfidence);$/;"	p	class:CHyp	access:public	signature:(float fAConfidence)
SetConfidence	DMCore/Concepts/StructConcept.cpp	/^void CStructHyp::SetConfidence(float fAConfidence) {$/;"	f	class:CStructHyp	signature:(float fAConfidence)
SetConfidence	DMCore/Concepts/StructConcept.h	/^    virtual void SetConfidence(float fAConfidence);$/;"	p	class:CStructHyp	access:public	signature:(float fAConfidence)
SetConfiguration	DMCore/Agents/Agent.cpp	/^void CAgent::SetConfiguration(STRING2STRING s2sAConfiguration) {$/;"	f	class:CAgent	signature:(STRING2STRING s2sAConfiguration)
SetConfiguration	DMCore/Agents/Agent.cpp	/^void CAgent::SetConfiguration(string sConfiguration) {$/;"	f	class:CAgent	signature:(string sConfiguration)
SetConfiguration	DMCore/Agents/Agent.h	/^	void SetConfiguration(STRING2STRING s2sAConfiguration);	$/;"	p	class:CAgent	access:public	signature:(STRING2STRING s2sAConfiguration)
SetConfiguration	DMCore/Agents/Agent.h	/^	void SetConfiguration(string sConfiguration);$/;"	p	class:CAgent	access:public	signature:(string sConfiguration)
SetConfiguration	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^void CGroundingManagerAgent::SetConfiguration($/;"	f	class:CGroundingManagerAgent	signature:( string sAGroundingManagerConfiguration)
SetConfiguration	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    void SetConfiguration(string sAGroundingManagerConfiguration);$/;"	p	class:CGroundingManagerAgent	access:public	signature:(string sAGroundingManagerConfiguration)
SetConfiguration	DMCore/Grounding/GroundingActions/GroundingAction.cpp	/^void CGroundingAction::SetConfiguration(string sNewConfiguration) {$/;"	f	class:CGroundingAction	signature:(string sNewConfiguration)
SetConfiguration	DMCore/Grounding/GroundingActions/GroundingAction.h	/^	void SetConfiguration(string sNewConfiguration);$/;"	p	class:CGroundingAction	access:public	signature:(string sNewConfiguration)
SetContextAgent	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^void CDialogAgent::SetContextAgent(CDialogAgent* pdaAContextAgent) {$/;"	f	class:CDialogAgent	signature:(CDialogAgent* pdaAContextAgent)
SetContextAgent	DMCore/Agents/DialogAgents/DialogAgent.h	/^	void SetContextAgent(CDialogAgent* pdaAContextAgent);$/;"	p	class:CDialogAgent	access:public	signature:(CDialogAgent* pdaAContextAgent)
SetConveyance	DMCore/Concepts/Concept.cpp	/^void CConcept::SetConveyance(TConveyance cAConveyance) {$/;"	f	class:CConcept	signature:(TConveyance cAConveyance)
SetConveyance	DMCore/Concepts/Concept.h	/^	virtual void SetConveyance(TConveyance cConveyance);$/;"	p	class:CConcept	access:public	signature:(TConveyance cConveyance)
SetConveyance	DMCore/Outputs/Output.cpp	/^void COutput::SetConveyance(TConveyance cAConveyance) {$/;"	f	class:COutput	signature:(TConveyance cAConveyance)
SetConveyance	DMCore/Outputs/Output.h	/^	void SetConveyance(TConveyance cAConveyance);$/;"	p	class:COutput	access:public	signature:(TConveyance cAConveyance)
SetDefaultNonunderstandingThreshold	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^void CDMCoreAgent::SetDefaultNonunderstandingThreshold(float fANonuThreshold) {$/;"	f	class:CDMCoreAgent	signature:(float fANonuThreshold)
SetDefaultNonunderstandingThreshold	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^    void SetDefaultNonunderstandingThreshold(float fANonuThreshold);$/;"	p	class:CDMCoreAgent	access:public	signature:(float fANonuThreshold)
SetDefaultOutputDevice	DMCore/Agents/CoreAgents/OutputManagerAgent.cpp	/^void COutputManagerAgent::SetDefaultOutputDevice(string sName) {$/;"	f	class:COutputManagerAgent	signature:(string sName)
SetDefaultOutputDevice	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^	void SetDefaultOutputDevice(string sName);$/;"	p	class:COutputManagerAgent	access:public	signature:(string sName)
SetDefaultTimeoutPeriod	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^void CDMCoreAgent::SetDefaultTimeoutPeriod(int iADefaultTimeoutPeriod) {$/;"	f	class:CDMCoreAgent	signature:(int iADefaultTimeoutPeriod)
SetDefaultTimeoutPeriod	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	void SetDefaultTimeoutPeriod(int iADefaultTimeoutPeriod);$/;"	p	class:CDMCoreAgent	access:public	signature:(int iADefaultTimeoutPeriod)
SetDialogState	DMCore/Outputs/Output.cpp	/^void COutput::SetDialogState(string sADialogState) {$/;"	f	class:COutput	signature:(string sADialogState)
SetDialogState	DMCore/Outputs/Output.h	/^	void SetDialogState(string sADialogState);$/;"	p	class:COutput	access:public	signature:(string sADialogState)
SetDialogStateIndex	DMCore/Outputs/Output.cpp	/^void COutput::SetDialogStateIndex(int iAExecutionIndex) {$/;"	f	class:COutput	signature:(int iAExecutionIndex)
SetDialogStateIndex	DMCore/Outputs/Output.h	/^	void SetDialogStateIndex(int iAExecutionIndex);$/;"	p	class:COutput	access:public	signature:(int iAExecutionIndex)
SetDynamicAgent	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^void CDialogAgent::SetDynamicAgent() {$/;"	f	class:CDialogAgent	signature:()
SetDynamicAgent	DMCore/Agents/DialogAgents/DialogAgent.h	/^    void SetDynamicAgent();$/;"	p	class:CDialogAgent	access:public	signature:()
SetDynamicAgentID	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^void CDialogAgent::SetDynamicAgentID(string sADynamicAgentID) {$/;"	f	class:CDialogAgent	signature:(string sADynamicAgentID)
SetDynamicAgentID	DMCore/Agents/DialogAgents/DialogAgent.h	/^    void SetDynamicAgentID(string sADynamicAgentID);$/;"	p	class:CDialogAgent	access:public	signature:(string sADynamicAgentID)
SetExplicitlyConfirmedHyp	DMCore/Concepts/Concept.cpp	/^void CConcept::SetExplicitlyConfirmedHyp(CHyp* pHyp) {$/;"	f	class:CConcept	signature:(CHyp* pHyp)
SetExplicitlyConfirmedHyp	DMCore/Concepts/Concept.cpp	/^void CConcept::SetExplicitlyConfirmedHyp(string sAExplicitlyConfirmedHyp) {$/;"	f	class:CConcept	signature:(string sAExplicitlyConfirmedHyp)
SetExplicitlyConfirmedHyp	DMCore/Concepts/Concept.h	/^	virtual void SetExplicitlyConfirmedHyp(CHyp* pHyp);$/;"	p	class:CConcept	access:public	signature:(CHyp* pHyp)
SetExplicitlyConfirmedHyp	DMCore/Concepts/Concept.h	/^	virtual void SetExplicitlyConfirmedHyp(string sAExplicitlyConfirmedHyp);$/;"	p	class:CConcept	access:public	signature:(string sAExplicitlyConfirmedHyp)
SetExplicitlyDisconfirmedHyp	DMCore/Concepts/Concept.cpp	/^void CConcept::SetExplicitlyDisconfirmedHyp(CHyp* pHyp) {$/;"	f	class:CConcept	signature:(CHyp* pHyp)
SetExplicitlyDisconfirmedHyp	DMCore/Concepts/Concept.cpp	/^void CConcept::SetExplicitlyDisconfirmedHyp(string sAExplicitlyDisconfirmedHyp) {$/;"	f	class:CConcept	signature:(string sAExplicitlyDisconfirmedHyp)
SetExplicitlyDisconfirmedHyp	DMCore/Concepts/Concept.h	/^	virtual void SetExplicitlyDisconfirmedHyp(CHyp* pHyp);$/;"	p	class:CConcept	access:public	signature:(CHyp* pHyp)
SetExplicitlyDisconfirmedHyp	DMCore/Concepts/Concept.h	/^	virtual void SetExplicitlyDisconfirmedHyp(string sAExplicitlyDisconfirmedHyp);$/;"	p	class:CConcept	access:public	signature:(string sAExplicitlyDisconfirmedHyp)
SetFinalFloorStatus	DMCore/Outputs/Output.cpp	/^void COutput::SetFinalFloorStatus(TFloorStatus fsAFloor){$/;"	f	class:COutput	signature:(TFloorStatus fsAFloor)
SetFinalFloorStatus	DMCore/Outputs/Output.h	/^	void SetFinalFloorStatus(TFloorStatus fsAFloor);$/;"	p	class:COutput	access:public	signature:(TFloorStatus fsAFloor)
SetFloorStatus	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^void CDMCoreAgent::SetFloorStatus(TFloorStatus fsaFloorStatus) {$/;"	f	class:CDMCoreAgent	signature:(TFloorStatus fsaFloorStatus)
SetFloorStatus	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^void CDMCoreAgent::SetFloorStatus(string sAFloorStatus) {$/;"	f	class:CDMCoreAgent	signature:(string sAFloorStatus)
SetFloorStatus	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	void SetFloorStatus(string sAFloorStatus);$/;"	p	class:CDMCoreAgent	access:public	signature:(string sAFloorStatus)
SetFloorStatus	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^    void SetFloorStatus(TFloorStatus fsaFloorStatus);$/;"	p	class:CDMCoreAgent	access:public	signature:(TFloorStatus fsaFloorStatus)
SetGroundedFlag	DMCore/Concepts/Concept.cpp	/^void CConcept::SetGroundedFlag(bool bAGrounded) {$/;"	f	class:CConcept	signature:(bool bAGrounded)
SetGroundedFlag	DMCore/Concepts/Concept.h	/^	virtual void SetGroundedFlag(bool bAGrounded = true);$/;"	p	class:CConcept	access:public	signature:(bool bAGrounded = true)
SetHistoryConcept	DMCore/Concepts/ArrayConcept.cpp	/^void CArrayConcept::SetHistoryConcept(bool bAHistoryConcept) {$/;"	f	class:CArrayConcept	signature:(bool bAHistoryConcept)
SetHistoryConcept	DMCore/Concepts/ArrayConcept.h	/^	virtual void SetHistoryConcept(bool bAHistoryConcept = true);$/;"	p	class:CArrayConcept	access:public	signature:(bool bAHistoryConcept = true)
SetHistoryConcept	DMCore/Concepts/Concept.cpp	/^void CConcept::SetHistoryConcept(bool bAHistoryConcept) {$/;"	f	class:CConcept	signature:(bool bAHistoryConcept)
SetHistoryConcept	DMCore/Concepts/Concept.h	/^	virtual void SetHistoryConcept(bool bAHistoryConcept = true);$/;"	p	class:CConcept	access:public	signature:(bool bAHistoryConcept = true)
SetHistoryConcept	DMCore/Concepts/StructConcept.cpp	/^void CStructConcept::SetHistoryConcept(bool bAHistoryConcept) {$/;"	f	class:CStructConcept	signature:(bool bAHistoryConcept)
SetHistoryConcept	DMCore/Concepts/StructConcept.h	/^	virtual void SetHistoryConcept(bool bAHistoryConcept = true);$/;"	p	class:CStructConcept	access:public	signature:(bool bAHistoryConcept = true)
SetHyp	DMCore/Concepts/ArrayConcept.cpp	/^void CArrayConcept::SetHyp(int iIndex, CHyp* pHyp) {$/;"	f	class:CArrayConcept	signature:(int iIndex, CHyp* pHyp)
SetHyp	DMCore/Concepts/ArrayConcept.h	/^    virtual void SetHyp(int iIndex, CHyp* pHyp);$/;"	p	class:CArrayConcept	access:public	signature:(int iIndex, CHyp* pHyp)
SetHyp	DMCore/Concepts/Concept.cpp	/^void CConcept::SetHyp(int iIndex, CHyp* pHyp) {$/;"	f	class:CConcept	signature:(int iIndex, CHyp* pHyp)
SetHyp	DMCore/Concepts/Concept.h	/^    virtual void SetHyp(int iIndex, CHyp* pHyp);$/;"	p	class:CConcept	access:public	signature:(int iIndex, CHyp* pHyp)
SetHyp	DMCore/Concepts/FrameConcept.cpp	/^void CFrameConcept::SetHyp(int iIndex, CHyp* pHyp) {$/;"	f	class:CFrameConcept	signature:(int iIndex, CHyp* pHyp)
SetHyp	DMCore/Concepts/FrameConcept.h	/^    virtual void SetHyp(int iIndex, CHyp* pHyp);$/;"	p	class:CFrameConcept	access:public	signature:(int iIndex, CHyp* pHyp)
SetHyp	DMCore/Concepts/StructConcept.cpp	/^void CStructConcept::SetHyp(int iIndex, CHyp* pHyp) {$/;"	f	class:CStructConcept	signature:(int iIndex, CHyp* pHyp)
SetHyp	DMCore/Concepts/StructConcept.h	/^    virtual void SetHyp(int iIndex, CHyp* pHyp);$/;"	p	class:CStructConcept	access:public	signature:(int iIndex, CHyp* pHyp)
SetHypConfidence	DMCore/Concepts/Concept.cpp	/^void CConcept::SetHypConfidence(int iIndex, float fConfidence) {$/;"	f	class:CConcept	signature:(int iIndex, float fConfidence)
SetHypConfidence	DMCore/Concepts/Concept.h	/^	virtual void SetHypConfidence(int iIndex, float fConfidence);$/;"	p	class:CConcept	access:public	signature:(int iIndex, float fConfidence)
SetHypIndex	DMCore/Concepts/StructConcept.cpp	/^void CStructHyp::SetHypIndex(int iAHypIndex) {$/;"	f	class:CStructHyp	signature:(int iAHypIndex)
SetHypIndex	DMCore/Concepts/StructConcept.h	/^    void SetHypIndex(int iAHypIndex);$/;"	p	class:CStructHyp	access:public	signature:(int iAHypIndex)
SetInputConfiguration	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^void CDialogAgent::SetInputConfiguration( string sConfiguration) {$/;"	f	class:CDialogAgent	signature:( string sConfiguration)
SetInputConfiguration	DMCore/Agents/DialogAgents/DialogAgent.h	/^	void SetInputConfiguration( string sConfiguration);$/;"	p	class:CDialogAgent	access:public	signature:( string sConfiguration)
SetInputConfigurationParameter	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^void CDialogAgent::SetInputConfigurationParameter( string sSlot, string sValue) {$/;"	f	class:CDialogAgent	signature:( string sSlot, string sValue)
SetInputConfigurationParameter	DMCore/Agents/DialogAgents/DialogAgent.h	/^	void SetInputConfigurationParameter( string sSlot, string sValue);$/;"	p	class:CDialogAgent	access:public	signature:( string sSlot, string sValue)
SetInvalidatedFlag	DMCore/Concepts/Concept.cpp	/^void CConcept::SetInvalidatedFlag(bool bAInvalidated) {$/;"	f	class:CConcept	signature:(bool bAInvalidated)
SetInvalidatedFlag	DMCore/Concepts/Concept.h	/^	virtual void SetInvalidatedFlag(bool bAInvalidated = true);$/;"	p	class:CConcept	access:public	signature:(bool bAInvalidated = true)
SetInvalidatedFlag	DMCore/Concepts/FrameConcept.cpp	/^void CFrameConcept::SetInvalidatedFlag(bool bAInvalidated) {$/;"	f	class:CFrameConcept	signature:(bool bAInvalidated)
SetInvalidatedFlag	DMCore/Concepts/FrameConcept.h	/^	virtual void SetInvalidatedFlag(bool bAInvalidated = true);$/;"	p	class:CFrameConcept	access:public	signature:(bool bAInvalidated = true)
SetLastBindingsIndex	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^void CDialogAgent::SetLastBindingsIndex(int iBindingsIndex) {$/;"	f	class:CDialogAgent	signature:(int iBindingsIndex)
SetLastBindingsIndex	DMCore/Agents/DialogAgents/DialogAgent.h	/^    void SetLastBindingsIndex(int iBindingsIndex);$/;"	p	class:CDialogAgent	access:public	signature:(int iBindingsIndex)
SetLastExecutionIndex	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^void CDialogAgent::SetLastExecutionIndex(int iExecutionIndex) {$/;"	f	class:CDialogAgent	signature:(int iExecutionIndex)
SetLastExecutionIndex	DMCore/Agents/DialogAgents/DialogAgent.h	/^    void SetLastExecutionIndex(int iExecutionIndex);$/;"	p	class:CDialogAgent	access:public	signature:(int iExecutionIndex)
SetLastExecutionInputIndex	DMCore/Agents/DialogAgents/DialogAgent.h	/^    void SetLastExecutionInputIndex(int iInputIndex);$/;"	p	class:CDialogAgent	access:public	signature:(int iInputIndex)
SetLastInputIndex	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^void CDialogAgent::SetLastInputIndex(int iInputIndex) {$/;"	f	class:CDialogAgent	signature:(int iInputIndex)
SetLastInputIndex	DMCore/Agents/DialogAgents/DialogAgent.h	/^    void SetLastInputIndex(int iInputIndex);$/;"	p	class:CDialogAgent	access:public	signature:(int iInputIndex)
SetName	DMCore/Concepts/ArrayConcept.cpp	/^void CArrayConcept::SetName(string sAName) {$/;"	f	class:CArrayConcept	signature:(string sAName)
SetName	DMCore/Concepts/ArrayConcept.h	/^    virtual void SetName(string sAName);$/;"	p	class:CArrayConcept	access:public	signature:(string sAName)
SetName	DMCore/Concepts/Concept.cpp	/^void CConcept::SetName(string sAName) {$/;"	f	class:CConcept	signature:(string sAName)
SetName	DMCore/Concepts/Concept.h	/^    virtual void SetName(string sAName);$/;"	p	class:CConcept	access:public	signature:(string sAName)
SetName	DMCore/Concepts/StructConcept.cpp	/^void CStructConcept::SetName(string sAName) {$/;"	f	class:CStructConcept	signature:(string sAName)
SetName	DMCore/Concepts/StructConcept.h	/^    virtual void SetName(string sAName);$/;"	p	class:CStructConcept	access:public	signature:(string sAName)
SetName	DMCore/Grounding/GroundingModels/GMConcept.cpp	/^void CGMConcept::SetName(string sAName) {$/;"	f	class:CGMConcept	signature:(string sAName)
SetName	DMCore/Grounding/GroundingModels/GMConcept.h	/^    virtual void SetName(string sAName);$/;"	p	class:CGMConcept	access:public	signature:(string sAName)
SetName	DMCore/Grounding/GroundingModels/GMRequestAgent.cpp	/^void CGMRequestAgent::SetName(string sAName) {$/;"	f	class:CGMRequestAgent	signature:(string sAName)
SetName	DMCore/Grounding/GroundingModels/GMRequestAgent.h	/^    virtual void SetName(string sAName);$/;"	p	class:CGMRequestAgent	access:public	signature:(string sAName)
SetName	DMCore/Grounding/GroundingModels/GroundingModel.cpp	/^void CGroundingModel::SetName(string sAName) {$/;"	f	class:CGroundingModel	signature:(string sAName)
SetName	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    virtual void SetName(string sAName);$/;"	p	class:CGroundingModel	access:public	signature:(string sAName)
SetNonunderstandingThreshold	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^void CDMCoreAgent::SetNonunderstandingThreshold(float fANonunderstandingThreshold) {$/;"	f	class:CDMCoreAgent	signature:(float fANonunderstandingThreshold)
SetNonunderstandingThreshold	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^    void SetNonunderstandingThreshold(float fANonunderstandingThreshold);$/;"	p	class:CDMCoreAgent	access:public	signature:(float fANonunderstandingThreshold)
SetNullHyp	DMCore/Concepts/ArrayConcept.cpp	/^void CArrayConcept::SetNullHyp(int iIndex) {$/;"	f	class:CArrayConcept	signature:(int iIndex)
SetNullHyp	DMCore/Concepts/ArrayConcept.h	/^    virtual void SetNullHyp(int iIndex);$/;"	p	class:CArrayConcept	access:public	signature:(int iIndex)
SetNullHyp	DMCore/Concepts/Concept.cpp	/^void CConcept::SetNullHyp(int iIndex) {$/;"	f	class:CConcept	signature:(int iIndex)
SetNullHyp	DMCore/Concepts/Concept.h	/^    virtual void SetNullHyp(int iIndex);$/;"	p	class:CConcept	access:public	signature:(int iIndex)
SetNullHyp	DMCore/Concepts/FrameConcept.cpp	/^void CFrameConcept::SetNullHyp(int iIndex) {$/;"	f	class:CFrameConcept	signature:(int iIndex)
SetNullHyp	DMCore/Concepts/FrameConcept.h	/^    virtual void SetNullHyp(int iIndex);$/;"	p	class:CFrameConcept	access:public	signature:(int iIndex)
SetNullHyp	DMCore/Concepts/StructConcept.cpp	/^void CStructConcept::SetNullHyp(int iIndex) {$/;"	f	class:CStructConcept	signature:(int iIndex)
SetNullHyp	DMCore/Concepts/StructConcept.h	/^    virtual void SetNullHyp(int iIndex);$/;"	p	class:CStructConcept	access:public	signature:(int iIndex)
SetOutputClass	DMCore/Agents/CoreAgents/OutputManagerAgent.cpp	/^void COutputManagerAgent::SetOutputClass(string sAOutputClass) {$/;"	f	class:COutputManagerAgent	signature:(string sAOutputClass)
SetOutputClass	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^    void SetOutputClass(string sAOutputClass);$/;"	p	class:COutputManagerAgent	access:public	signature:(string sAOutputClass)
SetOwnerConcept	DMCore/Concepts/Concept.cpp	/^void CConcept::SetOwnerConcept(CConcept* pAConcept) {$/;"	f	class:CConcept	signature:(CConcept* pAConcept)
SetOwnerConcept	DMCore/Concepts/Concept.h	/^    virtual void SetOwnerConcept(CConcept* pAConcept);$/;"	p	class:CConcept	access:public	signature:(CConcept* pAConcept)
SetOwnerDialogAgent	DMCore/Concepts/ArrayConcept.cpp	/^void CArrayConcept::SetOwnerDialogAgent(CDialogAgent* pADialogAgent) {$/;"	f	class:CArrayConcept	signature:(CDialogAgent* pADialogAgent)
SetOwnerDialogAgent	DMCore/Concepts/ArrayConcept.h	/^    virtual void SetOwnerDialogAgent(CDialogAgent* pADialogAgent);$/;"	p	class:CArrayConcept	access:public	signature:(CDialogAgent* pADialogAgent)
SetOwnerDialogAgent	DMCore/Concepts/Concept.cpp	/^void CConcept::SetOwnerDialogAgent(CDialogAgent* pADialogAgent) {$/;"	f	class:CConcept	signature:(CDialogAgent* pADialogAgent)
SetOwnerDialogAgent	DMCore/Concepts/Concept.h	/^    virtual void SetOwnerDialogAgent(CDialogAgent* pADialogAgent);$/;"	p	class:CConcept	access:public	signature:(CDialogAgent* pADialogAgent)
SetOwnerDialogAgent	DMCore/Concepts/StructConcept.cpp	/^void CStructConcept::SetOwnerDialogAgent(CDialogAgent* pADialogAgent) {$/;"	f	class:CStructConcept	signature:(CDialogAgent* pADialogAgent)
SetOwnerDialogAgent	DMCore/Concepts/StructConcept.h	/^    virtual void SetOwnerDialogAgent(CDialogAgent* pADialogAgent);$/;"	p	class:CStructConcept	access:public	signature:(CDialogAgent* pADialogAgent)
SetParameter	DMCore/Agents/Agent.cpp	/^void CAgent::SetParameter(string sParam, string sValue) {$/;"	f	class:CAgent	signature:(string sParam, string sValue)
SetParameter	DMCore/Agents/Agent.h	/^	void SetParameter(string sParam, string sValue);$/;"	p	class:CAgent	access:public	signature:(string sParam, string sValue)
SetParent	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^void CDialogAgent::SetParent(CDialogAgent* pdaAParent) {$/;"	f	class:CDialogAgent	signature:(CDialogAgent* pdaAParent)
SetParent	DMCore/Agents/DialogAgents/DialogAgent.h	/^	void SetParent(CDialogAgent* pdaAParent);$/;"	p	class:CDialogAgent	access:public	signature:(CDialogAgent* pdaAParent)
SetProperties	DMCore/Events/InteractionEvent.cpp	/^void CInteractionEvent::SetProperties(STRING2STRING& s2sProperties) {$/;"	f	class:CInteractionEvent	signature:(STRING2STRING& s2sProperties)
SetProperties	DMCore/Events/InteractionEvent.h	/^  void SetProperties(STRING2STRING& s2sProperties);$/;"	p	class:CInteractionEvent	access:public	signature:(STRING2STRING& s2sProperties)
SetProperty	DMCore/Events/InteractionEvent.cpp	/^void CInteractionEvent::SetProperty(string sSlot, string sValue) {$/;"	f	class:CInteractionEvent	signature:(string sSlot, string sValue)
SetProperty	DMCore/Events/InteractionEvent.h	/^	void SetProperty(string sSlot, string sValue);$/;"	p	class:CInteractionEvent	access:public	signature:(string sSlot, string sValue)
SetRequestAgent	DMCore/Grounding/GroundingModels/GMRequestAgent.cpp	/^void CGMRequestAgent::SetRequestAgent(CDialogAgent* pARequestAgent) {$/;"	f	class:CGMRequestAgent	signature:(CDialogAgent* pARequestAgent)
SetRequestAgent	DMCore/Grounding/GroundingModels/GMRequestAgent.h	/^    void SetRequestAgent(CDialogAgent* pADialogAgent);$/;"	p	class:CGMRequestAgent	access:public	signature:(CDialogAgent* pADialogAgent)
SetRestoredForGroundingFlag	DMCore/Concepts/Concept.cpp	/^void CConcept::SetRestoredForGroundingFlag(bool bARestoredForGrounding) {$/;"	f	class:CConcept	signature:(bool bARestoredForGrounding)
SetRestoredForGroundingFlag	DMCore/Concepts/Concept.h	/^	virtual void SetRestoredForGroundingFlag($/;"	p	class:CConcept	access:public	signature:( bool bARestoredForGrounding = true)
SetRestoredForGroundingFlag	DMCore/Concepts/FrameConcept.cpp	/^void CFrameConcept::SetRestoredForGroundingFlag(bool bARestoredForGrounding) {$/;"	f	class:CFrameConcept	signature:(bool bARestoredForGrounding)
SetRestoredForGroundingFlag	DMCore/Concepts/FrameConcept.h	/^	virtual void SetRestoredForGroundingFlag($/;"	p	class:CFrameConcept	access:public	signature:( bool bARestoredForGrounding = true)
SetSessionStartTimestamp	Utils/Utils.h	/^void SetSessionStartTimestamp(long long liTimestamp);$/;"	p	signature:(long long liTimestamp)
SetStateBroadcastAddress	DMCore/Agents/CoreAgents/StateManagerAgent.cpp	/^void CStateManagerAgent::SetStateBroadcastAddress($/;"	f	class:CStateManagerAgent	signature:( string sAStateBroadcastAddress)
SetStateBroadcastAddress	DMCore/Agents/CoreAgents/StateManagerAgent.h	/^  void SetStateBroadcastAddress(string sAStateBroadcastAddress);$/;"	p	class:CStateManagerAgent	access:public	signature:(string sAStateBroadcastAddress)
SetTimeoutPeriod	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^void CDMCoreAgent::SetTimeoutPeriod(int iATimeoutPeriod) {$/;"	f	class:CDMCoreAgent	signature:(int iATimeoutPeriod)
SetTimeoutPeriod	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	void SetTimeoutPeriod(int iATimeoutPeriod);$/;"	p	class:CDMCoreAgent	access:public	signature:(int iATimeoutPeriod)
SetTurnLastUpdated	DMCore/Concepts/Concept.cpp	/^void CConcept::SetTurnLastUpdated(int iTurn) {$/;"	f	class:CConcept	signature:(int iTurn)
SetTurnLastUpdated	DMCore/Concepts/Concept.h	/^    virtual void SetTurnLastUpdated(int iTurn);$/;"	p	class:CConcept	access:public	signature:(int iTurn)
SetWaitingConveyance	DMCore/Concepts/Concept.cpp	/^void CConcept::SetWaitingConveyance() {$/;"	f	class:CConcept	signature:()
SetWaitingConveyance	DMCore/Concepts/Concept.h	/^    void SetWaitingConveyance();$/;"	p	class:CConcept	access:public	signature:()
Sharpen	DMCore/Grounding/GroundingUtils.h	/^    void Sharpen(float fPower);$/;"	p	class:CBeliefDistribution	access:public	signature:(float fPower)
SignChecker	spdlog/fmt/bundled/format.h	/^struct SignChecker$/;"	s	namespace:fmt::internal
SignChecker	spdlog/fmt/bundled/format.h	/^struct SignChecker<false>$/;"	s	namespace:fmt::internal
SignalAcceptOnConcept	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^void CDMCoreAgent::SignalAcceptOnConcept(CConcept* pConcept) {$/;"	f	class:CDMCoreAgent	signature:(CConcept* pConcept)
SignalAcceptOnConcept	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	void SignalAcceptOnConcept(CConcept* pConcept);$/;"	p	class:CDMCoreAgent	access:public	signature:(CConcept* pConcept)
SignalExplicitConfirmOnConcept	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^void CDMCoreAgent::SignalExplicitConfirmOnConcept(CConcept* pConcept) {$/;"	f	class:CDMCoreAgent	signature:(CConcept* pConcept)
SignalExplicitConfirmOnConcept	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	void SignalExplicitConfirmOnConcept(CConcept* pConcept);$/;"	p	class:CDMCoreAgent	access:public	signature:(CConcept* pConcept)
SignalFocusClaimsPhase	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^void CDMCoreAgent::SignalFocusClaimsPhase(bool bAFocusClaimsPhaseFlag) {$/;"	f	class:CDMCoreAgent	signature:(bool bAFocusClaimsPhaseFlag)
SignalFocusClaimsPhase	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^    void SignalFocusClaimsPhase(bool bAFocusClaimsPhaseFlag = true);$/;"	p	class:CDMCoreAgent	access:public	signature:(bool bAFocusClaimsPhaseFlag = true)
SignalImplicitConfirmOnConcept	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^void CDMCoreAgent::SignalImplicitConfirmOnConcept(CConcept* pConcept) {$/;"	f	class:CDMCoreAgent	signature:(CConcept* pConcept)
SignalImplicitConfirmOnConcept	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	void SignalImplicitConfirmOnConcept(CConcept* pConcept);$/;"	p	class:CDMCoreAgent	access:public	signature:(CConcept* pConcept)
SignalUnplannedImplicitConfirmOnConcept	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^void CDMCoreAgent::SignalUnplannedImplicitConfirmOnConcept(int iState, $/;"	f	class:CDMCoreAgent	signature:(int iState, CConcept* pConcept)
SignalUnplannedImplicitConfirmOnConcept	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	void SignalUnplannedImplicitConfirmOnConcept(int iState, CConcept* pConcept);$/;"	p	class:CDMCoreAgent	access:public	signature:(int iState, CConcept* pConcept)
Sleep	Utils/Utils.h	/^void Sleep(int iDelay);$/;"	p	signature:(int iDelay)
SplitOnFirst	Utils/Utils.cpp	/^bool SplitOnFirst(string sOriginal, char* pDividers, $/;"	f	signature:(string sOriginal, char* pDividers, string& rsFirstPart, string& rsSecondPart)
SplitOnFirst	Utils/Utils.cpp	/^bool SplitOnFirst(string sOriginal, char* pDividers, $/;"	f	signature:(string sOriginal, char* pDividers, string& rsFirstPart, string& rsSecondPart, char cQuote)
SplitOnFirst	Utils/Utils.h	/^bool SplitOnFirst(string sOriginal, char* pDividers, $/;"	p	signature:(string sOriginal, char* pDividers, string& rsFirstPart, string& rsSecondPart)
SplitOnFirst	Utils/Utils.h	/^bool SplitOnFirst(string sOriginal, char* pDividers, $/;"	p	signature:(string sOriginal, char* pDividers, string& rsFirstPart, string& rsSecondPart, char cQuote)
SplitOnLast	Utils/Utils.cpp	/^bool SplitOnLast(string sOriginal, char* pDividers, $/;"	f	signature:(string sOriginal, char* pDividers, string& rsFirstPart, string& rsSecondPart)
SplitOnLast	Utils/Utils.h	/^bool SplitOnLast(string sOriginal, char* pDividers, $/;"	p	signature:(string sOriginal, char* pDividers, string& rsFirstPart, string& rsSecondPart)
StartOver	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^void CDMCoreAgent::StartOver() {$/;"	f	class:CDMCoreAgent	signature:()
StartOver	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	void StartOver();$/;"	p	class:CDMCoreAgent	access:public	signature:()
StrFormatSpec	spdlog/fmt/bundled/format.h	/^    StrFormatSpec(const Char *str, unsigned width, FillChar fill)$/;"	f	class:fmt::StrFormatSpec	access:public	signature:(const Char *str, unsigned width, FillChar fill)
StrFormatSpec	spdlog/fmt/bundled/format.h	/^class StrFormatSpec: public AlignSpec$/;"	c	namespace:fmt	inherits:AlignSpec
String	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.h	/^		String$/;"	e	enum:CCondition::TValueType
StringRef	spdlog/fmt/bundled/format.h	/^typedef BasicStringRef<char> StringRef;$/;"	t	namespace:fmt
StringToFloorStatus	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^TFloorStatus CDMCoreAgent::StringToFloorStatus(string sAFloor) {$/;"	f	class:CDMCoreAgent	signature:(string sAFloor)
StringToFloorStatus	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	TFloorStatus StringToFloorStatus(string sAFloor);$/;"	p	class:CDMCoreAgent	access:public	signature:(string sAFloor)
StringToS2SHash	Utils/Utils.cpp	/^STRING2STRING StringToS2SHash(string sString, string sSeparator, $/;"	f	signature:(string sString, string sSeparator, string sEquals)
StringToS2SHash	Utils/Utils.h	/^STRING2STRING StringToS2SHash(string sString, string sSeparator = ",", $/;"	p	signature:(string sString, string sSeparator = Ó, string sEquals = Ó)
StringValue	spdlog/fmt/bundled/format.h	/^    struct StringValue$/;"	s	struct:fmt::internal::Value	access:public
SubAgents	DMCore/Agents/DialogAgents/DialogAgent.h	/^	TAgentsVector SubAgents;$/;"	m	class:CDialogAgent	access:protected
SuccessCriteriaSatisfied	DMCore/Agents/DialogAgents/BasicAgents/MAExecute.cpp	/^bool CMAExecute::SuccessCriteriaSatisfied() {$/;"	f	class:CMAExecute	signature:()
SuccessCriteriaSatisfied	DMCore/Agents/DialogAgents/BasicAgents/MAExecute.h	/^	virtual bool SuccessCriteriaSatisfied();$/;"	p	class:CMAExecute	access:public	signature:()
SuccessCriteriaSatisfied	DMCore/Agents/DialogAgents/BasicAgents/MAInform.cpp	/^bool CMAInform::SuccessCriteriaSatisfied() {$/;"	f	class:CMAInform	signature:()
SuccessCriteriaSatisfied	DMCore/Agents/DialogAgents/BasicAgents/MAInform.h	/^	virtual bool SuccessCriteriaSatisfied();$/;"	p	class:CMAInform	access:public	signature:()
SuccessCriteriaSatisfied	DMCore/Agents/DialogAgents/BasicAgents/MARequest.cpp	/^bool CMARequest::SuccessCriteriaSatisfied() {$/;"	f	class:CMARequest	signature:()
SuccessCriteriaSatisfied	DMCore/Agents/DialogAgents/BasicAgents/MARequest.h	/^	virtual bool SuccessCriteriaSatisfied();$/;"	p	class:CMARequest	access:public	signature:()
SuccessCriteriaSatisfied	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^bool CDialogAgent::SuccessCriteriaSatisfied() {$/;"	f	class:CDialogAgent	signature:()
SuccessCriteriaSatisfied	DMCore/Agents/DialogAgents/DialogAgent.h	/^	virtual bool SuccessCriteriaSatisfied();$/;"	p	class:CDialogAgent	access:public	signature:()
Supported	spdlog/fmt/bundled/format.h	/^    typedef Null<T> Supported;$/;"	t	struct:fmt::internal::WCharHelper	access:public
Supported	spdlog/fmt/bundled/format.h	/^    typedef T Supported;$/;"	t	struct:fmt::internal::WCharHelper	access:public
SystemError	spdlog/fmt/bundled/format.h	/^    SystemError()$/;"	f	class:SystemError	access:protected	signature:()
SystemError	spdlog/fmt/bundled/format.h	/^    SystemError(int error_code, CStringRef message)$/;"	f	class:SystemError	access:public	signature:(int error_code, CStringRef message)
SystemError	spdlog/fmt/bundled/format.h	/^class SystemError: public internal::RuntimeError$/;"	c	inherits:internal::RuntimeError
SystemError::Char	spdlog/fmt/bundled/format.h	/^    typedef char Char;  \/\/ For FMT_VARIADIC_CTOR.$/;"	t	class:SystemError	access:protected
SystemError::FMT_DTOR_NOEXCEPT	spdlog/fmt/bundled/format.h	/^    ~SystemError() FMT_DTOR_NOEXCEPT;$/;"	m	class:SystemError	access:public
SystemError::SystemError	spdlog/fmt/bundled/format.h	/^    SystemError()$/;"	f	class:SystemError	access:protected	signature:()
SystemError::SystemError	spdlog/fmt/bundled/format.h	/^    SystemError(int error_code, CStringRef message)$/;"	f	class:SystemError	access:public	signature:(int error_code, CStringRef message)
SystemError::error_code	spdlog/fmt/bundled/format.h	/^    int error_code() const$/;"	f	class:SystemError	access:public	signature:() const
SystemError::error_code_	spdlog/fmt/bundled/format.h	/^    int error_code_;$/;"	m	class:SystemError	access:protected
SystemError::init	spdlog/fmt/bundled/format.h	/^    void init(int err_code, CStringRef format_str, ArgList args);$/;"	p	class:SystemError	access:private	signature:(int err_code, CStringRef format_str, ArgList args)
TAddSubAgentMethod	DMCore/Agents/DialogAgents/DialogAgent.h	/^} TAddSubAgentMethod;$/;"	t	typeref:enum:__anon59
TAgentsHash	DMCore/Agents/Registry.h	/^typedef map <string, CAgent*, less<string>, allocator<CAgent*> > TAgentsHash;$/;"	t
TAgentsTypeHash	DMCore/Agents/Registry.h	/^  TAgentsTypeHash;$/;"	t
TAgentsVector	DMCore/Agents/DialogAgents/DialogAgent.h	/^typedef vector <CDialogAgent*, allocator <CDialogAgent*> > TAgentsVector;$/;"	t
TBindMethod	DMCore/Agents/DialogAgents/DialogAgent.h	/^} TBindMethod;$/;"	t	typeref:enum:__anon56
TBinding	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^} TBinding;$/;"	t	typeref:struct:__anon49
TBindingFilterFunct	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^typedef string (*TBindingFilterFunct)(string sSlotName, string sSlotValue);$/;"	t
TBindingHistory	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^    TBindingHistory;$/;"	t
TBindingsDescr	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^} TBindingsDescr;$/;"	t	typeref:struct:__anon51
TComparator	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.h	/^	typedef enum TComparator {$/;"	g	class:CCondition	access:protected
TComparator	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.h	/^	} TComparator;$/;"	t	class:CCondition	typeref:enum:CCondition::TComparator	access:protected
TCompiledExpectationLevel	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^} TCompiledExpectationLevel;$/;"	t	typeref:struct:__anon45
TCompletionType	DMCore/Agents/DialogAgents/DialogAgent.h	/^} TCompletionType;$/;"	t	typeref:enum:__anon60
TConceptExpectation	DMCore/Agents/DialogAgents/DialogAgent.h	/^} TConceptExpectation;$/;"	t	typeref:struct:__anon57
TConceptExpectationList	DMCore/Agents/DialogAgents/DialogAgent.h	/^    TConceptExpectationList;$/;"	t
TConceptGroundingRequest	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^} TConceptGroundingRequest;$/;"	t	typeref:struct:__anon39
TConceptGroundingRequests	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    TConceptGroundingRequests;$/;"	t
TConceptPointersSet	DMCore/Concepts/Concept.h	/^    allocator < CConcept * > > TConceptPointersSet;$/;"	t
TConceptPointersVector	DMCore/Concepts/Concept.h	/^typedef vector <CConcept *> TConceptPointersVector;$/;"	t
TConceptSource	DMCore/Concepts/Concept.h	/^typedef enum { csUser, csSystem } TConceptSource;$/;"	t	typeref:enum:__anon65
TConceptType	DMCore/Concepts/Concept.h	/^               ctFrame, ctArray } TConceptType;$/;"	t	typeref:enum:__anon64
TConveyance	DMCore/Concepts/Concept.h	/^typedef enum { cConveyed, cNotConveyed, cFailed } TConveyance;$/;"	t	typeref:enum:__anon66
TCustomStartOverFunct	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^typedef void (*TCustomStartOverFunct)();$/;"	t
TDialogAgentSet	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^	TDialogAgentSet;$/;"	t	file:
TDialogExecuteReturnCode	DMCore/Agents/DialogAgents/DialogAgent.h	/^} TDialogExecuteReturnCode;			$/;"	t	typeref:enum:__anon55
TDialogState	DMCore/Agents/CoreAgents/StateManagerAgent.h	/^} TDialogState;$/;"	t	typeref:struct:__anon44
TDiscourseAgentInfo	DMCore/Agents/CoreAgents/DTTManagerAgent.h	/^} TDiscourseAgentInfo;$/;"	t	typeref:struct:__anon43
TERMINATE_SESSION	DMCore/Core.h	100;"	d
TEST2_THREADSAFE_QUEUE_H	DMCore/message/threadsafe_queue.h	6;"	d
TExecutionHistoryItem	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^} TExecutionHistoryItem;$/;"	t	typeref:struct:__anon48
TExecutionStack	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	TExecutionStack;$/;"	t
TExecutionStackItem	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^} TExecutionStackItem;$/;"	t	typeref:struct:__anon47
TExpectationAgenda	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^} TExpectationAgenda; $/;"	t	typeref:struct:__anon46
TExternalCallSpec	DMCore/Agents/CoreAgents/TrafficManagerAgent.h	/^} TExternalCallSpec;$/;"	t	typeref:struct:__anon37
TExternalPolicies	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^typedef map<string, CExternalPolicyInterface*> TExternalPolicies;$/;"	t
TFloorStatus	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^} TFloorStatus;		$/;"	t	typeref:enum:__anon54
TFocusClaim	DMCore/Agents/DialogAgents/DialogAgent.h	/^} TFocusClaim;$/;"	t	typeref:struct:__anon58
TFocusClaimsList	DMCore/Agents/DialogAgents/DialogAgent.h	/^typedef vector<TFocusClaim, allocator <TFocusClaim> > TFocusClaimsList;$/;"	t
TForcedConceptUpdate	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^} TForcedConceptUpdate;$/;"	t	typeref:struct:__anon50
TGroundingActionHistoryItem	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^} TGroundingActionHistoryItem;$/;"	t	typeref:struct:__anon40
TGroundingActionHistoryItems	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^typedef vector <TGroundingActionHistoryItem> TGroundingActionHistoryItems;$/;"	t
TGroundingManagerConfiguration	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^} TGroundingManagerConfiguration;$/;"	t	typeref:struct:__anon38
TGroundingModelPointersSet	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    allocator < CGroundingModel * > > TGroundingModelPointersSet;$/;"	t
TGroundingModelPointersVector	DMCore/Grounding/GroundingModels/GroundingModel.h	/^typedef vector <CGroundingModel *> TGroundingModelPointersVector;$/;"	t
TGroundingModelsTypeHash	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^typedef map <string, FCreateGroundingModel> TGroundingModelsTypeHash;$/;"	t
TIMEOUT_ELAPSED	DMCore/Core.h	97;"	d
TIMEOUT_PERIOD	DMCore/Agents/DialogAgents/BasicAgents/MARequest.h	215;"	d
TIntVector	Utils/Utils.h	/^typedef vector <int> TIntVector;$/;"	t
TItemMap	DMCore/Concepts/StructConcept.h	/^typedef map<string, CConcept*, less<string>, allocator<CConcept *> > TItemMap;$/;"	t
TLRModel	DMCore/Grounding/GroundingModels/GMRequestAgent_LR.h	/^} TLRModel;$/;"	t	typeref:struct:__anon61
TLoggingStream	DMCore/Log.h	/^} TLoggingStream;$/;"	t	typeref:struct:__anon63
TLoggingStreamsHash	DMCore/Log.h	/^  TLoggingStreamsHash;$/;"	t
TMapCE	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	TMapCE;$/;"	t
TMountingMethod	DMCore/Agents/CoreAgents/DTTManagerAgent.h	/^} TMountingMethod;$/;"	t	typeref:enum:__anon42
TOutputDevice	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^} TOutputDevice;$/;"	t	typeref:struct:__anon41
TPolicy	DMCore/Grounding/GroundingModels/GroundingModel.h	/^typedef vector<TStateActionsValues> TPolicy;$/;"	t
TRAFFICMANAGERDUMP_STREAM	DMCore/Log.h	103;"	d
TRAFFICMANAGER_STREAM	DMCore/Log.h	102;"	d
TRIGGERED_BY	DMCore/Agents/DialogAgents/DialogAgent.h	757;"	d
TRIGGERED_BY_COMMANDS	DMCore/Agents/DialogAgents/DialogAgent.h	764;"	d
TSlotConceptPair	DMCore/Agents/CoreAgents/TrafficManagerAgent.h	/^} TSlotConceptPair;$/;"	t	typeref:struct:__anon36
TSlotValuePair	DMCore/Agents/CoreAgents/TrafficManagerAgent.h	/^} TSlotValuePair;$/;"	t	typeref:struct:__anon35
TStateActionsValues	DMCore/Grounding/GroundingModels/GroundingModel.h	/^} TStateActionsValues;$/;"	t	typeref:struct:__anon62
TStringVector	Utils/Utils.h	/^typedef vector <string> TStringVector;$/;"	t
TSystemAction	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^} TSystemAction;$/;"	t	typeref:struct:__anon52
TSystemActionOnConcept	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^} TSystemActionOnConcept;$/;"	t	typeref:struct:__anon53
TURNS_SINCE_LAST_UPDATED	DialogTask/DialogTask.h	251;"	d
TValueType	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.h	/^	typedef enum TValueType {$/;"	g	class:CCondition	access:protected
TValueType	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.h	/^	} TValueType;$/;"	t	class:CCondition	typeref:enum:CCondition::TValueType	access:protected
T_formatter	spdlog/details/pattern_formatter_impl.h	/^class T_formatter:public flag_formatter$/;"	c	namespace:spdlog::details	inherits:flag_formatter
TerminateDialogCore	DMCore/DMCore.cpp	/^void TerminateDialogCore() {$/;"	f	signature:()
TerminateLogging	DMCore/Log.cpp	/^void TerminateLogging() {$/;"	f	signature:()
TerminateLogging	DMCore/Log.h	/^void TerminateLogging();$/;"	p	signature:()
ThousandsSep	spdlog/fmt/bundled/format.h	/^    explicit ThousandsSep(fmt::StringRef sep): sep_(sep), digit_index_(0)$/;"	f	class:fmt::internal::ThousandsSep	access:public	signature:(fmt::StringRef sep)
ThousandsSep	spdlog/fmt/bundled/format.h	/^class ThousandsSep$/;"	c	namespace:fmt::internal
TimeToString	Utils/Utils.h	/^string TimeToString(timeb time);$/;"	p	signature:(timeb time)
TimeoutPrompt	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^string CDialogAgent::TimeoutPrompt() {$/;"	f	class:CDialogAgent	signature:()
TimeoutPrompt	DMCore/Agents/DialogAgents/DialogAgent.h	/^	virtual string TimeoutPrompt();$/;"	p	class:CDialogAgent	access:public	signature:()
TimestampToString	Utils/Utils.h	/^string TimestampToString(long long liTimestamp);$/;"	p	signature:(long long liTimestamp)
TimestampToTime	Utils/Utils.h	/^timeb TimestampToTime(long long liTimestamp);$/;"	p	signature:(long long liTimestamp)
ToLowerCase	Utils/Utils.cpp	/^string ToLowerCase(string sString) {$/;"	f	signature:(string sString)
ToLowerCase	Utils/Utils.h	/^string ToLowerCase(string sString);$/;"	p	signature:(string sString)
ToString	DMCore/Agents/CoreAgents/OutputManagerAgent.cpp	/^string COutputHistory::ToString() {$/;"	f	class:COutputHistory	signature:()
ToString	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^	string ToString();$/;"	p	class:COutputHistory	access:public	signature:()
ToString	DMCore/Concepts/BoolConcept.cpp	/^string CBoolHyp::ToString() {$/;"	f	class:CBoolHyp	signature:()
ToString	DMCore/Concepts/BoolConcept.h	/^	virtual string ToString();$/;"	p	class:CBoolHyp	access:public	signature:()
ToString	DMCore/Concepts/Concept.cpp	/^string CHyp::ToString() {$/;"	f	class:CHyp	signature:()
ToString	DMCore/Concepts/Concept.h	/^	virtual string ToString();$/;"	p	class:CHyp	access:public	signature:()
ToString	DMCore/Concepts/FloatConcept.cpp	/^string CFloatHyp::ToString() {$/;"	f	class:CFloatHyp	signature:()
ToString	DMCore/Concepts/FloatConcept.h	/^	virtual string ToString();$/;"	p	class:CFloatHyp	access:public	signature:()
ToString	DMCore/Concepts/IntConcept.cpp	/^string CIntHyp::ToString() {$/;"	f	class:CIntHyp	signature:()
ToString	DMCore/Concepts/IntConcept.h	/^	virtual string ToString();$/;"	p	class:CIntHyp	access:public	signature:()
ToString	DMCore/Concepts/StringConcept.cpp	/^string CStringHyp::ToString() {$/;"	f	class:CStringHyp	signature:()
ToString	DMCore/Concepts/StringConcept.h	/^	virtual string ToString();$/;"	p	class:CStringHyp	access:public	signature:()
ToString	DMCore/Concepts/StructConcept.cpp	/^string CStructHyp::ToString() {$/;"	f	class:CStructHyp	signature:()
ToString	DMCore/Concepts/StructConcept.h	/^	virtual string ToString();$/;"	p	class:CStructHyp	access:public	signature:()
ToString	DMCore/Events/InteractionEvent.cpp	/^string CInteractionEvent::ToString() {$/;"	f	class:CInteractionEvent	signature:()
ToString	DMCore/Events/InteractionEvent.h	/^	string ToString();$/;"	p	class:CInteractionEvent	access:public	signature:()
ToString	DMCore/Grounding/GroundingUtils.cpp	/^string CState::ToString() {$/;"	f	class:CState	signature:()
ToString	DMCore/Grounding/GroundingUtils.h	/^    string ToString();$/;"	p	class:CState	access:public	signature:()
ToString	DMCore/Outputs/FrameOutput.cpp	/^string CFrameOutput::ToString() {$/;"	f	class:CFrameOutput	signature:()
ToString	DMCore/Outputs/FrameOutput.h	/^	virtual string ToString();$/;"	p	class:CFrameOutput	access:public	signature:()
ToString	DMCore/Outputs/Output.h	/^	virtual string ToString() = 0; $/;"	p	class:COutput	access:public	signature:()
ToUpperCase	Utils/Utils.cpp	/^string ToUpperCase(string sString) {$/;"	f	signature:(string sString)
ToUpperCase	Utils/Utils.h	/^string ToUpperCase(string sString);$/;"	p	signature:(string sString)
TopHypToString	DMCore/Concepts/ArrayConcept.cpp	/^string CArrayConcept::TopHypToString() {$/;"	f	class:CArrayConcept	signature:()
TopHypToString	DMCore/Concepts/ArrayConcept.h	/^	virtual string TopHypToString();$/;"	p	class:CArrayConcept	access:public	signature:()
TopHypToString	DMCore/Concepts/Concept.cpp	/^string CConcept::TopHypToString() {$/;"	f	class:CConcept	signature:()
TopHypToString	DMCore/Concepts/Concept.h	/^	virtual string TopHypToString();$/;"	p	class:CConcept	access:public	signature:()
TopHypToString	DMCore/Concepts/FrameConcept.cpp	/^string CFrameConcept::TopHypToString() {$/;"	f	class:CFrameConcept	signature:()
TopHypToString	DMCore/Concepts/FrameConcept.h	/^	virtual string TopHypToString();$/;"	p	class:CFrameConcept	access:public	signature:()
TriggeredByCommands	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^string CDialogAgent::TriggeredByCommands() {$/;"	f	class:CDialogAgent	signature:()
TriggeredByCommands	DMCore/Agents/DialogAgents/DialogAgent.h	/^	virtual string TriggeredByCommands();$/;"	p	class:CDialogAgent	access:public	signature:()
Trim	Utils/Utils.cpp	/^string Trim(string sString, char * pToTrim) {$/;"	f	signature:(string sString, char * pToTrim)
Trim	Utils/Utils.h	/^string Trim(string sString, char * pToTrim = " \\n\\t");$/;"	p	signature:(string sString, char * pToTrim = Ó)
TrimLeft	Utils/Utils.cpp	/^string TrimLeft(string sString, char * pToTrim) {$/;"	f	signature:(string sString, char * pToTrim)
TrimLeft	Utils/Utils.h	/^string TrimLeft(string sString, char * pToTrim = " \\n\\t");$/;"	p	signature:(string sString, char * pToTrim = Ó)
TrimRight	Utils/Utils.cpp	/^string TrimRight(string sString, char * pToTrim) {$/;"	f	signature:(string sString, char * pToTrim)
TrimRight	Utils/Utils.h	/^string TrimRight(string sString, char * pToTrim = " \\n\\t");$/;"	p	signature:(string sString, char * pToTrim = Ó)
TurnGroundingModelFactory	DMCore/Grounding/GroundingModels/AllGroundingModels.cpp	/^CGMRequestAgent* TurnGroundingModelFactory( string sType, string sSpec) {$/;"	f	signature:( string sType, string sSpec)
Type	spdlog/fmt/bundled/format.h	/^    enum Type$/;"	g	struct:fmt::internal::Value	access:public
Type	spdlog/fmt/bundled/format.h	/^    typedef Arg Type[N + 1]; \/\/ +1 for the list end Arg::NONE$/;"	t	struct:fmt::ArgArray	access:public
Type	spdlog/fmt/bundled/format.h	/^    typedef T Type;$/;"	t	struct:fmt::internal::MakeUnsigned	access:public
Type	spdlog/fmt/bundled/format.h	/^    typedef uint32_t Type;$/;"	t	struct:fmt::internal::TypeSelector	access:public
Type	spdlog/fmt/bundled/format.h	/^    typedef uint64_t Type;$/;"	t	struct:fmt::internal::TypeSelector	access:public
TypeSelector	spdlog/fmt/bundled/format.h	/^    TypeSelector<std::numeric_limits<T>::digits <= 32>::Type MainType;$/;"	t	struct:fmt::internal::IntTraits	access:public
TypeSelector	spdlog/fmt/bundled/format.h	/^struct TypeSelector$/;"	s	namespace:fmt::internal
TypeSelector	spdlog/fmt/bundled/format.h	/^struct TypeSelector<false>$/;"	s	namespace:fmt::internal
TypeSpec	spdlog/fmt/bundled/format.h	/^struct TypeSpec: EmptySpec$/;"	s	namespace:fmt	inherits:EmptySpec
UINT	spdlog/fmt/bundled/format.h	/^        INT, UINT, LONG_LONG, ULONG_LONG, BOOL, CHAR, LAST_INTEGER_TYPE = CHAR,$/;"	e	enum:fmt::internal::Value::Type
ULONG_LONG	spdlog/fmt/bundled/format.h	/^        INT, UINT, LONG_LONG, ULONG_LONG, BOOL, CHAR, LAST_INTEGER_TYPE = CHAR,$/;"	e	enum:fmt::internal::Value::Type
ULongLong	spdlog/fmt/bundled/format.h	/^FMT_GCC_EXTENSION typedef unsigned long long ULongLong;$/;"	t	namespace:fmt
UNAVAILABLE	DialogTask/DialogTask.h	244;"	d
UNAVAILABLE_ACTION	DMCore/Grounding/GroundingModels/GroundingModel.h	71;"	d
UNDEFINED_CONCEPT	DMCore/Concepts/Concept.h	144;"	d
UNDEFINED_VALUE	DMCore/Concepts/Concept.h	146;"	d
UPDATED	DialogTask/DialogTask.h	245;"	d
UPDATED_IN_LAST_TURN	DialogTask/DialogTask.h	252;"	d
UPDATED_IN_PENULTIMATE_TURN	DialogTask/DialogTask.h	253;"	d
USER_CONCEPT	DMCore/Agents/DialogAgents/BasicAgents/DialogAgency.h	213;"	d
USE_ALL_GROUNDING_ACTIONS	DialogTask/DialogTask.h	160;"	d
USE_ALL_GROUNDING_MODEL_TYPES	DialogTask/DialogTask.h	152;"	d
USE_BINDING_FILTERS	DialogTask/DialogTask.h	168;"	d
USE_GROUNDING_ACTIONS	DialogTask/DialogTask.h	146;"	d
USE_GROUNDING_MODEL_TYPES	DialogTask/DialogTask.h	140;"	d
USE_LIBRARY_AGENTS	DialogTask/DialogTask.h	130;"	d
USE_OUTPUT_CLASS	DialogTask/DialogTask.h	122;"	d
USE_OUTPUT_DEVICES	DialogTask/DialogTask.h	107;"	d
UTF16ToUTF8	spdlog/fmt/bundled/format.cc	/^	FMT_FUNC internal::UTF16ToUTF8::UTF16ToUTF8(WStringRef s)$/;"	f	class:fmt::internal::UTF16ToUTF8	signature:(WStringRef s)
UTF16ToUTF8	spdlog/fmt/bundled/format.h	/^    FMT_API explicit UTF16ToUTF8(WStringRef s);$/;"	p	class:fmt::internal::UTF16ToUTF8	access:public	signature:(WStringRef s)
UTF16ToUTF8	spdlog/fmt/bundled/format.h	/^    UTF16ToUTF8()$/;"	f	class:fmt::internal::UTF16ToUTF8	access:public	signature:()
UTF16ToUTF8	spdlog/fmt/bundled/format.h	/^class UTF16ToUTF8$/;"	c	namespace:fmt::internal
UTF8ToUTF16	spdlog/fmt/bundled/format.cc	/^	FMT_FUNC internal::UTF8ToUTF16::UTF8ToUTF16(StringRef s)$/;"	f	class:fmt::internal::UTF8ToUTF16	signature:(StringRef s)
UTF8ToUTF16	spdlog/fmt/bundled/format.h	/^    FMT_API explicit UTF8ToUTF16(StringRef s);$/;"	p	class:fmt::internal::UTF8ToUTF16	access:public	signature:(StringRef s)
UTF8ToUTF16	spdlog/fmt/bundled/format.h	/^class UTF8ToUTF16$/;"	c	namespace:fmt::internal
UnBlock	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^void CDialogAgent::UnBlock() {$/;"	f	class:CDialogAgent	signature:()
UnBlock	DMCore/Agents/DialogAgents/DialogAgent.h	/^	void UnBlock();$/;"	p	class:CDialogAgent	access:public	signature:()
UnMountAgent	DMCore/Agents/CoreAgents/DTTManagerAgent.cpp	/^void CDTTManagerAgent::UnMountAgent(CDialogAgent* pdaWho) {$/;"	f	class:CDTTManagerAgent	signature:(CDialogAgent* pdaWho)
UnMountAgent	DMCore/Agents/CoreAgents/DTTManagerAgent.h	/^	void UnMountAgent(CDialogAgent* pdaWho);$/;"	p	class:CDTTManagerAgent	access:public	signature:(CDialogAgent* pdaWho)
UnRegister	DMCore/Agents/Agent.cpp	/^void CAgent::UnRegister() {$/;"	f	class:CAgent	signature:()
UnRegister	DMCore/Agents/Agent.h	/^	virtual void UnRegister();$/;"	p	class:CAgent	access:public	signature:()
UnRegisterAgent	DMCore/Agents/Registry.cpp	/^void CRegistry::UnRegisterAgent(string sAgentName) {$/;"	f	class:CRegistry	signature:(string sAgentName)
UnRegisterAgent	DMCore/Agents/Registry.h	/^	void UnRegisterAgent(string sAgentName);$/;"	p	class:CRegistry	access:public	signature:(string sAgentName)
UnRegisterAgentType	DMCore/Agents/Registry.cpp	/^void CRegistry::UnRegisterAgentType(string sAgentTypeName) {$/;"	f	class:CRegistry	signature:(string sAgentTypeName)
UnRegisterAgentType	DMCore/Agents/Registry.h	/^	void UnRegisterAgentType(string sAgentTypeName);$/;"	p	class:CRegistry	access:public	signature:(string sAgentTypeName)
Undo	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^void CDialogAgent::Undo() {$/;"	f	class:CDialogAgent	signature:()
Undo	DMCore/Agents/DialogAgents/DialogAgent.h	/^	virtual void Undo();$/;"	p	class:CDialogAgent	access:public	signature:()
UnlockConceptGroundingRequestsQueue	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^void CGroundingManagerAgent::UnlockConceptGroundingRequestsQueue() {$/;"	f	class:CGroundingManagerAgent	signature:()
UnlockConceptGroundingRequestsQueue	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    void UnlockConceptGroundingRequestsQueue();$/;"	p	class:CGroundingManagerAgent	access:public	signature:()
Unsupported	spdlog/fmt/bundled/format.h	/^    typedef Null<T> Unsupported;$/;"	t	struct:fmt::internal::WCharHelper	access:public
Unsupported	spdlog/fmt/bundled/format.h	/^    typedef T Unsupported;$/;"	t	struct:fmt::internal::WCharHelper	access:public
Update	DMCore/Concepts/Concept.cpp	/^void CConcept::Update(string sUpdateType, void* pUpdateData) {$/;"	f	class:CConcept	signature:(string sUpdateType, void* pUpdateData)
Update	DMCore/Concepts/Concept.h	/^	virtual void Update(string sUpdateType, void* pUpdateData);$/;"	p	class:CConcept	access:public	signature:(string sUpdateType, void* pUpdateData)
UpdateName	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^void CDialogAgent::UpdateName() {$/;"	f	class:CDialogAgent	signature:()
UpdateName	DMCore/Agents/DialogAgents/DialogAgent.h	/^	void UpdateName();$/;"	p	class:CDialogAgent	access:public	signature:()
UpdateState	DMCore/Agents/CoreAgents/StateManagerAgent.cpp	/^void CStateManagerAgent::UpdateState() {$/;"	f	class:CStateManagerAgent	signature:()
UpdateState	DMCore/Agents/CoreAgents/StateManagerAgent.h	/^	void UpdateState();$/;"	p	class:CStateManagerAgent	access:public	signature:()
Update_Calista_AssignFromConcept	DMCore/Concepts/Concept.cpp	/^void CConcept::Update_Calista_AssignFromConcept(void* pUpdateData) {$/;"	f	class:CConcept	signature:(void* pUpdateData)
Update_Calista_AssignFromConcept	DMCore/Concepts/Concept.h	/^	virtual void Update_Calista_AssignFromConcept(void* pUpdateData);$/;"	p	class:CConcept	access:public	signature:(void* pUpdateData)
Update_Calista_AssignFromString	DMCore/Concepts/Concept.cpp	/^void CConcept::Update_Calista_AssignFromString(void* pUpdateData) {$/;"	f	class:CConcept	signature:(void* pUpdateData)
Update_Calista_AssignFromString	DMCore/Concepts/Concept.h	/^	virtual void Update_Calista_AssignFromString(void* pUpdateData);$/;"	p	class:CConcept	access:public	signature:(void* pUpdateData)
Update_Calista_CollapseToMode	DMCore/Concepts/ArrayConcept.cpp	/^void CArrayConcept::Update_Calista_CollapseToMode(void* pUpdateData) {$/;"	f	class:CArrayConcept	signature:(void* pUpdateData)
Update_Calista_CollapseToMode	DMCore/Concepts/ArrayConcept.h	/^    virtual void Update_Calista_CollapseToMode(void* pUpdateData);$/;"	p	class:CArrayConcept	access:public	signature:(void* pUpdateData)
Update_Calista_CollapseToMode	DMCore/Concepts/Concept.cpp	/^void CConcept::Update_Calista_CollapseToMode(void* pUpdateData) {$/;"	f	class:CConcept	signature:(void* pUpdateData)
Update_Calista_CollapseToMode	DMCore/Concepts/Concept.h	/^    virtual void Update_Calista_CollapseToMode(void* pUpdateData);$/;"	p	class:CConcept	access:public	signature:(void* pUpdateData)
Update_Calista_CollapseToMode	DMCore/Concepts/FrameConcept.cpp	/^void CFrameConcept::Update_Calista_CollapseToMode(void* pUpdateData) {$/;"	f	class:CFrameConcept	signature:(void* pUpdateData)
Update_Calista_CollapseToMode	DMCore/Concepts/FrameConcept.h	/^    virtual void Update_Calista_CollapseToMode(void* pUpdateData);$/;"	p	class:CFrameConcept	access:public	signature:(void* pUpdateData)
Update_Calista_UpdateWithConcept	DMCore/Concepts/ArrayConcept.cpp	/^void CArrayConcept::Update_Calista_UpdateWithConcept(void* pUpdateData) {$/;"	f	class:CArrayConcept	signature:(void* pUpdateData)
Update_Calista_UpdateWithConcept	DMCore/Concepts/ArrayConcept.h	/^    virtual void Update_Calista_UpdateWithConcept(void* pUpdateData);$/;"	p	class:CArrayConcept	access:public	signature:(void* pUpdateData)
Update_Calista_UpdateWithConcept	DMCore/Concepts/Concept.cpp	/^void CConcept::Update_Calista_UpdateWithConcept(void* pUpdateData) {$/;"	f	class:CConcept	signature:(void* pUpdateData)
Update_Calista_UpdateWithConcept	DMCore/Concepts/Concept.h	/^    virtual void Update_Calista_UpdateWithConcept(void* pUpdateData);$/;"	p	class:CConcept	access:public	signature:(void* pUpdateData)
Update_Calista_UpdateWithConcept	DMCore/Concepts/FrameConcept.cpp	/^void CFrameConcept::Update_Calista_UpdateWithConcept(void* pUpdateData) {$/;"	f	class:CFrameConcept	signature:(void* pUpdateData)
Update_Calista_UpdateWithConcept	DMCore/Concepts/FrameConcept.h	/^    virtual void Update_Calista_UpdateWithConcept(void* pUpdateData);$/;"	p	class:CFrameConcept	access:public	signature:(void* pUpdateData)
Update_NPU_AssignFromConcept	DMCore/Concepts/Concept.cpp	/^void CConcept::Update_NPU_AssignFromConcept(void* pUpdateData) {$/;"	f	class:CConcept	signature:(void* pUpdateData)
Update_NPU_AssignFromConcept	DMCore/Concepts/Concept.h	/^	virtual void Update_NPU_AssignFromConcept(void* pUpdateData);$/;"	p	class:CConcept	access:public	signature:(void* pUpdateData)
Update_NPU_AssignFromString	DMCore/Concepts/ArrayConcept.cpp	/^void CArrayConcept::Update_NPU_AssignFromString(void* pUpdateData) {$/;"	f	class:CArrayConcept	signature:(void* pUpdateData)
Update_NPU_AssignFromString	DMCore/Concepts/ArrayConcept.h	/^	virtual void Update_NPU_AssignFromString(void* pUpdateData);$/;"	p	class:CArrayConcept	access:public	signature:(void* pUpdateData)
Update_NPU_AssignFromString	DMCore/Concepts/Concept.cpp	/^void CConcept::Update_NPU_AssignFromString(void* pUpdateData) {$/;"	f	class:CConcept	signature:(void* pUpdateData)
Update_NPU_AssignFromString	DMCore/Concepts/Concept.h	/^	virtual void Update_NPU_AssignFromString(void* pUpdateData);$/;"	p	class:CConcept	access:public	signature:(void* pUpdateData)
Update_NPU_AssignFromString	DMCore/Concepts/FrameConcept.cpp	/^void CFrameConcept::Update_NPU_AssignFromString(void* pUpdateData) {$/;"	f	class:CFrameConcept	signature:(void* pUpdateData)
Update_NPU_AssignFromString	DMCore/Concepts/FrameConcept.h	/^	virtual void Update_NPU_AssignFromString(void* pUpdateData);$/;"	p	class:CFrameConcept	access:public	signature:(void* pUpdateData)
Update_NPU_AssignFromString	DMCore/Concepts/StructConcept.cpp	/^void CStructConcept::Update_NPU_AssignFromString(void* pUpdateData) {$/;"	f	class:CStructConcept	signature:(void* pUpdateData)
Update_NPU_AssignFromString	DMCore/Concepts/StructConcept.h	/^	virtual void Update_NPU_AssignFromString(void* pUpdateData);$/;"	p	class:CStructConcept	access:public	signature:(void* pUpdateData)
Update_NPU_CollapseToMode	DMCore/Concepts/ArrayConcept.cpp	/^void CArrayConcept::Update_NPU_CollapseToMode(void* pUpdateData) {$/;"	f	class:CArrayConcept	signature:(void* pUpdateData)
Update_NPU_CollapseToMode	DMCore/Concepts/ArrayConcept.h	/^    virtual void Update_NPU_CollapseToMode(void* pUpdateData);$/;"	p	class:CArrayConcept	access:public	signature:(void* pUpdateData)
Update_NPU_CollapseToMode	DMCore/Concepts/Concept.cpp	/^void CConcept::Update_NPU_CollapseToMode(void* pUpdateData) {$/;"	f	class:CConcept	signature:(void* pUpdateData)
Update_NPU_CollapseToMode	DMCore/Concepts/Concept.h	/^    virtual void Update_NPU_CollapseToMode(void* pUpdateData);$/;"	p	class:CConcept	access:public	signature:(void* pUpdateData)
Update_NPU_CollapseToMode	DMCore/Concepts/FrameConcept.cpp	/^void CFrameConcept::Update_NPU_CollapseToMode(void* pUpdateData) {$/;"	f	class:CFrameConcept	signature:(void* pUpdateData)
Update_NPU_CollapseToMode	DMCore/Concepts/FrameConcept.h	/^    virtual void Update_NPU_CollapseToMode(void* pUpdateData);$/;"	p	class:CFrameConcept	access:public	signature:(void* pUpdateData)
Update_NPU_UpdateWithConcept	DMCore/Concepts/ArrayConcept.cpp	/^void CArrayConcept::Update_NPU_UpdateWithConcept(void* pUpdateData) {$/;"	f	class:CArrayConcept	signature:(void* pUpdateData)
Update_NPU_UpdateWithConcept	DMCore/Concepts/ArrayConcept.h	/^    virtual void Update_NPU_UpdateWithConcept(void* pUpdateData);$/;"	p	class:CArrayConcept	access:public	signature:(void* pUpdateData)
Update_NPU_UpdateWithConcept	DMCore/Concepts/Concept.cpp	/^void CConcept::Update_NPU_UpdateWithConcept(void* pUpdateData) {$/;"	f	class:CConcept	signature:(void* pUpdateData)
Update_NPU_UpdateWithConcept	DMCore/Concepts/Concept.h	/^    virtual void Update_NPU_UpdateWithConcept(void* pUpdateData);$/;"	p	class:CConcept	access:public	signature:(void* pUpdateData)
Update_NPU_UpdateWithConcept	DMCore/Concepts/FrameConcept.cpp	/^void CFrameConcept::Update_NPU_UpdateWithConcept(void* pUpdateData) {$/;"	f	class:CFrameConcept	signature:(void* pUpdateData)
Update_NPU_UpdateWithConcept	DMCore/Concepts/FrameConcept.h	/^    virtual void Update_NPU_UpdateWithConcept(void* pUpdateData);$/;"	p	class:CFrameConcept	access:public	signature:(void* pUpdateData)
Update_PartialFromString	DMCore/Concepts/Concept.cpp	/^void CConcept::Update_PartialFromString(void* pUpdateData) {$/;"	f	class:CConcept	signature:(void* pUpdateData)
Update_PartialFromString	DMCore/Concepts/Concept.h	/^	virtual void Update_PartialFromString(void* pUpdateData);$/;"	p	class:CConcept	access:public	signature:(void* pUpdateData)
Update_PartialFromString	DMCore/Concepts/FrameConcept.cpp	/^void CFrameConcept::Update_PartialFromString(void* pUpdateData) {$/;"	f	class:CFrameConcept	signature:(void* pUpdateData)
Update_PartialFromString	DMCore/Concepts/FrameConcept.h	/^	virtual void Update_PartialFromString(void* pUpdateDate);$/;"	p	class:CFrameConcept	access:public	signature:(void* pUpdateDate)
Update_PartialFromString	DMCore/Concepts/StructConcept.cpp	/^void CStructConcept::Update_PartialFromString(void* pUpdateData) {$/;"	f	class:CStructConcept	signature:(void* pUpdateData)
Update_PartialFromString	DMCore/Concepts/StructConcept.h	/^	virtual void Update_PartialFromString(void* pUpdateData);$/;"	p	class:CStructConcept	access:public	signature:(void* pUpdateData)
Use	DMCore/Agents/CoreAgents/DTTManagerAgent.cpp	/^void CDTTManagerAgent::Use(string sDAType, string sDAName,$/;"	f	class:CDTTManagerAgent	signature:(string sDAType, string sDAName, FRegisterAgent fRegisterAgent, string sDAConfiguration)
Use	DMCore/Agents/CoreAgents/DTTManagerAgent.h	/^	void Use(string sDAType, string sDAName, $/;"	p	class:CDTTManagerAgent	access:public	signature:(string sDAType, string sDAName, FRegisterAgent fRegisterAgent, string sConfiguration)
UseGroundingAction	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^void CGroundingManagerAgent::UseGroundingAction(string sActionName, $/;"	f	class:CGroundingManagerAgent	signature:(string sActionName, CGroundingAction* pgaAGroundingAction)
UseGroundingAction	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    void UseGroundingAction(string sActionName, $/;"	p	class:CGroundingManagerAgent	access:public	signature:(string sActionName, CGroundingAction* pgaAGroundingAction)
VAL_CONF_SEPARATOR	DMCore/Concepts/Concept.h	139;"	d
VOID_INPUT	DMCore/Core.h	98;"	d
Value	spdlog/fmt/bundled/format.h	/^struct Value$/;"	s	namespace:fmt::internal
ValueToString	DMCore/Concepts/BoolConcept.cpp	/^string CBoolHyp::ValueToString() {$/;"	f	class:CBoolHyp	signature:()
ValueToString	DMCore/Concepts/BoolConcept.h	/^	virtual string ValueToString();$/;"	p	class:CBoolHyp	access:public	signature:()
ValueToString	DMCore/Concepts/Concept.cpp	/^string CHyp::ValueToString() {$/;"	f	class:CHyp	signature:()
ValueToString	DMCore/Concepts/Concept.h	/^	virtual string ValueToString();$/;"	p	class:CHyp	access:public	signature:()
ValueToString	DMCore/Concepts/FloatConcept.cpp	/^string CFloatHyp::ValueToString() {$/;"	f	class:CFloatHyp	signature:()
ValueToString	DMCore/Concepts/FloatConcept.h	/^	virtual string ValueToString();$/;"	p	class:CFloatHyp	access:public	signature:()
ValueToString	DMCore/Concepts/IntConcept.cpp	/^string CIntHyp::ValueToString() {$/;"	f	class:CIntHyp	signature:()
ValueToString	DMCore/Concepts/IntConcept.h	/^	virtual string ValueToString();$/;"	p	class:CIntHyp	access:public	signature:()
ValueToString	DMCore/Concepts/StringConcept.cpp	/^string CStringHyp::ValueToString() {$/;"	f	class:CStringHyp	signature:()
ValueToString	DMCore/Concepts/StringConcept.h	/^	virtual string ValueToString();$/;"	p	class:CStringHyp	access:public	signature:()
ValueToString	DMCore/Concepts/StructConcept.cpp	/^string CStructHyp::ValueToString() {$/;"	f	class:CStructHyp	signature:()
ValueToString	DMCore/Concepts/StructConcept.h	/^	virtual string ValueToString();$/;"	p	class:CStructHyp	access:public	signature:()
WARNING_STREAM	DMCore/Log.h	81;"	d
WArrayWriter	spdlog/fmt/bundled/format.h	/^typedef BasicArrayWriter<wchar_t> WArrayWriter;$/;"	t
WCStringRef	spdlog/fmt/bundled/format.h	/^typedef BasicCStringRef<wchar_t> WCStringRef;$/;"	t	namespace:fmt
WCharHelper	spdlog/fmt/bundled/format.h	/^struct WCharHelper$/;"	s	namespace:fmt::internal
WCharHelper	spdlog/fmt/bundled/format.h	/^struct WCharHelper<T, wchar_t>$/;"	s	namespace:fmt::internal
WHAT_CAN_I_SAY	DMCore/Grounding/GroundingActions/GAWhatCanISay.h	125;"	d
WHITE	spdlog/fmt/bundled/format.h	/^    BLACK, RED, GREEN, YELLOW, BLUE, MAGENTA, CYAN, WHITE$/;"	e	enum:Color
WHITE	spdlog/sinks/wincolor_sink.h	/^    const WORD WHITE = FOREGROUND_RED | FOREGROUND_GREEN | FOREGROUND_BLUE;$/;"	m	class:spdlog::sinks::wincolor_sink	access:public
WIN32_LEAN_AND_MEAN	spdlog/details/os.h	27;"	d
WITHIN_TOPIC_ONLY	DMCore/Agents/DialogAgents/DialogAgent.h	209;"	d
WM_ACTIONFINISHED	DMCore/Core.h	70;"	d
WM_DIALOGFINISHED	DMCore/Core.h	69;"	d
WM_DLGBASE	DMCore/Core.h	63;"	d
WM_DLGMAX	DMCore/Core.h	64;"	d
WM_GALAXYACTIONCALL	DMCore/Core.h	73;"	d
WM_GALAXYCALL	DMCore/Core.h	67;"	d
WM_OAACALL	DMCore/Core.h	68;"	d
WM_WAITINPUT	DMCore/Core.h	66;"	d
WM_WAITINTERACTIONEVENT	DMCore/Core.h	72;"	d
WMemoryWriter	spdlog/fmt/bundled/format.h	/^typedef BasicMemoryWriter<wchar_t> WMemoryWriter;$/;"	t
WSTRING	spdlog/fmt/bundled/format.h	/^        CSTRING, STRING, WSTRING, POINTER, CUSTOM$/;"	e	enum:fmt::internal::Value::Type
WStringRef	spdlog/fmt/bundled/format.h	/^typedef BasicStringRef<wchar_t> WStringRef;$/;"	t	namespace:fmt
WWriter	spdlog/fmt/bundled/format.h	/^typedef BasicWriter<wchar_t> WWriter;$/;"	t	namespace:fmt
WaitForEvent	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.cpp	/^void CInteractionEventManagerAgent::WaitForEvent() {$/;"	f	class:CInteractionEventManagerAgent	signature:()
WaitForEvent	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.h	/^	void WaitForEvent();$/;"	p	class:CInteractionEventManagerAgent	access:public	signature:()
Warning	DMCore/Log.h	187;"	d
WasReOpened	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^bool CDialogAgent::WasReOpened() {$/;"	f	class:CDialogAgent	signature:()
WasReOpened	DMCore/Agents/DialogAgents/DialogAgent.h	/^    bool WasReOpened();$/;"	p	class:CDialogAgent	access:public	signature:()
WasReset	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^bool CDialogAgent::WasReset() {$/;"	f	class:CDialogAgent	signature:()
WasReset	DMCore/Agents/DialogAgents/DialogAgent.h	/^    bool WasReset();$/;"	p	class:CDialogAgent	access:public	signature:()
WhatCanISayPrompt	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^string CDialogAgent::WhatCanISayPrompt() {$/;"	f	class:CDialogAgent	signature:()
WhatCanISayPrompt	DMCore/Agents/DialogAgents/DialogAgent.h	/^	virtual string WhatCanISayPrompt();$/;"	p	class:CDialogAgent	access:public	signature:()
WidthHandler	spdlog/fmt/bundled/printf.h	/^    explicit WidthHandler(FormatSpec &spec): spec_(spec)$/;"	f	class:fmt::internal::WidthHandler	access:public	signature:(FormatSpec &spec)
WidthHandler	spdlog/fmt/bundled/printf.h	/^class WidthHandler: public ArgVisitor<WidthHandler, unsigned>$/;"	c	namespace:fmt::internal	inherits:ArgVisitor
WidthSpec	spdlog/fmt/bundled/format.h	/^    WidthSpec(unsigned width, wchar_t fill): width_(width), fill_(fill)$/;"	f	struct:fmt::WidthSpec	access:public	signature:(unsigned width, wchar_t fill)
WidthSpec	spdlog/fmt/bundled/format.h	/^struct WidthSpec$/;"	s	namespace:fmt
WindowsError	spdlog/fmt/bundled/format.h	/^    WindowsError(int error_code, CStringRef message)$/;"	f	class:WindowsError	access:public	signature:(int error_code, CStringRef message)
WindowsError	spdlog/fmt/bundled/format.h	/^class WindowsError: public SystemError$/;"	c	inherits:SystemError
WindowsError::WindowsError	spdlog/fmt/bundled/format.h	/^    WindowsError(int error_code, CStringRef message)$/;"	f	class:WindowsError	access:public	signature:(int error_code, CStringRef message)
WindowsError::init	spdlog/fmt/bundled/format.h	/^    FMT_API void init(int error_code, CStringRef format_str, ArgList args);$/;"	p	class:WindowsError	access:private	signature:(int error_code, CStringRef format_str, ArgList args)
Writer	spdlog/fmt/bundled/format.h	/^typedef BasicWriter<char> Writer;$/;"	t	namespace:fmt
YELLOW	spdlog/fmt/bundled/format.h	/^    BLACK, RED, GREEN, YELLOW, BLUE, MAGENTA, CYAN, WHITE$/;"	e	enum:Color
YELLOW	spdlog/sinks/wincolor_sink.h	/^    const WORD YELLOW = FOREGROUND_RED | FOREGROUND_GREEN;$/;"	m	class:spdlog::sinks::wincolor_sink	access:public
YIELD_TURN	DMCore/Grounding/GroundingActions/GAYieldTurn.h	105;"	d
Y_formatter	spdlog/details/pattern_formatter_impl.h	/^class Y_formatter:public flag_formatter$/;"	c	namespace:spdlog::details	inherits:flag_formatter
Yes	spdlog/fmt/bundled/format.h	/^typedef char Yes[1];$/;"	t	namespace:fmt::internal
_MESSAGE_H_	DMCore/message/message.h	2;"	d
__AGENT_H__	DMCore/Agents/Agent.h	63;"	d
__ALLAGENTS_H__	DMCore/Agents/AllAgents.h	60;"	d
__ALLBASICAGENTS_H__	DMCore/Agents/DialogAgents/BasicAgents/AllBasicAgents.h	60;"	d
__ALLCONCEPTS_H__	DMCore/Concepts/AllConcepts.h	63;"	d
__ALLCOREAGENTS_H__	DMCore/Agents/CoreAgents/AllCoreAgents.h	61;"	d
__ALLDIALOGAGENTS_H__	DMCore/Agents/DialogAgents/AllDialogAgents.h	61;"	d
__ALLDISCOURSEAGENTS_H__	DMCore/Agents/DialogAgents/DiscourseAgents/AllDiscourseAgents.h	60;"	d
__ALLGROUNDINGACTIONS_H__	DMCore/Grounding/GroundingActions/AllGroundingActions.h	60;"	d
__ALLGROUNDINGMODELS_H__	DMCore/Grounding/GroundingModels/AllGroundingModels.h	60;"	d
__ARRAYCONCEPT_H__	DMCore/Concepts/ArrayConcept.h	109;"	d
__BOOLCONCEPT_H__	DMCore/Concepts/BoolConcept.h	85;"	d
__CONCEPT_H__	DMCore/Concepts/Concept.h	110;"	d
__CORE_H__	DMCore/Core.h	60;"	d
__DAHELP_H__	DMCore/Agents/DialogAgents/DiscourseAgents/DAHelp.h	88;"	d
__DANONUNDERSTANDING_H__	DMCore/Agents/DialogAgents/DiscourseAgents/DANonUnderstanding.h	68;"	d
__DAQUIT_H__	DMCore/Agents/DialogAgents/DiscourseAgents/DAQuit.h	64;"	d
__DAREPEAT_H__	DMCore/Agents/DialogAgents/DiscourseAgents/DARepeat.h	64;"	d
__DASTARTOVER_H__	DMCore/Agents/DialogAgents/DiscourseAgents/DAStartOver.h	66;"	d
__DASUSPEND_H__	DMCore/Agents/DialogAgents/DiscourseAgents/DASuspend.h	81;"	d
__DATERMINATE_H__	DMCore/Agents/DialogAgents/DiscourseAgents/DATerminate.h	61;"	d
__DATETIMECONCEPT_H__	DMCore/Concepts/DateTimeConcept.h	23;"	d
__DATIMEOUT_H__	DMCore/Agents/DialogAgents/DiscourseAgents/DATimeout.h	79;"	d
__DIALOGAGENCY_H__	DMCore/Agents/DialogAgents/BasicAgents/DialogAgency.h	77;"	d
__DIALOGTASK_H__	DialogTask/DialogTask.h	67;"	d
__DIALOG_AGENT_H__	DMCore/Agents/DialogAgents/DialogAgent.h	98;"	d
__DMCOREAGENT_H__	DMCore/Agents/CoreAgents/DMCoreAgent.h	125;"	d
__DMCORE_H__	DMCore/DMCore.h	64;"	d
__DTTMANAGERAGENT_H__	DMCore/Agents/CoreAgents/DTTManagerAgent.h	68;"	d
__Error	DMCore/Log.cpp	/^void __Error(const char* lpszError, char* lpszFile, int iLine) {$/;"	f	signature:(const char* lpszError, char* lpszFile, int iLine)
__Error	DMCore/Log.h	/^void __Error(const char* lpszError, char* lpszFile, int iLine);$/;"	p	signature:(const char* lpszError, char* lpszFile, int iLine)
__FLOATCONCEPT_H__	DMCore/Concepts/FloatConcept.h	85;"	d
__FRAMECONCEPT_H__	DMCore/Concepts/FrameConcept.h	106;"	d
__FRAMEOUTPUT_H__	DMCore/Outputs/FrameOutput.h	80;"	d
__FatalError	DMCore/Log.cpp	/^void __FatalError(const char* lpszError, char* lpszFile, int iLine) {$/;"	f	signature:(const char* lpszError, char* lpszFile, int iLine)
__FatalError	DMCore/Log.h	/^void __FatalError(const char* lpszError, char* lpszFile, int iLine);$/;"	p	signature:(const char* lpszError, char* lpszFile, int iLine)
__GAACCEPT_H__	DMCore/Grounding/GroundingActions/GAAccept.h	60;"	d
__GAASKREPEAT_H__	DMCore/Grounding/GroundingActions/GAAskRepeat.h	63;"	d
__GAASKREPHRASE_H__	DMCore/Grounding/GroundingActions/GAAskRephrase.h	62;"	d
__GAASKSHORTANSWERANDREPROMPT_H__	DMCore/Grounding/GroundingActions/GAAskShortAnswerAndReprompt.h	82;"	d
__GAASKSHORTANSWERANDWHATCANISAY_H__	DMCore/Grounding/GroundingActions/GAAskShortAnswerAndWhatCanISay.h	79;"	d
__GAASKSTARTOVER_H__	DMCore/Grounding/GroundingActions/GAAskStartOver.h	71;"	d
__GAEXPLAINMORE_H__	DMCore/Grounding/GroundingActions/GAExplainMore.h	77;"	d
__GAEXPLICITCONFIRM_H__	DMCore/Grounding/GroundingActions/GAExplicitConfirm.h	70;"	d
__GAFAILREQUEST_H__	DMCore/Grounding/GroundingActions/GAFailRequest.h	65;"	d
__GAFULLHELP_H__	DMCore/Grounding/GroundingActions/GAFullHelp.h	77;"	d
__GAGIVEUP_H__	DMCore/Grounding/GroundingActions/GAGiveUp.h	71;"	d
__GAIMPLICITCONFIRM_H__	DMCore/Grounding/GroundingActions/GAImplicitConfirm.h	65;"	d
__GAINTERACTIONTIPS_H__	DMCore/Grounding/GroundingActions/GAInteractionTips.h	72;"	d
__GAMOVEON_H__	DMCore/Grounding/GroundingActions/GAMoveOn.h	60;"	d
__GANOACTION_H__	DMCore/Grounding/GroundingActions/GANoAction.h	60;"	d
__GANOTIFYNONUNDERSTANDING_H__	DMCore/Grounding/GroundingActions/GANotifyNonunderstanding.h	61;"	d
__GAREPEATPROMPT_H__	DMCore/Grounding/GroundingActions/GARepeatPrompt.h	76;"	d
__GASPEAKLESSLOUDANDREPROMPT_H__	DMCore/Grounding/GroundingActions/GASpeakLessLoudAndReprompt.h	69;"	d
__GAWHATCANISAY_H__	DMCore/Grounding/GroundingActions/GAWhatCanISay.h	88;"	d
__GAYIELDTURN_H__	DMCore/Grounding/GroundingActions/GAYieldTurn.h	68;"	d
__GMCONCEPT_H__	DMCore/Grounding/GroundingModels/GMConcept.h	64;"	d
__GMREQUESTAGENT_EXPERIMENT_H__	DMCore/Grounding/GroundingModels/GMRequestAgent_Experiment.h	62;"	d
__GMREQUESTAGENT_HANDCRAFTED_H__	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.h	60;"	d
__GMREQUESTAGENT_H__	DMCore/Grounding/GroundingModels/GMRequestAgent.h	63;"	d
__GMREQUESTAGENT_LR_H__	DMCore/Grounding/GroundingModels/GMRequestAgent_LR.h	64;"	d
__GMREQUESTAGENT_NUMNONU_H__	DMCore/Grounding/GroundingModels/GMRequestAgent_NumNonu.h	62;"	d
__GROUNDINGACTION_H__	DMCore/Grounding/GroundingActions/GroundingAction.h	63;"	d
__GROUNDINGMANAGERAGENT_H__	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	66;"	d
__GROUNDINGMODEL_H__	DMCore/Grounding/GroundingModels/GroundingModel.h	64;"	d
__GROUNDINGUTILS_H__	DMCore/Grounding/GroundingUtils.h	65;"	d
__GROUNDING_H__	DMCore/Grounding/Grounding.h	59;"	d
__ID	Utils/Utils.cpp	/^static int __ID = 0;$/;"	v	file:
__INTCONCEPT_H__	DMCore/Concepts/IntConcept.h	85;"	d
__INTERACTIONEVENTMANAGERAGENT_H__	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.h	3;"	d
__INTERACTIONEVENT_H__	DMCore/Events/InteractionEvent.h	62;"	d
__LOG_H__	DMCore/Log.h	69;"	d
__MAEXECUTE_H__	DMCore/Agents/DialogAgents/BasicAgents/MAExecute.h	69;"	d
__MAEXPECT_H__	DMCore/Agents/DialogAgents/BasicAgents/MAExpect.h	64;"	d
__MAINFORM_H__	DMCore/Agents/DialogAgents/BasicAgents/MAInform.h	71;"	d
__MAREQUEST_H__	DMCore/Agents/DialogAgents/BasicAgents/MARequest.h	73;"	d
__OUTPUTMANAGERAGENT_H__	DMCore/Agents/CoreAgents/OutputManagerAgent.h	94;"	d
__OUTPUT_H__	DMCore/Outputs/Output.h	89;"	d
__REGISTRY_H__	DMCore/Agents/Registry.h	63;"	d
__STATEMANAGERAGENT_H__	DMCore/Agents/CoreAgents/StateManagerAgent.h	75;"	d
__STRINGCONCEPT_H__	DMCore/Concepts/StringConcept.h	86;"	d
__STRUCTCONCEPT_H__	DMCore/Concepts/StructConcept.h	67;"	d
__TRAFFICMANAGERAGENT_H__	DMCore/Agents/CoreAgents/TrafficManagerAgent.h	75;"	d
__UTILS_H__	Utils/Utils.h	77;"	d
__Warning	DMCore/Log.cpp	/^void __Warning(const char* lpszWarning, char* lpszFile, int iLine) {$/;"	f	signature:(const char* lpszWarning, char* lpszFile, int iLine)
__Warning	DMCore/Log.h	/^void __Warning(const char* lpszWarning, char* lpszFile, int iLine);$/;"	p	signature:(const char* lpszWarning, char* lpszFile, int iLine)
__anon35::sSlotName	DMCore/Agents/CoreAgents/TrafficManagerAgent.h	/^	string sSlotName;$/;"	m	struct:__anon35	access:public
__anon35::sSlotValue	DMCore/Agents/CoreAgents/TrafficManagerAgent.h	/^	string sSlotValue;$/;"	m	struct:__anon35	access:public
__anon36::pConcept	DMCore/Agents/CoreAgents/TrafficManagerAgent.h	/^	CConcept* pConcept;$/;"	m	struct:__anon36	access:public
__anon36::sSlotName	DMCore/Agents/CoreAgents/TrafficManagerAgent.h	/^	string sSlotName;$/;"	m	struct:__anon36	access:public
__anon37::bBlockingCall	DMCore/Agents/CoreAgents/TrafficManagerAgent.h	/^	bool bBlockingCall;$/;"	m	struct:__anon37	access:public
__anon37::sModuleFunction	DMCore/Agents/CoreAgents/TrafficManagerAgent.h	/^	string sModuleFunction;$/;"	m	struct:__anon37	access:public
__anon37::vFromParams	DMCore/Agents/CoreAgents/TrafficManagerAgent.h	/^	vector<TSlotConceptPair, allocator<TSlotConceptPair> > vFromParams;$/;"	m	struct:__anon37	access:public
__anon37::vToParams	DMCore/Agents/CoreAgents/TrafficManagerAgent.h	/^	vector<TSlotValuePair, allocator<TSlotValuePair> > vToParams;$/;"	m	struct:__anon37	access:public
__anon38::bGroundConcepts	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    bool bGroundConcepts;$/;"	m	struct:__anon38	access:public
__anon38::bGroundTurns	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    bool bGroundTurns;$/;"	m	struct:__anon38	access:public
__anon38::sBeliefUpdatingModelName	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^	string sBeliefUpdatingModelName;	$/;"	m	struct:__anon38	access:public
__anon38::sConceptGM	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    string sConceptGM;$/;"	m	struct:__anon38	access:public
__anon38::sGroundingManagerConfiguration	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    string sGroundingManagerConfiguration;$/;"	m	struct:__anon38	access:public
__anon38::sTurnGM	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    string sTurnGM;$/;"	m	struct:__anon38	access:public
__anon39::iGroundingRequestStatus	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    int iGroundingRequestStatus;$/;"	m	struct:__anon39	access:public
__anon39::iSuggestedActionIndex	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    int iSuggestedActionIndex;$/;"	m	struct:__anon39	access:public
__anon39::iTurnNumber	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    int iTurnNumber;$/;"	m	struct:__anon39	access:public
__anon39::pConcept	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    CConcept* pConcept;$/;"	m	struct:__anon39	access:public
__anon40::bBargeIn	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    bool bBargeIn;                      \/\/ was there a barge-in on the action$/;"	m	struct:__anon40	access:public
__anon40::iGroundingActionType	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    int iGroundingActionType;           \/\/ the grounding action type$/;"	m	struct:__anon40	access:public
__anon40::sActionName	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    string sActionName;                 \/\/ the name of the grounding action$/;"	m	struct:__anon40	access:public
__anon40::sGroundingModelName	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    string sGroundingModelName;         \/\/ the name of the grounding model that$/;"	m	struct:__anon40	access:public
__anon41::iParams	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^	int iParams;			\/\/ other parameters for the output device$/;"	m	struct:__anon41	access:public
__anon41::sName	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^	string sName;			\/\/ name of the output device$/;"	m	struct:__anon41	access:public
__anon41::sServerCall	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^	string sServerCall;		\/\/ external server name (module.function for galaxy)$/;"	m	struct:__anon41	access:public
__anon43::fRegisterAgent	DMCore/Agents/CoreAgents/DTTManagerAgent.h	/^	FRegisterAgent fRegisterAgent;$/;"	m	struct:__anon43	access:public
__anon43::sDAConfiguration	DMCore/Agents/CoreAgents/DTTManagerAgent.h	/^	string sDAConfiguration;$/;"	m	struct:__anon43	access:public
__anon43::sDAName	DMCore/Agents/CoreAgents/DTTManagerAgent.h	/^	string sDAName;$/;"	m	struct:__anon43	access:public
__anon43::sDAType	DMCore/Agents/CoreAgents/DTTManagerAgent.h	/^	string sDAType;$/;"	m	struct:__anon43	access:public
__anon44::eaAgenda	DMCore/Agents/CoreAgents/StateManagerAgent.h	/^    TExpectationAgenda eaAgenda;		\/\/ the expectation agenda$/;"	m	struct:__anon44	access:public
__anon44::esExecutionStack	DMCore/Agents/CoreAgents/StateManagerAgent.h	/^	TExecutionStack esExecutionStack;	\/\/ the execution stack$/;"	m	struct:__anon44	access:public
__anon44::fsFloorStatus	DMCore/Agents/CoreAgents/StateManagerAgent.h	/^	TFloorStatus fsFloorStatus;			\/\/ who has the floor?$/;"	m	struct:__anon44	access:public
__anon44::iEHIndex	DMCore/Agents/CoreAgents/StateManagerAgent.h	/^	int iEHIndex;						\/\/ the execution history index matching $/;"	m	struct:__anon44	access:public
__anon44::iTurnNumber	DMCore/Agents/CoreAgents/StateManagerAgent.h	/^    int iTurnNumber;					\/\/ the current turn number$/;"	m	struct:__anon44	access:public
__anon44::sFocusedAgentName	DMCore/Agents/CoreAgents/StateManagerAgent.h	/^    string sFocusedAgentName;			\/\/ the name of the focused agent$/;"	m	struct:__anon44	access:public
__anon44::sInputLineConfiguration	DMCore/Agents/CoreAgents/StateManagerAgent.h	/^	string sInputLineConfiguration;		\/\/ string representation of the input$/;"	m	struct:__anon44	access:public
__anon44::sStateName	DMCore/Agents/CoreAgents/StateManagerAgent.h	/^	string sStateName;					\/\/ the name of the current dialog state$/;"	m	struct:__anon44	access:public
__anon44::saSystemAction	DMCore/Agents/CoreAgents/StateManagerAgent.h	/^	TSystemAction saSystemAction;		\/\/ the current system action$/;"	m	struct:__anon44	access:public
__anon45::mapCE	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	TMapCE mapCE;					\/\/ the hash of compiled expectations$/;"	m	struct:__anon45	access:public
__anon45::pdaGenerator	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	CDialogAgent* pdaGenerator;		\/\/ the agent that represents that level$/;"	m	struct:__anon45	access:public
__anon46::celSystemExpectations	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	TConceptExpectationList celSystemExpectations;		$/;"	m	struct:__anon46	access:public
__anon46::vCompiledExpectations	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^		vCompiledExpectations;$/;"	m	struct:__anon46	access:public
__anon47::iEHIndex	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	int iEHIndex;					\/\/ an index into it's correspondent history$/;"	m	struct:__anon47	access:public
__anon47::pdaAgent	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	CDialogAgent* pdaAgent;			\/\/ the agent that is on the stack$/;"	m	struct:__anon47	access:public
__anon48::bCanceled	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	bool bCanceled;					\/\/ has the history item been canceled$/;"	m	struct:__anon48	access:public
__anon48::bCommitted	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	bool bCommitted;				\/\/ has the history item been committed$/;"	m	struct:__anon48	access:public
__anon48::bExecuted	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	bool bExecuted;					\/\/ has the history item been executed?$/;"	m	struct:__anon48	access:public
__anon48::bScheduled	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	bool bScheduled;				\/\/ has the history item been scheduled $/;"	m	struct:__anon48	access:public
__anon48::iStateHistoryIndex	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	int iStateHistoryIndex;			\/\/ the index in the history of dialog$/;"	m	struct:__anon48	access:public
__anon48::sCurrentAgent	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	string sCurrentAgent;			\/\/ the name of the agent that is executed$/;"	m	struct:__anon48	access:public
__anon48::sCurrentAgentType	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	string sCurrentAgentType;		\/\/ the type of that agent$/;"	m	struct:__anon48	access:public
__anon48::sScheduledBy	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	string sScheduledBy;			\/\/ the agent that scheduled this one for$/;"	m	struct:__anon48	access:public
__anon48::timeScheduled	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	timeb timeScheduled;			\/\/ the time when the agent was scheduled$/;"	m	struct:__anon48	access:public
__anon48::timeTerminated	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	timeb timeTerminated;			\/\/ the time when the agent completed $/;"	m	struct:__anon48	access:public
__anon48::vtExecutionTimes	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^		vtExecutionTimes;			\/\/ the times when the agent was actually$/;"	m	struct:__anon48	access:public
__anon49::bBlocked	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	bool bBlocked;					\/\/ indicates whether the binding was $/;"	m	struct:__anon49	access:public
__anon49::fConfidence	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	float fConfidence;				\/\/ the confidence score for the binding$/;"	m	struct:__anon49	access:public
__anon49::iLevel	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	int iLevel;						\/\/ the level in the agenda$/;"	m	struct:__anon49	access:public
__anon49::sAgentName	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	string sAgentName;				\/\/ the name of the agent that declared the $/;"	m	struct:__anon49	access:public
__anon49::sConceptName	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	string sConceptName;			\/\/ the name of the concept that will bind$/;"	m	struct:__anon49	access:public
__anon49::sGrammarExpectation	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	string sGrammarExpectation;		\/\/ the expected grammar slot$/;"	m	struct:__anon49	access:public
__anon49::sReasonDisabled	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	string sReasonDisabled;			\/\/ if the binding was blocked, the reason$/;"	m	struct:__anon49	access:public
__anon49::sValue	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	string sValue;					\/\/ the value in the binding$/;"	m	struct:__anon49	access:public
__anon50::bUnderstanding	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	bool bUnderstanding;			\/\/ the update changed the concept $/;"	m	struct:__anon50	access:public
__anon50::iType	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	int iType;						\/\/ the type of the forced update$/;"	m	struct:__anon50	access:public
__anon50::sConceptName	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	string sConceptName;			\/\/ the name of the concept that had a $/;"	m	struct:__anon50	access:public
__anon51::bNonUnderstanding	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^    bool bNonUnderstanding;         \/\/ was the turn a non-understanding?$/;"	m	struct:__anon51	access:public
__anon51::iConceptsBlocked	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^    int iConceptsBlocked;           \/\/ the number of blocked concepts$/;"	m	struct:__anon51	access:public
__anon51::iConceptsBound	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^    int iConceptsBound;             \/\/ the number of bound concepts$/;"	m	struct:__anon51	access:public
__anon51::iSlotsBlocked	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	int iSlotsBlocked;				\/\/ the number of slots that were blocked$/;"	m	struct:__anon51	access:public
__anon51::iSlotsMatched	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	int iSlotsMatched;				\/\/ the number of slots that matched$/;"	m	struct:__anon51	access:public
__anon51::sEventType	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	string sEventType;				\/\/ the type of event to which this$/;"	m	struct:__anon51	access:public
__anon51::vbBindings	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	vector<TBinding> vbBindings;	\/\/ the vector of bindings$/;"	m	struct:__anon51	access:public
__anon51::vfcuForcedUpdates	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	vector<TForcedConceptUpdate> vfcuForcedUpdates;$/;"	m	struct:__anon51	access:public
__anon52::setcpExplicitConfirms	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	set<CConcept *> setcpExplicitConfirms;$/;"	m	struct:__anon52	access:public
__anon52::setcpImplicitConfirms	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	set<CConcept *> setcpImplicitConfirms;$/;"	m	struct:__anon52	access:public
__anon52::setcpRequests	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	set<CConcept *> setcpRequests;$/;"	m	struct:__anon52	access:public
__anon52::setcpUnplannedImplicitConfirms	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	set<CConcept *> setcpUnplannedImplicitConfirms;$/;"	m	struct:__anon52	access:public
__anon53::sSystemAction	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	string sSystemAction;$/;"	m	struct:__anon53	access:public
__anon57::bDisabled	DMCore/Agents/DialogAgents/DialogAgent.h	/^	bool bDisabled;					\/\/ indicates that this expectation is $/;"	m	struct:__anon57	access:public
__anon57::bmBindMethod	DMCore/Agents/DialogAgents/DialogAgent.h	/^	TBindMethod bmBindMethod;	    \/\/ indicates the binding method to be $/;"	m	struct:__anon57	access:public
__anon57::pDialogAgent	DMCore/Agents/DialogAgents/DialogAgent.h	/^	CDialogAgent* pDialogAgent;		\/\/ which agent expects this$/;"	m	struct:__anon57	access:public
__anon57::sBindingFilterName	DMCore/Agents/DialogAgents/DialogAgent.h	/^    string sBindingFilterName;      \/\/ the name of the registered custom $/;"	m	struct:__anon57	access:public
__anon57::sConceptName	DMCore/Agents/DialogAgents/DialogAgent.h	/^	string sConceptName;			\/\/ the name of the concept that we will$/;"	m	struct:__anon57	access:public
__anon57::sExpectationType	DMCore/Agents/DialogAgents/DialogAgent.h	/^    string sExpectationType;        \/\/ indicates the type of this expectation$/;"	m	struct:__anon57	access:public
__anon57::sExplicitValue	DMCore/Agents/DialogAgents/DialogAgent.h	/^	string sExplicitValue;			\/\/ the value bound to the concept in case$/;"	m	struct:__anon57	access:public
__anon57::sGrammarExpectation	DMCore/Agents/DialogAgents/DialogAgent.h	/^	string sGrammarExpectation;		\/\/ the grammar slot that is expected$/;"	m	struct:__anon57	access:public
__anon57::sReasonDisabled	DMCore/Agents/DialogAgents/DialogAgent.h	/^	string sReasonDisabled;			\/\/ indicates why the expectation is $/;"	m	struct:__anon57	access:public
__anon57::vsOtherConceptNames	DMCore/Agents/DialogAgents/DialogAgent.h	/^	TStringVector vsOtherConceptNames;$/;"	m	struct:__anon57	access:public
__anon58::bClaimDuringGrounding	DMCore/Agents/DialogAgents/DialogAgent.h	/^	bool bClaimDuringGrounding;     \/\/ indicates whether or not the focus is$/;"	m	struct:__anon58	access:public
__anon58::sAgentName	DMCore/Agents/DialogAgents/DialogAgent.h	/^	string sAgentName;				\/\/ the name of the agent that claims focus$/;"	m	struct:__anon58	access:public
__anon61::pfVar	DMCore/Grounding/GroundingModels/GMRequestAgent_LR.h	/^	float* pfVar;$/;"	m	struct:__anon61	access:public
__anon61::vfCoefs	DMCore/Grounding/GroundingModels/GMRequestAgent_LR.h	/^	vector<float> vfCoefs;$/;"	m	struct:__anon61	access:public
__anon61::vsFeatures	DMCore/Grounding/GroundingModels/GMRequestAgent_LR.h	/^	TStringVector vsFeatures;$/;"	m	struct:__anon61	access:public
__anon62::i2fActionsValues	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    map<int, float> i2fActionsValues;$/;"	m	struct:__anon62	access:public
__anon62::sStateName	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    string sStateName;  \/\/ the name of the state$/;"	m	struct:__anon62	access:public
__anon63::bDisplayed	DMCore/Log.h	/^	bool bDisplayed;		\/\/ if that stream should be displayed or not$/;"	m	struct:__anon63	access:public
__anon63::bEnabled	DMCore/Log.h	/^	bool bEnabled;			\/\/ if the logging stream is enabled or not$/;"	m	struct:__anon63	access:public
__anon63::iColor	DMCore/Log.h	/^    int iColor;             \/\/ the color that stream is displayed$/;"	m	struct:__anon63	access:public
__has_feature	spdlog/details/os.h	52;"	d
_async_log_helper	spdlog/async_logger.h	/^    std::unique_ptr<details::async_log_helper> _async_log_helper;$/;"	m	class:spdlog::async_logger	access:private
_async_mode	spdlog/details/registry.h	/^    bool _async_mode = false;$/;"	m	class:spdlog::details::registry_t	access:private
_async_q_size	spdlog/details/registry.h	/^    size_t _async_q_size = 0;$/;"	m	class:spdlog::details::registry_t	access:private
_base_filename	spdlog/sinks/file_sinks.h	/^    filename_t _base_filename;$/;"	m	class:spdlog::sinks::daily_file_sink	access:private
_base_filename	spdlog/sinks/file_sinks.h	/^    filename_t _base_filename;$/;"	m	class:spdlog::sinks::rotating_file_sink	access:private
_ch	spdlog/details/pattern_formatter_impl.h	/^    char _ch;$/;"	m	class:spdlog::details::ch_formatter	access:private
_current_size	spdlog/sinks/file_sinks.h	/^    std::size_t _current_size;$/;"	m	class:spdlog::sinks::rotating_file_sink	access:private
_default_err_handler	spdlog/details/logger_impl.h	/^inline void spdlog::logger::_default_err_handler(const std::string &msg)$/;"	f	class:spdlog::logger	signature:(const std::string &msg)
_default_err_handler	spdlog/logger.h	/^    virtual void _default_err_handler(const std::string &msg);$/;"	p	class:spdlog::logger	access:protected	signature:(const std::string &msg)
_ecvt_s	spdlog/fmt/bundled/format.h	/^inline DummyInt _ecvt_s(...)$/;"	f	namespace:fmt::internal	signature:(....)
_err_handler	spdlog/details/async_log_helper.h	/^    log_err_handler _err_handler;$/;"	m	class:spdlog::details::async_log_helper	access:private
_err_handler	spdlog/details/registry.h	/^    log_err_handler _err_handler;$/;"	m	class:spdlog::details::registry_t	access:private
_err_handler	spdlog/logger.h	/^    log_err_handler _err_handler;$/;"	m	class:spdlog::logger	access:protected
_fd	spdlog/details/file_helper.h	/^    FILE* _fd;$/;"	m	class:spdlog::details::file_helper	access:private
_file_helper	spdlog/sinks/file_sinks.h	/^    details::file_helper _file_helper;$/;"	m	class:spdlog::sinks::daily_file_sink	access:private
_file_helper	spdlog/sinks/file_sinks.h	/^    details::file_helper _file_helper;$/;"	m	class:spdlog::sinks::rotating_file_sink	access:private
_file_helper	spdlog/sinks/file_sinks.h	/^    details::file_helper _file_helper;$/;"	m	class:spdlog::sinks::simple_file_sink	access:private
_filename	spdlog/details/file_helper.h	/^    filename_t _filename;$/;"	m	class:spdlog::details::file_helper	access:private
_finite	spdlog/fmt/bundled/format.h	/^inline DummyInt _finite(...)$/;"	f	namespace:fmt::internal	signature:(....)
_flush_interval_ms	spdlog/details/async_log_helper.h	/^    const std::chrono::milliseconds _flush_interval_ms;$/;"	m	class:spdlog::details::async_log_helper	access:private
_flush_interval_ms	spdlog/details/registry.h	/^    std::chrono::milliseconds _flush_interval_ms;$/;"	m	class:spdlog::details::registry_t	access:private
_flush_level	spdlog/logger.h	/^    spdlog::level_t _flush_level;$/;"	m	class:spdlog::logger	access:protected
_flush_requested	spdlog/details/async_log_helper.h	/^    bool _flush_requested;$/;"	m	class:spdlog::details::async_log_helper	access:private
_force_flush	spdlog/sinks/file_sinks.h	/^    bool _force_flush;$/;"	m	class:spdlog::sinks::simple_file_sink	access:private
_force_flush	spdlog/sinks/ostream_sink.h	/^    bool _force_flush;$/;"	m	class:spdlog::sinks::ostream_sink	access:protected
_formatter	spdlog/details/async_log_helper.h	/^    formatter_ptr _formatter;$/;"	m	class:spdlog::details::async_log_helper	access:private
_formatter	spdlog/details/registry.h	/^    formatter_ptr _formatter;$/;"	m	class:spdlog::details::registry_t	access:private
_formatter	spdlog/logger.h	/^    formatter_ptr _formatter;$/;"	m	class:spdlog::logger	access:protected
_formatters	spdlog/formatter.h	/^    std::vector<std::unique_ptr<details::flag_formatter>> _formatters;$/;"	m	class:spdlog::pattern_formatter	access:private
_ident	spdlog/sinks/syslog_sink.h	/^    const std::string _ident;$/;"	m	class:spdlog::sinks::syslog_sink	access:private
_isnan	spdlog/fmt/bundled/format.h	/^inline DummyInt _isnan(...)$/;"	f	namespace:fmt::internal	signature:(....)
_last_err_time	spdlog/logger.h	/^    std::atomic<time_t> _last_err_time;$/;"	m	class:spdlog::logger	access:protected
_last_update	spdlog/details/pattern_formatter_impl.h	/^    log_clock::time_point _last_update;$/;"	m	class:spdlog::details::z_formatter	access:private
_level	spdlog/details/registry.h	/^    level::level_enum _level = level::info;$/;"	m	class:spdlog::details::registry_t	access:private
_level	spdlog/logger.h	/^    spdlog::level_t _level;$/;"	m	class:spdlog::logger	access:protected
_level	spdlog/sinks/sink.h	/^    level_t _level;$/;"	m	class:spdlog::sinks::sink	access:private
_loggers	spdlog/details/registry.h	/^    std::unordered_map <std::string, std::shared_ptr<logger>> _loggers;$/;"	m	class:spdlog::details::registry_t	access:private
_max_files	spdlog/sinks/file_sinks.h	/^    std::size_t _max_files;$/;"	m	class:spdlog::sinks::rotating_file_sink	access:private
_max_size	spdlog/sinks/file_sinks.h	/^    std::size_t _max_size;$/;"	m	class:spdlog::sinks::rotating_file_sink	access:private
_msg	spdlog/common.h	/^    std::string _msg;$/;"	m	class:spdlog::spdlog_ex	access:private
_mutex	spdlog/details/pattern_formatter_impl.h	/^    std::mutex _mutex;$/;"	m	class:spdlog::details::z_formatter	access:private
_mutex	spdlog/details/registry.h	/^    Mutex _mutex;$/;"	m	class:spdlog::details::registry_t	access:private
_mutex	spdlog/sinks/base_sink.h	/^    Mutex _mutex;$/;"	m	class:spdlog::sinks::base_sink	access:protected
_name	spdlog/logger.h	/^    const std::string _name;$/;"	m	class:spdlog::logger	access:protected
_next_rotation_tp	spdlog/sinks/file_sinks.h	/^    std::chrono::system_clock::time_point _next_rotation_tp()$/;"	f	class:spdlog::sinks::daily_file_sink	access:private	signature:()
_offset_minutes	spdlog/details/pattern_formatter_impl.h	/^    int _offset_minutes;$/;"	m	class:spdlog::details::z_formatter	access:private
_ostream	spdlog/sinks/ostream_sink.h	/^    std::ostream& _ostream;$/;"	m	class:spdlog::sinks::ostream_sink	access:protected
_overflow_policy	spdlog/details/async_log_helper.h	/^    const async_overflow_policy _overflow_policy;$/;"	m	class:spdlog::details::async_log_helper	access:private
_overflow_policy	spdlog/details/registry.h	/^    async_overflow_policy _overflow_policy = async_overflow_policy::block_retry;$/;"	m	class:spdlog::details::registry_t	access:private
_pattern	spdlog/formatter.h	/^    const std::string _pattern;$/;"	m	class:spdlog::pattern_formatter	access:private
_priorities	spdlog/sinks/syslog_sink.h	/^    std::array<int, 7> _priorities;$/;"	m	class:spdlog::sinks::syslog_sink	access:private
_q	spdlog/details/async_log_helper.h	/^    q_type _q;$/;"	m	class:spdlog::details::async_log_helper	access:private
_rotate	spdlog/sinks/file_sinks.h	/^    void _rotate()$/;"	f	class:spdlog::sinks::rotating_file_sink	access:private	signature:()
_rotation_h	spdlog/sinks/file_sinks.h	/^    int _rotation_h;$/;"	m	class:spdlog::sinks::daily_file_sink	access:private
_rotation_m	spdlog/sinks/file_sinks.h	/^    int _rotation_m;$/;"	m	class:spdlog::sinks::daily_file_sink	access:private
_rotation_tp	spdlog/sinks/file_sinks.h	/^    std::chrono::system_clock::time_point _rotation_tp;$/;"	m	class:spdlog::sinks::daily_file_sink	access:private
_set_formatter	spdlog/details/async_logger_impl.h	/^inline void spdlog::async_logger::_set_formatter(spdlog::formatter_ptr msg_formatter)$/;"	f	class:spdlog::async_logger	signature:(spdlog::formatter_ptr msg_formatter)
_set_formatter	spdlog/details/logger_impl.h	/^inline void spdlog::logger::_set_formatter(formatter_ptr msg_formatter)$/;"	f	class:spdlog::logger	signature:(formatter_ptr msg_formatter)
_set_formatter	spdlog/logger.h	/^    virtual void _set_formatter(formatter_ptr);$/;"	p	class:spdlog::logger	access:protected	signature:(formatter_ptr)
_set_pattern	spdlog/details/async_logger_impl.h	/^inline void spdlog::async_logger::_set_pattern(const std::string& pattern)$/;"	f	class:spdlog::async_logger	signature:(const std::string& pattern)
_set_pattern	spdlog/details/logger_impl.h	/^inline void spdlog::logger::_set_pattern(const std::string& pattern)$/;"	f	class:spdlog::logger	signature:(const std::string& pattern)
_set_pattern	spdlog/logger.h	/^    virtual void _set_pattern(const std::string&);$/;"	p	class:spdlog::logger	access:protected	signature:(const std::string&)
_should_flush_on	spdlog/details/logger_impl.h	/^inline bool spdlog::logger::_should_flush_on(const details::log_msg &msg)$/;"	f	class:spdlog::logger	signature:(const details::log_msg &msg)
_should_flush_on	spdlog/logger.h	/^    bool _should_flush_on(const details::log_msg&);$/;"	p	class:spdlog::logger	access:protected	signature:(const details::log_msg&)
_sink_it	spdlog/details/async_logger_impl.h	/^inline void spdlog::async_logger::_sink_it(details::log_msg& msg)$/;"	f	class:spdlog::async_logger	signature:(details::log_msg& msg)
_sink_it	spdlog/details/logger_impl.h	/^inline void spdlog::logger::_sink_it(details::log_msg& msg)$/;"	f	class:spdlog::logger	signature:(details::log_msg& msg)
_sink_it	spdlog/logger.h	/^    virtual void _sink_it(details::log_msg&);$/;"	p	class:spdlog::logger	access:protected	signature:(details::log_msg&)
_sink_it	spdlog/sinks/base_sink.h	/^    virtual void _sink_it(const details::log_msg& msg) = 0;$/;"	p	class:spdlog::sinks::base_sink	access:protected	signature:(const details::log_msg& msg)
_sinks	spdlog/details/async_log_helper.h	/^    std::vector<std::shared_ptr<sinks::sink>> _sinks;$/;"	m	class:spdlog::details::async_log_helper	access:private
_sinks	spdlog/logger.h	/^    std::vector<sink_ptr> _sinks;$/;"	m	class:spdlog::logger	access:protected
_sinks	spdlog/sinks/dist_sink.h	/^    std::vector<std::shared_ptr<sink>> _sinks;$/;"	m	class:spdlog::sinks::dist_sink	access:protected
_str	spdlog/details/pattern_formatter_impl.h	/^    std::string _str;$/;"	m	class:spdlog::details::aggregate_formatter	access:private
_strlwr	Utils/Utils.cpp	/^char *_strlwr(char *str) {$/;"	f	signature:(char *str)
_strupr	Utils/Utils.cpp	/^char *_strupr(char *str) {$/;"	f	signature:(char *str)
_tag	spdlog/sinks/android_sink.h	/^    std::string _tag;$/;"	m	class:spdlog::sinks::android_sink	access:private
_terminate_requested	spdlog/details/async_log_helper.h	/^    bool _terminate_requested;$/;"	m	class:spdlog::details::async_log_helper	access:private
_thread_id	spdlog/details/os.h	/^inline size_t _thread_id()$/;"	f	namespace:spdlog::details::os	signature:()
_worker_teardown_cb	spdlog/details/async_log_helper.h	/^    const std::function<void()> _worker_teardown_cb;$/;"	m	class:spdlog::details::async_log_helper	access:private
_worker_teardown_cb	spdlog/details/registry.h	/^    std::function<void()> _worker_teardown_cb = nullptr;$/;"	m	class:spdlog::details::registry_t	access:private
_worker_thread	spdlog/details/async_log_helper.h	/^    std::thread _worker_thread;$/;"	m	class:spdlog::details::async_log_helper	access:private
_worker_warmup_cb	spdlog/details/async_log_helper.h	/^    const std::function<void()> _worker_warmup_cb;$/;"	m	class:spdlog::details::async_log_helper	access:private
_worker_warmup_cb	spdlog/details/registry.h	/^    std::function<void()> _worker_warmup_cb = nullptr;$/;"	m	class:spdlog::details::registry_t	access:private
a_formatter	spdlog/details/pattern_formatter_impl.h	/^class a_formatter:public flag_formatter$/;"	c	namespace:spdlog::details	inherits:flag_formatter
actionValuesToString	DMCore/Grounding/GroundingModels/GroundingModel.cpp	/^string CGroundingModel::actionValuesToString() {$/;"	f	class:CGroundingModel	signature:()
actionValuesToString	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    string actionValuesToString();$/;"	p	class:CGroundingModel	access:protected	signature:()
add_ch	spdlog/details/pattern_formatter_impl.h	/^    void add_ch(char ch)$/;"	f	class:spdlog::details::aggregate_formatter	access:public	signature:(char ch)
add_sink	spdlog/sinks/dist_sink.h	/^    void add_sink(std::shared_ptr<sink> sink)$/;"	f	class:spdlog::sinks::dist_sink	access:public	signature:(std::shared_ptr<sink> sink)
advanceTill	Tools/RavenClawLogParser/RavenClawLogParser.pm	/^sub advanceTill {$/;"	s
aggregate_formatter	spdlog/details/pattern_formatter_impl.h	/^    aggregate_formatter()$/;"	f	class:spdlog::details::aggregate_formatter	access:public	signature:()
aggregate_formatter	spdlog/details/pattern_formatter_impl.h	/^class aggregate_formatter:public flag_formatter$/;"	c	namespace:spdlog::details	inherits:flag_formatter
align	spdlog/fmt/bundled/format.h	/^    Alignment align() const$/;"	f	struct:fmt::AlignSpec	access:public	signature:() const
align	spdlog/fmt/bundled/format.h	/^    Alignment align() const$/;"	f	struct:fmt::TypeSpec	access:public	signature:() const
align_	spdlog/fmt/bundled/format.h	/^    Alignment align_;$/;"	m	struct:fmt::AlignSpec	access:public
ampm	spdlog/details/pattern_formatter_impl.h	/^static const char* ampm(const tm& t)$/;"	f	namespace:spdlog::details	signature:(const tm& t)
analysisInput	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.cpp	/^STRING2STRING &CInteractionEventManagerAgent::analysisInput(string inputString) {$/;"	f	class:CInteractionEventManagerAgent	signature:(string inputString)
analysisInput	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.h	/^  STRING2STRING &analysisInput(string inputString);$/;"	p	class:CInteractionEventManagerAgent	access:public	signature:(string inputString)
analysisInput	main.cpp	/^std::string analysisInput(std::string input) {$/;"	f	signature:(std::string input)
android_logger	spdlog/details/spdlog_impl.h	/^inline std::shared_ptr<spdlog::logger> spdlog::android_logger(const std::string& logger_name, const std::string& tag)$/;"	f	class:spdlog	signature:(const std::string& logger_name, const std::string& tag)
android_logger	spdlog/spdlog.h	/^std::shared_ptr<logger> android_logger(const std::string& logger_name, const std::string& tag = "spdlog");$/;"	p	namespace:spdlog	signature:(const std::string& logger_name, const std::string& tag = Ó)
android_sink	spdlog/sinks/android_sink.h	/^    explicit android_sink(const std::string& tag = "spdlog"): _tag(tag) {}$/;"	f	class:spdlog::sinks::android_sink	access:public	signature:(const std::string& tag = Ó)
android_sink	spdlog/sinks/android_sink.h	/^class android_sink : public sink$/;"	c	namespace:spdlog::sinks	inherits:sink
ansicolor_sink	spdlog/sinks/ansicolor_sink.h	/^    ansicolor_sink(sink_ptr wrapped_sink);$/;"	p	class:spdlog::sinks::ansicolor_sink	access:public	signature:(sink_ptr wrapped_sink)
ansicolor_sink	spdlog/sinks/ansicolor_sink.h	/^class ansicolor_sink : public sink$/;"	c	namespace:spdlog::sinks	inherits:sink
ansicolor_sink	spdlog/sinks/ansicolor_sink.h	/^inline ansicolor_sink::ansicolor_sink(sink_ptr wrapped_sink) : sink_(wrapped_sink)$/;"	f	class:spdlog::sinks::ansicolor_sink	signature:(sink_ptr wrapped_sink)
append	spdlog/fmt/bundled/format.h	/^    void append(const U *begin, const U *end);$/;"	p	class:fmt::Buffer	access:public	signature:(const U *begin, const U *end)
append	spdlog/fmt/bundled/format.h	/^void Buffer<T>::append(const U *begin, const U *end)$/;"	f	class:fmt::Buffer	signature:(const U *begin, const U *end)
append_float_length	spdlog/fmt/bundled/format.h	/^    void append_float_length(Char *&, T)$/;"	f	class:BasicWriter	access:private	signature:(Char *&, T)
append_float_length	spdlog/fmt/bundled/format.h	/^    void append_float_length(Char *&format_ptr, long double)$/;"	f	class:BasicWriter	access:private	signature:(Char *&format_ptr, long double)
apply_all	spdlog/details/registry.h	/^    void apply_all(std::function<void(std::shared_ptr<logger>)> fun)$/;"	f	class:spdlog::details::registry_t	access:public	signature:(std::function<void(std::shared_ptr<logger>)> fun)
apply_all	spdlog/details/spdlog_impl.h	/^inline void spdlog::apply_all(std::function<void(std::shared_ptr<logger>)> fun)$/;"	f	class:spdlog	signature:(std::function<void(std::shared_ptr<logger>)> fun)
apply_all	spdlog/spdlog.h	/^void apply_all(std::function<void(std::shared_ptr<logger>)> fun);$/;"	p	namespace:spdlog	signature:(std::function<void(std::shared_ptr<logger>)> fun)
approx_size	spdlog/details/mpmc_bounded_q.h	/^    size_t approx_size()$/;"	f	class:spdlog::details::mpmc_bounded_queue	access:public	signature:()
arg	spdlog/fmt/bundled/format.h	/^inline internal::NamedArgWithType<char, T> arg(StringRef name, const T &arg)$/;"	f	signature:(StringRef name, const T &arg)
arg	spdlog/fmt/bundled/format.h	/^inline internal::NamedArgWithType<wchar_t, T> arg(WStringRef name, const T &arg)$/;"	f	signature:(WStringRef name, const T &arg)
arg_	spdlog/fmt/bundled/printf.h	/^    internal::Arg &arg_;$/;"	m	class:fmt::internal::ArgConverter	access:private
arg_	spdlog/fmt/bundled/printf.h	/^    internal::Arg &arg_;$/;"	m	class:fmt::internal::CharConverter	access:private
args	spdlog/fmt/bundled/format.h	/^    const ArgList &args() const$/;"	f	class:fmt::internal::FormatterBase	access:protected	signature:() const
args_	spdlog/fmt/bundled/format.h	/^        const internal::Arg *args_;$/;"	m	union:fmt::ArgList::__anon27	access:public
args_	spdlog/fmt/bundled/format.h	/^    ArgList args_;$/;"	m	class:fmt::internal::FormatterBase	access:private
asamAsFirstChild	DMCore/Agents/DialogAgents/DialogAgent.h	/^	asamAsFirstChild,$/;"	e	enum:__anon59
asamAsLastChild	DMCore/Agents/DialogAgents/DialogAgent.h	/^	asamAsLastChild,$/;"	e	enum:__anon59
asamAsLeftSibling	DMCore/Agents/DialogAgents/DialogAgent.h	/^	asamAsLeftSibling,$/;"	e	enum:__anon59
asamAsRightSibling	DMCore/Agents/DialogAgents/DialogAgent.h	/^	asamAsRightSibling,$/;"	e	enum:__anon59
assembleExpectationAgenda	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^void CDMCoreAgent::assembleExpectationAgenda() {$/;"	f	class:CDMCoreAgent	signature:()
assembleExpectationAgenda	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	void assembleExpectationAgenda();$/;"	p	class:CDMCoreAgent	access:private	signature:()
assembleFocusClaims	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^int CDMCoreAgent::assembleFocusClaims() {$/;"	f	class:CDMCoreAgent	signature:()
assembleFocusClaims	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	int assembleFocusClaims();$/;"	p	class:CDMCoreAgent	access:private	signature:()
async_log_helper	spdlog/details/async_log_helper.h	/^class async_log_helper$/;"	c	namespace:spdlog::details
async_log_helper	spdlog/details/async_log_helper.h	/^inline spdlog::details::async_log_helper::async_log_helper($/;"	f	class:spdlog::details::async_log_helper	signature:( formatter_ptr formatter, const std::vector<sink_ptr>& sinks, size_t queue_size, log_err_handler err_handler, const async_overflow_policy overflow_policy, const std::function<void()>& worker_warmup_cb, const std::chrono::milliseconds& flush_interval_ms, const std::function<void()>& worker_teardown_cb)
async_logger	spdlog/async_logger.h	/^    async_logger(const std::string& logger_name,$/;"	p	class:spdlog::async_logger	access:public	signature:(const std::string& logger_name, sink_ptr single_sink, size_t queue_size, const async_overflow_policy overflow_policy = async_overflow_policy::block_retry, const std::function<void()>& worker_warmup_cb = nullptr, const std::chrono::milliseconds& flush_interval_ms = std::chrono::milliseconds::zero(), const std::function<void()>& worker_teardown_cb = nullptr)
async_logger	spdlog/async_logger.h	/^    async_logger(const std::string& logger_name,$/;"	p	class:spdlog::async_logger	access:public	signature:(const std::string& logger_name, sinks_init_list sinks, size_t queue_size, const async_overflow_policy overflow_policy = async_overflow_policy::block_retry, const std::function<void()>& worker_warmup_cb = nullptr, const std::chrono::milliseconds& flush_interval_ms = std::chrono::milliseconds::zero(), const std::function<void()>& worker_teardown_cb = nullptr)
async_logger	spdlog/async_logger.h	/^    async_logger(const std::string& name,$/;"	p	class:spdlog::async_logger	access:public	signature:(const std::string& name, const It& begin, const It& end, size_t queue_size, const async_overflow_policy overflow_policy = async_overflow_policy::block_retry, const std::function<void()>& worker_warmup_cb = nullptr, const std::chrono::milliseconds& flush_interval_ms = std::chrono::milliseconds::zero(), const std::function<void()>& worker_teardown_cb = nullptr)
async_logger	spdlog/async_logger.h	/^class async_logger :public logger$/;"	c	namespace:spdlog	inherits:logger
async_logger	spdlog/details/async_logger_impl.h	/^inline spdlog::async_logger::async_logger(const std::string& logger_name,$/;"	f	class:spdlog::async_logger	signature:(const std::string& logger_name, const It& begin, const It& end, size_t queue_size, const async_overflow_policy overflow_policy, const std::function<void()>& worker_warmup_cb, const std::chrono::milliseconds& flush_interval_ms, const std::function<void()>& worker_teardown_cb)
async_logger	spdlog/details/async_logger_impl.h	/^inline spdlog::async_logger::async_logger(const std::string& logger_name,$/;"	f	class:spdlog::async_logger	signature:(const std::string& logger_name, sink_ptr single_sink, size_t queue_size, const async_overflow_policy overflow_policy, const std::function<void()>& worker_warmup_cb, const std::chrono::milliseconds& flush_interval_ms, const std::function<void()>& worker_teardown_cb)
async_logger	spdlog/details/async_logger_impl.h	/^inline spdlog::async_logger::async_logger(const std::string& logger_name,$/;"	f	class:spdlog::async_logger	signature:(const std::string& logger_name, sinks_init_list sinks_list, size_t queue_size, const async_overflow_policy overflow_policy, const std::function<void()>& worker_warmup_cb, const std::chrono::milliseconds& flush_interval_ms, const std::function<void()>& worker_teardown_cb)
async_msg	spdlog/details/async_log_helper.h	/^        async_msg() = default;$/;"	p	struct:spdlog::details::async_log_helper::async_msg	access:public	signature:()
async_msg	spdlog/details/async_log_helper.h	/^        async_msg(async_msg_type m_type) :msg_type(m_type)$/;"	f	struct:spdlog::details::async_log_helper::async_msg	access:public	signature:(async_msg_type m_type)
async_msg	spdlog/details/async_log_helper.h	/^        async_msg(const async_msg&) = delete;$/;"	p	struct:spdlog::details::async_log_helper::async_msg	access:public	signature:(const async_msg&)
async_msg	spdlog/details/async_log_helper.h	/^        async_msg(const details::log_msg& m) :$/;"	f	struct:spdlog::details::async_log_helper::async_msg	access:public	signature:(const details::log_msg& m)
async_msg	spdlog/details/async_log_helper.h	/^    struct async_msg$/;"	s	class:spdlog::details::async_log_helper	access:private
async_msg_type	spdlog/details/async_log_helper.h	/^    enum class async_msg_type$/;"	c	class:spdlog::details::async_log_helper	access:private
async_overflow_policy	spdlog/common.h	/^enum class async_overflow_policy$/;"	c	namespace:spdlog
bAgendaModifiedFlag	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	bool bAgendaModifiedFlag;				\/\/ indicates if the agenda should$/;"	m	class:CDMCoreAgent	access:private
bBargeIn	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    bool bBargeIn;                      \/\/ was there a barge-in on the action$/;"	m	struct:__anon40	access:public
bBlocked	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	bool bBlocked;					\/\/ indicates whether the binding was $/;"	m	struct:__anon49	access:public
bBlocked	DMCore/Agents/DialogAgents/DialogAgent.h	/^	bool bBlocked;$/;"	m	class:CDialogAgent	access:protected
bBlockingCall	DMCore/Agents/CoreAgents/TrafficManagerAgent.h	/^	bool bBlockingCall;$/;"	m	struct:__anon37	access:public
bCanceled	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	bool bCanceled;					\/\/ has the history item been canceled$/;"	m	struct:__anon48	access:public
bChangeNotification	DMCore/Concepts/Concept.h	/^	bool bChangeNotification;$/;"	m	class:CConcept	access:protected
bClaimDuringGrounding	DMCore/Agents/DialogAgents/DialogAgent.h	/^	bool bClaimDuringGrounding;     \/\/ indicates whether or not the focus is$/;"	m	struct:__anon58	access:public
bCommitted	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	bool bCommitted;				\/\/ has the history item been committed$/;"	m	struct:__anon48	access:public
bComplete	DMCore/Events/InteractionEvent.h	/^	bool bComplete;$/;"	m	class:CInteractionEvent	access:protected
bCompleted	DMCore/Agents/DialogAgents/DialogAgent.h	/^	bool bCompleted;$/;"	m	class:CDialogAgent	access:protected
bDisabled	DMCore/Agents/DialogAgents/DialogAgent.h	/^	bool bDisabled;					\/\/ indicates that this expectation is $/;"	m	struct:__anon57	access:public
bDisplayed	DMCore/Log.h	/^	bool bDisplayed;		\/\/ if that stream should be displayed or not$/;"	m	struct:__anon63	access:public
bDynamicAgent	DMCore/Agents/DialogAgents/DialogAgent.h	/^    bool bDynamicAgent;$/;"	m	class:CDialogAgent	access:protected
bEnabled	DMCore/Log.h	/^	bool bEnabled;			\/\/ if the logging stream is enabled or not$/;"	m	struct:__anon63	access:public
bExecuted	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	bool bExecuted;					\/\/ has the history item been executed?$/;"	m	struct:__anon48	access:public
bExitOnFatalError	DMCore/Log.cpp	/^bool bExitOnFatalError; $/;"	v
bExternalPolicy	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    bool bExternalPolicy;$/;"	m	class:CGroundingModel	access:protected
bFocusClaimsPhaseFlag	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^    bool bFocusClaimsPhaseFlag;             \/\/ indicates whether we should$/;"	m	class:CDMCoreAgent	access:private
bGroundConcepts	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    bool bGroundConcepts;$/;"	m	struct:__anon38	access:public
bGroundTurns	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    bool bGroundTurns;$/;"	m	struct:__anon38	access:public
bGrounded	DMCore/Concepts/Concept.h	/^	bool bGrounded;$/;"	m	class:CConcept	access:protected
bHistoryConcept	DMCore/Concepts/Concept.h	/^    bool bHistoryConcept;$/;"	m	class:CConcept	access:protected
bInheritedParentInputConfiguration	DMCore/Agents/DialogAgents/DialogAgent.h	/^	bool bInheritedParentInputConfiguration;$/;"	m	class:CDialogAgent	access:protected
bInvalidated	DMCore/Concepts/Concept.h	/^    bool bInvalidated;$/;"	m	class:CConcept	access:protected
bLockedGroundingRequests	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    bool bLockedGroundingRequests;$/;"	m	class:CGroundingManagerAgent	access:private
bNonUnderstanding	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^    bool bNonUnderstanding;         \/\/ was the turn a non-understanding?$/;"	m	struct:__anon51	access:public
bRestoredForGrounding	DMCore/Concepts/Concept.h	/^    bool bRestoredForGrounding;$/;"	m	class:CConcept	access:protected
bScheduled	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	bool bScheduled;				\/\/ has the history item been scheduled $/;"	m	struct:__anon48	access:public
bSealed	DMCore/Concepts/Concept.h	/^	bool bSealed;$/;"	m	class:CConcept	access:protected
bTurnGroundingRequest	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    bool bTurnGroundingRequest;$/;"	m	class:CGroundingManagerAgent	access:private
bUnderstanding	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	bool bUnderstanding;			\/\/ the update changed the concept $/;"	m	struct:__anon50	access:public
bValue	DMCore/Concepts/BoolConcept.h	/^	bool bValue;                    \/\/ the actual value$/;"	m	class:CBoolHyp	access:protected
bWaitingConveyance	DMCore/Concepts/Concept.h	/^    bool bWaitingConveyance;$/;"	m	class:CConcept	access:protected
b_formatter	spdlog/details/pattern_formatter_impl.h	/^class b_formatter:public flag_formatter$/;"	c	namespace:spdlog::details	inherits:flag_formatter
base_sink	spdlog/sinks/base_sink.h	/^    base_sink():_mutex() {}$/;"	f	class:spdlog::sinks::base_sink	access:public	signature:()
base_sink	spdlog/sinks/base_sink.h	/^    base_sink(const base_sink&) = delete;$/;"	p	class:spdlog::sinks::base_sink	access:public	signature:(const base_sink&)
base_sink	spdlog/sinks/base_sink.h	/^class base_sink:public sink$/;"	c	namespace:spdlog::sinks	inherits:sink
basic_logger_mt	spdlog/details/spdlog_impl.h	/^inline std::shared_ptr<spdlog::logger> spdlog::basic_logger_mt(const std::string& logger_name, const filename_t& filename, bool truncate)$/;"	f	class:spdlog	signature:(const std::string& logger_name, const filename_t& filename, bool truncate)
basic_logger_mt	spdlog/spdlog.h	/^std::shared_ptr<logger> basic_logger_mt(const std::string& logger_name, const filename_t& filename, bool truncate = false);$/;"	p	namespace:spdlog	signature:(const std::string& logger_name, const filename_t& filename, bool truncate = false)
basic_logger_st	spdlog/details/spdlog_impl.h	/^inline std::shared_ptr<spdlog::logger> spdlog::basic_logger_st(const std::string& logger_name, const filename_t& filename, bool truncate)$/;"	f	class:spdlog	signature:(const std::string& logger_name, const filename_t& filename, bool truncate)
basic_logger_st	spdlog/spdlog.h	/^std::shared_ptr<logger> basic_logger_st(const std::string& logger_name, const filename_t& filename, bool truncate = false);$/;"	p	namespace:spdlog	signature:(const std::string& logger_name, const filename_t& filename, bool truncate = false)
bdActionValues	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    CBeliefDistribution bdActionValues;$/;"	m	class:CGroundingModel	access:protected
bdBeliefState	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    CBeliefDistribution bdBeliefState;$/;"	m	class:CGroundingModel	access:protected
beliefStateToString	DMCore/Grounding/GroundingModels/GroundingModel.cpp	/^string CGroundingModel::beliefStateToString() {$/;"	f	class:CGroundingModel	signature:()
beliefStateToString	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    string beliefStateToString();$/;"	p	class:CGroundingModel	access:protected	signature:()
bhBindingHistory	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^    TBindingHistory bhBindingHistory;       \/\/ the binding history$/;"	m	class:CDMCoreAgent	access:private
bin	spdlog/fmt/bundled/format.h	/^IntFormatSpec<int, TypeSpec<'b'> > bin(int value);$/;"	p	namespace:fmt	signature:(int value)
bindConcepts	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^void CDMCoreAgent::bindConcepts(TBindingsDescr& rbdBindings) {$/;"	f	class:CDMCoreAgent	signature:(TBindingsDescr& rbdBindings)
bindConcepts	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^    void bindConcepts(TBindingsDescr& rbdBindings);$/;"	p	class:CDMCoreAgent	access:private	signature:(TBindingsDescr& rbdBindings)
bindingsDescrToString	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^string CDMCoreAgent::bindingsDescrToString(TBindingsDescr& rbdBindings) {$/;"	f	class:CDMCoreAgent	signature:(TBindingsDescr& rbdBindings)
bindingsDescrToString	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	string bindingsDescrToString(TBindingsDescr& rbdBindings);$/;"	p	class:CDMCoreAgent	access:private	signature:(TBindingsDescr& rbdBindings)
blink	spdlog/sinks/ansicolor_sink.h	/^    const std::string blink      = "\\033[5m";$/;"	m	class:spdlog::sinks::ansicolor_sink	access:public
block_retry	spdlog/common.h	/^    block_retry, \/\/ Block \/ yield \/ sleep until message can be enqueued$/;"	m	class:spdlog::async_overflow_policy	access:private
blue	spdlog/sinks/ansicolor_sink.h	/^    const std::string blue       = "\\033[34m";$/;"	m	class:spdlog::sinks::ansicolor_sink	access:public
bmBindMethod	DMCore/Agents/DialogAgents/DialogAgent.h	/^	TBindMethod bmBindMethod;	    \/\/ indicates the binding method to be $/;"	m	struct:__anon57	access:public
bmBindingFilter	DMCore/Agents/DialogAgents/DialogAgent.h	/^               bmBindingFilter    \/\/ bind the result of applying a custom $/;"	e	enum:__anon56
bmExplicitValue	DMCore/Agents/DialogAgents/DialogAgent.h	/^               bmExplicitValue,   \/\/ bind an explicit value specified in the $/;"	e	enum:__anon56
bmSlotValue	DMCore/Agents/DialogAgents/DialogAgent.h	/^typedef enum { bmSlotValue,       \/\/ bind the value of the slot $/;"	e	enum:__anon56
bold	spdlog/sinks/ansicolor_sink.h	/^    const std::string bold       = "\\033[1m";$/;"	m	class:spdlog::sinks::ansicolor_sink	access:public
broadcastExpectationAgenda	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^    void broadcastExpectationAgenda();$/;"	p	class:CDMCoreAgent	access:private	signature:()
buffer_	spdlog/details/mpmc_bounded_q.h	/^    cell_t* const           buffer_;$/;"	m	class:spdlog::details::mpmc_bounded_queue	access:private
buffer_	spdlog/fmt/bundled/format.h	/^        : BasicWriter<Char>(buffer_), buffer_(array, SIZE)$/;"	f	class:BasicArrayWriter	access:public	signature:(array, SIZE)
buffer_	spdlog/fmt/bundled/format.h	/^    Buffer<Char> &buffer_;$/;"	m	class:BasicWriter	access:private
buffer_	spdlog/fmt/bundled/format.h	/^    MemoryBuffer<char, INLINE_BUFFER_SIZE> buffer_;$/;"	m	class:fmt::internal::UTF16ToUTF8	access:private
buffer_	spdlog/fmt/bundled/format.h	/^    MemoryBuffer<wchar_t, INLINE_BUFFER_SIZE> buffer_;$/;"	m	class:fmt::internal::UTF8ToUTF16	access:private
buffer_	spdlog/fmt/bundled/format.h	/^    internal::FixedBuffer<Char> buffer_;$/;"	m	class:BasicArrayWriter	access:private
buffer_	spdlog/fmt/bundled/format.h	/^    internal::MemoryBuffer<Char, internal::INLINE_BUFFER_SIZE, Allocator> buffer_;$/;"	m	class:BasicMemoryWriter	access:private
buffer_	spdlog/fmt/bundled/format.h	/^    mutable char buffer_[BUFFER_SIZE];$/;"	m	class:FormatInt	access:private
buffer_	spdlog/fmt/bundled/ostream.h	/^    Buffer<Char> &buffer_;$/;"	m	class:fmt::internal::FormatBuf	access:private
buffer_mask_	spdlog/details/mpmc_bounded_q.h	/^    size_t const            buffer_mask_;$/;"	m	class:spdlog::details::mpmc_bounded_queue	access:private
cComparator	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.h	/^	TComparator cComparator;$/;"	m	class:CCondition	access:protected
cConveyance	DMCore/Concepts/Concept.h	/^	TConveyance cConveyance;$/;"	m	class:CConcept	access:protected
cConveyance	DMCore/Outputs/Output.h	/^	TConveyance cConveyance;			\/\/ whether the output was fully conveyed$/;"	m	class:COutput	access:protected
cConveyed	DMCore/Concepts/Concept.h	/^typedef enum { cConveyed, cNotConveyed, cFailed } TConveyance;$/;"	e	enum:__anon66
cFailed	DMCore/Concepts/Concept.h	/^typedef enum { cConveyed, cNotConveyed, cFailed } TConveyance;$/;"	e	enum:__anon66
cNotConveyed	DMCore/Concepts/Concept.h	/^typedef enum { cConveyed, cNotConveyed, cFailed } TConveyance;$/;"	e	enum:__anon66
c_formatter	spdlog/details/pattern_formatter_impl.h	/^class c_formatter:public flag_formatter$/;"	c	namespace:spdlog::details	inherits:flag_formatter
c_str	spdlog/fmt/bundled/format.h	/^    const Char *c_str() const$/;"	f	class:BasicWriter	access:public	signature:() const
c_str	spdlog/fmt/bundled/format.h	/^    const Char *c_str() const$/;"	f	class:fmt::BasicCStringRef	access:public	signature:() const
c_str	spdlog/fmt/bundled/format.h	/^    const char *c_str() const$/;"	f	class:FormatInt	access:public	signature:() const
c_str	spdlog/fmt/bundled/format.h	/^    const char *c_str() const$/;"	f	class:fmt::internal::UTF16ToUTF8	access:public	signature:() const
c_str	spdlog/fmt/bundled/format.h	/^    const wchar_t *c_str() const$/;"	f	class:fmt::internal::UTF8ToUTF16	access:public	signature:() const
cache_refresh	spdlog/details/pattern_formatter_impl.h	/^    const std::chrono::seconds cache_refresh = std::chrono::seconds(5);$/;"	m	class:spdlog::details::z_formatter	access:public
cacheline_pad_t	spdlog/details/mpmc_bounded_q.h	/^    typedef char            cacheline_pad_t [cacheline_size];$/;"	t	class:spdlog::details::mpmc_bounded_queue	access:private
cacheline_size	spdlog/details/mpmc_bounded_q.h	/^    static size_t const     cacheline_size = 64;$/;"	m	class:spdlog::details::mpmc_bounded_queue	access:private
calc_filename	spdlog/sinks/file_sinks.h	/^    static filename_t calc_filename(const filename_t& basename)$/;"	f	struct:spdlog::sinks::dateonly_daily_file_name_calculator	access:public	signature:(const filename_t& basename)
calc_filename	spdlog/sinks/file_sinks.h	/^    static filename_t calc_filename(const filename_t& basename)$/;"	f	struct:spdlog::sinks::default_daily_file_name_calculator	access:public	signature:(const filename_t& basename)
calc_filename	spdlog/sinks/file_sinks.h	/^    static filename_t calc_filename(const filename_t& filename, std::size_t index)$/;"	f	class:spdlog::sinks::rotating_file_sink	access:private	signature:(const filename_t& filename, std::size_t index)
capacity	spdlog/fmt/bundled/format.h	/^    std::size_t capacity() const$/;"	f	class:fmt::Buffer	access:public	signature:() const
capacity_	spdlog/fmt/bundled/format.h	/^    std::size_t capacity_;$/;"	m	class:fmt::Buffer	access:protected
cast	spdlog/fmt/bundled/format.h	/^    static Char cast(int value)$/;"	f	class:fmt::internal::BasicCharTraits	access:public	signature:(int value)
celSystemExpectations	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	TConceptExpectationList celSystemExpectations;		$/;"	m	struct:__anon46	access:public
cell_t	spdlog/details/mpmc_bounded_q.h	/^    struct cell_t$/;"	s	class:spdlog::details::mpmc_bounded_queue	access:private
ch_formatter	spdlog/details/pattern_formatter_impl.h	/^    explicit ch_formatter(char ch): _ch(ch)$/;"	f	class:spdlog::details::ch_formatter	access:public	signature:(char ch)
ch_formatter	spdlog/details/pattern_formatter_impl.h	/^class ch_formatter:public flag_formatter$/;"	c	namespace:spdlog::details	inherits:flag_formatter
check_no_auto_index	spdlog/fmt/bundled/format.h	/^    bool check_no_auto_index(const char *&error)$/;"	f	class:fmt::internal::FormatterBase	access:protected	signature:(const char *&error)
clearCurrentSystemAction	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^void CDMCoreAgent::clearCurrentSystemAction() {$/;"	f	class:CDMCoreAgent	signature:()
clearCurrentSystemAction	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	void clearCurrentSystemAction();$/;"	p	class:CDMCoreAgent	access:private	signature:()
clone	DMCore/Outputs/Output.cpp	/^void COutput::clone(COutput * opClone, int iNewOutputId) {$/;"	f	class:COutput	signature:(COutput * opClone, int iNewOutputId)
clone	DMCore/Outputs/Output.h	/^	virtual void clone(COutput* pOutput, int iNewOutputId);$/;"	p	class:COutput	access:protected	signature:(COutput* pOutput, int iNewOutputId)
close	spdlog/details/file_helper.h	/^    void close()$/;"	f	class:spdlog::details::file_helper	access:public	signature:()
clz	spdlog/fmt/bundled/format.h	/^inline uint32_t clz(uint32_t x)$/;"	f	namespace:fmt::internal	signature:(uint32_t x)
clzll	spdlog/fmt/bundled/format.h	/^inline uint32_t clzll(uint64_t x)$/;"	f	namespace:fmt::internal	signature:(uint64_t x)
colors_	spdlog/sinks/ansicolor_sink.h	/^    std::map<level::level_enum, std::string> colors_;$/;"	m	class:spdlog::sinks::ansicolor_sink	access:protected
colors_	spdlog/sinks/wincolor_sink.h	/^    std::map<level::level_enum, WORD> colors_;$/;"	m	class:spdlog::sinks::wincolor_sink	access:private
compare	spdlog/fmt/bundled/format.h	/^    int compare(BasicStringRef other) const$/;"	f	class:fmt::BasicStringRef	access:public	signature:(BasicStringRef other) const
compileExpectationAgenda	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^void CDMCoreAgent::compileExpectationAgenda() {$/;"	f	class:CDMCoreAgent	signature:()
compileExpectationAgenda	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	void compileExpectationAgenda();$/;"	p	class:CDMCoreAgent	access:private	signature:()
compile_pattern	spdlog/details/pattern_formatter_impl.h	/^inline void spdlog::pattern_formatter::compile_pattern(const std::string& pattern)$/;"	f	class:spdlog::pattern_formatter	signature:(const std::string& pattern)
compile_pattern	spdlog/formatter.h	/^    void compile_pattern(const std::string& pattern);$/;"	p	class:spdlog::pattern_formatter	access:private	signature:(const std::string& pattern)
computeBeliefState	DMCore/Grounding/GroundingModels/GMConcept.cpp	/^void CGMConcept::computeBeliefState() {$/;"	f	class:CGMConcept	signature:()
computeBeliefState	DMCore/Grounding/GroundingModels/GMConcept.h	/^    virtual void computeBeliefState();$/;"	p	class:CGMConcept	access:protected	signature:()
computeBeliefState	DMCore/Grounding/GroundingModels/GMRequestAgent.cpp	/^void CGMRequestAgent::computeBeliefState() {$/;"	f	class:CGMRequestAgent	signature:()
computeBeliefState	DMCore/Grounding/GroundingModels/GMRequestAgent.h	/^    virtual void computeBeliefState();$/;"	p	class:CGMRequestAgent	access:protected	signature:()
computeBeliefState	DMCore/Grounding/GroundingModels/GMRequestAgent_Experiment.cpp	/^void CGMRequestAgent_Experiment::computeBeliefState() {$/;"	f	class:CGMRequestAgent_Experiment	signature:()
computeBeliefState	DMCore/Grounding/GroundingModels/GMRequestAgent_Experiment.h	/^    virtual void computeBeliefState();$/;"	p	class:CGMRequestAgent_Experiment	access:protected	signature:()
computeBeliefState	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.cpp	/^void CGMRequestAgent_HandCrafted::computeBeliefState() {$/;"	f	class:CGMRequestAgent_HandCrafted	signature:()
computeBeliefState	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.h	/^    virtual void computeBeliefState();$/;"	p	class:CGMRequestAgent_HandCrafted	access:protected	signature:()
computeBeliefState	DMCore/Grounding/GroundingModels/GMRequestAgent_NumNonu.cpp	/^void CGMRequestAgent_NumNonu::computeBeliefState() {$/;"	f	class:CGMRequestAgent_NumNonu	signature:()
computeBeliefState	DMCore/Grounding/GroundingModels/GMRequestAgent_NumNonu.h	/^    virtual void computeBeliefState();$/;"	p	class:CGMRequestAgent_NumNonu	access:protected	signature:()
computeBeliefState	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    virtual void computeBeliefState() = 0;$/;"	p	class:CGroundingModel	access:protected	signature:()
computeCurrentSystemAction	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^void CDMCoreAgent::computeCurrentSystemAction() {$/;"	f	class:CDMCoreAgent	signature:()
computeCurrentSystemAction	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	void computeCurrentSystemAction();$/;"	p	class:CDMCoreAgent	access:private	signature:()
computeFullState	DMCore/Grounding/GroundingModels/GMConcept.cpp	/^void CGMConcept::computeFullState() {$/;"	f	class:CGMConcept	signature:()
computeFullState	DMCore/Grounding/GroundingModels/GMConcept.h	/^    virtual void computeFullState();$/;"	p	class:CGMConcept	access:protected	signature:()
computeFullState	DMCore/Grounding/GroundingModels/GMRequestAgent.cpp	/^void CGMRequestAgent::computeFullState() {$/;"	f	class:CGMRequestAgent	signature:()
computeFullState	DMCore/Grounding/GroundingModels/GMRequestAgent.h	/^    virtual void computeFullState();$/;"	p	class:CGMRequestAgent	access:protected	signature:()
computeFullState	DMCore/Grounding/GroundingModels/GMRequestAgent_Experiment.cpp	/^void CGMRequestAgent_Experiment::computeFullState() {$/;"	f	class:CGMRequestAgent_Experiment	signature:()
computeFullState	DMCore/Grounding/GroundingModels/GMRequestAgent_Experiment.h	/^    virtual void computeFullState();$/;"	p	class:CGMRequestAgent_Experiment	access:protected	signature:()
computeFullState	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.cpp	/^void CGMRequestAgent_HandCrafted::computeFullState() {$/;"	f	class:CGMRequestAgent_HandCrafted	signature:()
computeFullState	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.h	/^    virtual void computeFullState();$/;"	p	class:CGMRequestAgent_HandCrafted	access:protected	signature:()
computeFullState	DMCore/Grounding/GroundingModels/GMRequestAgent_NumNonu.cpp	/^void CGMRequestAgent_NumNonu::computeFullState() {$/;"	f	class:CGMRequestAgent_NumNonu	signature:()
computeFullState	DMCore/Grounding/GroundingModels/GMRequestAgent_NumNonu.h	/^    virtual void computeFullState();$/;"	p	class:CGMRequestAgent_NumNonu	access:protected	signature:()
computeFullState	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    virtual void computeFullState() = 0;$/;"	p	class:CGroundingModel	access:protected	signature:()
concealed	spdlog/sinks/ansicolor_sink.h	/^    const std::string concealed  = "\\033[8m";$/;"	m	class:spdlog::sinks::ansicolor_sink	access:public
const_check	spdlog/fmt/bundled/format.h	/^inline T const_check(T value)$/;"	f	namespace:fmt::internal	signature:(T value)
convert	spdlog/fmt/bundled/format.cc	/^	FMT_FUNC int internal::UTF16ToUTF8::convert(WStringRef s)$/;"	f	class:fmt::internal::UTF16ToUTF8	signature:(WStringRef s)
convert	spdlog/fmt/bundled/format.h	/^    FMT_API int convert(WStringRef s);$/;"	p	class:fmt::internal::UTF16ToUTF8	access:public	signature:(WStringRef s)
convert	spdlog/fmt/bundled/format.h	/^    static char convert(char value)$/;"	f	class:fmt::internal::CharTraits	access:public	signature:(char value)
convert	spdlog/fmt/bundled/format.h	/^    static char convert(wchar_t);$/;"	p	class:fmt::internal::CharTraits	access:private	signature:(wchar_t)
convert	spdlog/fmt/bundled/format.h	/^    static wchar_t convert(char value)$/;"	f	class:fmt::internal::CharTraits	access:public	signature:(char value)
convert	spdlog/fmt/bundled/format.h	/^    static wchar_t convert(wchar_t value)$/;"	f	class:fmt::internal::CharTraits	access:public	signature:(wchar_t value)
convert	spdlog/fmt/bundled/format.h	/^No &convert(...);$/;"	p	namespace:fmt::internal	signature:(....)
convert	spdlog/fmt/bundled/format.h	/^Yes &convert(fmt::ULongLong);$/;"	p	namespace:fmt::internal	signature:(fmt::ULongLong)
convert	spdlog/fmt/bundled/ostream.h	/^Yes &convert(std::ostream &);$/;"	p	namespace:fmt::internal	signature:(std::ostream &)
convert_to_android	spdlog/sinks/android_sink.h	/^    static android_LogPriority convert_to_android(spdlog::level::level_enum level)$/;"	f	class:spdlog::sinks::android_sink	access:private	signature:(spdlog::level::level_enum level)
count_digits	spdlog/fmt/bundled/format.h	/^inline unsigned count_digits(uint32_t n)$/;"	f	namespace:fmt::internal	signature:(uint32_t n)
create	spdlog/details/registry.h	/^    std::shared_ptr<logger> create(const std::string& logger_name, const It& sinks_begin, const It& sinks_end)$/;"	f	class:spdlog::details::registry_t	access:public	signature:(const std::string& logger_name, const It& sinks_begin, const It& sinks_end)
create	spdlog/details/registry.h	/^    std::shared_ptr<logger> create(const std::string& logger_name, sink_ptr sink)$/;"	f	class:spdlog::details::registry_t	access:public	signature:(const std::string& logger_name, sink_ptr sink)
create	spdlog/details/registry.h	/^    std::shared_ptr<logger> create(const std::string& logger_name, sinks_init_list sinks)$/;"	f	class:spdlog::details::registry_t	access:public	signature:(const std::string& logger_name, sinks_init_list sinks)
create	spdlog/details/spdlog_impl.h	/^inline std::shared_ptr<spdlog::logger> spdlog::create(const std::string& logger_name, Args... args)$/;"	f	class:spdlog	signature:(const std::string& logger_name, Args... args)
create	spdlog/details/spdlog_impl.h	/^inline std::shared_ptr<spdlog::logger> spdlog::create(const std::string& logger_name, const It& sinks_begin, const It& sinks_end)$/;"	f	class:spdlog	signature:(const std::string& logger_name, const It& sinks_begin, const It& sinks_end)
create	spdlog/details/spdlog_impl.h	/^inline std::shared_ptr<spdlog::logger> spdlog::create(const std::string& logger_name, const spdlog::sink_ptr& sink)$/;"	f	class:spdlog	signature:(const std::string& logger_name, const spdlog::sink_ptr& sink)
create	spdlog/details/spdlog_impl.h	/^inline std::shared_ptr<spdlog::logger> spdlog::create(const std::string& logger_name, spdlog::sinks_init_list sinks)$/;"	f	class:spdlog	signature:(const std::string& logger_name, spdlog::sinks_init_list sinks)
create	spdlog/spdlog.h	/^std::shared_ptr<logger> create(const std::string& logger_name, const It& sinks_begin, const It& sinks_end);$/;"	p	namespace:spdlog	signature:(const std::string& logger_name, const It& sinks_begin, const It& sinks_end)
create	spdlog/spdlog.h	/^std::shared_ptr<logger> create(const std::string& logger_name, const sink_ptr& sink);$/;"	p	namespace:spdlog	signature:(const std::string& logger_name, const sink_ptr& sink)
create	spdlog/spdlog.h	/^std::shared_ptr<logger> create(const std::string& logger_name, sinks_init_list sinks);$/;"	p	namespace:spdlog	signature:(const std::string& logger_name, sinks_init_list sinks)
create	spdlog/spdlog.h	/^std::shared_ptr<spdlog::logger> create(const std::string& logger_name, Args...);$/;"	p	namespace:spdlog	signature:(const std::string& logger_name, Args...)
critical	spdlog/common.h	/^    critical = 5,$/;"	e	enum:spdlog::level::__anon34
critical	spdlog/details/logger_impl.h	/^inline void spdlog::logger::critical(const T& msg)$/;"	f	class:spdlog::logger	signature:(const T& msg)
critical	spdlog/details/logger_impl.h	/^inline void spdlog::logger::critical(const char* fmt, const Args&... args)$/;"	f	class:spdlog::logger	signature:(const char* fmt, const Args&... args)
critical	spdlog/logger.h	/^    template <typename T> void critical(const T&);$/;"	p	class:spdlog::logger	access:public	signature:(const T&)
critical	spdlog/logger.h	/^    template <typename... Args> void critical(const char* fmt, const Args&... args);$/;"	p	class:spdlog::logger	access:public	signature:(const char* fmt, const Args&... args)
csConceptSource	DMCore/Concepts/Concept.h	/^	TConceptSource csConceptSource;		$/;"	m	class:CConcept	access:protected
csSystem	DMCore/Concepts/Concept.h	/^typedef enum { csUser, csSystem } TConceptSource;$/;"	e	enum:__anon65
csUser	DMCore/Concepts/Concept.h	/^typedef enum { csUser, csSystem } TConceptSource;$/;"	e	enum:__anon65
csoStartOverFunct	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^    TCustomStartOverFunct csoStartOverFunct;\/\/ a custom start over function$/;"	m	class:CDMCoreAgent	access:private
ctArray	DMCore/Concepts/Concept.h	/^               ctFrame, ctArray } TConceptType;$/;"	e	enum:__anon64
ctBool	DMCore/Concepts/Concept.h	/^typedef enum { ctUnknown, ctInt, ctBool, ctString, ctFloat, ctStruct, $/;"	e	enum:__anon64
ctCompletionType	DMCore/Agents/DialogAgents/DialogAgent.h	/^    TCompletionType ctCompletionType;$/;"	m	class:CDialogAgent	access:protected
ctConceptType	DMCore/Concepts/Concept.h	/^	TConceptType ctConceptType;			$/;"	m	class:CConcept	access:protected
ctFailed	DMCore/Agents/DialogAgents/DialogAgent.h	/^               ctFailed,            \/\/ completion by failure$/;"	e	enum:__anon60
ctFloat	DMCore/Concepts/Concept.h	/^typedef enum { ctUnknown, ctInt, ctBool, ctString, ctFloat, ctStruct, $/;"	e	enum:__anon64
ctFrame	DMCore/Concepts/Concept.h	/^               ctFrame, ctArray } TConceptType;$/;"	e	enum:__anon64
ctHypType	DMCore/Concepts/Concept.h	/^	TConceptType ctHypType;			\/\/ the concept (hypothesis) type$/;"	m	class:CHyp	access:protected
ctInt	DMCore/Concepts/Concept.h	/^typedef enum { ctUnknown, ctInt, ctBool, ctString, ctFloat, ctStruct, $/;"	e	enum:__anon64
ctString	DMCore/Concepts/Concept.h	/^typedef enum { ctUnknown, ctInt, ctBool, ctString, ctFloat, ctStruct, $/;"	e	enum:__anon64
ctStruct	DMCore/Concepts/Concept.h	/^typedef enum { ctUnknown, ctInt, ctBool, ctString, ctFloat, ctStruct, $/;"	e	enum:__anon64
ctSuccess	DMCore/Agents/DialogAgents/DialogAgent.h	/^typedef enum { ctSuccess,           \/\/ successful completion$/;"	e	enum:__anon60
ctUnknown	DMCore/Concepts/Concept.h	/^typedef enum { ctUnknown, ctInt, ctBool, ctString, ctFloat, ctStruct, $/;"	e	enum:__anon64
currentSystemActionToString	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^string CDMCoreAgent::currentSystemActionToString() {$/;"	f	class:CDMCoreAgent	signature:()
currentSystemActionToString	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	string currentSystemActionToString();$/;"	p	class:CDMCoreAgent	access:private	signature:()
custom	spdlog/fmt/bundled/format.h	/^        CustomValue custom;$/;"	m	union:fmt::internal::Value::__anon18	access:public
cyan	spdlog/sinks/ansicolor_sink.h	/^    const std::string cyan       = "\\033[36m";$/;"	m	class:spdlog::sinks::ansicolor_sink	access:public
d_formatter	spdlog/details/pattern_formatter_impl.h	/^class d_formatter:public flag_formatter$/;"	c	namespace:spdlog::details	inherits:flag_formatter
daily_file_sink	spdlog/sinks/file_sinks.h	/^    daily_file_sink($/;"	f	class:spdlog::sinks::daily_file_sink	access:public	signature:( const filename_t& base_filename, int rotation_hour, int rotation_minute)
daily_file_sink	spdlog/sinks/file_sinks.h	/^class daily_file_sink :public base_sink < Mutex >$/;"	c	namespace:spdlog::sinks	inherits:base_sink
daily_file_sink_mt	spdlog/sinks/file_sinks.h	/^typedef daily_file_sink<std::mutex> daily_file_sink_mt;$/;"	t	namespace:spdlog::sinks
daily_file_sink_st	spdlog/sinks/file_sinks.h	/^typedef daily_file_sink<details::null_mutex> daily_file_sink_st;$/;"	t	namespace:spdlog::sinks
daily_logger_mt	spdlog/details/spdlog_impl.h	/^inline std::shared_ptr<spdlog::logger> spdlog::daily_logger_mt(const std::string& logger_name, const filename_t& filename, int hour, int minute)$/;"	f	class:spdlog	signature:(const std::string& logger_name, const filename_t& filename, int hour, int minute)
daily_logger_mt	spdlog/spdlog.h	/^std::shared_ptr<logger> daily_logger_mt(const std::string& logger_name, const filename_t& filename, int hour=0, int minute=0);$/;"	p	namespace:spdlog	signature:(const std::string& logger_name, const filename_t& filename, int hour=0, int minute=0)
daily_logger_st	spdlog/details/spdlog_impl.h	/^inline std::shared_ptr<spdlog::logger> spdlog::daily_logger_st(const std::string& logger_name, const filename_t& filename, int hour, int minute)$/;"	f	class:spdlog	signature:(const std::string& logger_name, const filename_t& filename, int hour, int minute)
daily_logger_st	spdlog/spdlog.h	/^std::shared_ptr<logger> daily_logger_st(const std::string& logger_name, const filename_t& filename, int hour=0, int minute=0);$/;"	p	namespace:spdlog	signature:(const std::string& logger_name, const filename_t& filename, int hour=0, int minute=0)
dark	spdlog/sinks/ansicolor_sink.h	/^    const std::string dark       = "\\033[2m";$/;"	m	class:spdlog::sinks::ansicolor_sink	access:public
data	spdlog/fmt/bundled/format.h	/^    const Char *data() const$/;"	f	class:fmt::BasicStringRef	access:public	signature:() const
data	spdlog/fmt/bundled/format.h	/^    const char *data() const$/;"	f	class:FormatInt	access:public	signature:() const
data	spdlog/fmt/bundled/format.h	/^    int data[2];$/;"	m	struct:fmt::internal::DummyInt	access:public
data_	spdlog/details/mpmc_bounded_q.h	/^        T                     data_;$/;"	m	struct:spdlog::details::mpmc_bounded_queue::cell_t	access:public
data_	spdlog/fmt/bundled/format.h	/^    T data_[SIZE];$/;"	m	class:fmt::internal::MemoryBuffer	access:private
data_	spdlog/fmt/bundled/format.h	/^    const Char *data_;$/;"	m	class:fmt::BasicCStringRef	access:private
data_	spdlog/fmt/bundled/format.h	/^    const Char *data_;$/;"	m	class:fmt::BasicStringRef	access:private
data_cond	DMCore/message/threadsafe_queue.h	/^  std::condition_variable data_cond;$/;"	m	class:threadsafe_queue	access:public
data_queue	DMCore/message/threadsafe_queue.h	/^  std::queue<std::shared_ptr<T> > data_queue;$/;"	m	class:threadsafe_queue	access:public
dateonly_daily_file_name_calculator	spdlog/sinks/file_sinks.h	/^struct dateonly_daily_file_name_calculator$/;"	s	namespace:spdlog::sinks
days	spdlog/details/pattern_formatter_impl.h	/^static const days_array& days()$/;"	f	namespace:spdlog::details	signature:()
deallocate	spdlog/fmt/bundled/format.h	/^    void deallocate()$/;"	f	class:fmt::internal::MemoryBuffer	access:private	signature:()
debug	spdlog/common.h	/^    debug = 1,$/;"	e	enum:spdlog::level::__anon34
debug	spdlog/details/logger_impl.h	/^inline void spdlog::logger::debug(const T& msg)$/;"	f	class:spdlog::logger	signature:(const T& msg)
debug	spdlog/details/logger_impl.h	/^inline void spdlog::logger::debug(const char* fmt, const Args&... args)$/;"	f	class:spdlog::logger	signature:(const char* fmt, const Args&... args)
debug	spdlog/logger.h	/^    template <typename T> void debug(const T&);$/;"	p	class:spdlog::logger	access:public	signature:(const T&)
debug	spdlog/logger.h	/^    template <typename... Args> void debug(const char* fmt, const Args&... args);$/;"	p	class:spdlog::logger	access:public	signature:(const char* fmt, const Args&... args)
default_daily_file_name_calculator	spdlog/sinks/file_sinks.h	/^struct default_daily_file_name_calculator$/;"	s	namespace:spdlog::sinks
dequeue	spdlog/details/mpmc_bounded_q.h	/^    bool dequeue(T& data)$/;"	f	class:spdlog::details::mpmc_bounded_queue	access:public	signature:(T& data)
dequeue_pos_	spdlog/details/mpmc_bounded_q.h	/^    std::atomic<size_t>     dequeue_pos_;$/;"	m	class:spdlog::details::mpmc_bounded_queue	access:private
dercContinueExecution	DMCore/Agents/DialogAgents/DialogAgent.h	/^typedef enum { dercContinueExecution,		\/\/ continue the execution$/;"	e	enum:__anon55
dercFinishDialog	DMCore/Agents/DialogAgents/DialogAgent.h	/^			   dercFinishDialog,			\/\/ terminate the dialog $/;"	e	enum:__anon55
dercFinishDialogAndCloseSession	DMCore/Agents/DialogAgents/DialogAgent.h	/^			   dercFinishDialogAndCloseSession,			\/\/ terminate the dialog $/;"	e	enum:__anon55
dercRestartDialog	DMCore/Agents/DialogAgents/DialogAgent.h	/^               dercRestartDialog            \/\/ restart the dialog$/;"	e	enum:__anon55
dercTakeFloor	DMCore/Agents/DialogAgents/DialogAgent.h	/^			   dercTakeFloor,				\/\/ takes the floor$/;"	e	enum:__anon55
dercWaitForEvent	DMCore/Agents/DialogAgents/DialogAgent.h	/^			   dercWaitForEvent,			\/\/ waits for a real-world event$/;"	e	enum:__anon55
dercYieldFloor	DMCore/Agents/DialogAgents/DialogAgent.h	/^			   dercYieldFloor,				\/\/ gives the floor to the user$/;"	e	enum:__anon55
details	spdlog/async_logger.h	/^namespace details$/;"	n	namespace:spdlog
details	spdlog/common.h	/^namespace details$/;"	n	namespace:spdlog
details	spdlog/details/async_log_helper.h	/^namespace details$/;"	n	namespace:spdlog
details	spdlog/details/file_helper.h	/^namespace details$/;"	n	namespace:spdlog
details	spdlog/details/log_msg.h	/^namespace details$/;"	n	namespace:spdlog
details	spdlog/details/mpmc_bounded_q.h	/^namespace details$/;"	n	namespace:spdlog
details	spdlog/details/null_mutex.h	/^namespace details$/;"	n	namespace:spdlog
details	spdlog/details/os.h	/^namespace details$/;"	n	namespace:spdlog
details	spdlog/details/pattern_formatter_impl.h	/^namespace details$/;"	n	namespace:spdlog
details	spdlog/details/registry.h	/^namespace details$/;"	n	namespace:spdlog
details	spdlog/formatter.h	/^namespace details$/;"	n	namespace:spdlog
digit_index_	spdlog/fmt/bundled/format.h	/^    unsigned digit_index_;$/;"	m	class:fmt::internal::ThousandsSep	access:private
dist_sink	spdlog/sinks/dist_sink.h	/^    dist_sink(const dist_sink&) = delete;$/;"	p	class:spdlog::sinks::dist_sink	access:public	signature:(const dist_sink&)
dist_sink	spdlog/sinks/dist_sink.h	/^    explicit dist_sink() :_sinks() {}$/;"	f	class:spdlog::sinks::dist_sink	access:public	signature:()
dist_sink	spdlog/sinks/dist_sink.h	/^class dist_sink: public base_sink<Mutex>$/;"	c	namespace:spdlog::sinks	inherits:base_sink
dist_sink_mt	spdlog/sinks/dist_sink.h	/^typedef dist_sink<std::mutex> dist_sink_mt;$/;"	t	namespace:spdlog::sinks
dist_sink_st	spdlog/sinks/dist_sink.h	/^typedef dist_sink<details::null_mutex> dist_sink_st;$/;"	t	namespace:spdlog::sinks
do_get_arg	spdlog/fmt/bundled/format.cc	/^	FMT_FUNC Arg internal::FormatterBase::do_get_arg($/;"	f	class:fmt::internal::FormatterBase	signature:( unsigned arg_index, const char *&error)
do_get_arg	spdlog/fmt/bundled/format.h	/^    FMT_API Arg do_get_arg(unsigned arg_index, const char *&error);$/;"	p	class:fmt::internal::FormatterBase	access:private	signature:(unsigned arg_index, const char *&error)
double_value	spdlog/fmt/bundled/format.h	/^        double double_value;$/;"	m	union:fmt::internal::Value::__anon18	access:public
drop	spdlog/details/registry.h	/^    void drop(const std::string& logger_name)$/;"	f	class:spdlog::details::registry_t	access:public	signature:(const std::string& logger_name)
drop	spdlog/details/spdlog_impl.h	/^inline void spdlog::drop(const std::string &name)$/;"	f	class:spdlog	signature:(const std::string &name)
drop	spdlog/spdlog.h	/^void drop(const std::string &name);$/;"	p	namespace:spdlog	signature:(const std::string &name)
drop_all	spdlog/details/registry.h	/^    void drop_all()$/;"	f	class:spdlog::details::registry_t	access:public	signature:()
drop_all	spdlog/details/spdlog_impl.h	/^inline void spdlog::drop_all()$/;"	f	class:spdlog	signature:()
drop_all	spdlog/spdlog.h	/^void drop_all();$/;"	p	namespace:spdlog	signature:()
ds	DMCore/Agents/CoreAgents/OutputManagerAgent.cpp	/^static TDialogState *ds;$/;"	v	file:
dumpConcepts	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^void CDMCoreAgent::dumpConcepts() {$/;"	f	class:CDMCoreAgent	signature:()
dumpConcepts	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	void dumpConcepts();$/;"	p	class:CDMCoreAgent	access:private	signature:()
dumpExecutionStack	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^void CDMCoreAgent::dumpExecutionStack() {$/;"	f	class:CDMCoreAgent	signature:()
dumpExecutionStack	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^    void dumpExecutionStack();$/;"	p	class:CDMCoreAgent	access:private	signature:()
e_formatter	spdlog/details/pattern_formatter_impl.h	/^class e_formatter:public flag_formatter$/;"	c	namespace:spdlog::details	inherits:flag_formatter
eaAgenda	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	TExpectationAgenda eaAgenda;			\/\/ the expectation agenda$/;"	m	class:CDMCoreAgent	access:private
eaAgenda	DMCore/Agents/CoreAgents/StateManagerAgent.h	/^    TExpectationAgenda eaAgenda;		\/\/ the expectation agenda$/;"	m	struct:__anon44	access:public
ehExecutionHistory	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	CExecutionHistory ehExecutionHistory;	\/\/ the execution history$/;"	m	class:CDMCoreAgent	access:private
empty	DMCore/message/threadsafe_queue.h	/^  bool empty() const;$/;"	p	class:threadsafe_queue	access:public	signature:() const
empty	DMCore/message/threadsafe_queue.h	/^bool threadsafe_queue<T>::empty() const {$/;"	f	class:threadsafe_queue	signature:() const
enable_conversion	spdlog/fmt/bundled/format.h	/^        enable_conversion = sizeof(fmt::internal::convert(get<T>())) == sizeof(Yes)$/;"	e	enum:fmt::internal::ConvertToInt::__anon22
enforceBindingPolicies	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^void CDMCoreAgent::enforceBindingPolicies() {$/;"	f	class:CDMCoreAgent	signature:()
enforceBindingPolicies	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	void enforceBindingPolicies();$/;"	p	class:CDMCoreAgent	access:private	signature:()
enqueue	spdlog/details/mpmc_bounded_q.h	/^    bool enqueue(T&& data)$/;"	f	class:spdlog::details::mpmc_bounded_queue	access:public	signature:(T&& data)
enqueue_pos_	spdlog/details/mpmc_bounded_q.h	/^    std::atomic<size_t>     enqueue_pos_;$/;"	m	class:spdlog::details::mpmc_bounded_queue	access:private
eol	spdlog/details/os.h	/^SPDLOG_CONSTEXPR static const char* eol = SPDLOG_EOL;$/;"	m	namespace:spdlog::details::os
eol_size	spdlog/details/os.h	/^SPDLOG_CONSTEXPR static int eol_size = sizeof(SPDLOG_EOL) - 1;$/;"	m	namespace:spdlog::details::os
err	spdlog/common.h	/^    err = 4,$/;"	e	enum:spdlog::level::__anon34
errno_str	spdlog/common.h	/^std::string errno_str(int err_num);$/;"	p	namespace:spdlog::details::os	signature:(int err_num)
errno_str	spdlog/details/os.h	/^inline std::string errno_str(int err_num)$/;"	f	namespace:spdlog::details::os	signature:(int err_num)
error	spdlog/details/logger_impl.h	/^inline void spdlog::logger::error(const T& msg)$/;"	f	class:spdlog::logger	signature:(const T& msg)
error	spdlog/details/logger_impl.h	/^inline void spdlog::logger::error(const char* fmt, const Args&... args)$/;"	f	class:spdlog::logger	signature:(const char* fmt, const Args&... args)
error	spdlog/logger.h	/^    template <typename T> void error(const T&);$/;"	p	class:spdlog::logger	access:public	signature:(const T&)
error	spdlog/logger.h	/^    template <typename... Args> void error(const char* fmt, const Args&... args);$/;"	p	class:spdlog::logger	access:public	signature:(const char* fmt, const Args&... args)
error_code	spdlog/fmt/bundled/format.h	/^    int error_code() const$/;"	f	class:SystemError	access:public	signature:() const
error_code_	spdlog/fmt/bundled/format.h	/^    int error_code_;$/;"	m	class:SystemError	access:protected
error_handler	spdlog/details/logger_impl.h	/^inline spdlog::log_err_handler spdlog::logger::error_handler()$/;"	f	class:spdlog::logger	signature:()
error_handler	spdlog/logger.h	/^    log_err_handler error_handler();$/;"	p	class:spdlog::logger	access:public	signature:()
esExecutionStack	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	TExecutionStack esExecutionStack;		\/\/ the execution stack$/;"	m	class:CDMCoreAgent	access:private
esExecutionStack	DMCore/Agents/CoreAgents/StateManagerAgent.h	/^	TExecutionStack esExecutionStack;	\/\/ the execution stack$/;"	m	struct:__anon44	access:public
executionStackToString	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^string CDMCoreAgent::executionStackToString() {$/;"	f	class:CDMCoreAgent	signature:()
executionStackToString	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^string CDMCoreAgent::executionStackToString(TExecutionStack es) {$/;"	f	class:CDMCoreAgent	signature:(TExecutionStack es)
executionStackToString	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^    string executionStackToString();$/;"	p	class:CDMCoreAgent	access:private	signature:()
executionStackToString	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^    string executionStackToString(TExecutionStack es);$/;"	p	class:CDMCoreAgent	access:private	signature:(TExecutionStack es)
expectationAgendaToBroadcastString	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^string CDMCoreAgent::expectationAgendaToBroadcastString() {$/;"	f	class:CDMCoreAgent	signature:()
expectationAgendaToBroadcastString	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^string CDMCoreAgent::expectationAgendaToBroadcastString(TExpectationAgenda eaBAgenda) {$/;"	f	class:CDMCoreAgent	signature:(TExpectationAgenda eaBAgenda)
expectationAgendaToBroadcastString	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	string expectationAgendaToBroadcastString(TExpectationAgenda eaBAgenda);$/;"	p	class:CDMCoreAgent	access:private	signature:(TExpectationAgenda eaBAgenda)
expectationAgendaToBroadcastString	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^    string expectationAgendaToBroadcastString();$/;"	p	class:CDMCoreAgent	access:private	signature:()
expectationAgendaToString	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^string CDMCoreAgent::expectationAgendaToString() {$/;"	f	class:CDMCoreAgent	signature:()
expectationAgendaToString	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	string expectationAgendaToString();$/;"	p	class:CDMCoreAgent	access:private	signature:()
fConfidence	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	float fConfidence;				\/\/ the confidence score for the binding$/;"	m	struct:__anon49	access:public
fConfidence	DMCore/Concepts/Concept.h	/^	float fConfidence;              \/\/ the confidence score$/;"	m	class:CHyp	access:protected
fConfidence	DMCore/Events/InteractionEvent.h	/^	float fConfidence;$/;"	m	class:CInteractionEvent	access:protected
fDefaultNonunderstandingThreshold	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^    float fDefaultNonunderstandingThreshold;\/\/ the default nonunderstanding $/;"	m	class:CDMCoreAgent	access:private
fExplorationParameter	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    float fExplorationParameter;$/;"	m	class:CGroundingModel	access:protected
fNonunderstandingThreshold	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^    float fNonunderstandingThreshold;       \/\/ the current nonunderstanding$/;"	m	class:CDMCoreAgent	access:private
fRegisterAgent	DMCore/Agents/CoreAgents/DTTManagerAgent.h	/^	FRegisterAgent fRegisterAgent;$/;"	m	struct:__anon43	access:public
fValue	DMCore/Concepts/FloatConcept.h	/^	float fValue;                   \/\/ the actual value$/;"	m	class:CFloatHyp	access:protected
f_formatter	spdlog/details/pattern_formatter_impl.h	/^class f_formatter:public flag_formatter$/;"	c	namespace:spdlog::details	inherits:flag_formatter
fclFocusClaims	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	TFocusClaimsList fclFocusClaims;		\/\/ the list of focus claims$/;"	m	class:CDMCoreAgent	access:private
features	CMakeFiles/feature_tests.c	/^  const char features[] = {""$/;"	v
features	CMakeFiles/feature_tests.cxx	/^  const char features[] = {""$/;"	v
fileLog	DMCore/Log.h	/^static FILE* fileLog = NULL; $/;"	v
file_exists	spdlog/details/file_helper.h	/^    static bool file_exists(const filename_t& name)$/;"	f	class:spdlog::details::file_helper	access:public	signature:(const filename_t& name)
file_exists	spdlog/details/os.h	/^inline bool file_exists(const filename_t& filename)$/;"	f	namespace:spdlog::details::os	signature:(const filename_t& filename)
file_helper	spdlog/details/file_helper.h	/^    explicit file_helper() :$/;"	f	class:spdlog::details::file_helper	access:public	signature:()
file_helper	spdlog/details/file_helper.h	/^    file_helper(const file_helper&) = delete;$/;"	p	class:spdlog::details::file_helper	access:public	signature:(const file_helper&)
file_helper	spdlog/details/file_helper.h	/^class file_helper$/;"	c	namespace:spdlog::details
filename	spdlog/details/file_helper.h	/^    const filename_t& filename() const$/;"	f	class:spdlog::details::file_helper	access:public	signature:() const
filename_to_str	spdlog/details/os.h	/^inline std::string filename_to_str(const filename_t& filename)$/;"	f	namespace:spdlog::details::os	signature:(const filename_t& filename)
filesize	spdlog/details/os.h	/^inline size_t filesize(FILE *f)$/;"	f	namespace:spdlog::details::os	signature:(FILE *f)
fill	spdlog/fmt/bundled/format.h	/^    char fill() const$/;"	f	struct:fmt::TypeSpec	access:public	signature:() const
fill	spdlog/fmt/bundled/format.h	/^    wchar_t fill() const$/;"	f	struct:fmt::WidthSpec	access:public	signature:() const
fill_	spdlog/fmt/bundled/format.h	/^    wchar_t fill_;$/;"	m	struct:fmt::WidthSpec	access:public
fill_log_msg	spdlog/details/async_log_helper.h	/^        void fill_log_msg(log_msg &msg)$/;"	f	struct:spdlog::details::async_log_helper::async_msg	access:public	signature:(log_msg &msg)
fill_padding	spdlog/fmt/bundled/format.h	/^    static CharPtr fill_padding(CharPtr buffer,$/;"	p	class:BasicWriter	access:private	signature:(CharPtr buffer, unsigned total_size, std::size_t content_size, wchar_t fill)
fill_padding	spdlog/fmt/bundled/format.h	/^BasicWriter<Char>::fill_padding($/;"	f	class:BasicWriter	signature:( CharPtr buffer, unsigned total_size, std::size_t content_size, wchar_t fill)
find	spdlog/fmt/bundled/format.h	/^    const internal::Arg *find(const fmt::BasicStringRef<Char> &name) const$/;"	f	class:fmt::internal::ArgMap	access:public	signature:(const fmt::BasicStringRef<Char> &name) const
fits_in_int	spdlog/fmt/bundled/printf.h	/^    static bool fits_in_int(T value)$/;"	f	struct:fmt::internal::IntChecker	access:public	signature:(T value)
fits_in_int	spdlog/fmt/bundled/printf.h	/^    static bool fits_in_int(bool)$/;"	f	struct:fmt::internal::IntChecker	access:public	signature:(bool)
fits_in_int	spdlog/fmt/bundled/printf.h	/^    static bool fits_in_int(int)$/;"	f	struct:fmt::internal::IntChecker	access:public	signature:(int)
flag	spdlog/fmt/bundled/format.h	/^    bool flag(unsigned f) const$/;"	f	struct:fmt::FormatSpec	access:public	signature:(unsigned f) const
flag	spdlog/fmt/bundled/format.h	/^    bool flag(unsigned) const$/;"	f	struct:fmt::AlignTypeSpec	access:public	signature:(unsigned) const
flag	spdlog/fmt/bundled/format.h	/^    bool flag(unsigned) const$/;"	f	struct:fmt::TypeSpec	access:public	signature:(unsigned) const
flag_formatter	spdlog/details/pattern_formatter_impl.h	/^class flag_formatter$/;"	c	namespace:spdlog::details
flags_	spdlog/fmt/bundled/format.h	/^    unsigned flags_;$/;"	m	struct:fmt::FormatSpec	access:public
flush	spdlog/details/async_log_helper.h	/^        flush,$/;"	m	class:spdlog::details::async_log_helper::async_msg_type	access:private
flush	spdlog/details/async_log_helper.h	/^    void flush(bool wait_for_q);$/;"	p	class:spdlog::details::async_log_helper	access:public	signature:(bool wait_for_q)
flush	spdlog/details/async_log_helper.h	/^inline void spdlog::details::async_log_helper::flush(bool wait_for_q)$/;"	f	class:spdlog::details::async_log_helper	signature:(bool wait_for_q)
flush	spdlog/details/async_logger_impl.h	/^inline void spdlog::async_logger::flush()$/;"	f	class:spdlog::async_logger	signature:()
flush	spdlog/details/file_helper.h	/^    void flush()$/;"	f	class:spdlog::details::file_helper	access:public	signature:()
flush	spdlog/details/logger_impl.h	/^inline void spdlog::logger::flush()$/;"	f	class:spdlog::logger	signature:()
flush	spdlog/logger.h	/^    virtual void flush();$/;"	p	class:spdlog::logger	access:public	signature:()
flush	spdlog/sinks/ansicolor_sink.h	/^inline void ansicolor_sink::flush()$/;"	f	class:spdlog::sinks::ansicolor_sink	signature:()
flush	spdlog/sinks/sink.h	/^    virtual void flush() = 0;$/;"	p	class:spdlog::sinks::sink	access:public	signature:()
flush_on	spdlog/details/logger_impl.h	/^inline void spdlog::logger::flush_on(level::level_enum log_level)$/;"	f	class:spdlog::logger	signature:(level::level_enum log_level)
flush_on	spdlog/logger.h	/^    void flush_on(level::level_enum log_level);$/;"	p	class:spdlog::logger	access:public	signature:(level::level_enum log_level)
fmt	spdlog/fmt/bundled/format.cc	/^namespace fmt {$/;"	n	file:
fmt	spdlog/fmt/bundled/format.h	/^namespace fmt$/;"	n
fmt	spdlog/fmt/bundled/ostream.cc	/^namespace fmt {$/;"	n	file:
fmt	spdlog/fmt/bundled/ostream.h	/^namespace fmt$/;"	n
fmt	spdlog/fmt/bundled/printf.h	/^namespace fmt$/;"	n
fmt::ALIGN_CENTER	spdlog/fmt/bundled/format.h	/^    ALIGN_DEFAULT, ALIGN_LEFT, ALIGN_RIGHT, ALIGN_CENTER, ALIGN_NUMERIC$/;"	e	enum:fmt::Alignment
fmt::ALIGN_DEFAULT	spdlog/fmt/bundled/format.h	/^    ALIGN_DEFAULT, ALIGN_LEFT, ALIGN_RIGHT, ALIGN_CENTER, ALIGN_NUMERIC$/;"	e	enum:fmt::Alignment
fmt::ALIGN_LEFT	spdlog/fmt/bundled/format.h	/^    ALIGN_DEFAULT, ALIGN_LEFT, ALIGN_RIGHT, ALIGN_CENTER, ALIGN_NUMERIC$/;"	e	enum:fmt::Alignment
fmt::ALIGN_NUMERIC	spdlog/fmt/bundled/format.h	/^    ALIGN_DEFAULT, ALIGN_LEFT, ALIGN_RIGHT, ALIGN_CENTER, ALIGN_NUMERIC$/;"	e	enum:fmt::Alignment
fmt::ALIGN_RIGHT	spdlog/fmt/bundled/format.h	/^    ALIGN_DEFAULT, ALIGN_LEFT, ALIGN_RIGHT, ALIGN_CENTER, ALIGN_NUMERIC$/;"	e	enum:fmt::Alignment
fmt::AlignSpec	spdlog/fmt/bundled/format.h	/^struct AlignSpec: WidthSpec$/;"	s	namespace:fmt	inherits:WidthSpec
fmt::AlignSpec::AlignSpec	spdlog/fmt/bundled/format.h	/^    AlignSpec(unsigned width, wchar_t fill, Alignment align = ALIGN_DEFAULT)$/;"	f	struct:fmt::AlignSpec	access:public	signature:(unsigned width, wchar_t fill, Alignment align = ALIGN_DEFAULT)
fmt::AlignSpec::align	spdlog/fmt/bundled/format.h	/^    Alignment align() const$/;"	f	struct:fmt::AlignSpec	access:public	signature:() const
fmt::AlignSpec::align_	spdlog/fmt/bundled/format.h	/^    Alignment align_;$/;"	m	struct:fmt::AlignSpec	access:public
fmt::AlignSpec::precision	spdlog/fmt/bundled/format.h	/^    int precision() const$/;"	f	struct:fmt::AlignSpec	access:public	signature:() const
fmt::AlignTypeSpec	spdlog/fmt/bundled/format.h	/^struct AlignTypeSpec: AlignSpec$/;"	s	namespace:fmt	inherits:AlignSpec
fmt::AlignTypeSpec::AlignTypeSpec	spdlog/fmt/bundled/format.h	/^    AlignTypeSpec(unsigned width, wchar_t fill): AlignSpec(width, fill)$/;"	f	struct:fmt::AlignTypeSpec	access:public	signature:(unsigned width, wchar_t fill)
fmt::AlignTypeSpec::flag	spdlog/fmt/bundled/format.h	/^    bool flag(unsigned) const$/;"	f	struct:fmt::AlignTypeSpec	access:public	signature:(unsigned) const
fmt::AlignTypeSpec::type	spdlog/fmt/bundled/format.h	/^    char type() const$/;"	f	struct:fmt::AlignTypeSpec	access:public	signature:() const
fmt::Alignment	spdlog/fmt/bundled/format.h	/^enum Alignment$/;"	g	namespace:fmt
fmt::ArgArray	spdlog/fmt/bundled/format.h	/^struct ArgArray<N, false\/*IsPacked*\/>$/;"	s	namespace:fmt
fmt::ArgArray::Type	spdlog/fmt/bundled/format.h	/^    typedef Arg Type[N + 1]; \/\/ +1 for the list end Arg::NONE$/;"	t	struct:fmt::ArgArray	access:public
fmt::ArgArray::make	spdlog/fmt/bundled/format.h	/^    static Arg make(const T &value)$/;"	f	struct:fmt::ArgArray	access:public	signature:(const T &value)
fmt::ArgFormatter	spdlog/fmt/bundled/format.h	/^class ArgFormatter: public BasicArgFormatter<ArgFormatter<Char>, Char>$/;"	c	namespace:fmt	inherits:BasicArgFormatter
fmt::ArgFormatter::ArgFormatter	spdlog/fmt/bundled/format.h	/^    ArgFormatter(BasicFormatter<Char> &formatter,$/;"	f	class:fmt::ArgFormatter	access:public	signature:(BasicFormatter<Char> &formatter, FormatSpec &spec, const Char *fmt)
fmt::ArgList	spdlog/fmt/bundled/format.h	/^class ArgList$/;"	c	namespace:fmt
fmt::ArgList::ArgList	spdlog/fmt/bundled/format.h	/^    ArgList(): types_(0)$/;"	f	class:fmt::ArgList	access:public	signature:()
fmt::ArgList::ArgList	spdlog/fmt/bundled/format.h	/^    ArgList(ULongLong types, const internal::Arg *args)$/;"	f	class:fmt::ArgList	access:public	signature:(ULongLong types, const internal::Arg *args)
fmt::ArgList::ArgList	spdlog/fmt/bundled/format.h	/^    ArgList(ULongLong types, const internal::Value *values)$/;"	f	class:fmt::ArgList	access:public	signature:(ULongLong types, const internal::Value *values)
fmt::ArgList::MAX_PACKED_ARGS	spdlog/fmt/bundled/format.h	/^        MAX_PACKED_ARGS = 16$/;"	e	enum:fmt::ArgList::__anon28
fmt::ArgList::__anon27::args_	spdlog/fmt/bundled/format.h	/^        const internal::Arg *args_;$/;"	m	union:fmt::ArgList::__anon27	access:public
fmt::ArgList::__anon27::values_	spdlog/fmt/bundled/format.h	/^        const internal::Value *values_;$/;"	m	union:fmt::ArgList::__anon27	access:public
fmt::ArgList::operator []	spdlog/fmt/bundled/format.h	/^    internal::Arg operator[](unsigned index) const$/;"	f	class:fmt::ArgList	access:public	signature:(unsigned index) const
fmt::ArgList::type	spdlog/fmt/bundled/format.h	/^    internal::Arg::Type type(unsigned index) const$/;"	f	class:fmt::ArgList	access:private	signature:(unsigned index) const
fmt::ArgList::type	spdlog/fmt/bundled/format.h	/^    static internal::Arg::Type type(uint64_t types, unsigned index)$/;"	f	class:fmt::ArgList	access:public	signature:(uint64_t types, unsigned index)
fmt::ArgList::types	spdlog/fmt/bundled/format.h	/^    uint64_t types() const$/;"	f	class:fmt::ArgList	access:public	signature:() const
fmt::ArgList::types_	spdlog/fmt/bundled/format.h	/^    uint64_t types_;$/;"	m	class:fmt::ArgList	access:private
fmt::ArgType	spdlog/fmt/bundled/format.h	/^struct ArgType$/;"	s	namespace:fmt
fmt::ArgType::ArgType	spdlog/fmt/bundled/format.h	/^    ArgType(): type(0)$/;"	f	struct:fmt::ArgType	access:public	signature:()
fmt::ArgType::ArgType	spdlog/fmt/bundled/format.h	/^    ArgType(const T &arg) : type(make_type(arg))$/;"	f	struct:fmt::ArgType	access:public	signature:(const T &arg)
fmt::ArgType::type	spdlog/fmt/bundled/format.h	/^    uint64_t type;$/;"	m	struct:fmt::ArgType	access:public
fmt::ArgVisitor	spdlog/fmt/bundled/format.h	/^class ArgVisitor$/;"	c	namespace:fmt
fmt::ArgVisitor::Arg	spdlog/fmt/bundled/format.h	/^    typedef internal::Arg Arg;$/;"	t	class:fmt::ArgVisitor	access:private
fmt::ArgVisitor::report_unhandled_arg	spdlog/fmt/bundled/format.h	/^    void report_unhandled_arg()$/;"	f	class:fmt::ArgVisitor	access:public	signature:()
fmt::ArgVisitor::visit	spdlog/fmt/bundled/format.h	/^    Result visit(const Arg &arg)$/;"	f	class:fmt::ArgVisitor	access:public	signature:(const Arg &arg)
fmt::ArgVisitor::visit_any_double	spdlog/fmt/bundled/format.h	/^    Result visit_any_double(T)$/;"	f	class:fmt::ArgVisitor	access:public	signature:(T)
fmt::ArgVisitor::visit_any_int	spdlog/fmt/bundled/format.h	/^    Result visit_any_int(T)$/;"	f	class:fmt::ArgVisitor	access:public	signature:(T)
fmt::ArgVisitor::visit_bool	spdlog/fmt/bundled/format.h	/^    Result visit_bool(bool value)$/;"	f	class:fmt::ArgVisitor	access:public	signature:(bool value)
fmt::ArgVisitor::visit_char	spdlog/fmt/bundled/format.h	/^    Result visit_char(int value)$/;"	f	class:fmt::ArgVisitor	access:public	signature:(int value)
fmt::ArgVisitor::visit_cstring	spdlog/fmt/bundled/format.h	/^    Result visit_cstring(const char *)$/;"	f	class:fmt::ArgVisitor	access:public	signature:(const char *)
fmt::ArgVisitor::visit_custom	spdlog/fmt/bundled/format.h	/^    Result visit_custom(Arg::CustomValue)$/;"	f	class:fmt::ArgVisitor	access:public	signature:(Arg::CustomValue)
fmt::ArgVisitor::visit_double	spdlog/fmt/bundled/format.h	/^    Result visit_double(double value)$/;"	f	class:fmt::ArgVisitor	access:public	signature:(double value)
fmt::ArgVisitor::visit_int	spdlog/fmt/bundled/format.h	/^    Result visit_int(int value)$/;"	f	class:fmt::ArgVisitor	access:public	signature:(int value)
fmt::ArgVisitor::visit_long_double	spdlog/fmt/bundled/format.h	/^    Result visit_long_double(long double value)$/;"	f	class:fmt::ArgVisitor	access:public	signature:(long double value)
fmt::ArgVisitor::visit_long_long	spdlog/fmt/bundled/format.h	/^    Result visit_long_long(LongLong value)$/;"	f	class:fmt::ArgVisitor	access:public	signature:(LongLong value)
fmt::ArgVisitor::visit_pointer	spdlog/fmt/bundled/format.h	/^    Result visit_pointer(const void *)$/;"	f	class:fmt::ArgVisitor	access:public	signature:(const void *)
fmt::ArgVisitor::visit_string	spdlog/fmt/bundled/format.h	/^    Result visit_string(Arg::StringValue<char>)$/;"	f	class:fmt::ArgVisitor	access:public	signature:(Arg::StringValue<char>)
fmt::ArgVisitor::visit_uint	spdlog/fmt/bundled/format.h	/^    Result visit_uint(unsigned value)$/;"	f	class:fmt::ArgVisitor	access:public	signature:(unsigned value)
fmt::ArgVisitor::visit_ulong_long	spdlog/fmt/bundled/format.h	/^    Result visit_ulong_long(ULongLong value)$/;"	f	class:fmt::ArgVisitor	access:public	signature:(ULongLong value)
fmt::ArgVisitor::visit_unhandled_arg	spdlog/fmt/bundled/format.h	/^    Result visit_unhandled_arg()$/;"	f	class:fmt::ArgVisitor	access:public	signature:()
fmt::ArgVisitor::visit_wstring	spdlog/fmt/bundled/format.h	/^    Result visit_wstring(Arg::StringValue<wchar_t>)$/;"	f	class:fmt::ArgVisitor	access:public	signature:(Arg::StringValue<wchar_t>)
fmt::BasicArgFormatter	spdlog/fmt/bundled/format.h	/^class BasicArgFormatter: public internal::ArgFormatterBase<Impl, Char>$/;"	c	namespace:fmt	inherits:internal::ArgFormatterBase
fmt::BasicArgFormatter::BasicArgFormatter	spdlog/fmt/bundled/format.h	/^    BasicArgFormatter(BasicFormatter<Char, Impl> &formatter,$/;"	f	class:fmt::BasicArgFormatter	access:public	signature:(BasicFormatter<Char, Impl> &formatter, FormatSpec &spec, const Char *fmt)
fmt::BasicArgFormatter::format_	spdlog/fmt/bundled/format.h	/^    const Char *format_;$/;"	m	class:fmt::BasicArgFormatter	access:private
fmt::BasicArgFormatter::formatter_	spdlog/fmt/bundled/format.h	/^    BasicFormatter<Char, Impl> &formatter_;$/;"	m	class:fmt::BasicArgFormatter	access:private
fmt::BasicArgFormatter::visit_custom	spdlog/fmt/bundled/format.h	/^    void visit_custom(internal::Arg::CustomValue c)$/;"	f	class:fmt::BasicArgFormatter	access:public	signature:(internal::Arg::CustomValue c)
fmt::BasicCStringRef	spdlog/fmt/bundled/format.h	/^class BasicCStringRef$/;"	c	namespace:fmt
fmt::BasicCStringRef::BasicCStringRef	spdlog/fmt/bundled/format.h	/^    BasicCStringRef(const Char *s): data_(s)$/;"	f	class:fmt::BasicCStringRef	access:public	signature:(const Char *s)
fmt::BasicCStringRef::BasicCStringRef	spdlog/fmt/bundled/format.h	/^    BasicCStringRef(const std::basic_string<Char> &s): data_(s.c_str())$/;"	f	class:fmt::BasicCStringRef	access:public	signature:(const std::basic_string<Char> &s)
fmt::BasicCStringRef::c_str	spdlog/fmt/bundled/format.h	/^    const Char *c_str() const$/;"	f	class:fmt::BasicCStringRef	access:public	signature:() const
fmt::BasicCStringRef::data_	spdlog/fmt/bundled/format.h	/^    const Char *data_;$/;"	m	class:fmt::BasicCStringRef	access:private
fmt::BasicFormatter	spdlog/fmt/bundled/format.h	/^class BasicFormatter: private internal::FormatterBase$/;"	c	namespace:fmt	inherits:internal::FormatterBase
fmt::BasicFormatter::BasicFormatter	spdlog/fmt/bundled/format.h	/^    BasicFormatter(const ArgList &args, BasicWriter<Char> &w)$/;"	f	class:fmt::BasicFormatter	access:public	signature:(const ArgList &args, BasicWriter<Char> &w)
fmt::BasicFormatter::Char	spdlog/fmt/bundled/format.h	/^    typedef CharType Char;$/;"	t	class:fmt::BasicFormatter	access:public
fmt::BasicFormatter::FMT_DISALLOW_COPY_AND_ASSIGN	spdlog/fmt/bundled/format.h	/^    FMT_DISALLOW_COPY_AND_ASSIGN(BasicFormatter);$/;"	p	class:fmt::BasicFormatter	access:private	signature:(BasicFormatter)
fmt::BasicFormatter::format	spdlog/fmt/bundled/format.h	/^    const Char *format(const Char *&format_str, const internal::Arg &arg);$/;"	p	class:fmt::BasicFormatter	access:public	signature:(const Char *&format_str, const internal::Arg &arg)
fmt::BasicFormatter::format	spdlog/fmt/bundled/format.h	/^    void format(BasicCStringRef<Char> format_str);$/;"	p	class:fmt::BasicFormatter	access:public	signature:(BasicCStringRef<Char> format_str)
fmt::BasicFormatter::map_	spdlog/fmt/bundled/format.h	/^    internal::ArgMap<Char> map_;$/;"	m	class:fmt::BasicFormatter	access:private
fmt::BasicFormatter::parse_arg_index	spdlog/fmt/bundled/format.h	/^    internal::Arg parse_arg_index(const Char *&s);$/;"	p	class:fmt::BasicFormatter	access:private	signature:(const Char *&s)
fmt::BasicFormatter::parse_arg_name	spdlog/fmt/bundled/format.h	/^    internal::Arg parse_arg_name(const Char *&s);$/;"	p	class:fmt::BasicFormatter	access:private	signature:(const Char *&s)
fmt::BasicFormatter::writer	spdlog/fmt/bundled/format.h	/^    BasicWriter<Char> &writer()$/;"	f	class:fmt::BasicFormatter	access:public	signature:()
fmt::BasicFormatter::writer_	spdlog/fmt/bundled/format.h	/^    BasicWriter<Char> &writer_;$/;"	m	class:fmt::BasicFormatter	access:private
fmt::BasicPrintfArgFormatter	spdlog/fmt/bundled/printf.h	/^class BasicPrintfArgFormatter: public internal::ArgFormatterBase<Impl, Char>$/;"	c	namespace:fmt	inherits:internal::ArgFormatterBase
fmt::BasicPrintfArgFormatter::Base	spdlog/fmt/bundled/printf.h	/^    typedef internal::ArgFormatterBase<Impl, Char> Base;$/;"	t	class:fmt::BasicPrintfArgFormatter	access:private
fmt::BasicPrintfArgFormatter::BasicPrintfArgFormatter	spdlog/fmt/bundled/printf.h	/^    BasicPrintfArgFormatter(BasicWriter<Char> &w, FormatSpec &s)$/;"	f	class:fmt::BasicPrintfArgFormatter	access:public	signature:(BasicWriter<Char> &w, FormatSpec &s)
fmt::BasicPrintfArgFormatter::visit_bool	spdlog/fmt/bundled/printf.h	/^    void visit_bool(bool value)$/;"	f	class:fmt::BasicPrintfArgFormatter	access:public	signature:(bool value)
fmt::BasicPrintfArgFormatter::visit_char	spdlog/fmt/bundled/printf.h	/^    void visit_char(int value)$/;"	f	class:fmt::BasicPrintfArgFormatter	access:public	signature:(int value)
fmt::BasicPrintfArgFormatter::visit_cstring	spdlog/fmt/bundled/printf.h	/^    void visit_cstring(const char *value)$/;"	f	class:fmt::BasicPrintfArgFormatter	access:public	signature:(const char *value)
fmt::BasicPrintfArgFormatter::visit_custom	spdlog/fmt/bundled/printf.h	/^    void visit_custom(internal::Arg::CustomValue c)$/;"	f	class:fmt::BasicPrintfArgFormatter	access:public	signature:(internal::Arg::CustomValue c)
fmt::BasicPrintfArgFormatter::visit_pointer	spdlog/fmt/bundled/printf.h	/^    void visit_pointer(const void *value)$/;"	f	class:fmt::BasicPrintfArgFormatter	access:public	signature:(const void *value)
fmt::BasicPrintfArgFormatter::write_null_pointer	spdlog/fmt/bundled/printf.h	/^    void write_null_pointer()$/;"	f	class:fmt::BasicPrintfArgFormatter	access:private	signature:()
fmt::BasicStringRef	spdlog/fmt/bundled/format.h	/^class BasicStringRef$/;"	c	namespace:fmt
fmt::BasicStringRef::BasicStringRef	spdlog/fmt/bundled/format.h	/^    BasicStringRef(const Char *s)$/;"	f	class:fmt::BasicStringRef	access:public	signature:(const Char *s)
fmt::BasicStringRef::BasicStringRef	spdlog/fmt/bundled/format.h	/^    BasicStringRef(const Char *s, std::size_t size): data_(s), size_(size)$/;"	f	class:fmt::BasicStringRef	access:public	signature:(const Char *s, std::size_t size)
fmt::BasicStringRef::BasicStringRef	spdlog/fmt/bundled/format.h	/^    BasicStringRef(const std::basic_string<Char> &s)$/;"	f	class:fmt::BasicStringRef	access:public	signature:(const std::basic_string<Char> &s)
fmt::BasicStringRef::compare	spdlog/fmt/bundled/format.h	/^    int compare(BasicStringRef other) const$/;"	f	class:fmt::BasicStringRef	access:public	signature:(BasicStringRef other) const
fmt::BasicStringRef::data	spdlog/fmt/bundled/format.h	/^    const Char *data() const$/;"	f	class:fmt::BasicStringRef	access:public	signature:() const
fmt::BasicStringRef::data_	spdlog/fmt/bundled/format.h	/^    const Char *data_;$/;"	m	class:fmt::BasicStringRef	access:private
fmt::BasicStringRef::operator !=	spdlog/fmt/bundled/format.h	/^    friend bool operator!=(BasicStringRef lhs, BasicStringRef rhs)$/;"	f	class:fmt::BasicStringRef	access:friend	signature:(BasicStringRef lhs, BasicStringRef rhs)
fmt::BasicStringRef::operator <	spdlog/fmt/bundled/format.h	/^    friend bool operator<(BasicStringRef lhs, BasicStringRef rhs)$/;"	f	class:fmt::BasicStringRef	access:friend	signature:(BasicStringRef lhs, BasicStringRef rhs)
fmt::BasicStringRef::operator <=	spdlog/fmt/bundled/format.h	/^    friend bool operator<=(BasicStringRef lhs, BasicStringRef rhs)$/;"	f	class:fmt::BasicStringRef	access:friend	signature:(BasicStringRef lhs, BasicStringRef rhs)
fmt::BasicStringRef::operator ==	spdlog/fmt/bundled/format.h	/^    friend bool operator==(BasicStringRef lhs, BasicStringRef rhs)$/;"	f	class:fmt::BasicStringRef	access:friend	signature:(BasicStringRef lhs, BasicStringRef rhs)
fmt::BasicStringRef::operator >	spdlog/fmt/bundled/format.h	/^    friend bool operator>(BasicStringRef lhs, BasicStringRef rhs)$/;"	f	class:fmt::BasicStringRef	access:friend	signature:(BasicStringRef lhs, BasicStringRef rhs)
fmt::BasicStringRef::operator >=	spdlog/fmt/bundled/format.h	/^    friend bool operator>=(BasicStringRef lhs, BasicStringRef rhs)$/;"	f	class:fmt::BasicStringRef	access:friend	signature:(BasicStringRef lhs, BasicStringRef rhs)
fmt::BasicStringRef::size	spdlog/fmt/bundled/format.h	/^    std::size_t size() const$/;"	f	class:fmt::BasicStringRef	access:public	signature:() const
fmt::BasicStringRef::size_	spdlog/fmt/bundled/format.h	/^    std::size_t size_;$/;"	m	class:fmt::BasicStringRef	access:private
fmt::BasicStringRef::to_string	spdlog/fmt/bundled/format.h	/^    std::basic_string<Char> to_string() const$/;"	f	class:fmt::BasicStringRef	access:public	signature:() const
fmt::Buffer	spdlog/fmt/bundled/format.h	/^class Buffer$/;"	c	namespace:fmt
fmt::Buffer::Buffer	spdlog/fmt/bundled/format.h	/^    Buffer(T *ptr = FMT_NULL, std::size_t capacity = 0)$/;"	f	class:fmt::Buffer	access:protected	signature:(T *ptr = FMT_NULL, std::size_t capacity = 0)
fmt::Buffer::FMT_DISALLOW_COPY_AND_ASSIGN	spdlog/fmt/bundled/format.h	/^    FMT_DISALLOW_COPY_AND_ASSIGN(Buffer);$/;"	p	class:fmt::Buffer	access:private	signature:(Buffer)
fmt::Buffer::append	spdlog/fmt/bundled/format.h	/^    void append(const U *begin, const U *end);$/;"	p	class:fmt::Buffer	access:public	signature:(const U *begin, const U *end)
fmt::Buffer::append	spdlog/fmt/bundled/format.h	/^void Buffer<T>::append(const U *begin, const U *end)$/;"	f	class:fmt::Buffer	signature:(const U *begin, const U *end)
fmt::Buffer::capacity	spdlog/fmt/bundled/format.h	/^    std::size_t capacity() const$/;"	f	class:fmt::Buffer	access:public	signature:() const
fmt::Buffer::capacity_	spdlog/fmt/bundled/format.h	/^    std::size_t capacity_;$/;"	m	class:fmt::Buffer	access:protected
fmt::Buffer::grow	spdlog/fmt/bundled/format.h	/^    virtual void grow(std::size_t size) = 0;$/;"	p	class:fmt::Buffer	access:protected	signature:(std::size_t size)
fmt::Buffer::operator []	spdlog/fmt/bundled/format.h	/^    T &operator[](std::size_t index)$/;"	f	class:fmt::Buffer	access:public	signature:(std::size_t index)
fmt::Buffer::operator []	spdlog/fmt/bundled/format.h	/^    const T &operator[](std::size_t index) const$/;"	f	class:fmt::Buffer	access:public	signature:(std::size_t index) const
fmt::Buffer::ptr_	spdlog/fmt/bundled/format.h	/^    T *ptr_;$/;"	m	class:fmt::Buffer	access:protected
fmt::Buffer::push_back	spdlog/fmt/bundled/format.h	/^    void push_back(const T &value)$/;"	f	class:fmt::Buffer	access:public	signature:(const T &value)
fmt::Buffer::reserve	spdlog/fmt/bundled/format.h	/^    void reserve(std::size_t capacity)$/;"	f	class:fmt::Buffer	access:public	signature:(std::size_t capacity)
fmt::Buffer::resize	spdlog/fmt/bundled/format.h	/^    void resize(std::size_t new_size)$/;"	f	class:fmt::Buffer	access:public	signature:(std::size_t new_size)
fmt::Buffer::size	spdlog/fmt/bundled/format.h	/^    std::size_t size() const$/;"	f	class:fmt::Buffer	access:public	signature:() const
fmt::Buffer::size_	spdlog/fmt/bundled/format.h	/^    std::size_t size_;$/;"	m	class:fmt::Buffer	access:protected
fmt::Buffer::~Buffer	spdlog/fmt/bundled/format.h	/^    virtual ~Buffer()$/;"	f	class:fmt::Buffer	access:public	signature:()
fmt::CHAR_FLAG	spdlog/fmt/bundled/format.h	/^    CHAR_FLAG = 0x10  \/\/ Argument has char type - used in error reporting.$/;"	e	enum:fmt::__anon29
fmt::CStringRef	spdlog/fmt/bundled/format.h	/^typedef BasicCStringRef<char> CStringRef;$/;"	t	namespace:fmt
fmt::EmptySpec	spdlog/fmt/bundled/format.h	/^struct EmptySpec$/;"	s	namespace:fmt
fmt::FMT_GEN15	spdlog/fmt/bundled/format.h	/^inline uint64_t make_type(FMT_GEN15(FMT_ARG_TYPE_DEFAULT))$/;"	f	namespace:fmt	signature:(FMT_ARG_TYPE_DEFAULT)
fmt::FormatError	spdlog/fmt/bundled/format.h	/^class FormatError: public std::runtime_error$/;"	c	namespace:fmt	inherits:std::runtime_error
fmt::FormatError::FMT_DTOR_NOEXCEPT	spdlog/fmt/bundled/format.h	/^    ~FormatError() FMT_DTOR_NOEXCEPT;$/;"	m	class:fmt::FormatError	access:public
fmt::FormatError::FormatError	spdlog/fmt/bundled/format.h	/^    FormatError(const FormatError &ferr): std::runtime_error(ferr)$/;"	f	class:fmt::FormatError	access:public	signature:(const FormatError &ferr)
fmt::FormatError::FormatError	spdlog/fmt/bundled/format.h	/^    explicit FormatError(CStringRef message)$/;"	f	class:fmt::FormatError	access:public	signature:(CStringRef message)
fmt::FormatSpec	spdlog/fmt/bundled/format.h	/^struct FormatSpec: AlignSpec$/;"	s	namespace:fmt	inherits:AlignSpec
fmt::FormatSpec::FormatSpec	spdlog/fmt/bundled/format.h	/^    FormatSpec($/;"	f	struct:fmt::FormatSpec	access:public	signature:( unsigned width = 0, char type = 0, wchar_t fill = Ã)
fmt::FormatSpec::flag	spdlog/fmt/bundled/format.h	/^    bool flag(unsigned f) const$/;"	f	struct:fmt::FormatSpec	access:public	signature:(unsigned f) const
fmt::FormatSpec::flags_	spdlog/fmt/bundled/format.h	/^    unsigned flags_;$/;"	m	struct:fmt::FormatSpec	access:public
fmt::FormatSpec::precision	spdlog/fmt/bundled/format.h	/^    int precision() const$/;"	f	struct:fmt::FormatSpec	access:public	signature:() const
fmt::FormatSpec::precision_	spdlog/fmt/bundled/format.h	/^    int precision_;$/;"	m	struct:fmt::FormatSpec	access:public
fmt::FormatSpec::type	spdlog/fmt/bundled/format.h	/^    char type() const$/;"	f	struct:fmt::FormatSpec	access:public	signature:() const
fmt::FormatSpec::type_	spdlog/fmt/bundled/format.h	/^    char type_;$/;"	m	struct:fmt::FormatSpec	access:public
fmt::HASH_FLAG	spdlog/fmt/bundled/format.h	/^    SIGN_FLAG = 1, PLUS_FLAG = 2, MINUS_FLAG = 4, HASH_FLAG = 8,$/;"	e	enum:fmt::__anon29
fmt::IntFormatSpec	spdlog/fmt/bundled/format.h	/^class IntFormatSpec: public SpecT$/;"	c	namespace:fmt	inherits:SpecT
fmt::IntFormatSpec::IntFormatSpec	spdlog/fmt/bundled/format.h	/^    IntFormatSpec(T val, const SpecT &spec = SpecT())$/;"	f	class:fmt::IntFormatSpec	access:public	signature:(T val, const SpecT &spec = SpecT())
fmt::IntFormatSpec::value	spdlog/fmt/bundled/format.h	/^    T value() const$/;"	f	class:fmt::IntFormatSpec	access:public	signature:() const
fmt::IntFormatSpec::value_	spdlog/fmt/bundled/format.h	/^    T value_;$/;"	m	class:fmt::IntFormatSpec	access:private
fmt::LongLong	spdlog/fmt/bundled/format.h	/^FMT_GCC_EXTENSION typedef long long LongLong;$/;"	t	namespace:fmt
fmt::MINUS_FLAG	spdlog/fmt/bundled/format.h	/^    SIGN_FLAG = 1, PLUS_FLAG = 2, MINUS_FLAG = 4, HASH_FLAG = 8,$/;"	e	enum:fmt::__anon29
fmt::PLUS_FLAG	spdlog/fmt/bundled/format.h	/^    SIGN_FLAG = 1, PLUS_FLAG = 2, MINUS_FLAG = 4, HASH_FLAG = 8,$/;"	e	enum:fmt::__anon29
fmt::PrintfArgFormatter	spdlog/fmt/bundled/printf.h	/^class PrintfArgFormatter$/;"	c	namespace:fmt	inherits:BasicPrintfArgFormatter
fmt::PrintfArgFormatter::PrintfArgFormatter	spdlog/fmt/bundled/printf.h	/^    PrintfArgFormatter(BasicWriter<Char> &w, FormatSpec &s)$/;"	f	class:fmt::PrintfArgFormatter	access:public	signature:(BasicWriter<Char> &w, FormatSpec &s)
fmt::PrintfFormatter	spdlog/fmt/bundled/printf.h	/^class PrintfFormatter: private internal::FormatterBase$/;"	c	namespace:fmt	inherits:internal::FormatterBase
fmt::PrintfFormatter::PrintfFormatter	spdlog/fmt/bundled/printf.h	/^    explicit PrintfFormatter(const ArgList &al, BasicWriter<Char> &w)$/;"	f	class:fmt::PrintfFormatter	access:public	signature:(const ArgList &al, BasicWriter<Char> &w)
fmt::PrintfFormatter::format	spdlog/fmt/bundled/printf.h	/^    FMT_API void format(BasicCStringRef<Char> format_str);$/;"	p	class:fmt::PrintfFormatter	access:public	signature:(BasicCStringRef<Char> format_str)
fmt::PrintfFormatter::format	spdlog/fmt/bundled/printf.h	/^void PrintfFormatter<Char, AF>::format(BasicCStringRef<Char> format_str)$/;"	f	class:fmt::PrintfFormatter	signature:(BasicCStringRef<Char> format_str)
fmt::PrintfFormatter::get_arg	spdlog/fmt/bundled/printf.h	/^    internal::Arg get_arg($/;"	p	class:fmt::PrintfFormatter	access:private	signature:( const Char *s, unsigned arg_index = (std::numeric_limits<unsigned>::max)())
fmt::PrintfFormatter::get_arg	spdlog/fmt/bundled/printf.h	/^internal::Arg PrintfFormatter<Char, AF>::get_arg(const Char *s,$/;"	f	class:fmt::PrintfFormatter	signature:(const Char *s, unsigned arg_index)
fmt::PrintfFormatter::parse_flags	spdlog/fmt/bundled/printf.h	/^    void parse_flags(FormatSpec &spec, const Char *&s);$/;"	p	class:fmt::PrintfFormatter	access:private	signature:(FormatSpec &spec, const Char *&s)
fmt::PrintfFormatter::parse_flags	spdlog/fmt/bundled/printf.h	/^void PrintfFormatter<Char, AF>::parse_flags(FormatSpec &spec, const Char *&s)$/;"	f	class:fmt::PrintfFormatter	signature:(FormatSpec &spec, const Char *&s)
fmt::PrintfFormatter::parse_header	spdlog/fmt/bundled/printf.h	/^    unsigned parse_header(const Char *&s, FormatSpec &spec);$/;"	p	class:fmt::PrintfFormatter	access:private	signature:(const Char *&s, FormatSpec &spec)
fmt::PrintfFormatter::parse_header	spdlog/fmt/bundled/printf.h	/^unsigned PrintfFormatter<Char, AF>::parse_header($/;"	f	class:fmt::PrintfFormatter	signature:( const Char *&s, FormatSpec &spec)
fmt::PrintfFormatter::writer_	spdlog/fmt/bundled/printf.h	/^    BasicWriter<Char> &writer_;$/;"	m	class:fmt::PrintfFormatter	access:private
fmt::SIGN_FLAG	spdlog/fmt/bundled/format.h	/^    SIGN_FLAG = 1, PLUS_FLAG = 2, MINUS_FLAG = 4, HASH_FLAG = 8,$/;"	e	enum:fmt::__anon29
fmt::StrFormatSpec	spdlog/fmt/bundled/format.h	/^class StrFormatSpec: public AlignSpec$/;"	c	namespace:fmt	inherits:AlignSpec
fmt::StrFormatSpec::StrFormatSpec	spdlog/fmt/bundled/format.h	/^    StrFormatSpec(const Char *str, unsigned width, FillChar fill)$/;"	f	class:fmt::StrFormatSpec	access:public	signature:(const Char *str, unsigned width, FillChar fill)
fmt::StrFormatSpec::str	spdlog/fmt/bundled/format.h	/^    const Char *str() const$/;"	f	class:fmt::StrFormatSpec	access:public	signature:() const
fmt::StrFormatSpec::str_	spdlog/fmt/bundled/format.h	/^    const Char *str_;$/;"	m	class:fmt::StrFormatSpec	access:private
fmt::StringRef	spdlog/fmt/bundled/format.h	/^typedef BasicStringRef<char> StringRef;$/;"	t	namespace:fmt
fmt::SystemError::init	spdlog/fmt/bundled/format.cc	/^	FMT_FUNC void SystemError::init($/;"	f	class:fmt::SystemError	signature:( int err_code, CStringRef format_str, ArgList args)
fmt::TypeSpec	spdlog/fmt/bundled/format.h	/^struct TypeSpec: EmptySpec$/;"	s	namespace:fmt	inherits:EmptySpec
fmt::TypeSpec::align	spdlog/fmt/bundled/format.h	/^    Alignment align() const$/;"	f	struct:fmt::TypeSpec	access:public	signature:() const
fmt::TypeSpec::fill	spdlog/fmt/bundled/format.h	/^    char fill() const$/;"	f	struct:fmt::TypeSpec	access:public	signature:() const
fmt::TypeSpec::flag	spdlog/fmt/bundled/format.h	/^    bool flag(unsigned) const$/;"	f	struct:fmt::TypeSpec	access:public	signature:(unsigned) const
fmt::TypeSpec::precision	spdlog/fmt/bundled/format.h	/^    int precision() const$/;"	f	struct:fmt::TypeSpec	access:public	signature:() const
fmt::TypeSpec::type	spdlog/fmt/bundled/format.h	/^    char type() const$/;"	f	struct:fmt::TypeSpec	access:public	signature:() const
fmt::TypeSpec::width	spdlog/fmt/bundled/format.h	/^    unsigned width() const$/;"	f	struct:fmt::TypeSpec	access:public	signature:() const
fmt::ULongLong	spdlog/fmt/bundled/format.h	/^FMT_GCC_EXTENSION typedef unsigned long long ULongLong;$/;"	t	namespace:fmt
fmt::WCStringRef	spdlog/fmt/bundled/format.h	/^typedef BasicCStringRef<wchar_t> WCStringRef;$/;"	t	namespace:fmt
fmt::WStringRef	spdlog/fmt/bundled/format.h	/^typedef BasicStringRef<wchar_t> WStringRef;$/;"	t	namespace:fmt
fmt::WWriter	spdlog/fmt/bundled/format.h	/^typedef BasicWriter<wchar_t> WWriter;$/;"	t	namespace:fmt
fmt::WidthSpec	spdlog/fmt/bundled/format.h	/^struct WidthSpec$/;"	s	namespace:fmt
fmt::WidthSpec::WidthSpec	spdlog/fmt/bundled/format.h	/^    WidthSpec(unsigned width, wchar_t fill): width_(width), fill_(fill)$/;"	f	struct:fmt::WidthSpec	access:public	signature:(unsigned width, wchar_t fill)
fmt::WidthSpec::fill	spdlog/fmt/bundled/format.h	/^    wchar_t fill() const$/;"	f	struct:fmt::WidthSpec	access:public	signature:() const
fmt::WidthSpec::fill_	spdlog/fmt/bundled/format.h	/^    wchar_t fill_;$/;"	m	struct:fmt::WidthSpec	access:public
fmt::WidthSpec::width	spdlog/fmt/bundled/format.h	/^    unsigned width() const$/;"	f	struct:fmt::WidthSpec	access:public	signature:() const
fmt::WidthSpec::width_	spdlog/fmt/bundled/format.h	/^    unsigned width_;$/;"	m	struct:fmt::WidthSpec	access:public
fmt::WindowsError::init	spdlog/fmt/bundled/format.cc	/^	FMT_FUNC void WindowsError::init($/;"	f	class:fmt::WindowsError	signature:( int err_code, CStringRef format_str, ArgList args)
fmt::Writer	spdlog/fmt/bundled/format.h	/^typedef BasicWriter<char> Writer;$/;"	t	namespace:fmt
fmt::__anon2::FormatFunc	spdlog/fmt/bundled/format.cc	/^		typedef void(*FormatFunc)(Writer &, int, StringRef);$/;"	t	namespace:fmt::__anon2	file:
fmt::__anon2::RESET_COLOR	spdlog/fmt/bundled/format.cc	/^		const char RESET_COLOR[] = "\\x1b[0m";$/;"	m	namespace:fmt::__anon2	file:
fmt::bin	spdlog/fmt/bundled/format.h	/^IntFormatSpec<int, TypeSpec<'b'> > bin(int value);$/;"	p	namespace:fmt	signature:(int value)
fmt::format_arg	spdlog/fmt/bundled/ostream.h	/^void format_arg(BasicFormatter<Char, ArgFormatter> &f,$/;"	f	namespace:fmt	signature:(BasicFormatter<Char, ArgFormatter> &f, const Char *&format_str, const T &value)
fmt::fprintf	spdlog/fmt/bundled/printf.h	/^FMT_API int fprintf(std::FILE *f, CStringRef format, ArgList args);$/;"	p	namespace:fmt	signature:(std::FILE *f, CStringRef format, ArgList args)
fmt::fprintf	spdlog/fmt/bundled/printf.h	/^inline int fprintf(std::ostream &os, CStringRef format_str, ArgList args)$/;"	f	namespace:fmt	signature:(std::ostream &os, CStringRef format_str, ArgList args)
fmt::hex	spdlog/fmt/bundled/format.h	/^IntFormatSpec<int, TypeSpec<'x'> > hex(int value);$/;"	p	namespace:fmt	signature:(int value)
fmt::hexu	spdlog/fmt/bundled/format.h	/^IntFormatSpec<int, TypeSpec<'X'> > hexu(int value);$/;"	p	namespace:fmt	signature:(int value)
fmt::internal	spdlog/fmt/bundled/format.cc	/^	namespace internal {$/;"	n	namespace:fmt	file:
fmt::internal	spdlog/fmt/bundled/format.h	/^namespace internal$/;"	n	namespace:fmt
fmt::internal	spdlog/fmt/bundled/ostream.cc	/^	namespace internal {$/;"	n	namespace:fmt	file:
fmt::internal	spdlog/fmt/bundled/ostream.h	/^namespace internal$/;"	n	namespace:fmt
fmt::internal	spdlog/fmt/bundled/printf.h	/^namespace internal$/;"	n	namespace:fmt
fmt::internal::Arg	spdlog/fmt/bundled/format.h	/^struct Arg: Value$/;"	s	namespace:fmt::internal	inherits:Value
fmt::internal::Arg::type	spdlog/fmt/bundled/format.h	/^    Type type;$/;"	m	struct:fmt::internal::Arg	access:public
fmt::internal::ArgConverter	spdlog/fmt/bundled/printf.h	/^class ArgConverter: public ArgVisitor<ArgConverter<T>, void>$/;"	c	namespace:fmt::internal	inherits:ArgVisitor
fmt::internal::ArgConverter::ArgConverter	spdlog/fmt/bundled/printf.h	/^    ArgConverter(internal::Arg &arg, wchar_t type)$/;"	f	class:fmt::internal::ArgConverter	access:public	signature:(internal::Arg &arg, wchar_t type)
fmt::internal::ArgConverter::FMT_DISALLOW_COPY_AND_ASSIGN	spdlog/fmt/bundled/printf.h	/^    FMT_DISALLOW_COPY_AND_ASSIGN(ArgConverter);$/;"	p	class:fmt::internal::ArgConverter	access:private	signature:(ArgConverter)
fmt::internal::ArgConverter::arg_	spdlog/fmt/bundled/printf.h	/^    internal::Arg &arg_;$/;"	m	class:fmt::internal::ArgConverter	access:private
fmt::internal::ArgConverter::type_	spdlog/fmt/bundled/printf.h	/^    wchar_t type_;$/;"	m	class:fmt::internal::ArgConverter	access:private
fmt::internal::ArgConverter::visit_any_int	spdlog/fmt/bundled/printf.h	/^    void visit_any_int(U value)$/;"	f	class:fmt::internal::ArgConverter	access:public	signature:(U value)
fmt::internal::ArgConverter::visit_bool	spdlog/fmt/bundled/printf.h	/^    void visit_bool(bool value)$/;"	f	class:fmt::internal::ArgConverter	access:public	signature:(bool value)
fmt::internal::ArgFormatterBase	spdlog/fmt/bundled/format.h	/^class ArgFormatterBase: public ArgVisitor<Impl, void>$/;"	c	namespace:fmt::internal	inherits:ArgVisitor
fmt::internal::ArgFormatterBase::ArgFormatterBase	spdlog/fmt/bundled/format.h	/^    ArgFormatterBase(BasicWriter<Char> &w, FormatSpec &s)$/;"	f	class:fmt::internal::ArgFormatterBase	access:public	signature:(BasicWriter<Char> &w, FormatSpec &s)
fmt::internal::ArgFormatterBase::FMT_DISALLOW_COPY_AND_ASSIGN	spdlog/fmt/bundled/format.h	/^    FMT_DISALLOW_COPY_AND_ASSIGN(ArgFormatterBase);$/;"	p	class:fmt::internal::ArgFormatterBase	access:private	signature:(ArgFormatterBase)
fmt::internal::ArgFormatterBase::spec	spdlog/fmt/bundled/format.h	/^    FormatSpec &spec()$/;"	f	class:fmt::internal::ArgFormatterBase	access:protected	signature:()
fmt::internal::ArgFormatterBase::spec_	spdlog/fmt/bundled/format.h	/^    FormatSpec &spec_;$/;"	m	class:fmt::internal::ArgFormatterBase	access:private
fmt::internal::ArgFormatterBase::visit_any_double	spdlog/fmt/bundled/format.h	/^    void visit_any_double(T value)$/;"	f	class:fmt::internal::ArgFormatterBase	access:public	signature:(T value)
fmt::internal::ArgFormatterBase::visit_any_int	spdlog/fmt/bundled/format.h	/^    void visit_any_int(T value)$/;"	f	class:fmt::internal::ArgFormatterBase	access:public	signature:(T value)
fmt::internal::ArgFormatterBase::visit_bool	spdlog/fmt/bundled/format.h	/^    void visit_bool(bool value)$/;"	f	class:fmt::internal::ArgFormatterBase	access:public	signature:(bool value)
fmt::internal::ArgFormatterBase::visit_char	spdlog/fmt/bundled/format.h	/^    void visit_char(int value)$/;"	f	class:fmt::internal::ArgFormatterBase	access:public	signature:(int value)
fmt::internal::ArgFormatterBase::visit_cstring	spdlog/fmt/bundled/format.h	/^    void visit_cstring(const char *value)$/;"	f	class:fmt::internal::ArgFormatterBase	access:public	signature:(const char *value)
fmt::internal::ArgFormatterBase::visit_pointer	spdlog/fmt/bundled/format.h	/^    void visit_pointer(const void *value)$/;"	f	class:fmt::internal::ArgFormatterBase	access:public	signature:(const void *value)
fmt::internal::ArgFormatterBase::visit_string	spdlog/fmt/bundled/format.h	/^    void visit_string(Arg::StringValue<char> value)$/;"	f	class:fmt::internal::ArgFormatterBase	access:public	signature:(Arg::StringValue<char> value)
fmt::internal::ArgFormatterBase::visit_wstring	spdlog/fmt/bundled/format.h	/^    void visit_wstring(Arg::StringValue<Char> value)$/;"	f	class:fmt::internal::ArgFormatterBase	access:public	signature:(Arg::StringValue<Char> value)
fmt::internal::ArgFormatterBase::write	spdlog/fmt/bundled/format.h	/^    void write(bool value)$/;"	f	class:fmt::internal::ArgFormatterBase	access:protected	signature:(bool value)
fmt::internal::ArgFormatterBase::write	spdlog/fmt/bundled/format.h	/^    void write(const char *value)$/;"	f	class:fmt::internal::ArgFormatterBase	access:protected	signature:(const char *value)
fmt::internal::ArgFormatterBase::write_pointer	spdlog/fmt/bundled/format.h	/^    void write_pointer(const void *p)$/;"	f	class:fmt::internal::ArgFormatterBase	access:private	signature:(const void *p)
fmt::internal::ArgFormatterBase::writer	spdlog/fmt/bundled/format.h	/^    BasicWriter<Char> &writer()$/;"	f	class:fmt::internal::ArgFormatterBase	access:protected	signature:()
fmt::internal::ArgFormatterBase::writer_	spdlog/fmt/bundled/format.h	/^    BasicWriter<Char> &writer_;$/;"	m	class:fmt::internal::ArgFormatterBase	access:private
fmt::internal::ArgMap	spdlog/fmt/bundled/format.h	/^class ArgMap$/;"	c	namespace:fmt::internal
fmt::internal::ArgMap::MapType	spdlog/fmt/bundled/format.h	/^    std::pair<fmt::BasicStringRef<Char>, internal::Arg> > MapType;$/;"	t	class:fmt::internal::ArgMap	access:private
fmt::internal::ArgMap::Pair	spdlog/fmt/bundled/format.h	/^    typedef typename MapType::value_type Pair;$/;"	t	class:fmt::internal::ArgMap	access:private
fmt::internal::ArgMap::find	spdlog/fmt/bundled/format.h	/^    const internal::Arg *find(const fmt::BasicStringRef<Char> &name) const$/;"	f	class:fmt::internal::ArgMap	access:public	signature:(const fmt::BasicStringRef<Char> &name) const
fmt::internal::ArgMap::init	spdlog/fmt/bundled/format.cc	/^	template void internal::ArgMap<char>::init(const ArgList &args);$/;"	p	class:fmt::internal::ArgMap	file:	signature:(const ArgList &args)
fmt::internal::ArgMap::init	spdlog/fmt/bundled/format.cc	/^	template void internal::ArgMap<wchar_t>::init(const ArgList &args);$/;"	p	class:fmt::internal::ArgMap	file:	signature:(const ArgList &args)
fmt::internal::ArgMap::init	spdlog/fmt/bundled/format.cc	/^	void internal::ArgMap<Char>::init(const ArgList &args)$/;"	f	class:fmt::internal::ArgMap	signature:(const ArgList &args)
fmt::internal::ArgMap::init	spdlog/fmt/bundled/format.h	/^    FMT_API void init(const ArgList &args);$/;"	p	class:fmt::internal::ArgMap	access:public	signature:(const ArgList &args)
fmt::internal::ArgMap::map_	spdlog/fmt/bundled/format.h	/^    MapType map_;$/;"	m	class:fmt::internal::ArgMap	access:private
fmt::internal::BasicCharTraits	spdlog/fmt/bundled/format.h	/^class BasicCharTraits$/;"	c	namespace:fmt::internal
fmt::internal::BasicCharTraits::CharPtr	spdlog/fmt/bundled/format.h	/^    typedef stdext::checked_array_iterator<Char*> CharPtr;$/;"	t	class:fmt::internal::BasicCharTraits	access:public
fmt::internal::BasicCharTraits::cast	spdlog/fmt/bundled/format.h	/^    static Char cast(int value)$/;"	f	class:fmt::internal::BasicCharTraits	access:public	signature:(int value)
fmt::internal::BasicData	spdlog/fmt/bundled/format.cc	/^	template struct internal::BasicData<void>;$/;"	m	class:fmt::internal	typeref:struct:fmt::internal::	file:
fmt::internal::BasicData::DIGITS	spdlog/fmt/bundled/format.cc	/^	const char internal::BasicData<T>::DIGITS[] =$/;"	m	class:fmt::internal::BasicData	file:
fmt::internal::BasicData::POWERS_OF_10_32	spdlog/fmt/bundled/format.cc	/^	const uint32_t internal::BasicData<T>::POWERS_OF_10_32[] = {$/;"	m	class:fmt::internal::BasicData	file:
fmt::internal::BasicData::POWERS_OF_10_64	spdlog/fmt/bundled/format.cc	/^	const uint64_t internal::BasicData<T>::POWERS_OF_10_64[] = {$/;"	m	class:fmt::internal::BasicData	file:
fmt::internal::CharConverter	spdlog/fmt/bundled/printf.h	/^class CharConverter: public ArgVisitor<CharConverter, void>$/;"	c	namespace:fmt::internal	inherits:ArgVisitor
fmt::internal::CharConverter::CharConverter	spdlog/fmt/bundled/printf.h	/^    explicit CharConverter(internal::Arg &arg): arg_(arg)$/;"	f	class:fmt::internal::CharConverter	access:public	signature:(internal::Arg &arg)
fmt::internal::CharConverter::FMT_DISALLOW_COPY_AND_ASSIGN	spdlog/fmt/bundled/printf.h	/^    FMT_DISALLOW_COPY_AND_ASSIGN(CharConverter);$/;"	p	class:fmt::internal::CharConverter	access:private	signature:(CharConverter)
fmt::internal::CharConverter::arg_	spdlog/fmt/bundled/printf.h	/^    internal::Arg &arg_;$/;"	m	class:fmt::internal::CharConverter	access:private
fmt::internal::CharConverter::visit_any_int	spdlog/fmt/bundled/printf.h	/^    void visit_any_int(T value)$/;"	f	class:fmt::internal::CharConverter	access:public	signature:(T value)
fmt::internal::CharTraits	spdlog/fmt/bundled/format.h	/^class CharTraits<char>: public BasicCharTraits<char>$/;"	c	namespace:fmt::internal	inherits:BasicCharTraits
fmt::internal::CharTraits	spdlog/fmt/bundled/format.h	/^class CharTraits<wchar_t>: public BasicCharTraits<wchar_t>$/;"	c	namespace:fmt::internal	inherits:BasicCharTraits
fmt::internal::CharTraits::convert	spdlog/fmt/bundled/format.h	/^    static char convert(char value)$/;"	f	class:fmt::internal::CharTraits	access:public	signature:(char value)
fmt::internal::CharTraits::convert	spdlog/fmt/bundled/format.h	/^    static char convert(wchar_t);$/;"	p	class:fmt::internal::CharTraits	access:private	signature:(wchar_t)
fmt::internal::CharTraits::convert	spdlog/fmt/bundled/format.h	/^    static wchar_t convert(char value)$/;"	f	class:fmt::internal::CharTraits	access:public	signature:(char value)
fmt::internal::CharTraits::convert	spdlog/fmt/bundled/format.h	/^    static wchar_t convert(wchar_t value)$/;"	f	class:fmt::internal::CharTraits	access:public	signature:(wchar_t value)
fmt::internal::CharTraits::format_float	spdlog/fmt/bundled/format.cc	/^	int internal::CharTraits<char>::format_float($/;"	f	class:fmt::internal::CharTraits	signature:( char *buffer, std::size_t size, const char *format, unsigned width, int precision, T value)
fmt::internal::CharTraits::format_float	spdlog/fmt/bundled/format.cc	/^	int internal::CharTraits<wchar_t>::format_float($/;"	f	class:fmt::internal::CharTraits	signature:( wchar_t *buffer, std::size_t size, const wchar_t *format, unsigned width, int precision, T value)
fmt::internal::CharTraits::format_float	spdlog/fmt/bundled/format.cc	/^	template int internal::CharTraits<char>::format_float($/;"	p	class:fmt::internal::CharTraits	file:	signature:( char *buffer, std::size_t size, const char *format, unsigned width, int precision, double value)
fmt::internal::CharTraits::format_float	spdlog/fmt/bundled/format.cc	/^	template int internal::CharTraits<char>::format_float($/;"	p	class:fmt::internal::CharTraits	file:	signature:( char *buffer, std::size_t size, const char *format, unsigned width, int precision, long double value)
fmt::internal::CharTraits::format_float	spdlog/fmt/bundled/format.cc	/^	template int internal::CharTraits<wchar_t>::format_float($/;"	p	class:fmt::internal::CharTraits	file:	signature:( wchar_t *buffer, std::size_t size, const wchar_t *format, unsigned width, int precision, double value)
fmt::internal::CharTraits::format_float	spdlog/fmt/bundled/format.cc	/^	template int internal::CharTraits<wchar_t>::format_float($/;"	p	class:fmt::internal::CharTraits	file:	signature:( wchar_t *buffer, std::size_t size, const wchar_t *format, unsigned width, int precision, long double value)
fmt::internal::CharTraits::format_float	spdlog/fmt/bundled/format.h	/^    FMT_API static int format_float(char *buffer, std::size_t size,$/;"	p	class:fmt::internal::CharTraits	access:public	signature:(char *buffer, std::size_t size, const char *format, unsigned width, int precision, T value)
fmt::internal::CharTraits::format_float	spdlog/fmt/bundled/format.h	/^    FMT_API static int format_float(wchar_t *buffer, std::size_t size,$/;"	p	class:fmt::internal::CharTraits	access:public	signature:(wchar_t *buffer, std::size_t size, const wchar_t *format, unsigned width, int precision, T value)
fmt::internal::CharTraits::format_float	spdlog/fmt/bundled/format.h	/^extern template int CharTraits<char>::format_float<double>$/;"	p	class:fmt::internal::CharTraits	signature:(char *buffer, std::size_t size, const char* format, unsigned width, int precision, double value)
fmt::internal::CharTraits::format_float	spdlog/fmt/bundled/format.h	/^extern template int CharTraits<char>::format_float<long double>$/;"	p	class:fmt::internal::CharTraits	signature:(char *buffer, std::size_t size, const char* format, unsigned width, int precision, long double value)
fmt::internal::CharTraits::format_float	spdlog/fmt/bundled/format.h	/^extern template int CharTraits<wchar_t>::format_float<double>$/;"	p	class:fmt::internal::CharTraits	signature:(wchar_t *buffer, std::size_t size, const wchar_t* format, unsigned width, int precision, double value)
fmt::internal::CharTraits::format_float	spdlog/fmt/bundled/format.h	/^extern template int CharTraits<wchar_t>::format_float<long double>$/;"	p	class:fmt::internal::CharTraits	signature:(wchar_t *buffer, std::size_t size, const wchar_t* format, unsigned width, int precision, long double value)
fmt::internal::Conditional	spdlog/fmt/bundled/format.h	/^struct Conditional$/;"	s	namespace:fmt::internal
fmt::internal::Conditional	spdlog/fmt/bundled/format.h	/^struct Conditional<false, T, F>$/;"	s	namespace:fmt::internal
fmt::internal::Conditional::type	spdlog/fmt/bundled/format.h	/^    typedef F type;$/;"	t	struct:fmt::internal::Conditional	access:public
fmt::internal::Conditional::type	spdlog/fmt/bundled/format.h	/^    typedef T type;$/;"	t	struct:fmt::internal::Conditional	access:public
fmt::internal::ConvertToInt	spdlog/fmt/bundled/format.h	/^struct ConvertToInt$/;"	s	namespace:fmt::internal
fmt::internal::ConvertToInt::enable_conversion	spdlog/fmt/bundled/format.h	/^        enable_conversion = sizeof(fmt::internal::convert(get<T>())) == sizeof(Yes)$/;"	e	enum:fmt::internal::ConvertToInt::__anon22
fmt::internal::ConvertToInt::value	spdlog/fmt/bundled/format.h	/^        value = ConvertToIntImpl2<T, enable_conversion>::value$/;"	e	enum:fmt::internal::ConvertToInt::__anon23
fmt::internal::ConvertToIntImpl	spdlog/fmt/bundled/format.h	/^struct ConvertToIntImpl$/;"	s	namespace:fmt::internal
fmt::internal::ConvertToIntImpl	spdlog/fmt/bundled/ostream.h	/^struct ConvertToIntImpl<T, true>$/;"	s	namespace:fmt::internal
fmt::internal::ConvertToIntImpl2	spdlog/fmt/bundled/format.h	/^struct ConvertToIntImpl2$/;"	s	namespace:fmt::internal
fmt::internal::ConvertToIntImpl2	spdlog/fmt/bundled/format.h	/^struct ConvertToIntImpl2<T, true>$/;"	s	namespace:fmt::internal
fmt::internal::ConvertToIntImpl2::value	spdlog/fmt/bundled/format.h	/^        value = ConvertToIntImpl<T, !std::numeric_limits<T>::is_specialized>::value$/;"	e	enum:fmt::internal::ConvertToIntImpl2::__anon21
fmt::internal::ConvertToIntImpl2::value	spdlog/fmt/bundled/format.h	/^        value = false$/;"	e	enum:fmt::internal::ConvertToIntImpl2::__anon20
fmt::internal::ConvertToIntImpl::value	spdlog/fmt/bundled/format.h	/^        value = ENABLE_CONVERSION$/;"	e	enum:fmt::internal::ConvertToIntImpl::__anon19
fmt::internal::ConvertToIntImpl::value	spdlog/fmt/bundled/ostream.h	/^        value = sizeof(convert(get<DummyStream>() << get<T>())) == sizeof(No)$/;"	e	enum:fmt::internal::ConvertToIntImpl::__anon33
fmt::internal::DummyInt	spdlog/fmt/bundled/format.h	/^struct DummyInt$/;"	s	namespace:fmt::internal
fmt::internal::DummyInt::data	spdlog/fmt/bundled/format.h	/^    int data[2];$/;"	m	struct:fmt::internal::DummyInt	access:public
fmt::internal::DummyInt::operator int	spdlog/fmt/bundled/format.h	/^    operator int() const$/;"	f	struct:fmt::internal::DummyInt	access:public	signature:() const
fmt::internal::DummyStream	spdlog/fmt/bundled/ostream.h	/^struct DummyStream: std::ostream$/;"	s	namespace:fmt::internal	inherits:std::ostream
fmt::internal::DummyStream::DummyStream	spdlog/fmt/bundled/ostream.h	/^    DummyStream();  \/\/ Suppress a bogus warning in MSVC.$/;"	p	struct:fmt::internal::DummyStream	access:public	signature:()
fmt::internal::DummyStream::operator <<	spdlog/fmt/bundled/ostream.h	/^    void operator<<(Null<>);$/;"	p	struct:fmt::internal::DummyStream	access:public	signature:(Null<)
fmt::internal::EnableIf	spdlog/fmt/bundled/format.h	/^struct EnableIf$/;"	s	namespace:fmt::internal
fmt::internal::EnableIf	spdlog/fmt/bundled/format.h	/^struct EnableIf<true, T>$/;"	s	namespace:fmt::internal
fmt::internal::EnableIf::type	spdlog/fmt/bundled/format.h	/^    typedef T type;$/;"	t	struct:fmt::internal::EnableIf	access:public
fmt::internal::FMT_DISABLE_CONVERSION_TO_INT	spdlog/fmt/bundled/format.h	/^FMT_DISABLE_CONVERSION_TO_INT(double);$/;"	p	namespace:fmt::internal	signature:(double)
fmt::internal::FMT_DISABLE_CONVERSION_TO_INT	spdlog/fmt/bundled/format.h	/^FMT_DISABLE_CONVERSION_TO_INT(float);$/;"	p	namespace:fmt::internal	signature:(float)
fmt::internal::FMT_DISABLE_CONVERSION_TO_INT	spdlog/fmt/bundled/format.h	/^FMT_DISABLE_CONVERSION_TO_INT(long double);$/;"	p	namespace:fmt::internal	signature:(long double)
fmt::internal::FMT_NOEXCEPT	spdlog/fmt/bundled/format.h	/^                                  fmt::StringRef message) FMT_NOEXCEPT;$/;"	m	namespace:fmt::internal
fmt::internal::FMT_SPECIALIZE_MAKE_UNSIGNED	spdlog/fmt/bundled/format.h	/^FMT_SPECIALIZE_MAKE_UNSIGNED(LongLong, ULongLong);$/;"	p	namespace:fmt::internal	signature:(LongLong, ULongLong)
fmt::internal::FMT_SPECIALIZE_MAKE_UNSIGNED	spdlog/fmt/bundled/format.h	/^FMT_SPECIALIZE_MAKE_UNSIGNED(char, unsigned char);$/;"	p	namespace:fmt::internal	signature:(char, unsigned char)
fmt::internal::FMT_SPECIALIZE_MAKE_UNSIGNED	spdlog/fmt/bundled/format.h	/^FMT_SPECIALIZE_MAKE_UNSIGNED(int, unsigned);$/;"	p	namespace:fmt::internal	signature:(int, unsigned)
fmt::internal::FMT_SPECIALIZE_MAKE_UNSIGNED	spdlog/fmt/bundled/format.h	/^FMT_SPECIALIZE_MAKE_UNSIGNED(long, unsigned long);$/;"	p	namespace:fmt::internal	signature:(long, unsigned long)
fmt::internal::FMT_SPECIALIZE_MAKE_UNSIGNED	spdlog/fmt/bundled/format.h	/^FMT_SPECIALIZE_MAKE_UNSIGNED(short, unsigned short);$/;"	p	namespace:fmt::internal	signature:(short, unsigned short)
fmt::internal::FMT_SPECIALIZE_MAKE_UNSIGNED	spdlog/fmt/bundled/format.h	/^FMT_SPECIALIZE_MAKE_UNSIGNED(signed char, unsigned char);$/;"	p	namespace:fmt::internal	signature:(signed char, unsigned char)
fmt::internal::FPUtil	spdlog/fmt/bundled/format.h	/^typedef std::numeric_limits<fmt::internal::DummyInt> FPUtil;$/;"	t	namespace:fmt::internal
fmt::internal::False	spdlog/fmt/bundled/format.h	/^struct False$/;"	s	namespace:fmt::internal
fmt::internal::False::value	spdlog/fmt/bundled/format.h	/^        value = 0$/;"	e	enum:fmt::internal::False::__anon26
fmt::internal::FixedBuffer	spdlog/fmt/bundled/format.h	/^class FixedBuffer: public fmt::Buffer<Char>$/;"	c	namespace:fmt::internal	inherits:fmt::Buffer
fmt::internal::FixedBuffer::FMT_OVERRIDE	spdlog/fmt/bundled/format.h	/^    FMT_API void grow(std::size_t size) FMT_OVERRIDE;$/;"	m	class:fmt::internal::FixedBuffer	access:protected
fmt::internal::FixedBuffer::FixedBuffer	spdlog/fmt/bundled/format.h	/^    FixedBuffer(Char *array, std::size_t size): fmt::Buffer<Char>(array, size)$/;"	f	class:fmt::internal::FixedBuffer	access:public	signature:(Char *array, std::size_t size)
fmt::internal::FixedBuffer::grow	spdlog/fmt/bundled/format.cc	/^	template void internal::FixedBuffer<char>::grow(std::size_t);$/;"	p	class:fmt::internal::FixedBuffer	file:	signature:(std::size_t)
fmt::internal::FixedBuffer::grow	spdlog/fmt/bundled/format.cc	/^	template void internal::FixedBuffer<wchar_t>::grow(std::size_t);$/;"	p	class:fmt::internal::FixedBuffer	file:	signature:(std::size_t)
fmt::internal::FixedBuffer::grow	spdlog/fmt/bundled/format.cc	/^	void internal::FixedBuffer<Char>::grow(std::size_t)$/;"	f	class:fmt::internal::FixedBuffer	signature:(std::size_t)
fmt::internal::FormatBuf	spdlog/fmt/bundled/ostream.h	/^class FormatBuf: public std::basic_streambuf<Char>$/;"	c	namespace:fmt::internal	inherits:std::basic_streambuf
fmt::internal::FormatBuf::FormatBuf	spdlog/fmt/bundled/ostream.h	/^    FormatBuf(Buffer<Char> &buffer): buffer_(buffer), start_(&buffer[0])$/;"	f	class:fmt::internal::FormatBuf	access:public	signature:(Buffer<Char> &buffer)
fmt::internal::FormatBuf::buffer_	spdlog/fmt/bundled/ostream.h	/^    Buffer<Char> &buffer_;$/;"	m	class:fmt::internal::FormatBuf	access:private
fmt::internal::FormatBuf::int_type	spdlog/fmt/bundled/ostream.h	/^    typedef typename std::basic_streambuf<Char>::int_type int_type;$/;"	t	class:fmt::internal::FormatBuf	access:private
fmt::internal::FormatBuf::overflow	spdlog/fmt/bundled/ostream.h	/^    int_type overflow(int_type ch = traits_type::eof())$/;"	f	class:fmt::internal::FormatBuf	access:public	signature:(int_type ch = traits_type::eof())
fmt::internal::FormatBuf::size	spdlog/fmt/bundled/ostream.h	/^    size_t size() const$/;"	f	class:fmt::internal::FormatBuf	access:public	signature:() const
fmt::internal::FormatBuf::start_	spdlog/fmt/bundled/ostream.h	/^    Char *start_;$/;"	m	class:fmt::internal::FormatBuf	access:private
fmt::internal::FormatBuf::traits_type	spdlog/fmt/bundled/ostream.h	/^    typedef typename std::basic_streambuf<Char>::traits_type traits_type;$/;"	t	class:fmt::internal::FormatBuf	access:private
fmt::internal::FormatterBase	spdlog/fmt/bundled/format.h	/^class FormatterBase$/;"	c	namespace:fmt::internal
fmt::internal::FormatterBase::FormatterBase	spdlog/fmt/bundled/format.h	/^    explicit FormatterBase(const ArgList &args)$/;"	f	class:fmt::internal::FormatterBase	access:protected	signature:(const ArgList &args)
fmt::internal::FormatterBase::args	spdlog/fmt/bundled/format.h	/^    const ArgList &args() const$/;"	f	class:fmt::internal::FormatterBase	access:protected	signature:() const
fmt::internal::FormatterBase::args_	spdlog/fmt/bundled/format.h	/^    ArgList args_;$/;"	m	class:fmt::internal::FormatterBase	access:private
fmt::internal::FormatterBase::check_no_auto_index	spdlog/fmt/bundled/format.h	/^    bool check_no_auto_index(const char *&error)$/;"	f	class:fmt::internal::FormatterBase	access:protected	signature:(const char *&error)
fmt::internal::FormatterBase::do_get_arg	spdlog/fmt/bundled/format.cc	/^	FMT_FUNC Arg internal::FormatterBase::do_get_arg($/;"	f	class:fmt::internal::FormatterBase	signature:( unsigned arg_index, const char *&error)
fmt::internal::FormatterBase::do_get_arg	spdlog/fmt/bundled/format.h	/^    FMT_API Arg do_get_arg(unsigned arg_index, const char *&error);$/;"	p	class:fmt::internal::FormatterBase	access:private	signature:(unsigned arg_index, const char *&error)
fmt::internal::FormatterBase::get_arg	spdlog/fmt/bundled/format.h	/^    Arg get_arg(unsigned arg_index, const char *&error)$/;"	f	class:fmt::internal::FormatterBase	access:protected	signature:(unsigned arg_index, const char *&error)
fmt::internal::FormatterBase::next_arg	spdlog/fmt/bundled/format.h	/^    Arg next_arg(const char *&error)$/;"	f	class:fmt::internal::FormatterBase	access:protected	signature:(const char *&error)
fmt::internal::FormatterBase::next_arg_index_	spdlog/fmt/bundled/format.h	/^    int next_arg_index_;$/;"	m	class:fmt::internal::FormatterBase	access:private
fmt::internal::FormatterBase::write	spdlog/fmt/bundled/format.h	/^    void write(BasicWriter<Char> &w, const Char *start, const Char *end)$/;"	f	class:fmt::internal::FormatterBase	access:protected	signature:(BasicWriter<Char> &w, const Char *start, const Char *end)
fmt::internal::INLINE_BUFFER_SIZE	spdlog/fmt/bundled/format.h	/^    INLINE_BUFFER_SIZE = 500$/;"	e	enum:fmt::internal::__anon17
fmt::internal::IntChecker	spdlog/fmt/bundled/printf.h	/^struct IntChecker$/;"	s	namespace:fmt::internal
fmt::internal::IntChecker	spdlog/fmt/bundled/printf.h	/^struct IntChecker<true>$/;"	s	namespace:fmt::internal
fmt::internal::IntChecker::fits_in_int	spdlog/fmt/bundled/printf.h	/^    static bool fits_in_int(T value)$/;"	f	struct:fmt::internal::IntChecker	access:public	signature:(T value)
fmt::internal::IntChecker::fits_in_int	spdlog/fmt/bundled/printf.h	/^    static bool fits_in_int(bool)$/;"	f	struct:fmt::internal::IntChecker	access:public	signature:(bool)
fmt::internal::IntChecker::fits_in_int	spdlog/fmt/bundled/printf.h	/^    static bool fits_in_int(int)$/;"	f	struct:fmt::internal::IntChecker	access:public	signature:(int)
fmt::internal::IntTraits	spdlog/fmt/bundled/format.h	/^struct IntTraits$/;"	s	namespace:fmt::internal
fmt::internal::IntTraits::TypeSelector	spdlog/fmt/bundled/format.h	/^    TypeSelector<std::numeric_limits<T>::digits <= 32>::Type MainType;$/;"	t	struct:fmt::internal::IntTraits	access:public
fmt::internal::IsZeroInt	spdlog/fmt/bundled/printf.h	/^class IsZeroInt: public ArgVisitor<IsZeroInt, bool>$/;"	c	namespace:fmt::internal	inherits:ArgVisitor
fmt::internal::IsZeroInt::visit_any_int	spdlog/fmt/bundled/printf.h	/^    bool visit_any_int(T value)$/;"	f	class:fmt::internal::IsZeroInt	access:public	signature:(T value)
fmt::internal::LConvCheck	spdlog/fmt/bundled/format.h	/^template <typename T, T> struct LConvCheck$/;"	s	namespace:fmt::internal
fmt::internal::LConvCheck::LConvCheck	spdlog/fmt/bundled/format.h	/^    LConvCheck(int)$/;"	f	struct:fmt::internal::LConvCheck	access:public	signature:(int)
fmt::internal::MakeArg	spdlog/fmt/bundled/format.h	/^class MakeArg: public Arg$/;"	c	namespace:fmt::internal	inherits:Arg
fmt::internal::MakeArg::MakeArg	spdlog/fmt/bundled/format.h	/^    MakeArg()$/;"	f	class:fmt::internal::MakeArg	access:public	signature:()
fmt::internal::MakeArg::MakeArg	spdlog/fmt/bundled/format.h	/^    MakeArg(const T &value)$/;"	f	class:fmt::internal::MakeArg	access:public	signature:(const T &value)
fmt::internal::MakeUnsigned	spdlog/fmt/bundled/format.h	/^struct MakeUnsigned$/;"	s	namespace:fmt::internal
fmt::internal::MakeUnsigned::Type	spdlog/fmt/bundled/format.h	/^    typedef T Type;$/;"	t	struct:fmt::internal::MakeUnsigned	access:public
fmt::internal::MakeValue	spdlog/fmt/bundled/format.h	/^class MakeValue: public Arg$/;"	c	namespace:fmt::internal	inherits:Arg
fmt::internal::MakeValue::Char	spdlog/fmt/bundled/format.h	/^    typedef typename Formatter::Char Char;$/;"	t	class:fmt::internal::MakeValue	access:public
fmt::internal::MakeValue::MakeValue	spdlog/fmt/bundled/format.h	/^    MakeValue()$/;"	f	class:fmt::internal::MakeValue	access:public	signature:()
fmt::internal::MakeValue::MakeValue	spdlog/fmt/bundled/format.h	/^    MakeValue(T *value);$/;"	p	class:fmt::internal::MakeValue	access:private	signature:(T *value)
fmt::internal::MakeValue::MakeValue	spdlog/fmt/bundled/format.h	/^    MakeValue(const NamedArg<Char_> &value)$/;"	f	class:fmt::internal::MakeValue	access:public	signature:(const NamedArg<Char_> &value)
fmt::internal::MakeValue::MakeValue	spdlog/fmt/bundled/format.h	/^    MakeValue(const NamedArgWithType<Char_, T> &value)$/;"	f	class:fmt::internal::MakeValue	access:public	signature:(const NamedArgWithType<Char_, T> &value)
fmt::internal::MakeValue::MakeValue	spdlog/fmt/bundled/format.h	/^    MakeValue(const T &value,$/;"	f	class:fmt::internal::MakeValue	access:public	signature:(const T &value, typename EnableIf<ConvertToInt<T>::value, int>::type = 0)
fmt::internal::MakeValue::MakeValue	spdlog/fmt/bundled/format.h	/^    MakeValue(const T &value,$/;"	f	class:fmt::internal::MakeValue	access:public	signature:(const T &value, typename EnableIf<Not< ConvertToInt<T>::value>::value, int>::type = 0)
fmt::internal::MakeValue::MakeValue	spdlog/fmt/bundled/format.h	/^    MakeValue(const T *value);$/;"	p	class:fmt::internal::MakeValue	access:private	signature:(const T *value)
fmt::internal::MakeValue::MakeValue	spdlog/fmt/bundled/format.h	/^    MakeValue(long value)$/;"	f	class:fmt::internal::MakeValue	access:public	signature:(long value)
fmt::internal::MakeValue::MakeValue	spdlog/fmt/bundled/format.h	/^    MakeValue(typename WCharHelper<WStringRef, Char>::Unsupported);$/;"	p	class:fmt::internal::MakeValue	access:private	signature:(typename WCharHelper<WStringRef, Char>::Unsupported)
fmt::internal::MakeValue::MakeValue	spdlog/fmt/bundled/format.h	/^    MakeValue(typename WCharHelper<const std::wstring &, Char>::Unsupported);$/;"	p	class:fmt::internal::MakeValue	access:private	signature:(typename WCharHelper<const std::wstring &, Char>::Unsupported)
fmt::internal::MakeValue::MakeValue	spdlog/fmt/bundled/format.h	/^    MakeValue(typename WCharHelper<const wchar_t *, Char>::Unsupported);$/;"	p	class:fmt::internal::MakeValue	access:private	signature:(typename WCharHelper<const wchar_t *, Char>::Unsupported)
fmt::internal::MakeValue::MakeValue	spdlog/fmt/bundled/format.h	/^    MakeValue(typename WCharHelper<wchar_t *, Char>::Unsupported);$/;"	p	class:fmt::internal::MakeValue	access:private	signature:(typename WCharHelper<wchar_t *, Char>::Unsupported)
fmt::internal::MakeValue::MakeValue	spdlog/fmt/bundled/format.h	/^    MakeValue(typename WCharHelper<wchar_t, Char>::Supported value)$/;"	f	class:fmt::internal::MakeValue	access:public	signature:(typename WCharHelper<wchar_t, Char>::Supported value)
fmt::internal::MakeValue::MakeValue	spdlog/fmt/bundled/format.h	/^    MakeValue(typename WCharHelper<wchar_t, Char>::Unsupported);$/;"	p	class:fmt::internal::MakeValue	access:private	signature:(typename WCharHelper<wchar_t, Char>::Unsupported)
fmt::internal::MakeValue::MakeValue	spdlog/fmt/bundled/format.h	/^    MakeValue(unsigned long value)$/;"	f	class:fmt::internal::MakeValue	access:public	signature:(unsigned long value)
fmt::internal::MakeValue::format_custom_arg	spdlog/fmt/bundled/format.h	/^    static void format_custom_arg($/;"	f	class:fmt::internal::MakeValue	access:private	signature:( void *formatter, const void *arg, void *format_str_ptr)
fmt::internal::MakeValue::set_string	spdlog/fmt/bundled/format.h	/^    void set_string(StringRef str)$/;"	f	class:fmt::internal::MakeValue	access:private	signature:(StringRef str)
fmt::internal::MakeValue::set_string	spdlog/fmt/bundled/format.h	/^    void set_string(WStringRef str)$/;"	f	class:fmt::internal::MakeValue	access:private	signature:(WStringRef str)
fmt::internal::MakeValue::type	spdlog/fmt/bundled/format.h	/^    static uint64_t type(const NamedArg<Char_> &)$/;"	f	class:fmt::internal::MakeValue	access:public	signature:(const NamedArg<Char_> &)
fmt::internal::MakeValue::type	spdlog/fmt/bundled/format.h	/^    static uint64_t type(const NamedArgWithType<Char_, T> &)$/;"	f	class:fmt::internal::MakeValue	access:public	signature:(const NamedArgWithType<Char_, T> &)
fmt::internal::MakeValue::type	spdlog/fmt/bundled/format.h	/^    static uint64_t type(const T &)$/;"	f	class:fmt::internal::MakeValue	access:public	signature:(const T &)
fmt::internal::MakeValue::type	spdlog/fmt/bundled/format.h	/^    static uint64_t type(long)$/;"	f	class:fmt::internal::MakeValue	access:public	signature:(long)
fmt::internal::MakeValue::type	spdlog/fmt/bundled/format.h	/^    static uint64_t type(unsigned long)$/;"	f	class:fmt::internal::MakeValue	access:public	signature:(unsigned long)
fmt::internal::MakeValue::type	spdlog/fmt/bundled/format.h	/^    static uint64_t type(wchar_t)$/;"	f	class:fmt::internal::MakeValue	access:public	signature:(wchar_t)
fmt::internal::MemoryBuffer	spdlog/fmt/bundled/format.h	/^class MemoryBuffer: private Allocator, public Buffer<T>$/;"	c	namespace:fmt::internal	inherits:Allocator,Buffer
fmt::internal::MemoryBuffer::FMT_OVERRIDE	spdlog/fmt/bundled/format.h	/^    void grow(std::size_t size) FMT_OVERRIDE;$/;"	m	class:fmt::internal::MemoryBuffer	access:protected
fmt::internal::MemoryBuffer::MemoryBuffer	spdlog/fmt/bundled/format.h	/^    MemoryBuffer(MemoryBuffer &&other)$/;"	f	class:fmt::internal::MemoryBuffer	access:public	signature:(MemoryBuffer &&other)
fmt::internal::MemoryBuffer::MemoryBuffer	spdlog/fmt/bundled/format.h	/^    explicit MemoryBuffer(const Allocator &alloc = Allocator())$/;"	f	class:fmt::internal::MemoryBuffer	access:public	signature:(const Allocator &alloc = Allocator())
fmt::internal::MemoryBuffer::data_	spdlog/fmt/bundled/format.h	/^    T data_[SIZE];$/;"	m	class:fmt::internal::MemoryBuffer	access:private
fmt::internal::MemoryBuffer::deallocate	spdlog/fmt/bundled/format.h	/^    void deallocate()$/;"	f	class:fmt::internal::MemoryBuffer	access:private	signature:()
fmt::internal::MemoryBuffer::get_allocator	spdlog/fmt/bundled/format.h	/^    Allocator get_allocator() const$/;"	f	class:fmt::internal::MemoryBuffer	access:public	signature:() const
fmt::internal::MemoryBuffer::grow	spdlog/fmt/bundled/format.h	/^void MemoryBuffer<T, SIZE, Allocator>::grow(std::size_t size)$/;"	f	class:fmt::internal::MemoryBuffer	signature:(std::size_t size)
fmt::internal::MemoryBuffer::move	spdlog/fmt/bundled/format.h	/^    void move(MemoryBuffer &other)$/;"	f	class:fmt::internal::MemoryBuffer	access:private	signature:(MemoryBuffer &other)
fmt::internal::MemoryBuffer::operator =	spdlog/fmt/bundled/format.h	/^    MemoryBuffer &operator=(MemoryBuffer &&other)$/;"	f	class:fmt::internal::MemoryBuffer	access:public	signature:(MemoryBuffer &&other)
fmt::internal::MemoryBuffer::~MemoryBuffer	spdlog/fmt/bundled/format.h	/^    ~MemoryBuffer()$/;"	f	class:fmt::internal::MemoryBuffer	access:public	signature:()
fmt::internal::NamedArg	spdlog/fmt/bundled/format.h	/^struct NamedArg: Arg$/;"	s	namespace:fmt::internal	inherits:Arg
fmt::internal::NamedArg::NamedArg	spdlog/fmt/bundled/format.h	/^    NamedArg(BasicStringRef<Char> argname, const T &value)$/;"	f	struct:fmt::internal::NamedArg	access:public	signature:(BasicStringRef<Char> argname, const T &value)
fmt::internal::NamedArg::name	spdlog/fmt/bundled/format.h	/^    BasicStringRef<Char> name;$/;"	m	struct:fmt::internal::NamedArg	access:public
fmt::internal::NamedArgWithType	spdlog/fmt/bundled/format.h	/^struct NamedArgWithType: NamedArg<Char>$/;"	s	namespace:fmt::internal	inherits:NamedArg
fmt::internal::NamedArgWithType::NamedArgWithType	spdlog/fmt/bundled/format.h	/^    NamedArgWithType(BasicStringRef<Char> argname, const T &value)$/;"	f	struct:fmt::internal::NamedArgWithType	access:public	signature:(BasicStringRef<Char> argname, const T &value)
fmt::internal::No	spdlog/fmt/bundled/format.h	/^typedef char No[2];$/;"	t	namespace:fmt::internal
fmt::internal::NoThousandsSep	spdlog/fmt/bundled/format.h	/^struct NoThousandsSep$/;"	s	namespace:fmt::internal
fmt::internal::NoThousandsSep::operator ()	spdlog/fmt/bundled/format.h	/^    void operator()(Char *)$/;"	f	struct:fmt::internal::NoThousandsSep	access:public	signature:(Char *)
fmt::internal::Not	spdlog/fmt/bundled/format.h	/^struct Not$/;"	s	namespace:fmt::internal
fmt::internal::Not	spdlog/fmt/bundled/format.h	/^struct Not<false>$/;"	s	namespace:fmt::internal
fmt::internal::Not::value	spdlog/fmt/bundled/format.h	/^        value = 0$/;"	e	enum:fmt::internal::Not::__anon24
fmt::internal::Not::value	spdlog/fmt/bundled/format.h	/^        value = 1$/;"	e	enum:fmt::internal::Not::__anon25
fmt::internal::Null	spdlog/fmt/bundled/format.h	/^struct Null$/;"	s	namespace:fmt::internal
fmt::internal::PrecisionHandler	spdlog/fmt/bundled/printf.h	/^class PrecisionHandler: public ArgVisitor<PrecisionHandler, int>$/;"	c	namespace:fmt::internal	inherits:ArgVisitor
fmt::internal::PrecisionHandler::report_unhandled_arg	spdlog/fmt/bundled/printf.h	/^    void report_unhandled_arg()$/;"	f	class:fmt::internal::PrecisionHandler	access:public	signature:()
fmt::internal::PrecisionHandler::visit_any_int	spdlog/fmt/bundled/printf.h	/^    int visit_any_int(T value)$/;"	f	class:fmt::internal::PrecisionHandler	access:public	signature:(T value)
fmt::internal::RuntimeError	spdlog/fmt/bundled/format.h	/^class RuntimeError: public std::runtime_error$/;"	c	namespace:fmt::internal	inherits:std::runtime_error
fmt::internal::RuntimeError::FMT_DTOR_NOEXCEPT	spdlog/fmt/bundled/format.h	/^    ~RuntimeError() FMT_DTOR_NOEXCEPT;$/;"	m	class:fmt::internal::RuntimeError	access:protected
fmt::internal::RuntimeError::RuntimeError	spdlog/fmt/bundled/format.h	/^    RuntimeError(): std::runtime_error("")$/;"	f	class:fmt::internal::RuntimeError	access:protected	signature:()
fmt::internal::RuntimeError::RuntimeError	spdlog/fmt/bundled/format.h	/^    RuntimeError(const RuntimeError &rerr): std::runtime_error(rerr)$/;"	f	class:fmt::internal::RuntimeError	access:protected	signature:(const RuntimeError &rerr)
fmt::internal::SignChecker	spdlog/fmt/bundled/format.h	/^struct SignChecker$/;"	s	namespace:fmt::internal
fmt::internal::SignChecker	spdlog/fmt/bundled/format.h	/^struct SignChecker<false>$/;"	s	namespace:fmt::internal
fmt::internal::SignChecker::is_negative	spdlog/fmt/bundled/format.h	/^    static bool is_negative(T value)$/;"	f	struct:fmt::internal::SignChecker	access:public	signature:(T value)
fmt::internal::SignChecker::is_negative	spdlog/fmt/bundled/format.h	/^    static bool is_negative(T)$/;"	f	struct:fmt::internal::SignChecker	access:public	signature:(T)
fmt::internal::ThousandsSep	spdlog/fmt/bundled/format.h	/^class ThousandsSep$/;"	c	namespace:fmt::internal
fmt::internal::ThousandsSep::ThousandsSep	spdlog/fmt/bundled/format.h	/^    explicit ThousandsSep(fmt::StringRef sep): sep_(sep), digit_index_(0)$/;"	f	class:fmt::internal::ThousandsSep	access:public	signature:(fmt::StringRef sep)
fmt::internal::ThousandsSep::digit_index_	spdlog/fmt/bundled/format.h	/^    unsigned digit_index_;$/;"	m	class:fmt::internal::ThousandsSep	access:private
fmt::internal::ThousandsSep::operator ()	spdlog/fmt/bundled/format.h	/^    void operator()(Char *&buffer)$/;"	f	class:fmt::internal::ThousandsSep	access:public	signature:(Char *&buffer)
fmt::internal::ThousandsSep::sep_	spdlog/fmt/bundled/format.h	/^    fmt::StringRef sep_;$/;"	m	class:fmt::internal::ThousandsSep	access:private
fmt::internal::TypeSelector	spdlog/fmt/bundled/format.h	/^struct TypeSelector$/;"	s	namespace:fmt::internal
fmt::internal::TypeSelector	spdlog/fmt/bundled/format.h	/^struct TypeSelector<false>$/;"	s	namespace:fmt::internal
fmt::internal::TypeSelector::Type	spdlog/fmt/bundled/format.h	/^    typedef uint32_t Type;$/;"	t	struct:fmt::internal::TypeSelector	access:public
fmt::internal::TypeSelector::Type	spdlog/fmt/bundled/format.h	/^    typedef uint64_t Type;$/;"	t	struct:fmt::internal::TypeSelector	access:public
fmt::internal::UTF16ToUTF8	spdlog/fmt/bundled/format.h	/^class UTF16ToUTF8$/;"	c	namespace:fmt::internal
fmt::internal::UTF16ToUTF8::UTF16ToUTF8	spdlog/fmt/bundled/format.cc	/^	FMT_FUNC internal::UTF16ToUTF8::UTF16ToUTF8(WStringRef s)$/;"	f	class:fmt::internal::UTF16ToUTF8	signature:(WStringRef s)
fmt::internal::UTF16ToUTF8::UTF16ToUTF8	spdlog/fmt/bundled/format.h	/^    FMT_API explicit UTF16ToUTF8(WStringRef s);$/;"	p	class:fmt::internal::UTF16ToUTF8	access:public	signature:(WStringRef s)
fmt::internal::UTF16ToUTF8::UTF16ToUTF8	spdlog/fmt/bundled/format.h	/^    UTF16ToUTF8()$/;"	f	class:fmt::internal::UTF16ToUTF8	access:public	signature:()
fmt::internal::UTF16ToUTF8::buffer_	spdlog/fmt/bundled/format.h	/^    MemoryBuffer<char, INLINE_BUFFER_SIZE> buffer_;$/;"	m	class:fmt::internal::UTF16ToUTF8	access:private
fmt::internal::UTF16ToUTF8::c_str	spdlog/fmt/bundled/format.h	/^    const char *c_str() const$/;"	f	class:fmt::internal::UTF16ToUTF8	access:public	signature:() const
fmt::internal::UTF16ToUTF8::convert	spdlog/fmt/bundled/format.cc	/^	FMT_FUNC int internal::UTF16ToUTF8::convert(WStringRef s)$/;"	f	class:fmt::internal::UTF16ToUTF8	signature:(WStringRef s)
fmt::internal::UTF16ToUTF8::convert	spdlog/fmt/bundled/format.h	/^    FMT_API int convert(WStringRef s);$/;"	p	class:fmt::internal::UTF16ToUTF8	access:public	signature:(WStringRef s)
fmt::internal::UTF16ToUTF8::operator StringRef	spdlog/fmt/bundled/format.h	/^    operator StringRef() const$/;"	f	class:fmt::internal::UTF16ToUTF8	access:public	signature:() const
fmt::internal::UTF16ToUTF8::size	spdlog/fmt/bundled/format.h	/^    size_t size() const$/;"	f	class:fmt::internal::UTF16ToUTF8	access:public	signature:() const
fmt::internal::UTF16ToUTF8::str	spdlog/fmt/bundled/format.h	/^    std::string str() const$/;"	f	class:fmt::internal::UTF16ToUTF8	access:public	signature:() const
fmt::internal::UTF8ToUTF16	spdlog/fmt/bundled/format.h	/^class UTF8ToUTF16$/;"	c	namespace:fmt::internal
fmt::internal::UTF8ToUTF16::UTF8ToUTF16	spdlog/fmt/bundled/format.cc	/^	FMT_FUNC internal::UTF8ToUTF16::UTF8ToUTF16(StringRef s)$/;"	f	class:fmt::internal::UTF8ToUTF16	signature:(StringRef s)
fmt::internal::UTF8ToUTF16::UTF8ToUTF16	spdlog/fmt/bundled/format.h	/^    FMT_API explicit UTF8ToUTF16(StringRef s);$/;"	p	class:fmt::internal::UTF8ToUTF16	access:public	signature:(StringRef s)
fmt::internal::UTF8ToUTF16::buffer_	spdlog/fmt/bundled/format.h	/^    MemoryBuffer<wchar_t, INLINE_BUFFER_SIZE> buffer_;$/;"	m	class:fmt::internal::UTF8ToUTF16	access:private
fmt::internal::UTF8ToUTF16::c_str	spdlog/fmt/bundled/format.h	/^    const wchar_t *c_str() const$/;"	f	class:fmt::internal::UTF8ToUTF16	access:public	signature:() const
fmt::internal::UTF8ToUTF16::operator WStringRef	spdlog/fmt/bundled/format.h	/^    operator WStringRef() const$/;"	f	class:fmt::internal::UTF8ToUTF16	access:public	signature:() const
fmt::internal::UTF8ToUTF16::size	spdlog/fmt/bundled/format.h	/^    size_t size() const$/;"	f	class:fmt::internal::UTF8ToUTF16	access:public	signature:() const
fmt::internal::UTF8ToUTF16::str	spdlog/fmt/bundled/format.h	/^    std::wstring str() const$/;"	f	class:fmt::internal::UTF8ToUTF16	access:public	signature:() const
fmt::internal::Value	spdlog/fmt/bundled/format.h	/^struct Value$/;"	s	namespace:fmt::internal
fmt::internal::Value::BOOL	spdlog/fmt/bundled/format.h	/^        INT, UINT, LONG_LONG, ULONG_LONG, BOOL, CHAR, LAST_INTEGER_TYPE = CHAR,$/;"	e	enum:fmt::internal::Value::Type
fmt::internal::Value::CHAR	spdlog/fmt/bundled/format.h	/^        INT, UINT, LONG_LONG, ULONG_LONG, BOOL, CHAR, LAST_INTEGER_TYPE = CHAR,$/;"	e	enum:fmt::internal::Value::Type
fmt::internal::Value::CSTRING	spdlog/fmt/bundled/format.h	/^        CSTRING, STRING, WSTRING, POINTER, CUSTOM$/;"	e	enum:fmt::internal::Value::Type
fmt::internal::Value::CUSTOM	spdlog/fmt/bundled/format.h	/^        CSTRING, STRING, WSTRING, POINTER, CUSTOM$/;"	e	enum:fmt::internal::Value::Type
fmt::internal::Value::CustomValue	spdlog/fmt/bundled/format.h	/^    struct CustomValue$/;"	s	struct:fmt::internal::Value	access:public
fmt::internal::Value::CustomValue::format	spdlog/fmt/bundled/format.h	/^        FormatFunc format;$/;"	m	struct:fmt::internal::Value::CustomValue	access:public
fmt::internal::Value::CustomValue::value	spdlog/fmt/bundled/format.h	/^        const void *value;$/;"	m	struct:fmt::internal::Value::CustomValue	access:public
fmt::internal::Value::DOUBLE	spdlog/fmt/bundled/format.h	/^        DOUBLE, LONG_DOUBLE, LAST_NUMERIC_TYPE = LONG_DOUBLE,$/;"	e	enum:fmt::internal::Value::Type
fmt::internal::Value::FormatFunc	spdlog/fmt/bundled/format.h	/^    typedef void(*FormatFunc)($/;"	t	struct:fmt::internal::Value	access:public
fmt::internal::Value::INT	spdlog/fmt/bundled/format.h	/^        INT, UINT, LONG_LONG, ULONG_LONG, BOOL, CHAR, LAST_INTEGER_TYPE = CHAR,$/;"	e	enum:fmt::internal::Value::Type
fmt::internal::Value::LAST_INTEGER_TYPE	spdlog/fmt/bundled/format.h	/^        INT, UINT, LONG_LONG, ULONG_LONG, BOOL, CHAR, LAST_INTEGER_TYPE = CHAR,$/;"	e	enum:fmt::internal::Value::Type
fmt::internal::Value::LAST_NUMERIC_TYPE	spdlog/fmt/bundled/format.h	/^        DOUBLE, LONG_DOUBLE, LAST_NUMERIC_TYPE = LONG_DOUBLE,$/;"	e	enum:fmt::internal::Value::Type
fmt::internal::Value::LONG_DOUBLE	spdlog/fmt/bundled/format.h	/^        DOUBLE, LONG_DOUBLE, LAST_NUMERIC_TYPE = LONG_DOUBLE,$/;"	e	enum:fmt::internal::Value::Type
fmt::internal::Value::LONG_LONG	spdlog/fmt/bundled/format.h	/^        INT, UINT, LONG_LONG, ULONG_LONG, BOOL, CHAR, LAST_INTEGER_TYPE = CHAR,$/;"	e	enum:fmt::internal::Value::Type
fmt::internal::Value::NAMED_ARG	spdlog/fmt/bundled/format.h	/^        NONE, NAMED_ARG,$/;"	e	enum:fmt::internal::Value::Type
fmt::internal::Value::NONE	spdlog/fmt/bundled/format.h	/^        NONE, NAMED_ARG,$/;"	e	enum:fmt::internal::Value::Type
fmt::internal::Value::POINTER	spdlog/fmt/bundled/format.h	/^        CSTRING, STRING, WSTRING, POINTER, CUSTOM$/;"	e	enum:fmt::internal::Value::Type
fmt::internal::Value::STRING	spdlog/fmt/bundled/format.h	/^        CSTRING, STRING, WSTRING, POINTER, CUSTOM$/;"	e	enum:fmt::internal::Value::Type
fmt::internal::Value::StringValue	spdlog/fmt/bundled/format.h	/^    struct StringValue$/;"	s	struct:fmt::internal::Value	access:public
fmt::internal::Value::StringValue::size	spdlog/fmt/bundled/format.h	/^        std::size_t size;$/;"	m	struct:fmt::internal::Value::StringValue	access:public
fmt::internal::Value::StringValue::value	spdlog/fmt/bundled/format.h	/^        const Char *value;$/;"	m	struct:fmt::internal::Value::StringValue	access:public
fmt::internal::Value::Type	spdlog/fmt/bundled/format.h	/^    enum Type$/;"	g	struct:fmt::internal::Value	access:public
fmt::internal::Value::UINT	spdlog/fmt/bundled/format.h	/^        INT, UINT, LONG_LONG, ULONG_LONG, BOOL, CHAR, LAST_INTEGER_TYPE = CHAR,$/;"	e	enum:fmt::internal::Value::Type
fmt::internal::Value::ULONG_LONG	spdlog/fmt/bundled/format.h	/^        INT, UINT, LONG_LONG, ULONG_LONG, BOOL, CHAR, LAST_INTEGER_TYPE = CHAR,$/;"	e	enum:fmt::internal::Value::Type
fmt::internal::Value::WSTRING	spdlog/fmt/bundled/format.h	/^        CSTRING, STRING, WSTRING, POINTER, CUSTOM$/;"	e	enum:fmt::internal::Value::Type
fmt::internal::Value::__anon18::custom	spdlog/fmt/bundled/format.h	/^        CustomValue custom;$/;"	m	union:fmt::internal::Value::__anon18	access:public
fmt::internal::Value::__anon18::double_value	spdlog/fmt/bundled/format.h	/^        double double_value;$/;"	m	union:fmt::internal::Value::__anon18	access:public
fmt::internal::Value::__anon18::int_value	spdlog/fmt/bundled/format.h	/^        int int_value;$/;"	m	union:fmt::internal::Value::__anon18	access:public
fmt::internal::Value::__anon18::long_double_value	spdlog/fmt/bundled/format.h	/^        long double long_double_value;$/;"	m	union:fmt::internal::Value::__anon18	access:public
fmt::internal::Value::__anon18::long_long_value	spdlog/fmt/bundled/format.h	/^        LongLong long_long_value;$/;"	m	union:fmt::internal::Value::__anon18	access:public
fmt::internal::Value::__anon18::pointer	spdlog/fmt/bundled/format.h	/^        const void *pointer;$/;"	m	union:fmt::internal::Value::__anon18	access:public
fmt::internal::Value::__anon18::sstring	spdlog/fmt/bundled/format.h	/^        StringValue<signed char> sstring;$/;"	m	union:fmt::internal::Value::__anon18	access:public
fmt::internal::Value::__anon18::string	spdlog/fmt/bundled/format.h	/^        StringValue<char> string;$/;"	m	union:fmt::internal::Value::__anon18	access:public
fmt::internal::Value::__anon18::uint_value	spdlog/fmt/bundled/format.h	/^        unsigned uint_value;$/;"	m	union:fmt::internal::Value::__anon18	access:public
fmt::internal::Value::__anon18::ulong_long_value	spdlog/fmt/bundled/format.h	/^        ULongLong ulong_long_value;$/;"	m	union:fmt::internal::Value::__anon18	access:public
fmt::internal::Value::__anon18::ustring	spdlog/fmt/bundled/format.h	/^        StringValue<unsigned char> ustring;$/;"	m	union:fmt::internal::Value::__anon18	access:public
fmt::internal::Value::__anon18::wstring	spdlog/fmt/bundled/format.h	/^        StringValue<wchar_t> wstring;$/;"	m	union:fmt::internal::Value::__anon18	access:public
fmt::internal::WCharHelper	spdlog/fmt/bundled/format.h	/^struct WCharHelper$/;"	s	namespace:fmt::internal
fmt::internal::WCharHelper	spdlog/fmt/bundled/format.h	/^struct WCharHelper<T, wchar_t>$/;"	s	namespace:fmt::internal
fmt::internal::WCharHelper::Supported	spdlog/fmt/bundled/format.h	/^    typedef Null<T> Supported;$/;"	t	struct:fmt::internal::WCharHelper	access:public
fmt::internal::WCharHelper::Supported	spdlog/fmt/bundled/format.h	/^    typedef T Supported;$/;"	t	struct:fmt::internal::WCharHelper	access:public
fmt::internal::WCharHelper::Unsupported	spdlog/fmt/bundled/format.h	/^    typedef Null<T> Unsupported;$/;"	t	struct:fmt::internal::WCharHelper	access:public
fmt::internal::WCharHelper::Unsupported	spdlog/fmt/bundled/format.h	/^    typedef T Unsupported;$/;"	t	struct:fmt::internal::WCharHelper	access:public
fmt::internal::WidthHandler	spdlog/fmt/bundled/printf.h	/^class WidthHandler: public ArgVisitor<WidthHandler, unsigned>$/;"	c	namespace:fmt::internal	inherits:ArgVisitor
fmt::internal::WidthHandler::FMT_DISALLOW_COPY_AND_ASSIGN	spdlog/fmt/bundled/printf.h	/^    FMT_DISALLOW_COPY_AND_ASSIGN(WidthHandler);$/;"	p	class:fmt::internal::WidthHandler	access:private	signature:(WidthHandler)
fmt::internal::WidthHandler::WidthHandler	spdlog/fmt/bundled/printf.h	/^    explicit WidthHandler(FormatSpec &spec): spec_(spec)$/;"	f	class:fmt::internal::WidthHandler	access:public	signature:(FormatSpec &spec)
fmt::internal::WidthHandler::report_unhandled_arg	spdlog/fmt/bundled/printf.h	/^    void report_unhandled_arg()$/;"	f	class:fmt::internal::WidthHandler	access:public	signature:()
fmt::internal::WidthHandler::spec_	spdlog/fmt/bundled/printf.h	/^    FormatSpec &spec_;$/;"	m	class:fmt::internal::WidthHandler	access:private
fmt::internal::WidthHandler::visit_any_int	spdlog/fmt/bundled/printf.h	/^    unsigned visit_any_int(T value)$/;"	f	class:fmt::internal::WidthHandler	access:public	signature:(T value)
fmt::internal::Yes	spdlog/fmt/bundled/format.h	/^typedef char Yes[1];$/;"	t	namespace:fmt::internal
fmt::internal::_ecvt_s	spdlog/fmt/bundled/format.h	/^inline DummyInt _ecvt_s(...)$/;"	f	namespace:fmt::internal	signature:(....)
fmt::internal::_finite	spdlog/fmt/bundled/format.h	/^inline DummyInt _finite(...)$/;"	f	namespace:fmt::internal	signature:(....)
fmt::internal::_isnan	spdlog/fmt/bundled/format.h	/^inline DummyInt _isnan(...)$/;"	f	namespace:fmt::internal	signature:(....)
fmt::internal::clz	spdlog/fmt/bundled/format.h	/^inline uint32_t clz(uint32_t x)$/;"	f	namespace:fmt::internal	signature:(uint32_t x)
fmt::internal::clzll	spdlog/fmt/bundled/format.h	/^inline uint32_t clzll(uint64_t x)$/;"	f	namespace:fmt::internal	signature:(uint64_t x)
fmt::internal::const_check	spdlog/fmt/bundled/format.h	/^inline T const_check(T value)$/;"	f	namespace:fmt::internal	signature:(T value)
fmt::internal::convert	spdlog/fmt/bundled/format.h	/^No &convert(...);$/;"	p	namespace:fmt::internal	signature:(....)
fmt::internal::convert	spdlog/fmt/bundled/format.h	/^Yes &convert(fmt::ULongLong);$/;"	p	namespace:fmt::internal	signature:(fmt::ULongLong)
fmt::internal::convert	spdlog/fmt/bundled/ostream.h	/^Yes &convert(std::ostream &);$/;"	p	namespace:fmt::internal	signature:(std::ostream &)
fmt::internal::count_digits	spdlog/fmt/bundled/format.h	/^inline unsigned count_digits(uint32_t n)$/;"	f	namespace:fmt::internal	signature:(uint32_t n)
fmt::internal::format_arg	spdlog/fmt/bundled/format.h	/^void format_arg(Formatter &, const Char *, const T &)$/;"	f	namespace:fmt::internal	signature:(Formatter &, const Char *, const T &)
fmt::internal::format_decimal	spdlog/fmt/bundled/format.h	/^inline void format_decimal(Char *buffer, UInt value, unsigned num_digits)$/;"	f	namespace:fmt::internal	signature:(Char *buffer, UInt value, unsigned num_digits)
fmt::internal::format_decimal	spdlog/fmt/bundled/format.h	/^inline void format_decimal(Char *buffer, UInt value, unsigned num_digits,$/;"	f	namespace:fmt::internal	signature:(Char *buffer, UInt value, unsigned num_digits, ThousandsSep thousands_sep)
fmt::internal::get	spdlog/fmt/bundled/format.h	/^T &get();$/;"	p	namespace:fmt::internal	signature:()
fmt::internal::is_negative	spdlog/fmt/bundled/format.h	/^inline bool is_negative(T value)$/;"	f	namespace:fmt::internal	signature:(T value)
fmt::internal::is_same	spdlog/fmt/bundled/printf.h	/^struct is_same$/;"	s	namespace:fmt::internal
fmt::internal::is_same	spdlog/fmt/bundled/printf.h	/^struct is_same<T, T>$/;"	s	namespace:fmt::internal
fmt::internal::is_same::value	spdlog/fmt/bundled/printf.h	/^        value = 0$/;"	e	enum:fmt::internal::is_same::__anon31
fmt::internal::is_same::value	spdlog/fmt/bundled/printf.h	/^        value = 1$/;"	e	enum:fmt::internal::is_same::__anon32
fmt::internal::isinf	spdlog/fmt/bundled/format.h	/^inline DummyInt isinf(...)$/;"	f	namespace:fmt::internal	signature:(....)
fmt::internal::isnan	spdlog/fmt/bundled/format.h	/^inline DummyInt isnan(...)$/;"	f	namespace:fmt::internal	signature:(....)
fmt::internal::make	spdlog/fmt/bundled/format.h	/^static Value make(const T &value)$/;"	f	namespace:fmt::internal	signature:(const T &value)
fmt::internal::make_ptr	spdlog/fmt/bundled/format.h	/^inline T *make_ptr(T *ptr, std::size_t)$/;"	f	namespace:fmt::internal	signature:(T *ptr, std::size_t)
fmt::internal::make_ptr	spdlog/fmt/bundled/format.h	/^inline stdext::checked_array_iterator<T*> make_ptr(T *ptr, std::size_t size)$/;"	f	namespace:fmt::internal	signature:(T *ptr, std::size_t size)
fmt::internal::make_type	spdlog/fmt/bundled/format.h	/^inline uint64_t make_type()$/;"	f	namespace:fmt::internal	signature:()
fmt::internal::make_type	spdlog/fmt/bundled/format.h	/^inline uint64_t make_type(const T &arg)$/;"	f	namespace:fmt::internal	signature:(const T &arg)
fmt::internal::operator <<	spdlog/fmt/bundled/ostream.h	/^No &operator<<(std::ostream &, int);$/;"	p	namespace:fmt::internal	signature:(std::ostream &, int)
fmt::internal::report_unknown_type	spdlog/fmt/bundled/format.cc	/^	FMT_FUNC void internal::report_unknown_type(char code, const char *type)$/;"	f	class:fmt::internal	signature:(char code, const char *type)
fmt::internal::signbit	spdlog/fmt/bundled/format.h	/^inline DummyInt signbit(...)$/;"	f	namespace:fmt::internal	signature:(....)
fmt::internal::thousands_sep	spdlog/fmt/bundled/format.h	/^inline StringRef thousands_sep($/;"	f	namespace:fmt::internal	signature:( LConv *lc, LConvCheck<char *LConv::*, &LConv::thousands_sep> = 0)
fmt::internal::thousands_sep	spdlog/fmt/bundled/format.h	/^inline fmt::StringRef thousands_sep(...)$/;"	f	namespace:fmt::internal	signature:(....)
fmt::internal::to_unsigned	spdlog/fmt/bundled/format.h	/^inline typename MakeUnsigned<Int>::Type to_unsigned(Int value)$/;"	f	namespace:fmt::internal	signature:(Int value)
fmt::internal::write	spdlog/fmt/bundled/ostream.cc	/^		FMT_FUNC void write(std::ostream &os, Writer &w)$/;"	f	namespace:fmt::internal	signature:(std::ostream &os, Writer &w)
fmt::internal::write	spdlog/fmt/bundled/ostream.h	/^void write(std::ostream &os, Writer &w);$/;"	p	namespace:fmt::internal	signature:(std::ostream &os, Writer &w)
fmt::make_type	spdlog/fmt/bundled/format.h	/^inline uint64_t make_type(const Arg &first, const Args & ... tail)$/;"	f	namespace:fmt	signature:(const Arg &first, const Args & ... tail)
fmt::oct	spdlog/fmt/bundled/format.h	/^IntFormatSpec<int, TypeSpec<'o'> > oct(int value);$/;"	p	namespace:fmt	signature:(int value)
fmt::pad	spdlog/fmt/bundled/format.h	/^IntFormatSpec<int, AlignTypeSpec<TYPE_CODE>, Char> pad($/;"	p	namespace:fmt	signature:( int value, unsigned width, Char fill = Ã)
fmt::pad	spdlog/fmt/bundled/format.h	/^inline StrFormatSpec<Char> pad($/;"	f	namespace:fmt	signature:( const Char *str, unsigned width, Char fill = Ã)
fmt::pad	spdlog/fmt/bundled/format.h	/^inline StrFormatSpec<wchar_t> pad($/;"	f	namespace:fmt	signature:( const wchar_t *str, unsigned width, char fill = Ã)
fmt::print	spdlog/fmt/bundled/format.cc	/^	FMT_FUNC void print(CStringRef format_str, ArgList args)$/;"	f	namespace:fmt	signature:(CStringRef format_str, ArgList args)
fmt::print	spdlog/fmt/bundled/format.cc	/^	FMT_FUNC void print(std::FILE *f, CStringRef format_str, ArgList args)$/;"	f	namespace:fmt	signature:(std::FILE *f, CStringRef format_str, ArgList args)
fmt::print	spdlog/fmt/bundled/ostream.cc	/^	FMT_FUNC void print(std::ostream &os, CStringRef format_str, ArgList args)$/;"	f	namespace:fmt	signature:(std::ostream &os, CStringRef format_str, ArgList args)
fmt::print	spdlog/fmt/bundled/ostream.h	/^FMT_API void print(std::ostream &os, CStringRef format_str, ArgList args);$/;"	p	namespace:fmt	signature:(std::ostream &os, CStringRef format_str, ArgList args)
fmt::print_colored	spdlog/fmt/bundled/format.cc	/^	FMT_FUNC void print_colored(Color c, CStringRef format, ArgList args)$/;"	f	namespace:fmt	signature:(Color c, CStringRef format, ArgList args)
fmt::printf	spdlog/fmt/bundled/printf.h	/^inline int printf(CStringRef format, ArgList args)$/;"	f	namespace:fmt	signature:(CStringRef format, ArgList args)
fmt::printf	spdlog/fmt/bundled/printf.h	/^void printf(BasicWriter<Char> &w, BasicCStringRef<Char> format, ArgList args)$/;"	f	namespace:fmt	signature:(BasicWriter<Char> &w, BasicCStringRef<Char> format, ArgList args)
fmt::sprintf	spdlog/fmt/bundled/printf.h	/^inline std::string sprintf(CStringRef format, ArgList args)$/;"	f	namespace:fmt	signature:(CStringRef format, ArgList args)
fmt::sprintf	spdlog/fmt/bundled/printf.h	/^inline std::wstring sprintf(WCStringRef format, ArgList args)$/;"	f	namespace:fmt	signature:(WCStringRef format, ArgList args)
fopen_s	spdlog/details/os.h	/^inline int fopen_s(FILE** fp, const filename_t& filename, const filename_t& mode)$/;"	f	namespace:spdlog::details::os	signature:(FILE** fp, const filename_t& filename, const filename_t& mode)
format	spdlog/details/pattern_formatter_impl.h	/^    virtual void format(details::log_msg& msg, const std::tm& tm_time) = 0;$/;"	p	class:spdlog::details::flag_formatter	access:public	signature:(details::log_msg& msg, const std::tm& tm_time)
format	spdlog/details/pattern_formatter_impl.h	/^inline void spdlog::pattern_formatter::format(details::log_msg& msg)$/;"	f	class:spdlog::pattern_formatter	signature:(details::log_msg& msg)
format	spdlog/fmt/bundled/format.h	/^        FormatFunc format;$/;"	m	struct:fmt::internal::Value::CustomValue	access:public
format	spdlog/fmt/bundled/format.h	/^    const Char *format(const Char *&format_str, const internal::Arg &arg);$/;"	p	class:fmt::BasicFormatter	access:public	signature:(const Char *&format_str, const internal::Arg &arg)
format	spdlog/fmt/bundled/format.h	/^    void format(BasicCStringRef<Char> format_str);$/;"	p	class:fmt::BasicFormatter	access:public	signature:(BasicCStringRef<Char> format_str)
format	spdlog/fmt/bundled/format.h	/^inline std::string format(CStringRef format_str, ArgList args)$/;"	f	signature:(CStringRef format_str, ArgList args)
format	spdlog/fmt/bundled/format.h	/^inline std::wstring format(WCStringRef format_str, ArgList args)$/;"	f	signature:(WCStringRef format_str, ArgList args)
format	spdlog/fmt/bundled/printf.h	/^    FMT_API void format(BasicCStringRef<Char> format_str);$/;"	p	class:fmt::PrintfFormatter	access:public	signature:(BasicCStringRef<Char> format_str)
format	spdlog/fmt/bundled/printf.h	/^void PrintfFormatter<Char, AF>::format(BasicCStringRef<Char> format_str)$/;"	f	class:fmt::PrintfFormatter	signature:(BasicCStringRef<Char> format_str)
format	spdlog/formatter.h	/^    virtual void format(details::log_msg& msg) = 0;$/;"	p	class:spdlog::formatter	access:public	signature:(details::log_msg& msg)
format_	spdlog/fmt/bundled/format.h	/^    const Char *format_;$/;"	m	class:fmt::BasicArgFormatter	access:private
format_arg	spdlog/fmt/bundled/format.h	/^void format_arg(Formatter &, const Char *, const T &)$/;"	f	namespace:fmt::internal	signature:(Formatter &, const Char *, const T &)
format_arg	spdlog/fmt/bundled/ostream.h	/^void format_arg(BasicFormatter<Char, ArgFormatter> &f,$/;"	f	namespace:fmt	signature:(BasicFormatter<Char, ArgFormatter> &f, const Char *&format_str, const T &value)
format_custom_arg	spdlog/fmt/bundled/format.h	/^    static void format_custom_arg($/;"	f	class:fmt::internal::MakeValue	access:private	signature:( void *formatter, const void *arg, void *format_str_ptr)
format_decimal	spdlog/fmt/bundled/format.h	/^    char *format_decimal(ULongLong value)$/;"	f	class:FormatInt	access:private	signature:(ULongLong value)
format_decimal	spdlog/fmt/bundled/format.h	/^inline void format_decimal(Char *buffer, UInt value, unsigned num_digits)$/;"	f	namespace:fmt::internal	signature:(Char *buffer, UInt value, unsigned num_digits)
format_decimal	spdlog/fmt/bundled/format.h	/^inline void format_decimal(Char *buffer, UInt value, unsigned num_digits,$/;"	f	namespace:fmt::internal	signature:(Char *buffer, UInt value, unsigned num_digits, ThousandsSep thousands_sep)
format_decimal	spdlog/fmt/bundled/format.h	/^inline void format_decimal(char *&buffer, T value)$/;"	f	signature:(char *&buffer, T value)
format_float	spdlog/fmt/bundled/format.cc	/^	int internal::CharTraits<char>::format_float($/;"	f	class:fmt::internal::CharTraits	signature:( char *buffer, std::size_t size, const char *format, unsigned width, int precision, T value)
format_float	spdlog/fmt/bundled/format.cc	/^	int internal::CharTraits<wchar_t>::format_float($/;"	f	class:fmt::internal::CharTraits	signature:( wchar_t *buffer, std::size_t size, const wchar_t *format, unsigned width, int precision, T value)
format_float	spdlog/fmt/bundled/format.cc	/^	template int internal::CharTraits<char>::format_float($/;"	p	class:fmt::internal::CharTraits	file:	signature:( char *buffer, std::size_t size, const char *format, unsigned width, int precision, double value)
format_float	spdlog/fmt/bundled/format.cc	/^	template int internal::CharTraits<char>::format_float($/;"	p	class:fmt::internal::CharTraits	file:	signature:( char *buffer, std::size_t size, const char *format, unsigned width, int precision, long double value)
format_float	spdlog/fmt/bundled/format.cc	/^	template int internal::CharTraits<wchar_t>::format_float($/;"	p	class:fmt::internal::CharTraits	file:	signature:( wchar_t *buffer, std::size_t size, const wchar_t *format, unsigned width, int precision, double value)
format_float	spdlog/fmt/bundled/format.cc	/^	template int internal::CharTraits<wchar_t>::format_float($/;"	p	class:fmt::internal::CharTraits	file:	signature:( wchar_t *buffer, std::size_t size, const wchar_t *format, unsigned width, int precision, long double value)
format_float	spdlog/fmt/bundled/format.h	/^    FMT_API static int format_float(char *buffer, std::size_t size,$/;"	p	class:fmt::internal::CharTraits	access:public	signature:(char *buffer, std::size_t size, const char *format, unsigned width, int precision, T value)
format_float	spdlog/fmt/bundled/format.h	/^    FMT_API static int format_float(wchar_t *buffer, std::size_t size,$/;"	p	class:fmt::internal::CharTraits	access:public	signature:(wchar_t *buffer, std::size_t size, const wchar_t *format, unsigned width, int precision, T value)
format_float	spdlog/fmt/bundled/format.h	/^extern template int CharTraits<char>::format_float<double>$/;"	p	class:fmt::internal::CharTraits	signature:(char *buffer, std::size_t size, const char* format, unsigned width, int precision, double value)
format_float	spdlog/fmt/bundled/format.h	/^extern template int CharTraits<char>::format_float<long double>$/;"	p	class:fmt::internal::CharTraits	signature:(char *buffer, std::size_t size, const char* format, unsigned width, int precision, long double value)
format_float	spdlog/fmt/bundled/format.h	/^extern template int CharTraits<wchar_t>::format_float<double>$/;"	p	class:fmt::internal::CharTraits	signature:(wchar_t *buffer, std::size_t size, const wchar_t* format, unsigned width, int precision, double value)
format_float	spdlog/fmt/bundled/format.h	/^extern template int CharTraits<wchar_t>::format_float<long double>$/;"	p	class:fmt::internal::CharTraits	signature:(wchar_t *buffer, std::size_t size, const wchar_t* format, unsigned width, int precision, long double value)
formatted	spdlog/details/log_msg.h	/^    fmt::MemoryWriter formatted;$/;"	m	struct:spdlog::details::log_msg	access:public
formatter	spdlog/details/registry.h	/^    void formatter(formatter_ptr f)$/;"	f	class:spdlog::details::registry_t	access:public	signature:(formatter_ptr f)
formatter	spdlog/formatter.h	/^class formatter$/;"	c	namespace:spdlog
formatter_	spdlog/fmt/bundled/format.h	/^    BasicFormatter<Char, Impl> &formatter_;$/;"	m	class:fmt::BasicArgFormatter	access:private
fprintf	spdlog/fmt/bundled/printf.h	/^FMT_API int fprintf(std::FILE *f, CStringRef format, ArgList args);$/;"	p	namespace:fmt	signature:(std::FILE *f, CStringRef format, ArgList args)
fprintf	spdlog/fmt/bundled/printf.h	/^inline int fprintf(std::ostream &os, CStringRef format_str, ArgList args)$/;"	f	namespace:fmt	signature:(std::ostream &os, CStringRef format_str, ArgList args)
fsFinalFloorStatus	DMCore/Outputs/Output.h	/^	TFloorStatus fsFinalFloorStatus;			\/\/ the floor status at the end of this output$/;"	m	class:COutput	access:protected
fsFloorStatus	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	TFloorStatus fsFloorStatus;             \/\/ indicates who has the floor$/;"	m	class:CDMCoreAgent	access:private
fsFloorStatus	DMCore/Agents/CoreAgents/StateManagerAgent.h	/^	TFloorStatus fsFloorStatus;			\/\/ who has the floor?$/;"	m	struct:__anon44	access:public
fsFree	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^			   fsFree,			\/\/ floor is not owned by anyone$/;"	e	enum:__anon54
fsSystem	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^			   fsSystem,		\/\/ floor owner is system$/;"	e	enum:__anon54
fsUnknown	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^typedef enum { fsUnknown,		\/\/ floor owner is unknown$/;"	e	enum:__anon54
fsUser	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^			   fsUser,			\/\/ floor owner is user$/;"	e	enum:__anon54
full_days	spdlog/details/pattern_formatter_impl.h	/^static const days_array& full_days()$/;"	f	namespace:spdlog::details	signature:()
full_formatter	spdlog/details/pattern_formatter_impl.h	/^class full_formatter:public flag_formatter$/;"	c	namespace:spdlog::details	inherits:flag_formatter
full_months	spdlog/details/pattern_formatter_impl.h	/^static const months_array& full_months()$/;"	f	namespace:spdlog::details	signature:()
galaxyCall	DMCore/Agents/CoreAgents/TrafficManagerAgent.h	/^	void galaxyCall(TExternalCallSpec ecsCall);$/;"	p	class:CTrafficManagerAgent	access:private	signature:(TExternalCallSpec ecsCall)
get	spdlog/details/registry.h	/^    std::shared_ptr<logger> get(const std::string& logger_name)$/;"	f	class:spdlog::details::registry_t	access:public	signature:(const std::string& logger_name)
get	spdlog/details/spdlog_impl.h	/^inline std::shared_ptr<spdlog::logger> spdlog::get(const std::string& name)$/;"	f	class:spdlog	signature:(const std::string& name)
get	spdlog/fmt/bundled/format.h	/^    static Char *get(Char *p)$/;"	f	class:BasicWriter	access:private	signature:(Char *p)
get	spdlog/fmt/bundled/format.h	/^    static Char *get(CharPtr p)$/;"	f	class:BasicWriter	access:private	signature:(CharPtr p)
get	spdlog/fmt/bundled/format.h	/^T &get();$/;"	p	namespace:fmt::internal	signature:()
get	spdlog/spdlog.h	/^std::shared_ptr<logger> get(const std::string& name);$/;"	p	namespace:spdlog	signature:(const std::string& name)
getConceptGroundingRequestIndex	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^int CGroundingManagerAgent::getConceptGroundingRequestIndex(CConcept* pConcept) {$/;"	f	class:CGroundingManagerAgent	signature:(CConcept* pConcept)
getConceptGroundingRequestIndex	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    int getConceptGroundingRequestIndex(CConcept* pConcept);$/;"	p	class:CGroundingManagerAgent	access:private	signature:(CConcept* pConcept)
getRecentOutputIndex	DMCore/Agents/CoreAgents/OutputManagerAgent.cpp	/^unsigned int COutputManagerAgent::getRecentOutputIndex(int iOutputId) {$/;"	f	class:COutputManagerAgent	signature:(int iOutputId)
getRecentOutputIndex	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^	unsigned int getRecentOutputIndex(int iConceptId);$/;"	p	class:COutputManagerAgent	access:private	signature:(int iConceptId)
get_allocator	spdlog/fmt/bundled/format.h	/^    Allocator get_allocator() const$/;"	f	class:fmt::internal::MemoryBuffer	access:public	signature:() const
get_arg	spdlog/fmt/bundled/format.h	/^    Arg get_arg(unsigned arg_index, const char *&error)$/;"	f	class:fmt::internal::FormatterBase	access:protected	signature:(unsigned arg_index, const char *&error)
get_arg	spdlog/fmt/bundled/printf.h	/^    internal::Arg get_arg($/;"	p	class:fmt::PrintfFormatter	access:private	signature:( const Char *s, unsigned arg_index = (std::numeric_limits<unsigned>::max)())
get_arg	spdlog/fmt/bundled/printf.h	/^internal::Arg PrintfFormatter<Char, AF>::get_arg(const Char *s,$/;"	f	class:fmt::PrintfFormatter	signature:(const Char *s, unsigned arg_index)
get_cached_offset	spdlog/details/pattern_formatter_impl.h	/^    int get_cached_offset(const log_msg& msg, const std::tm& tm_time)$/;"	f	class:spdlog::details::z_formatter	access:private	signature:(const log_msg& msg, const std::tm& tm_time)
gmcConfig	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    TGroundingManagerConfiguration gmcConfig;$/;"	m	class:CGroundingManagerAgent	access:private
gmthGroundingModelTypeRegistry	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    TGroundingModelsTypeHash gmthGroundingModelTypeRegistry;$/;"	m	class:CGroundingManagerAgent	access:private
gmtime	spdlog/details/os.h	/^inline std::tm gmtime()$/;"	f	namespace:spdlog::details::os	signature:()
gmtime	spdlog/details/os.h	/^inline std::tm gmtime(const std::time_t &time_tt)$/;"	f	namespace:spdlog::details::os	signature:(const std::time_t &time_tt)
green	spdlog/sinks/ansicolor_sink.h	/^    const std::string green      = "\\033[32m";$/;"	m	class:spdlog::sinks::ansicolor_sink	access:public
grey	spdlog/sinks/ansicolor_sink.h	/^    const std::string grey       = "\\033[30m";$/;"	m	class:spdlog::sinks::ansicolor_sink	access:public
grow	spdlog/fmt/bundled/format.cc	/^	template void internal::FixedBuffer<char>::grow(std::size_t);$/;"	p	class:fmt::internal::FixedBuffer	file:	signature:(std::size_t)
grow	spdlog/fmt/bundled/format.cc	/^	template void internal::FixedBuffer<wchar_t>::grow(std::size_t);$/;"	p	class:fmt::internal::FixedBuffer	file:	signature:(std::size_t)
grow	spdlog/fmt/bundled/format.cc	/^	void internal::FixedBuffer<Char>::grow(std::size_t)$/;"	f	class:fmt::internal::FixedBuffer	signature:(std::size_t)
grow	spdlog/fmt/bundled/format.h	/^    virtual void grow(std::size_t size) = 0;$/;"	p	class:fmt::Buffer	access:protected	signature:(std::size_t size)
grow	spdlog/fmt/bundled/format.h	/^void MemoryBuffer<T, SIZE, Allocator>::grow(std::size_t size)$/;"	f	class:fmt::internal::MemoryBuffer	signature:(std::size_t size)
grow_buffer	spdlog/fmt/bundled/format.h	/^    CharPtr grow_buffer(std::size_t n)$/;"	f	class:BasicWriter	access:private	signature:(std::size_t n)
handle_flag	spdlog/details/pattern_formatter_impl.h	/^inline void spdlog::pattern_formatter::handle_flag(char flag)$/;"	f	class:spdlog::pattern_formatter	signature:(char flag)
handle_flag	spdlog/formatter.h	/^    void handle_flag(char flag);$/;"	p	class:spdlog::pattern_formatter	access:private	signature:(char flag)
handle_flush_interval	spdlog/details/async_log_helper.h	/^    void handle_flush_interval(log_clock::time_point& now, log_clock::time_point& last_flush);$/;"	p	class:spdlog::details::async_log_helper	access:private	signature:(log_clock::time_point& now, log_clock::time_point& last_flush)
handle_flush_interval	spdlog/details/async_log_helper.h	/^inline void spdlog::details::async_log_helper::handle_flush_interval(log_clock::time_point& now, log_clock::time_point& last_flush)$/;"	f	class:spdlog::details::async_log_helper	signature:(log_clock::time_point& now, log_clock::time_point& last_flush)
hex	spdlog/fmt/bundled/format.h	/^IntFormatSpec<int, TypeSpec<'x'> > hex(int value);$/;"	p	namespace:fmt	signature:(int value)
hexu	spdlog/fmt/bundled/format.h	/^IntFormatSpec<int, TypeSpec<'X'> > hexu(int value);$/;"	p	namespace:fmt	signature:(int value)
i2fActionsValues	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    map<int, float> i2fActionsValues;$/;"	m	struct:__anon62	access:public
iCardinality	DMCore/Concepts/Concept.h	/^    int iCardinality;$/;"	m	class:CConcept	access:protected
iColor	DMCore/Log.h	/^    int iColor;             \/\/ the color that stream is displayed$/;"	m	struct:__anon63	access:public
iConceptsBlocked	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^    int iConceptsBlocked;           \/\/ the number of blocked concepts$/;"	m	struct:__anon51	access:public
iConceptsBound	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^    int iConceptsBound;             \/\/ the number of bound concepts$/;"	m	struct:__anon51	access:public
iDefaultOutputDevice	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^	unsigned int iDefaultOutputDevice;$/;"	m	class:COutputManagerAgent	access:private
iDefaultTimeoutPeriod	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	int iDefaultTimeoutPeriod;				\/\/ the default timeout period$/;"	m	class:CDMCoreAgent	access:private
iEHIndex	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	int iEHIndex;					\/\/ an index into it's correspondent history$/;"	m	struct:__anon47	access:public
iEHIndex	DMCore/Agents/CoreAgents/StateManagerAgent.h	/^	int iEHIndex;						\/\/ the execution history index matching $/;"	m	struct:__anon44	access:public
iExecuteCounter	DMCore/Agents/DialogAgents/DialogAgent.h	/^	int iExecuteCounter;$/;"	m	class:CDialogAgent	access:protected
iExecutionIndex	DMCore/Outputs/Output.h	/^	int iExecutionIndex;				\/\/ the index of the execution item$/;"	m	class:COutput	access:protected
iGroundingActionType	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    int iGroundingActionType;           \/\/ the grounding action type$/;"	m	struct:__anon40	access:public
iGroundingRequestStatus	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    int iGroundingRequestStatus;$/;"	m	struct:__anon39	access:public
iHypIndex	DMCore/Concepts/StructConcept.h	/^	int	iHypIndex;$/;"	m	class:CStructHyp	access:protected
iID	DMCore/Events/InteractionEvent.h	/^	int iID;$/;"	m	class:CInteractionEvent	access:protected
iInputTurnNumberAtExecution	DMCore/Agents/DialogAgents/BasicAgents/MARequest.h	/^	int iInputTurnNumberAtExecution;$/;"	m	class:CMARequest	access:protected
iLastBindingsIndex	DMCore/Agents/DialogAgents/DialogAgent.h	/^    int iLastBindingsIndex;$/;"	m	class:CDialogAgent	access:protected
iLastExecutionIndex	DMCore/Agents/DialogAgents/DialogAgent.h	/^    int iLastExecutionIndex;$/;"	m	class:CDialogAgent	access:protected
iLastExecutionInputIndex	DMCore/Agents/DialogAgents/DialogAgent.h	/^	int iLastExecutionInputIndex;$/;"	m	class:CDialogAgent	access:protected
iLastInputIndex	DMCore/Agents/DialogAgents/DialogAgent.h	/^    int iLastInputIndex;$/;"	m	class:CDialogAgent	access:protected
iLevel	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	int iLevel;						\/\/ the level in the agenda$/;"	m	struct:__anon49	access:public
iNumValidHyps	DMCore/Concepts/Concept.h	/^	int iNumValidHyps;$/;"	m	class:CConcept	access:protected
iNumValidPartialHyps	DMCore/Concepts/Concept.h	/^	int iNumValidPartialHyps;$/;"	m	class:CConcept	access:protected
iOutputCounter	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^	int iOutputCounter;$/;"	m	class:COutputManagerAgent	access:private
iOutputId	DMCore/Outputs/Output.h	/^	int iOutputId;						\/\/ the output id$/;"	m	class:COutput	access:protected
iParams	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^	int iParams;			\/\/ other parameters for the output device$/;"	m	struct:__anon41	access:public
iReOpenCounter	DMCore/Agents/DialogAgents/DialogAgent.h	/^    int iReOpenCounter;$/;"	m	class:CDialogAgent	access:protected
iRepeatCounter	DMCore/Outputs/Output.h	/^	int iRepeatCounter;					\/\/ the number of times this output has $/;"	m	class:COutput	access:protected
iResetCounter	DMCore/Agents/DialogAgents/DialogAgent.h	/^    int iResetCounter;$/;"	m	class:CDialogAgent	access:protected
iSlotsBlocked	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	int iSlotsBlocked;				\/\/ the number of slots that were blocked$/;"	m	struct:__anon51	access:public
iSlotsMatched	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	int iSlotsMatched;				\/\/ the number of slots that matched$/;"	m	struct:__anon51	access:public
iStateHistoryIndex	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	int iStateHistoryIndex;			\/\/ the index in the history of dialog$/;"	m	struct:__anon48	access:public
iSuggestedActionIndex	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    int iSuggestedActionIndex;$/;"	m	struct:__anon39	access:public
iSuggestedActionIndex	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    int iSuggestedActionIndex;$/;"	m	class:CGroundingModel	access:protected
iTimeoutPeriod	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^    int iTimeoutPeriod;						\/\/ the current timeout period$/;"	m	class:CDMCoreAgent	access:private
iTurnLastUpdated	DMCore/Concepts/Concept.h	/^    int iTurnLastUpdated;$/;"	m	class:CConcept	access:protected
iTurnNumber	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	int iTurnNumber;						\/\/ stores the current turn number$/;"	m	class:CDMCoreAgent	access:private
iTurnNumber	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    int iTurnNumber;$/;"	m	struct:__anon39	access:public
iTurnNumber	DMCore/Agents/CoreAgents/StateManagerAgent.h	/^    int iTurnNumber;					\/\/ the current turn number$/;"	m	struct:__anon44	access:public
iTurnsInFocusCounter	DMCore/Agents/DialogAgents/DialogAgent.h	/^    int iTurnsInFocusCounter;$/;"	m	class:CDialogAgent	access:protected
iType	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	int iType;						\/\/ the type of the forced update$/;"	m	struct:__anon50	access:public
iValue	DMCore/Concepts/IntConcept.h	/^	int iValue;                     \/\/ the actual value$/;"	m	class:CIntHyp	access:protected
info	spdlog/common.h	/^    info = 2,$/;"	e	enum:spdlog::level::__anon34
info	spdlog/details/logger_impl.h	/^inline void spdlog::logger::info(const T& msg)$/;"	f	class:spdlog::logger	signature:(const T& msg)
info	spdlog/details/logger_impl.h	/^inline void spdlog::logger::info(const char* fmt, const Args&... args)$/;"	f	class:spdlog::logger	signature:(const char* fmt, const Args&... args)
info	spdlog/logger.h	/^    template <typename T> void info(const T&);$/;"	p	class:spdlog::logger	access:public	signature:(const T&)
info	spdlog/logger.h	/^    template <typename... Args> void info(const char* fmt, const Args&... args);$/;"	p	class:spdlog::logger	access:public	signature:(const char* fmt, const Args&... args)
info_arch	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_arch	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_compiler	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_compiler	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_platform	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_platform	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_simulate	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v
info_simulate	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v
info_simulate_version	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	/^char const info_simulate_version[] = {$/;"	v
info_simulate_version	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_simulate_version[] = {$/;"	v
info_version	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	/^char const info_version[] = {$/;"	v
info_version	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_version[] = {$/;"	v
init	spdlog/fmt/bundled/format.cc	/^	FMT_FUNC void SystemError::init($/;"	f	class:fmt::SystemError	signature:( int err_code, CStringRef format_str, ArgList args)
init	spdlog/fmt/bundled/format.cc	/^	FMT_FUNC void WindowsError::init($/;"	f	class:fmt::WindowsError	signature:( int err_code, CStringRef format_str, ArgList args)
init	spdlog/fmt/bundled/format.cc	/^	template void internal::ArgMap<char>::init(const ArgList &args);$/;"	p	class:fmt::internal::ArgMap	file:	signature:(const ArgList &args)
init	spdlog/fmt/bundled/format.cc	/^	template void internal::ArgMap<wchar_t>::init(const ArgList &args);$/;"	p	class:fmt::internal::ArgMap	file:	signature:(const ArgList &args)
init	spdlog/fmt/bundled/format.cc	/^	void internal::ArgMap<Char>::init(const ArgList &args)$/;"	f	class:fmt::internal::ArgMap	signature:(const ArgList &args)
init	spdlog/fmt/bundled/format.h	/^    FMT_API void init(const ArgList &args);$/;"	p	class:fmt::internal::ArgMap	access:public	signature:(const ArgList &args)
init	spdlog/fmt/bundled/format.h	/^    FMT_API void init(int error_code, CStringRef format_str, ArgList args);$/;"	p	class:WindowsError	access:private	signature:(int error_code, CStringRef format_str, ArgList args)
init	spdlog/fmt/bundled/format.h	/^    void init(int err_code, CStringRef format_str, ArgList args);$/;"	p	class:SystemError	access:private	signature:(int err_code, CStringRef format_str, ArgList args)
input_queue	DMCore/message/message.h	/^threadsafe_queue<std::string> input_queue;$/;"	v
input_queue	main.cpp	/^threadsafe_queue<std::string> input_queue;$/;"	v
instance	spdlog/details/registry.h	/^    static registry_t<Mutex>& instance()$/;"	f	class:spdlog::details::registry_t	access:public	signature:()
instance	spdlog/sinks/stdout_sinks.h	/^    static std::shared_ptr<MyType> instance()$/;"	f	class:spdlog::sinks::stderr_sink	access:public	signature:()
instance	spdlog/sinks/stdout_sinks.h	/^    static std::shared_ptr<MyType> instance()$/;"	f	class:spdlog::sinks::stdout_sink	access:public	signature:()
int_type	spdlog/fmt/bundled/ostream.h	/^    typedef typename std::basic_streambuf<Char>::int_type int_type;$/;"	t	class:fmt::internal::FormatBuf	access:private
int_value	spdlog/fmt/bundled/format.h	/^        int int_value;$/;"	m	union:fmt::internal::Value::__anon18	access:public
internal	spdlog/fmt/bundled/format.cc	/^	namespace internal {$/;"	n	namespace:fmt	file:
internal	spdlog/fmt/bundled/format.h	/^namespace internal$/;"	n	namespace:fmt
internal	spdlog/fmt/bundled/ostream.cc	/^	namespace internal {$/;"	n	namespace:fmt	file:
internal	spdlog/fmt/bundled/ostream.h	/^namespace internal$/;"	n	namespace:fmt
internal	spdlog/fmt/bundled/printf.h	/^namespace internal$/;"	n	namespace:fmt
intmax_t	spdlog/fmt/bundled/format.h	/^typedef __int64          intmax_t;$/;"	t
is_negative	spdlog/fmt/bundled/format.h	/^    static bool is_negative(T value)$/;"	f	struct:fmt::internal::SignChecker	access:public	signature:(T value)
is_negative	spdlog/fmt/bundled/format.h	/^    static bool is_negative(T)$/;"	f	struct:fmt::internal::SignChecker	access:public	signature:(T)
is_negative	spdlog/fmt/bundled/format.h	/^inline bool is_negative(T value)$/;"	f	namespace:fmt::internal	signature:(T value)
is_same	spdlog/fmt/bundled/printf.h	/^struct is_same$/;"	s	namespace:fmt::internal
is_same	spdlog/fmt/bundled/printf.h	/^struct is_same<T, T>$/;"	s	namespace:fmt::internal
isinf	spdlog/fmt/bundled/format.h	/^inline DummyInt isinf(...)$/;"	f	namespace:fmt::internal	signature:(....)
isinfinity	spdlog/fmt/bundled/format.h	/^    static bool isinfinity(T x)$/;"	f	class:std::numeric_limits	access:public	signature:(T x)
isnan	spdlog/fmt/bundled/format.h	/^inline DummyInt isnan(...)$/;"	f	namespace:fmt::internal	signature:(....)
isnegative	spdlog/fmt/bundled/format.h	/^    static bool isnegative(double x)$/;"	f	class:std::numeric_limits	access:public	signature:(double x)
isnotanumber	spdlog/fmt/bundled/format.h	/^    static bool isnotanumber(T x)$/;"	f	class:std::numeric_limits	access:public	signature:(T x)
level	spdlog/common.h	/^namespace level$/;"	n	namespace:spdlog
level	spdlog/details/async_log_helper.h	/^        level::level_enum level;$/;"	m	struct:spdlog::details::async_log_helper::async_msg	access:public
level	spdlog/details/log_msg.h	/^    level::level_enum level;$/;"	m	struct:spdlog::details::log_msg	access:public
level	spdlog/details/logger_impl.h	/^inline spdlog::level::level_enum spdlog::logger::level() const$/;"	f	class:spdlog::logger	signature:() const
level	spdlog/logger.h	/^    level::level_enum level() const;$/;"	p	class:spdlog::logger	access:public	signature:() const
level	spdlog/sinks/sink.h	/^    level::level_enum level() const;$/;"	p	class:spdlog::sinks::sink	access:public	signature:() const
level	spdlog/sinks/sink.h	/^inline level::level_enum sink::level() const$/;"	f	class:spdlog::sinks::sink	signature:() const
level_enum	spdlog/common.h	/^} level_enum;$/;"	t	namespace:spdlog::level	typeref:enum:spdlog::level::__anon34
level_formatter	spdlog/details/pattern_formatter_impl.h	/^class level_formatter:public flag_formatter$/;"	c	namespace:spdlog::details	inherits:flag_formatter
load	spdlog/details/null_mutex.h	/^    int load(std::memory_order) const$/;"	f	struct:spdlog::details::null_atomic_int	access:public	signature:(std::memory_order) const
loadPolicy	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^string CGroundingManagerAgent::loadPolicy(string sFileName) {$/;"	f	class:CGroundingManagerAgent	signature:(string sFileName)
loadPolicy	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^	string loadPolicy(string sFileName);$/;"	p	class:CGroundingManagerAgent	access:private	signature:(string sFileName)
localtime	spdlog/details/os.h	/^inline std::tm localtime()$/;"	f	namespace:spdlog::details::os	signature:()
localtime	spdlog/details/os.h	/^inline std::tm localtime(const std::time_t &time_tt)$/;"	f	namespace:spdlog::details::os	signature:(const std::time_t &time_tt)
lock	spdlog/details/null_mutex.h	/^    void lock() {}$/;"	f	struct:spdlog::details::null_mutex	access:public	signature:()
log	spdlog/details/async_log_helper.h	/^        log,$/;"	m	class:spdlog::details::async_log_helper::async_msg_type	access:private
log	spdlog/details/async_log_helper.h	/^    void log(const details::log_msg& msg);$/;"	p	class:spdlog::details::async_log_helper	access:public	signature:(const details::log_msg& msg)
log	spdlog/details/async_log_helper.h	/^inline void spdlog::details::async_log_helper::log(const details::log_msg& msg)$/;"	f	class:spdlog::details::async_log_helper	signature:(const details::log_msg& msg)
log	spdlog/details/logger_impl.h	/^inline void spdlog::logger::log(level::level_enum lvl, const T& msg)$/;"	f	class:spdlog::logger	signature:(level::level_enum lvl, const T& msg)
log	spdlog/details/logger_impl.h	/^inline void spdlog::logger::log(level::level_enum lvl, const char* fmt, const Args&... args)$/;"	f	class:spdlog::logger	signature:(level::level_enum lvl, const char* fmt, const Args&... args)
log	spdlog/details/logger_impl.h	/^inline void spdlog::logger::log(level::level_enum lvl, const char* msg)$/;"	f	class:spdlog::logger	signature:(level::level_enum lvl, const char* msg)
log	spdlog/logger.h	/^    template <typename T> void log(level::level_enum lvl, const T&);$/;"	p	class:spdlog::logger	access:public	signature:(level::level_enum lvl, const T&)
log	spdlog/logger.h	/^    template <typename... Args> void log(level::level_enum lvl, const char* fmt, const Args&... args);$/;"	p	class:spdlog::logger	access:public	signature:(level::level_enum lvl, const char* fmt, const Args&... args)
log	spdlog/logger.h	/^    template <typename... Args> void log(level::level_enum lvl, const char* msg);$/;"	p	class:spdlog::logger	access:public	signature:(level::level_enum lvl, const char* msg)
log	spdlog/sinks/ansicolor_sink.h	/^inline void ansicolor_sink::log(const details::log_msg& msg)$/;"	f	class:spdlog::sinks::ansicolor_sink	signature:(const details::log_msg& msg)
log	spdlog/sinks/sink.h	/^    virtual void log(const details::log_msg& msg) = 0;$/;"	p	class:spdlog::sinks::sink	access:public	signature:(const details::log_msg& msg)
log_msg	spdlog/details/log_msg.h	/^    log_msg() = default;$/;"	p	struct:spdlog::details::log_msg	access:public	signature:()
log_msg	spdlog/details/log_msg.h	/^    log_msg(const std::string *loggers_name, level::level_enum lvl) : logger_name(loggers_name), level(lvl)$/;"	f	struct:spdlog::details::log_msg	access:public	signature:(const std::string *loggers_name, level::level_enum lvl)
log_msg	spdlog/details/log_msg.h	/^struct log_msg$/;"	s	namespace:spdlog::details
logger	spdlog/details/logger_impl.h	/^inline spdlog::logger::logger(const std::string& logger_name, const It& begin, const It& end):$/;"	f	class:spdlog::logger	signature:(const std::string& logger_name, const It& begin, const It& end)
logger	spdlog/details/logger_impl.h	/^inline spdlog::logger::logger(const std::string& logger_name, sinks_init_list sinks_list):$/;"	f	class:spdlog::logger	signature:(const std::string& logger_name, sinks_init_list sinks_list)
logger	spdlog/details/logger_impl.h	/^inline spdlog::logger::logger(const std::string& logger_name, spdlog::sink_ptr single_sink):$/;"	f	class:spdlog::logger	signature:(const std::string& logger_name, spdlog::sink_ptr single_sink)
logger	spdlog/logger.h	/^    logger(const logger&) = delete;$/;"	p	class:spdlog::logger	access:public	signature:(const logger&)
logger	spdlog/logger.h	/^    logger(const std::string& logger_name, sink_ptr single_sink);$/;"	p	class:spdlog::logger	access:public	signature:(const std::string& logger_name, sink_ptr single_sink)
logger	spdlog/logger.h	/^    logger(const std::string& name, const It& begin, const It& end);$/;"	p	class:spdlog::logger	access:public	signature:(const std::string& name, const It& begin, const It& end)
logger	spdlog/logger.h	/^    logger(const std::string& name, sinks_init_list);$/;"	p	class:spdlog::logger	access:public	signature:(const std::string& name, sinks_init_list)
logger	spdlog/logger.h	/^class logger$/;"	c	namespace:spdlog
logger_name	spdlog/details/async_log_helper.h	/^        std::string logger_name;$/;"	m	struct:spdlog::details::async_log_helper::async_msg	access:public
logger_name	spdlog/details/log_msg.h	/^    const std::string *logger_name;$/;"	m	struct:spdlog::details::log_msg	access:public
long_double_value	spdlog/fmt/bundled/format.h	/^        long double long_double_value;$/;"	m	union:fmt::internal::Value::__anon18	access:public
long_long_value	spdlog/fmt/bundled/format.h	/^        LongLong long_long_value;$/;"	m	union:fmt::internal::Value::__anon18	access:public
lshLogStreams	DMCore/Log.h	/^static TLoggingStreamsHash lshLogStreams;$/;"	v
m_formatter	spdlog/details/pattern_formatter_impl.h	/^class m_formatter:public flag_formatter$/;"	c	namespace:spdlog::details	inherits:flag_formatter
magenta	spdlog/sinks/ansicolor_sink.h	/^    const std::string magenta    = "\\033[35m";$/;"	m	class:spdlog::sinks::ansicolor_sink	access:public
main	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	/^int main(int argc, char* argv[])$/;"	f	signature:(int argc, char* argv[])
main	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	/^void main() {}$/;"	f
main	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^int main(int argc, char* argv[])$/;"	f	signature:(int argc, char* argv[])
main	CMakeFiles/feature_tests.c	/^int main(int argc, char** argv) { (void)argv; return features[argc]; }$/;"	f	signature:(int argc, char** argv)
main	CMakeFiles/feature_tests.cxx	/^int main(int argc, char** argv) { (void)argv; return features[argc]; }$/;"	f	signature:(int argc, char** argv)
main	main.cpp	/^int main(){$/;"	f	signature:()
make	spdlog/fmt/bundled/format.h	/^    static Arg make(const T &value)$/;"	f	struct:fmt::ArgArray	access:public	signature:(const T &value)
make	spdlog/fmt/bundled/format.h	/^static Value make(const T &value)$/;"	f	namespace:fmt::internal	signature:(const T &value)
make_ptr	spdlog/fmt/bundled/format.h	/^inline T *make_ptr(T *ptr, std::size_t)$/;"	f	namespace:fmt::internal	signature:(T *ptr, std::size_t)
make_ptr	spdlog/fmt/bundled/format.h	/^inline stdext::checked_array_iterator<T*> make_ptr(T *ptr, std::size_t size)$/;"	f	namespace:fmt::internal	signature:(T *ptr, std::size_t size)
make_type	spdlog/fmt/bundled/format.h	/^inline uint64_t make_type()$/;"	f	namespace:fmt::internal	signature:()
make_type	spdlog/fmt/bundled/format.h	/^inline uint64_t make_type(const Arg &first, const Args & ... tail)$/;"	f	namespace:fmt	signature:(const Arg &first, const Args & ... tail)
make_type	spdlog/fmt/bundled/format.h	/^inline uint64_t make_type(const T &arg)$/;"	f	namespace:fmt::internal	signature:(const T &arg)
mapCE	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	TMapCE mapCE;					\/\/ the hash of compiled expectations$/;"	m	struct:__anon45	access:public
mapExternalPolicies	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    TExternalPolicies mapExternalPolicies;$/;"	m	class:CGroundingManagerAgent	access:private
map_	spdlog/fmt/bundled/format.h	/^    MapType map_;$/;"	m	class:fmt::internal::ArgMap	access:private
map_	spdlog/fmt/bundled/format.h	/^    internal::ArgMap<Char> map_;$/;"	m	class:fmt::BasicFormatter	access:private
matchesSlot	DMCore/Events/InteractionEvent.cpp	/^bool CInteractionEvent::matchesSlot( string pattern, string slot) {$/;"	f	class:CInteractionEvent	signature:( string pattern, string slot)
matchesSlot	DMCore/Events/InteractionEvent.h	/^	bool matchesSlot( string slot, string pattern);$/;"	p	class:CInteractionEvent	access:private	signature:( string slot, string pattern)
max_size_	spdlog/details/mpmc_bounded_q.h	/^    size_t const max_size_;$/;"	m	class:spdlog::details::mpmc_bounded_queue	access:private
mmAsFirstChild	DMCore/Agents/CoreAgents/DTTManagerAgent.h	/^	mmAsFirstChild,$/;"	e	enum:__anon42
mmAsLastChild	DMCore/Agents/CoreAgents/DTTManagerAgent.h	/^	mmAsLastChild,$/;"	e	enum:__anon42
mmAsLeftSibling	DMCore/Agents/CoreAgents/DTTManagerAgent.h	/^	mmAsLeftSibling,$/;"	e	enum:__anon42
mmAsRightSibling	DMCore/Agents/CoreAgents/DTTManagerAgent.h	/^	mmAsRightSibling,$/;"	e	enum:__anon42
months	spdlog/details/pattern_formatter_impl.h	/^static const months_array& months()$/;"	f	namespace:spdlog::details	signature:()
move	spdlog/details/async_log_helper.h	/^                    msg_type(std::move(other.msg_type))$/;"	f	struct:spdlog::details::async_log_helper::async_msg	access:public	signature:(other.msg_type)
move	spdlog/fmt/bundled/format.h	/^    void move(MemoryBuffer &other)$/;"	f	class:fmt::internal::MemoryBuffer	access:private	signature:(MemoryBuffer &other)
mpmc_bounded_queue	spdlog/details/mpmc_bounded_q.h	/^    mpmc_bounded_queue(mpmc_bounded_queue const&) = delete;$/;"	p	class:spdlog::details::mpmc_bounded_queue	access:private	signature:(mpmc_bounded_queue const&)
mpmc_bounded_queue	spdlog/details/mpmc_bounded_q.h	/^    mpmc_bounded_queue(size_t buffer_size)$/;"	f	class:spdlog::details::mpmc_bounded_queue	access:public	signature:(size_t buffer_size)
mpmc_bounded_queue	spdlog/details/mpmc_bounded_q.h	/^class mpmc_bounded_queue$/;"	c	namespace:spdlog::details
msg_type	spdlog/details/async_log_helper.h	/^        async_msg_type msg_type;$/;"	m	struct:spdlog::details::async_log_helper::async_msg	access:public
msvc_sink	spdlog/sinks/msvc_sink.h	/^    explicit msvc_sink()$/;"	f	class:spdlog::sinks::msvc_sink	access:public	signature:()
msvc_sink	spdlog/sinks/msvc_sink.h	/^class msvc_sink : public base_sink < Mutex >$/;"	c	namespace:spdlog::sinks	inherits:base_sink
msvc_sink_mt	spdlog/sinks/msvc_sink.h	/^typedef msvc_sink<std::mutex> msvc_sink_mt;$/;"	t	namespace:spdlog::sinks
msvc_sink_st	spdlog/sinks/msvc_sink.h	/^typedef msvc_sink<details::null_mutex> msvc_sink_st;$/;"	t	namespace:spdlog::sinks
mut	DMCore/message/threadsafe_queue.h	/^  mutable std::mutex mut;$/;"	m	class:threadsafe_queue	access:public
my_logger	DMCore/Log.cpp	/^auto my_logger = spd::basic_logger_mt("basic_logger","\/home\/alex\/c++\/DM\/logs\/log.txt");$/;"	v
name	spdlog/details/logger_impl.h	/^inline const std::string& spdlog::logger::name() const$/;"	f	class:spdlog::logger	signature:() const
name	spdlog/fmt/bundled/format.h	/^    BasicStringRef<Char> name;$/;"	m	struct:fmt::internal::NamedArg	access:public
name	spdlog/logger.h	/^    const std::string& name() const;$/;"	p	class:spdlog::logger	access:public	signature:() const
name_formatter	spdlog/details/pattern_formatter_impl.h	/^class name_formatter:public flag_formatter$/;"	c	namespace:spdlog::details::__anon1	inherits:flag_formatter
next_arg	spdlog/fmt/bundled/format.h	/^    Arg next_arg(const char *&error)$/;"	f	class:fmt::internal::FormatterBase	access:protected	signature:(const char *&error)
next_arg_index_	spdlog/fmt/bundled/format.h	/^    int next_arg_index_;$/;"	m	class:fmt::internal::FormatterBase	access:private
now	spdlog/details/os.h	/^inline spdlog::log_clock::time_point now()$/;"	f	namespace:spdlog::details::os	signature:()
null_atomic_int	spdlog/details/null_mutex.h	/^    null_atomic_int() = default;$/;"	p	struct:spdlog::details::null_atomic_int	access:public	signature:()
null_atomic_int	spdlog/details/null_mutex.h	/^    null_atomic_int(int val):value(val)$/;"	f	struct:spdlog::details::null_atomic_int	access:public	signature:(int val)
null_atomic_int	spdlog/details/null_mutex.h	/^struct null_atomic_int$/;"	s	namespace:spdlog::details
null_mutex	spdlog/details/null_mutex.h	/^struct null_mutex$/;"	s	namespace:spdlog::details
null_sink	spdlog/sinks/null_sink.h	/^class null_sink : public base_sink < Mutex >$/;"	c	namespace:spdlog::sinks	inherits:base_sink
null_sink_mt	spdlog/sinks/null_sink.h	/^typedef null_sink<details::null_mutex> null_sink_mt;$/;"	t	namespace:spdlog::sinks
null_sink_st	spdlog/sinks/null_sink.h	/^typedef null_sink<details::null_mutex> null_sink_st;$/;"	t	namespace:spdlog::sinks
numeric_limits	spdlog/fmt/bundled/format.h	/^class numeric_limits<fmt::internal::DummyInt>:$/;"	c	namespace:std	inherits:std::numeric_limits
oaaCall	DMCore/Agents/CoreAgents/TrafficManagerAgent.h	/^	void oaaCall(TExternalCallSpec ecsCall);$/;"	p	class:CTrafficManagerAgent	access:private	signature:(TExternalCallSpec ecsCall)
oct	spdlog/fmt/bundled/format.h	/^IntFormatSpec<int, TypeSpec<'o'> > oct(int value);$/;"	p	namespace:fmt	signature:(int value)
off	spdlog/common.h	/^    off = 6$/;"	e	enum:spdlog::level::__anon34
ohHistory	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^	COutputHistory ohHistory;			$/;"	m	class:COutputManagerAgent	access:private
on_blue	spdlog/sinks/ansicolor_sink.h	/^    const std::string on_blue    = "\\033[44m";$/;"	m	class:spdlog::sinks::ansicolor_sink	access:public
on_cyan	spdlog/sinks/ansicolor_sink.h	/^    const std::string on_cyan    = "\\033[46m";$/;"	m	class:spdlog::sinks::ansicolor_sink	access:public
on_green	spdlog/sinks/ansicolor_sink.h	/^    const std::string on_green   = "\\033[42m";$/;"	m	class:spdlog::sinks::ansicolor_sink	access:public
on_grey	spdlog/sinks/ansicolor_sink.h	/^    const std::string on_grey    = "\\033[40m";$/;"	m	class:spdlog::sinks::ansicolor_sink	access:public
on_magenta	spdlog/sinks/ansicolor_sink.h	/^    const std::string on_magenta = "\\033[45m";$/;"	m	class:spdlog::sinks::ansicolor_sink	access:public
on_red	spdlog/sinks/ansicolor_sink.h	/^    const std::string on_red     = "\\033[41m";$/;"	m	class:spdlog::sinks::ansicolor_sink	access:public
on_white	spdlog/sinks/ansicolor_sink.h	/^    const std::string on_white   = "\\033[47m";$/;"	m	class:spdlog::sinks::ansicolor_sink	access:public
on_yellow	spdlog/sinks/ansicolor_sink.h	/^    const std::string on_yellow  = "\\033[43m";$/;"	m	class:spdlog::sinks::ansicolor_sink	access:public
open	spdlog/details/file_helper.h	/^    void open(const filename_t& fname, bool truncate = false)$/;"	f	class:spdlog::details::file_helper	access:public	signature:(const filename_t& fname, bool truncate = false)
open_interval	spdlog/details/file_helper.h	/^    const int open_interval = 10;$/;"	m	class:spdlog::details::file_helper	access:public
open_tries	spdlog/details/file_helper.h	/^    const int open_tries = 5;$/;"	m	class:spdlog::details::file_helper	access:public
operator !=	DMCore/Concepts/Concept.cpp	/^bool CConcept::operator != (CConcept& rAConcept) {$/;"	f	class:CConcept	signature:(CConcept& rAConcept)
operator !=	DMCore/Concepts/Concept.h	/^    virtual bool operator != (CConcept& rAConcept);$/;"	p	class:CConcept	access:public	signature:(CConcept& rAConcept)
operator !=	spdlog/details/os.h	/^inline bool operator!=(const std::tm& tm1, const std::tm& tm2)$/;"	f	namespace:spdlog::details::os	signature:(const std::tm& tm1, const std::tm& tm2)
operator !=	spdlog/fmt/bundled/format.h	/^    friend bool operator!=(BasicStringRef lhs, BasicStringRef rhs)$/;"	f	class:fmt::BasicStringRef	access:friend	signature:(BasicStringRef lhs, BasicStringRef rhs)
operator ()	spdlog/fmt/bundled/format.h	/^    void operator()(Char *&buffer)$/;"	f	class:fmt::internal::ThousandsSep	access:public	signature:(Char *&buffer)
operator ()	spdlog/fmt/bundled/format.h	/^    void operator()(Char *)$/;"	f	struct:fmt::internal::NoThousandsSep	access:public	signature:(Char *)
operator +	Utils/Utils.cpp	/^string operator + (const string sString1, const string sString2) {$/;"	f	signature:(const string sString1, const string sString2)
operator +	Utils/Utils.h	/^string operator + (const string sString1, const string sString2);$/;"	p	signature:(const string sString1, const string sString2)
operator <	DMCore/Concepts/ArrayConcept.cpp	/^bool CArrayConcept::operator < (CConcept& rAConcept) {$/;"	f	class:CArrayConcept	signature:(CConcept& rAConcept)
operator <	DMCore/Concepts/ArrayConcept.h	/^    virtual bool operator < (CConcept& rAConcept);$/;"	p	class:CArrayConcept	access:public	signature:(CConcept& rAConcept)
operator <	DMCore/Concepts/BoolConcept.cpp	/^bool CBoolHyp::operator < (CHyp& rAHyp) {   $/;"	f	class:CBoolHyp	signature:(CHyp& rAHyp)
operator <	DMCore/Concepts/BoolConcept.h	/^    virtual bool operator < (CHyp& rAHyp);$/;"	p	class:CBoolHyp	access:public	signature:(CHyp& rAHyp)
operator <	DMCore/Concepts/Concept.cpp	/^bool CConcept::operator < (CConcept& rAConcept) {$/;"	f	class:CConcept	signature:(CConcept& rAConcept)
operator <	DMCore/Concepts/Concept.cpp	/^bool CHyp::operator < (CHyp& rAHyp) {$/;"	f	class:CHyp	signature:(CHyp& rAHyp)
operator <	DMCore/Concepts/Concept.h	/^    virtual bool operator < (CConcept& rAConcept);$/;"	p	class:CConcept	access:public	signature:(CConcept& rAConcept)
operator <	DMCore/Concepts/Concept.h	/^    virtual bool operator < (CHyp& rAHyp);$/;"	p	class:CHyp	access:public	signature:(CHyp& rAHyp)
operator <	DMCore/Concepts/FloatConcept.cpp	/^bool CFloatHyp::operator < (CHyp& rAHyp) {$/;"	f	class:CFloatHyp	signature:(CHyp& rAHyp)
operator <	DMCore/Concepts/FloatConcept.h	/^    virtual bool operator < (CHyp& rAHyp);$/;"	p	class:CFloatHyp	access:public	signature:(CHyp& rAHyp)
operator <	DMCore/Concepts/FrameConcept.cpp	/^bool CFrameConcept::operator < (CConcept& rAConcept) {$/;"	f	class:CFrameConcept	signature:(CConcept& rAConcept)
operator <	DMCore/Concepts/FrameConcept.h	/^    virtual bool operator < (CConcept& rAConcept);$/;"	p	class:CFrameConcept	access:public	signature:(CConcept& rAConcept)
operator <	DMCore/Concepts/IntConcept.cpp	/^bool CIntHyp::operator < (CHyp& rAHyp) {$/;"	f	class:CIntHyp	signature:(CHyp& rAHyp)
operator <	DMCore/Concepts/IntConcept.h	/^    virtual bool operator < (CHyp& rAHyp);$/;"	p	class:CIntHyp	access:public	signature:(CHyp& rAHyp)
operator <	DMCore/Concepts/StringConcept.cpp	/^bool CStringHyp::operator < (CHyp& rAHyp) {    $/;"	f	class:CStringHyp	signature:(CHyp& rAHyp)
operator <	DMCore/Concepts/StringConcept.h	/^    virtual bool operator < (CHyp& rAHyp);$/;"	p	class:CStringHyp	access:public	signature:(CHyp& rAHyp)
operator <	DMCore/Concepts/StructConcept.cpp	/^bool CStructConcept::operator < (CConcept& rAConcept) {$/;"	f	class:CStructConcept	signature:(CConcept& rAConcept)
operator <	DMCore/Concepts/StructConcept.cpp	/^bool CStructHyp::operator < (CHyp& rAHyp) {   $/;"	f	class:CStructHyp	signature:(CHyp& rAHyp)
operator <	DMCore/Concepts/StructConcept.h	/^    virtual bool operator < (CConcept& rAConcept);$/;"	p	class:CStructConcept	access:public	signature:(CConcept& rAConcept)
operator <	DMCore/Concepts/StructConcept.h	/^    virtual bool operator < (CHyp& rAHyp);$/;"	p	class:CStructHyp	access:public	signature:(CHyp& rAHyp)
operator <	spdlog/fmt/bundled/format.h	/^    friend bool operator<(BasicStringRef lhs, BasicStringRef rhs)$/;"	f	class:fmt::BasicStringRef	access:friend	signature:(BasicStringRef lhs, BasicStringRef rhs)
operator <<	spdlog/fmt/bundled/format.h	/^    BasicWriter &operator<<($/;"	f	class:BasicWriter	access:public	signature:( typename internal::WCharHelper<StringRef, Char>::Supported value)
operator <<	spdlog/fmt/bundled/format.h	/^    BasicWriter &operator<<($/;"	f	class:BasicWriter	access:public	signature:( typename internal::WCharHelper<wchar_t, Char>::Supported value)
operator <<	spdlog/fmt/bundled/format.h	/^    BasicWriter &operator<<(IntFormatSpec<T, Spec, FillChar> spec)$/;"	f	class:BasicWriter	access:public	signature:(IntFormatSpec<T, Spec, FillChar> spec)
operator <<	spdlog/fmt/bundled/format.h	/^    BasicWriter &operator<<(LongLong value)$/;"	f	class:BasicWriter	access:public	signature:(LongLong value)
operator <<	spdlog/fmt/bundled/format.h	/^    BasicWriter &operator<<(ULongLong value)$/;"	f	class:BasicWriter	access:public	signature:(ULongLong value)
operator <<	spdlog/fmt/bundled/format.h	/^    BasicWriter &operator<<(char value)$/;"	f	class:BasicWriter	access:public	signature:(char value)
operator <<	spdlog/fmt/bundled/format.h	/^    BasicWriter &operator<<(const StrFormatSpec<StrChar> &spec)$/;"	f	class:BasicWriter	access:public	signature:(const StrFormatSpec<StrChar> &spec)
operator <<	spdlog/fmt/bundled/format.h	/^    BasicWriter &operator<<(double value)$/;"	f	class:BasicWriter	access:public	signature:(double value)
operator <<	spdlog/fmt/bundled/format.h	/^    BasicWriter &operator<<(fmt::BasicStringRef<Char> value)$/;"	f	class:BasicWriter	access:public	signature:(fmt::BasicStringRef<Char> value)
operator <<	spdlog/fmt/bundled/format.h	/^    BasicWriter &operator<<(int value)$/;"	f	class:BasicWriter	access:public	signature:(int value)
operator <<	spdlog/fmt/bundled/format.h	/^    BasicWriter &operator<<(long double value)$/;"	f	class:BasicWriter	access:public	signature:(long double value)
operator <<	spdlog/fmt/bundled/format.h	/^    BasicWriter &operator<<(long value)$/;"	f	class:BasicWriter	access:public	signature:(long value)
operator <<	spdlog/fmt/bundled/format.h	/^    BasicWriter &operator<<(unsigned long value)$/;"	f	class:BasicWriter	access:public	signature:(unsigned long value)
operator <<	spdlog/fmt/bundled/format.h	/^    BasicWriter &operator<<(unsigned value)$/;"	f	class:BasicWriter	access:public	signature:(unsigned value)
operator <<	spdlog/fmt/bundled/format.h	/^    void operator<<($/;"	p	class:BasicWriter	access:private	signature:( typename internal::WCharHelper<const wchar_t *, Char>::Unsupported)
operator <<	spdlog/fmt/bundled/format.h	/^    void operator<<(typename internal::WCharHelper<wchar_t, Char>::Unsupported);$/;"	p	class:BasicWriter	access:private	signature:(typename internal::WCharHelper<wchar_t, Char>::Unsupported)
operator <<	spdlog/fmt/bundled/ostream.h	/^    void operator<<(Null<>);$/;"	p	struct:fmt::internal::DummyStream	access:public	signature:(Null<)
operator <<	spdlog/fmt/bundled/ostream.h	/^No &operator<<(std::ostream &, int);$/;"	p	namespace:fmt::internal	signature:(std::ostream &, int)
operator <=	DMCore/Concepts/ArrayConcept.cpp	/^bool CArrayConcept::operator <= (CConcept& rAConcept) {$/;"	f	class:CArrayConcept	signature:(CConcept& rAConcept)
operator <=	DMCore/Concepts/ArrayConcept.h	/^    virtual bool operator <= (CConcept& rAConcept);$/;"	p	class:CArrayConcept	access:public	signature:(CConcept& rAConcept)
operator <=	DMCore/Concepts/BoolConcept.cpp	/^bool CBoolHyp::operator <= (CHyp& rAHyp) {   $/;"	f	class:CBoolHyp	signature:(CHyp& rAHyp)
operator <=	DMCore/Concepts/BoolConcept.h	/^    virtual bool operator <= (CHyp& rAHyp);$/;"	p	class:CBoolHyp	access:public	signature:(CHyp& rAHyp)
operator <=	DMCore/Concepts/Concept.cpp	/^bool CConcept::operator <= (CConcept& rAConcept) {$/;"	f	class:CConcept	signature:(CConcept& rAConcept)
operator <=	DMCore/Concepts/Concept.cpp	/^bool CHyp::operator <= (CHyp& rAHyp) {$/;"	f	class:CHyp	signature:(CHyp& rAHyp)
operator <=	DMCore/Concepts/Concept.h	/^    virtual bool operator <= (CConcept& rAConcept);$/;"	p	class:CConcept	access:public	signature:(CConcept& rAConcept)
operator <=	DMCore/Concepts/Concept.h	/^    virtual bool operator <= (CHyp& rAHyp);$/;"	p	class:CHyp	access:public	signature:(CHyp& rAHyp)
operator <=	DMCore/Concepts/FloatConcept.cpp	/^bool CFloatHyp::operator <= (CHyp& rAHyp) {$/;"	f	class:CFloatHyp	signature:(CHyp& rAHyp)
operator <=	DMCore/Concepts/FloatConcept.h	/^    virtual bool operator <= (CHyp& rAHyp);$/;"	p	class:CFloatHyp	access:public	signature:(CHyp& rAHyp)
operator <=	DMCore/Concepts/FrameConcept.cpp	/^bool CFrameConcept::operator <= (CConcept& rAConcept) {$/;"	f	class:CFrameConcept	signature:(CConcept& rAConcept)
operator <=	DMCore/Concepts/FrameConcept.h	/^    virtual bool operator <= (CConcept& rAConcept);$/;"	p	class:CFrameConcept	access:public	signature:(CConcept& rAConcept)
operator <=	DMCore/Concepts/IntConcept.cpp	/^bool CIntHyp::operator <= (CHyp& rAHyp) {$/;"	f	class:CIntHyp	signature:(CHyp& rAHyp)
operator <=	DMCore/Concepts/IntConcept.h	/^    virtual bool operator <= (CHyp& rAHyp);$/;"	p	class:CIntHyp	access:public	signature:(CHyp& rAHyp)
operator <=	DMCore/Concepts/StringConcept.cpp	/^bool CStringHyp::operator <= (CHyp& rAHyp) {    $/;"	f	class:CStringHyp	signature:(CHyp& rAHyp)
operator <=	DMCore/Concepts/StringConcept.h	/^    virtual bool operator <= (CHyp& rAHyp);$/;"	p	class:CStringHyp	access:public	signature:(CHyp& rAHyp)
operator <=	DMCore/Concepts/StructConcept.cpp	/^bool CStructConcept::operator <= (CConcept& rAConcept) {$/;"	f	class:CStructConcept	signature:(CConcept& rAConcept)
operator <=	DMCore/Concepts/StructConcept.cpp	/^bool CStructHyp::operator <= (CHyp& rAHyp) {   $/;"	f	class:CStructHyp	signature:(CHyp& rAHyp)
operator <=	DMCore/Concepts/StructConcept.h	/^    virtual bool operator <= (CConcept& rAConcept);$/;"	p	class:CStructConcept	access:public	signature:(CConcept& rAConcept)
operator <=	DMCore/Concepts/StructConcept.h	/^    virtual bool operator <= (CHyp& rAHyp);$/;"	p	class:CStructHyp	access:public	signature:(CHyp& rAHyp)
operator <=	spdlog/fmt/bundled/format.h	/^    friend bool operator<=(BasicStringRef lhs, BasicStringRef rhs)$/;"	f	class:fmt::BasicStringRef	access:friend	signature:(BasicStringRef lhs, BasicStringRef rhs)
operator =	DMCore/Concepts/BoolConcept.cpp	/^CConcept& CBoolConcept::operator = (bool bAValue) {$/;"	f	class:CBoolConcept	signature:(bool bAValue)
operator =	DMCore/Concepts/BoolConcept.cpp	/^CConcept& CBoolConcept::operator = (int iAValue) {$/;"	f	class:CBoolConcept	signature:(int iAValue)
operator =	DMCore/Concepts/BoolConcept.cpp	/^CHyp& CBoolHyp::operator = (CHyp& rAHyp) {$/;"	f	class:CBoolHyp	signature:(CHyp& rAHyp)
operator =	DMCore/Concepts/BoolConcept.cpp	/^CHyp& CBoolHyp::operator = (bool bAValue) {$/;"	f	class:CBoolHyp	signature:(bool bAValue)
operator =	DMCore/Concepts/BoolConcept.h	/^	CHyp& operator = (bool bAValue);$/;"	p	class:CBoolHyp	access:public	signature:(bool bAValue)
operator =	DMCore/Concepts/BoolConcept.h	/^	virtual CConcept& operator = (bool bAValue);$/;"	p	class:CBoolConcept	access:public	signature:(bool bAValue)
operator =	DMCore/Concepts/BoolConcept.h	/^	virtual CConcept& operator = (int iAValue);$/;"	p	class:CBoolConcept	access:public	signature:(int iAValue)
operator =	DMCore/Concepts/BoolConcept.h	/^	virtual CHyp& operator = (CHyp& rAHyp);$/;"	p	class:CBoolHyp	access:public	signature:(CHyp& rAHyp)
operator =	DMCore/Concepts/Concept.cpp	/^CConcept& CConcept::operator = (CConcept& rAConcept) {$/;"	f	class:CConcept	signature:(CConcept& rAConcept)
operator =	DMCore/Concepts/Concept.cpp	/^CConcept& CConcept::operator = (bool bAValue) {$/;"	f	class:CConcept	signature:(bool bAValue)
operator =	DMCore/Concepts/Concept.cpp	/^CConcept& CConcept::operator = (const char * lpszAValue) {$/;"	f	class:CConcept	signature:(const char * lpszAValue)
operator =	DMCore/Concepts/Concept.cpp	/^CConcept& CConcept::operator = (double dAValue) {$/;"	f	class:CConcept	signature:(double dAValue)
operator =	DMCore/Concepts/Concept.cpp	/^CConcept& CConcept::operator = (float fAValue) {$/;"	f	class:CConcept	signature:(float fAValue)
operator =	DMCore/Concepts/Concept.cpp	/^CConcept& CConcept::operator = (int iAValue) {$/;"	f	class:CConcept	signature:(int iAValue)
operator =	DMCore/Concepts/Concept.cpp	/^CConcept& CConcept::operator = (string sAValue) {$/;"	f	class:CConcept	signature:(string sAValue)
operator =	DMCore/Concepts/Concept.cpp	/^CHyp& CHyp::operator = (CHyp& rAHyp) {$/;"	f	class:CHyp	signature:(CHyp& rAHyp)
operator =	DMCore/Concepts/Concept.h	/^	virtual CConcept& operator = (bool bAValue);$/;"	p	class:CConcept	access:public	signature:(bool bAValue)
operator =	DMCore/Concepts/Concept.h	/^	virtual CConcept& operator = (const char* lpszAValue);$/;"	p	class:CConcept	access:public	signature:(const char* lpszAValue)
operator =	DMCore/Concepts/Concept.h	/^	virtual CConcept& operator = (double dAValue);$/;"	p	class:CConcept	access:public	signature:(double dAValue)
operator =	DMCore/Concepts/Concept.h	/^	virtual CConcept& operator = (float fAValue);$/;"	p	class:CConcept	access:public	signature:(float fAValue)
operator =	DMCore/Concepts/Concept.h	/^	virtual CConcept& operator = (int iAValue);$/;"	p	class:CConcept	access:public	signature:(int iAValue)
operator =	DMCore/Concepts/Concept.h	/^	virtual CConcept& operator = (string sAValue);$/;"	p	class:CConcept	access:public	signature:(string sAValue)
operator =	DMCore/Concepts/Concept.h	/^	virtual CHyp& operator = (CHyp& rAHyp);$/;"	p	class:CHyp	access:public	signature:(CHyp& rAHyp)
operator =	DMCore/Concepts/Concept.h	/^    virtual CConcept& operator = (CConcept& rAConcept);$/;"	p	class:CConcept	access:public	signature:(CConcept& rAConcept)
operator =	DMCore/Concepts/FloatConcept.cpp	/^CConcept& CFloatConcept::operator = (bool bAValue) {$/;"	f	class:CFloatConcept	signature:(bool bAValue)
operator =	DMCore/Concepts/FloatConcept.cpp	/^CConcept& CFloatConcept::operator = (double dAValue) {$/;"	f	class:CFloatConcept	signature:(double dAValue)
operator =	DMCore/Concepts/FloatConcept.cpp	/^CConcept& CFloatConcept::operator = (float fAValue) {$/;"	f	class:CFloatConcept	signature:(float fAValue)
operator =	DMCore/Concepts/FloatConcept.cpp	/^CConcept& CFloatConcept::operator = (int iAValue) {$/;"	f	class:CFloatConcept	signature:(int iAValue)
operator =	DMCore/Concepts/FloatConcept.cpp	/^CHyp& CFloatHyp::operator = (CHyp& rAHyp) {$/;"	f	class:CFloatHyp	signature:(CHyp& rAHyp)
operator =	DMCore/Concepts/FloatConcept.cpp	/^CHyp& CFloatHyp::operator = (float fAValue) {$/;"	f	class:CFloatHyp	signature:(float fAValue)
operator =	DMCore/Concepts/FloatConcept.h	/^	CHyp& operator = (float fAValue);$/;"	p	class:CFloatHyp	access:public	signature:(float fAValue)
operator =	DMCore/Concepts/FloatConcept.h	/^	virtual CConcept& operator = (bool bAValue);$/;"	p	class:CFloatConcept	access:public	signature:(bool bAValue)
operator =	DMCore/Concepts/FloatConcept.h	/^	virtual CConcept& operator = (double dAValue);$/;"	p	class:CFloatConcept	access:public	signature:(double dAValue)
operator =	DMCore/Concepts/FloatConcept.h	/^	virtual CConcept& operator = (float fAValue);$/;"	p	class:CFloatConcept	access:public	signature:(float fAValue)
operator =	DMCore/Concepts/FloatConcept.h	/^	virtual CConcept& operator = (int iAValue);$/;"	p	class:CFloatConcept	access:public	signature:(int iAValue)
operator =	DMCore/Concepts/FloatConcept.h	/^	virtual CHyp& operator = (CHyp& rAHyp);$/;"	p	class:CFloatHyp	access:public	signature:(CHyp& rAHyp)
operator =	DMCore/Concepts/IntConcept.cpp	/^CConcept& CIntConcept::operator = (bool bAValue) {$/;"	f	class:CIntConcept	signature:(bool bAValue)
operator =	DMCore/Concepts/IntConcept.cpp	/^CConcept& CIntConcept::operator = (double dAValue) {$/;"	f	class:CIntConcept	signature:(double dAValue)
operator =	DMCore/Concepts/IntConcept.cpp	/^CConcept& CIntConcept::operator = (float fAValue) {$/;"	f	class:CIntConcept	signature:(float fAValue)
operator =	DMCore/Concepts/IntConcept.cpp	/^CConcept& CIntConcept::operator = (int iAValue) {$/;"	f	class:CIntConcept	signature:(int iAValue)
operator =	DMCore/Concepts/IntConcept.cpp	/^CHyp& CIntHyp::operator = (CHyp& rAHyp) {$/;"	f	class:CIntHyp	signature:(CHyp& rAHyp)
operator =	DMCore/Concepts/IntConcept.cpp	/^CHyp& CIntHyp::operator = (int iAValue) {$/;"	f	class:CIntHyp	signature:(int iAValue)
operator =	DMCore/Concepts/IntConcept.h	/^	CHyp& operator = (int iAValue);$/;"	p	class:CIntHyp	access:public	signature:(int iAValue)
operator =	DMCore/Concepts/IntConcept.h	/^	virtual CConcept& operator = (bool bAValue);$/;"	p	class:CIntConcept	access:public	signature:(bool bAValue)
operator =	DMCore/Concepts/IntConcept.h	/^	virtual CConcept& operator = (double dAValue);$/;"	p	class:CIntConcept	access:public	signature:(double dAValue)
operator =	DMCore/Concepts/IntConcept.h	/^	virtual CConcept& operator = (float fAValue);$/;"	p	class:CIntConcept	access:public	signature:(float fAValue)
operator =	DMCore/Concepts/IntConcept.h	/^	virtual CConcept& operator = (int iAValue);$/;"	p	class:CIntConcept	access:public	signature:(int iAValue)
operator =	DMCore/Concepts/IntConcept.h	/^	virtual CHyp& operator = (CHyp& rAHyp);$/;"	p	class:CIntHyp	access:public	signature:(CHyp& rAHyp)
operator =	DMCore/Concepts/StringConcept.cpp	/^CConcept& CStringConcept::operator = (bool bAValue) {$/;"	f	class:CStringConcept	signature:(bool bAValue)
operator =	DMCore/Concepts/StringConcept.cpp	/^CConcept& CStringConcept::operator = (double dAValue) {$/;"	f	class:CStringConcept	signature:(double dAValue)
operator =	DMCore/Concepts/StringConcept.cpp	/^CConcept& CStringConcept::operator = (float fAValue) {$/;"	f	class:CStringConcept	signature:(float fAValue)
operator =	DMCore/Concepts/StringConcept.cpp	/^CConcept& CStringConcept::operator = (int iAValue) {$/;"	f	class:CStringConcept	signature:(int iAValue)
operator =	DMCore/Concepts/StringConcept.cpp	/^CHyp& CStringHyp::operator = (CHyp& rAHyp) {$/;"	f	class:CStringHyp	signature:(CHyp& rAHyp)
operator =	DMCore/Concepts/StringConcept.cpp	/^CHyp& CStringHyp::operator = (char *lpszValue) {$/;"	f	class:CStringHyp	signature:(char *lpszValue)
operator =	DMCore/Concepts/StringConcept.cpp	/^CHyp& CStringHyp::operator = (string sAValue) {$/;"	f	class:CStringHyp	signature:(string sAValue)
operator =	DMCore/Concepts/StringConcept.h	/^	CHyp& operator = (char *lpszValue);$/;"	p	class:CStringHyp	access:public	signature:(char *lpszValue)
operator =	DMCore/Concepts/StringConcept.h	/^	CHyp& operator = (string sAValue);$/;"	p	class:CStringHyp	access:public	signature:(string sAValue)
operator =	DMCore/Concepts/StringConcept.h	/^	virtual CConcept& operator = (bool bAValue);$/;"	p	class:CStringConcept	access:public	signature:(bool bAValue)
operator =	DMCore/Concepts/StringConcept.h	/^	virtual CConcept& operator = (double dAValue);$/;"	p	class:CStringConcept	access:public	signature:(double dAValue)
operator =	DMCore/Concepts/StringConcept.h	/^	virtual CConcept& operator = (float fAValue);$/;"	p	class:CStringConcept	access:public	signature:(float fAValue)
operator =	DMCore/Concepts/StringConcept.h	/^	virtual CConcept& operator = (int iAValue);$/;"	p	class:CStringConcept	access:public	signature:(int iAValue)
operator =	DMCore/Concepts/StringConcept.h	/^	virtual CHyp& operator = (CHyp& rAHyp);$/;"	p	class:CStringHyp	access:public	signature:(CHyp& rAHyp)
operator =	DMCore/Concepts/StructConcept.cpp	/^CHyp& CStructHyp::operator = (CHyp& rAHyp) {$/;"	f	class:CStructHyp	signature:(CHyp& rAHyp)
operator =	DMCore/Concepts/StructConcept.h	/^	virtual CHyp& operator = (CHyp& rAHyp);$/;"	p	class:CStructHyp	access:public	signature:(CHyp& rAHyp)
operator =	spdlog/details/file_helper.h	/^    file_helper& operator=(const file_helper&) = delete;$/;"	p	class:spdlog::details::file_helper	access:public	signature:(const file_helper&)
operator =	spdlog/details/mpmc_bounded_q.h	/^    void operator= (mpmc_bounded_queue const&) = delete;$/;"	p	class:spdlog::details::mpmc_bounded_queue	access:private	signature:(mpmc_bounded_queue const&)
operator =	spdlog/details/pattern_formatter_impl.h	/^    z_formatter& operator=(const z_formatter&) = delete;$/;"	p	class:spdlog::details::z_formatter	access:public	signature:(const z_formatter&)
operator =	spdlog/details/registry.h	/^    registry_t<Mutex>& operator=(const registry_t<Mutex>&) = delete;$/;"	p	class:spdlog::details::registry_t	access:private	signature:(const registry_t<Mutex>&)
operator =	spdlog/fmt/bundled/format.h	/^    BasicMemoryWriter &operator=(BasicMemoryWriter &&other)$/;"	f	class:BasicMemoryWriter	access:public	signature:(BasicMemoryWriter &&other)
operator =	spdlog/fmt/bundled/format.h	/^    MemoryBuffer &operator=(MemoryBuffer &&other)$/;"	f	class:fmt::internal::MemoryBuffer	access:public	signature:(MemoryBuffer &&other)
operator =	spdlog/formatter.h	/^    pattern_formatter& operator=(const pattern_formatter&) = delete;$/;"	p	class:spdlog::pattern_formatter	access:public	signature:(const pattern_formatter&)
operator =	spdlog/logger.h	/^    logger& operator=(const logger&) = delete;$/;"	p	class:spdlog::logger	access:public	signature:(const logger&)
operator =	spdlog/sinks/base_sink.h	/^    base_sink& operator=(const base_sink&) = delete;$/;"	p	class:spdlog::sinks::base_sink	access:public	signature:(const base_sink&)
operator =	spdlog/sinks/dist_sink.h	/^    dist_sink& operator=(const dist_sink&) = delete;$/;"	p	class:spdlog::sinks::dist_sink	access:public	signature:(const dist_sink&)
operator =	spdlog/sinks/ostream_sink.h	/^    ostream_sink& operator=(const ostream_sink&) = delete;$/;"	p	class:spdlog::sinks::ostream_sink	access:public	signature:(const ostream_sink&)
operator =	spdlog/sinks/syslog_sink.h	/^    syslog_sink& operator=(const syslog_sink&) = delete;$/;"	p	class:spdlog::sinks::syslog_sink	access:public	signature:(const syslog_sink&)
operator ==	DMCore/Concepts/ArrayConcept.cpp	/^bool CArrayConcept::operator == (CConcept& rAConcept) {$/;"	f	class:CArrayConcept	signature:(CConcept& rAConcept)
operator ==	DMCore/Concepts/ArrayConcept.h	/^    virtual bool operator == (CConcept& rAConcept);$/;"	p	class:CArrayConcept	access:public	signature:(CConcept& rAConcept)
operator ==	DMCore/Concepts/BoolConcept.cpp	/^bool CBoolHyp::operator == (CHyp& rAHyp) {$/;"	f	class:CBoolHyp	signature:(CHyp& rAHyp)
operator ==	DMCore/Concepts/BoolConcept.h	/^    virtual bool operator == (CHyp& rAHyp);$/;"	p	class:CBoolHyp	access:public	signature:(CHyp& rAHyp)
operator ==	DMCore/Concepts/Concept.cpp	/^bool CConcept::operator == (CConcept& rAConcept) {$/;"	f	class:CConcept	signature:(CConcept& rAConcept)
operator ==	DMCore/Concepts/Concept.cpp	/^bool CHyp::operator == (CHyp& rAHyp) {$/;"	f	class:CHyp	signature:(CHyp& rAHyp)
operator ==	DMCore/Concepts/Concept.h	/^    virtual bool operator == (CConcept& rAConcept);$/;"	p	class:CConcept	access:public	signature:(CConcept& rAConcept)
operator ==	DMCore/Concepts/Concept.h	/^    virtual bool operator == (CHyp& rAHyp);$/;"	p	class:CHyp	access:public	signature:(CHyp& rAHyp)
operator ==	DMCore/Concepts/FloatConcept.cpp	/^bool CFloatHyp::operator == (CHyp& rAHyp) {$/;"	f	class:CFloatHyp	signature:(CHyp& rAHyp)
operator ==	DMCore/Concepts/FloatConcept.h	/^    virtual bool operator == (CHyp& rAHyp);$/;"	p	class:CFloatHyp	access:public	signature:(CHyp& rAHyp)
operator ==	DMCore/Concepts/FrameConcept.cpp	/^bool CFrameConcept::operator == (CConcept& rAConcept) {$/;"	f	class:CFrameConcept	signature:(CConcept& rAConcept)
operator ==	DMCore/Concepts/FrameConcept.h	/^    virtual bool operator == (CConcept& rAConcept);$/;"	p	class:CFrameConcept	access:public	signature:(CConcept& rAConcept)
operator ==	DMCore/Concepts/IntConcept.cpp	/^bool CIntHyp::operator == (CHyp& rAHyp) {$/;"	f	class:CIntHyp	signature:(CHyp& rAHyp)
operator ==	DMCore/Concepts/IntConcept.h	/^    virtual bool operator == (CHyp& rAHyp);$/;"	p	class:CIntHyp	access:public	signature:(CHyp& rAHyp)
operator ==	DMCore/Concepts/StringConcept.cpp	/^bool CStringHyp::operator == (CHyp& rAHyp) {$/;"	f	class:CStringHyp	signature:(CHyp& rAHyp)
operator ==	DMCore/Concepts/StringConcept.h	/^    virtual bool operator == (CHyp& rAHyp);$/;"	p	class:CStringHyp	access:public	signature:(CHyp& rAHyp)
operator ==	DMCore/Concepts/StructConcept.cpp	/^bool CStructHyp::operator == (CHyp& rAHyp) {$/;"	f	class:CStructHyp	signature:(CHyp& rAHyp)
operator ==	DMCore/Concepts/StructConcept.h	/^    virtual bool operator == (CHyp& rAHyp);$/;"	p	class:CStructHyp	access:public	signature:(CHyp& rAHyp)
operator ==	spdlog/details/os.h	/^inline bool operator==(const std::tm& tm1, const std::tm& tm2)$/;"	f	namespace:spdlog::details::os	signature:(const std::tm& tm1, const std::tm& tm2)
operator ==	spdlog/fmt/bundled/format.h	/^    friend bool operator==(BasicStringRef lhs, BasicStringRef rhs)$/;"	f	class:fmt::BasicStringRef	access:friend	signature:(BasicStringRef lhs, BasicStringRef rhs)
operator >	DMCore/Concepts/ArrayConcept.cpp	/^bool CArrayConcept::operator > (CConcept& rAConcept) {$/;"	f	class:CArrayConcept	signature:(CConcept& rAConcept)
operator >	DMCore/Concepts/ArrayConcept.h	/^    virtual bool operator > (CConcept& rAConcept);$/;"	p	class:CArrayConcept	access:public	signature:(CConcept& rAConcept)
operator >	DMCore/Concepts/BoolConcept.cpp	/^bool CBoolHyp::operator > (CHyp& rAHyp) {   $/;"	f	class:CBoolHyp	signature:(CHyp& rAHyp)
operator >	DMCore/Concepts/BoolConcept.h	/^    virtual bool operator > (CHyp& rAHyp);$/;"	p	class:CBoolHyp	access:public	signature:(CHyp& rAHyp)
operator >	DMCore/Concepts/Concept.cpp	/^bool CConcept::operator > (CConcept& rAConcept) {$/;"	f	class:CConcept	signature:(CConcept& rAConcept)
operator >	DMCore/Concepts/Concept.cpp	/^bool CHyp::operator > (CHyp& rAHyp) {$/;"	f	class:CHyp	signature:(CHyp& rAHyp)
operator >	DMCore/Concepts/Concept.h	/^    virtual bool operator > (CConcept& rAConcept);$/;"	p	class:CConcept	access:public	signature:(CConcept& rAConcept)
operator >	DMCore/Concepts/Concept.h	/^    virtual bool operator > (CHyp& rAHyp);$/;"	p	class:CHyp	access:public	signature:(CHyp& rAHyp)
operator >	DMCore/Concepts/FloatConcept.cpp	/^bool CFloatHyp::operator > (CHyp& rAHyp) {$/;"	f	class:CFloatHyp	signature:(CHyp& rAHyp)
operator >	DMCore/Concepts/FloatConcept.h	/^    virtual bool operator > (CHyp& rAHyp);$/;"	p	class:CFloatHyp	access:public	signature:(CHyp& rAHyp)
operator >	DMCore/Concepts/FrameConcept.cpp	/^bool CFrameConcept::operator > (CConcept& rAConcept) {$/;"	f	class:CFrameConcept	signature:(CConcept& rAConcept)
operator >	DMCore/Concepts/FrameConcept.h	/^    virtual bool operator > (CConcept& rAConcept);$/;"	p	class:CFrameConcept	access:public	signature:(CConcept& rAConcept)
operator >	DMCore/Concepts/IntConcept.cpp	/^bool CIntHyp::operator > (CHyp& rAHyp) {$/;"	f	class:CIntHyp	signature:(CHyp& rAHyp)
operator >	DMCore/Concepts/IntConcept.h	/^    virtual bool operator > (CHyp& rAHyp);$/;"	p	class:CIntHyp	access:public	signature:(CHyp& rAHyp)
operator >	DMCore/Concepts/StringConcept.cpp	/^bool CStringHyp::operator > (CHyp& rAHyp) {    $/;"	f	class:CStringHyp	signature:(CHyp& rAHyp)
operator >	DMCore/Concepts/StringConcept.h	/^    virtual bool operator > (CHyp& rAHyp);$/;"	p	class:CStringHyp	access:public	signature:(CHyp& rAHyp)
operator >	DMCore/Concepts/StructConcept.cpp	/^bool CStructConcept::operator > (CConcept& rAConcept) {$/;"	f	class:CStructConcept	signature:(CConcept& rAConcept)
operator >	DMCore/Concepts/StructConcept.cpp	/^bool CStructHyp::operator > (CHyp& rAHyp) {   $/;"	f	class:CStructHyp	signature:(CHyp& rAHyp)
operator >	DMCore/Concepts/StructConcept.h	/^    virtual bool operator > (CConcept& rAConcept);$/;"	p	class:CStructConcept	access:public	signature:(CConcept& rAConcept)
operator >	DMCore/Concepts/StructConcept.h	/^    virtual bool operator > (CHyp& rAHyp);$/;"	p	class:CStructHyp	access:public	signature:(CHyp& rAHyp)
operator >	spdlog/fmt/bundled/format.h	/^    friend bool operator>(BasicStringRef lhs, BasicStringRef rhs)$/;"	f	class:fmt::BasicStringRef	access:friend	signature:(BasicStringRef lhs, BasicStringRef rhs)
operator >=	DMCore/Concepts/ArrayConcept.cpp	/^bool CArrayConcept::operator >= (CConcept& rAConcept) {$/;"	f	class:CArrayConcept	signature:(CConcept& rAConcept)
operator >=	DMCore/Concepts/ArrayConcept.h	/^    virtual bool operator >= (CConcept& rAConcept);$/;"	p	class:CArrayConcept	access:public	signature:(CConcept& rAConcept)
operator >=	DMCore/Concepts/BoolConcept.cpp	/^bool CBoolHyp::operator >= (CHyp& rAHyp) {   $/;"	f	class:CBoolHyp	signature:(CHyp& rAHyp)
operator >=	DMCore/Concepts/BoolConcept.h	/^    virtual bool operator >= (CHyp& rAHyp);$/;"	p	class:CBoolHyp	access:public	signature:(CHyp& rAHyp)
operator >=	DMCore/Concepts/Concept.cpp	/^bool CConcept::operator >= (CConcept& rAConcept) {$/;"	f	class:CConcept	signature:(CConcept& rAConcept)
operator >=	DMCore/Concepts/Concept.cpp	/^bool CHyp::operator >= (CHyp& rAHyp) {$/;"	f	class:CHyp	signature:(CHyp& rAHyp)
operator >=	DMCore/Concepts/Concept.h	/^    virtual bool operator >= (CConcept& rAConcept);$/;"	p	class:CConcept	access:public	signature:(CConcept& rAConcept)
operator >=	DMCore/Concepts/Concept.h	/^    virtual bool operator >= (CHyp& rAHyp);$/;"	p	class:CHyp	access:public	signature:(CHyp& rAHyp)
operator >=	DMCore/Concepts/FloatConcept.cpp	/^bool CFloatHyp::operator >= (CHyp& rAHyp) {$/;"	f	class:CFloatHyp	signature:(CHyp& rAHyp)
operator >=	DMCore/Concepts/FloatConcept.h	/^    virtual bool operator >= (CHyp& rAHyp);$/;"	p	class:CFloatHyp	access:public	signature:(CHyp& rAHyp)
operator >=	DMCore/Concepts/FrameConcept.cpp	/^bool CFrameConcept::operator >= (CConcept& rAConcept) {$/;"	f	class:CFrameConcept	signature:(CConcept& rAConcept)
operator >=	DMCore/Concepts/FrameConcept.h	/^    virtual bool operator >= (CConcept& rAConcept);$/;"	p	class:CFrameConcept	access:public	signature:(CConcept& rAConcept)
operator >=	DMCore/Concepts/IntConcept.cpp	/^bool CIntHyp::operator >= (CHyp& rAHyp) {$/;"	f	class:CIntHyp	signature:(CHyp& rAHyp)
operator >=	DMCore/Concepts/IntConcept.h	/^    virtual bool operator >= (CHyp& rAHyp);$/;"	p	class:CIntHyp	access:public	signature:(CHyp& rAHyp)
operator >=	DMCore/Concepts/StringConcept.cpp	/^bool CStringHyp::operator >= (CHyp& rAHyp) {    $/;"	f	class:CStringHyp	signature:(CHyp& rAHyp)
operator >=	DMCore/Concepts/StringConcept.h	/^    virtual bool operator >= (CHyp& rAHyp);$/;"	p	class:CStringHyp	access:public	signature:(CHyp& rAHyp)
operator >=	DMCore/Concepts/StructConcept.cpp	/^bool CStructConcept::operator >= (CConcept& rAConcept) {$/;"	f	class:CStructConcept	signature:(CConcept& rAConcept)
operator >=	DMCore/Concepts/StructConcept.cpp	/^bool CStructHyp::operator >= (CHyp& rAHyp) {   $/;"	f	class:CStructHyp	signature:(CHyp& rAHyp)
operator >=	DMCore/Concepts/StructConcept.h	/^    virtual bool operator >= (CConcept& rAConcept);$/;"	p	class:CStructConcept	access:public	signature:(CConcept& rAConcept)
operator >=	DMCore/Concepts/StructConcept.h	/^    virtual bool operator >= (CHyp& rAHyp);$/;"	p	class:CStructHyp	access:public	signature:(CHyp& rAHyp)
operator >=	spdlog/fmt/bundled/format.h	/^    friend bool operator>=(BasicStringRef lhs, BasicStringRef rhs)$/;"	f	class:fmt::BasicStringRef	access:friend	signature:(BasicStringRef lhs, BasicStringRef rhs)
operator StringRef	spdlog/fmt/bundled/format.h	/^    operator StringRef() const$/;"	f	class:fmt::internal::UTF16ToUTF8	access:public	signature:() const
operator WStringRef	spdlog/fmt/bundled/format.h	/^    operator WStringRef() const$/;"	f	class:fmt::internal::UTF8ToUTF16	access:public	signature:() const
operator []	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^CGroundingAction* CGroundingManagerAgent::operator [] (unsigned int $/;"	f	class:CGroundingManagerAgent	signature:(unsigned int iActionIndex)
operator []	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^CGroundingAction* CGroundingManagerAgent::operator[] ($/;"	f	class:CGroundingManagerAgent	signature:( string sGroundingActionName)
operator []	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    CGroundingAction* operator[] (string sGroundingActionName);$/;"	p	class:CGroundingManagerAgent	access:public	signature:(string sGroundingActionName)
operator []	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    CGroundingAction* operator[] (unsigned int iGroundingActionIndex);$/;"	p	class:CGroundingManagerAgent	access:public	signature:(unsigned int iGroundingActionIndex)
operator []	DMCore/Agents/CoreAgents/OutputManagerAgent.cpp	/^inline COutput* COutputHistory::operator [](unsigned int iIndex) {$/;"	f	class:COutputHistory	signature:(unsigned int iIndex)
operator []	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^	COutput* operator[](unsigned int iIndex);$/;"	p	class:COutputHistory	access:public	signature:(unsigned int iIndex)
operator []	DMCore/Agents/CoreAgents/StateManagerAgent.cpp	/^TDialogState &CStateManagerAgent::operator[](unsigned int i) {$/;"	f	class:CStateManagerAgent	signature:(unsigned int i)
operator []	DMCore/Agents/CoreAgents/StateManagerAgent.h	/^	TDialogState &operator[](unsigned int i);$/;"	p	class:CStateManagerAgent	access:public	signature:(unsigned int i)
operator []	DMCore/Agents/Registry.cpp	/^CAgent* CRegistry::operator [](string sAgentName) {$/;"	f	class:CRegistry	signature:(string sAgentName)
operator []	DMCore/Agents/Registry.h	/^	CAgent* operator[](string sAgentName);$/;"	p	class:CRegistry	access:public	signature:(string sAgentName)
operator []	DMCore/Concepts/ArrayConcept.cpp	/^CConcept& CArrayConcept::operator [](int iIndex) {$/;"	f	class:CArrayConcept	signature:(int iIndex)
operator []	DMCore/Concepts/ArrayConcept.cpp	/^CConcept& CArrayConcept::operator [](string sIndex) {$/;"	f	class:CArrayConcept	signature:(string sIndex)
operator []	DMCore/Concepts/ArrayConcept.h	/^	virtual CConcept& operator [](int iIndex);$/;"	p	class:CArrayConcept	access:public	signature:(int iIndex)
operator []	DMCore/Concepts/ArrayConcept.h	/^	virtual CConcept& operator [](string sIndex);$/;"	p	class:CArrayConcept	access:public	signature:(string sIndex)
operator []	DMCore/Concepts/BoolConcept.cpp	/^CHyp* CBoolHyp::operator [] (string sItem) {$/;"	f	class:CBoolHyp	signature:(string sItem)
operator []	DMCore/Concepts/BoolConcept.h	/^    virtual CHyp* operator [](string sItem);$/;"	p	class:CBoolHyp	access:public	signature:(string sItem)
operator []	DMCore/Concepts/Concept.cpp	/^CConcept& CConcept::operator [](const char * lpszIndex) {$/;"	f	class:CConcept	signature:(const char * lpszIndex)
operator []	DMCore/Concepts/Concept.cpp	/^CConcept& CConcept::operator [](int iIndex) {$/;"	f	class:CConcept	signature:(int iIndex)
operator []	DMCore/Concepts/Concept.cpp	/^CConcept& CConcept::operator [](string sIndex) {$/;"	f	class:CConcept	signature:(string sIndex)
operator []	DMCore/Concepts/Concept.cpp	/^CHyp* CHyp::operator [] (string sItem) {$/;"	f	class:CHyp	signature:(string sItem)
operator []	DMCore/Concepts/Concept.h	/^	virtual CConcept& operator [](const char* lpszIndex);$/;"	p	class:CConcept	access:public	signature:(const char* lpszIndex)
operator []	DMCore/Concepts/Concept.h	/^	virtual CConcept& operator [](int iIndex);$/;"	p	class:CConcept	access:public	signature:(int iIndex)
operator []	DMCore/Concepts/Concept.h	/^	virtual CConcept& operator [](string sIndex);$/;"	p	class:CConcept	access:public	signature:(string sIndex)
operator []	DMCore/Concepts/Concept.h	/^    virtual CHyp* operator [](string sItem);$/;"	p	class:CHyp	access:public	signature:(string sItem)
operator []	DMCore/Concepts/FloatConcept.cpp	/^CHyp* CFloatHyp::operator [] (string sItem) {$/;"	f	class:CFloatHyp	signature:(string sItem)
operator []	DMCore/Concepts/FloatConcept.h	/^    virtual CHyp* operator [](string sItem);$/;"	p	class:CFloatHyp	access:public	signature:(string sItem)
operator []	DMCore/Concepts/IntConcept.cpp	/^CHyp* CIntHyp::operator [] (string sItem) {$/;"	f	class:CIntHyp	signature:(string sItem)
operator []	DMCore/Concepts/IntConcept.h	/^    virtual CHyp* operator [](string sItem);    $/;"	p	class:CIntHyp	access:public	signature:(string sItem)
operator []	DMCore/Concepts/StringConcept.cpp	/^CHyp* CStringHyp::operator [] (string sItem) {$/;"	f	class:CStringHyp	signature:(string sItem)
operator []	DMCore/Concepts/StringConcept.h	/^    virtual CHyp* operator [](string sItem);$/;"	p	class:CStringHyp	access:public	signature:(string sItem)
operator []	DMCore/Concepts/StructConcept.cpp	/^CConcept& CStructConcept::operator [](string sAItemName) {$/;"	f	class:CStructConcept	signature:(string sAItemName)
operator []	DMCore/Concepts/StructConcept.cpp	/^CHyp* CStructHyp::operator [](string sItem) {$/;"	f	class:CStructHyp	signature:(string sItem)
operator []	DMCore/Concepts/StructConcept.h	/^	virtual CConcept& operator [] (string sAItemName);$/;"	p	class:CStructConcept	access:public	signature:(string sAItemName)
operator []	DMCore/Concepts/StructConcept.h	/^    virtual CHyp* operator [](string sItem);$/;"	p	class:CStructHyp	access:public	signature:(string sItem)
operator []	DMCore/Grounding/GroundingUtils.cpp	/^float& CBeliefDistribution::operator[] (unsigned int iIndex) {$/;"	f	class:CBeliefDistribution	signature:(unsigned int iIndex)
operator []	DMCore/Grounding/GroundingUtils.cpp	/^string& CState::operator[] (string sIndex) {$/;"	f	class:CState	signature:(string sIndex)
operator []	DMCore/Grounding/GroundingUtils.h	/^    float& operator[] (unsigned int iIndex);$/;"	p	class:CBeliefDistribution	access:public	signature:(unsigned int iIndex)
operator []	DMCore/Grounding/GroundingUtils.h	/^    string& operator[] (string sIndex);$/;"	p	class:CState	access:public	signature:(string sIndex)
operator []	spdlog/fmt/bundled/format.h	/^    T &operator[](std::size_t index)$/;"	f	class:fmt::Buffer	access:public	signature:(std::size_t index)
operator []	spdlog/fmt/bundled/format.h	/^    const T &operator[](std::size_t index) const$/;"	f	class:fmt::Buffer	access:public	signature:(std::size_t index) const
operator []	spdlog/fmt/bundled/format.h	/^    internal::Arg operator[](unsigned index) const$/;"	f	class:fmt::ArgList	access:public	signature:(unsigned index) const
operator bool	DMCore/Concepts/BoolConcept.cpp	/^CBoolConcept::operator bool() {$/;"	f	class:CBoolConcept	signature:()
operator bool	DMCore/Concepts/BoolConcept.h	/^	virtual operator bool();$/;"	p	class:CBoolConcept	access:public	signature:()
operator bool	DMCore/Concepts/Concept.cpp	/^CConcept::operator bool() {	$/;"	f	class:CConcept	signature:()
operator bool	DMCore/Concepts/Concept.h	/^	virtual operator bool();$/;"	p	class:CConcept	access:public	signature:()
operator bool	DMCore/Concepts/FloatConcept.cpp	/^CFloatConcept::operator bool() {$/;"	f	class:CFloatConcept	signature:()
operator bool	DMCore/Concepts/FloatConcept.h	/^	virtual operator bool();$/;"	p	class:CFloatConcept	access:public	signature:()
operator bool	DMCore/Concepts/IntConcept.cpp	/^CIntConcept::operator bool() {$/;"	f	class:CIntConcept	signature:()
operator bool	DMCore/Concepts/IntConcept.h	/^	virtual operator bool();$/;"	p	class:CIntConcept	access:public	signature:()
operator float	DMCore/Concepts/Concept.cpp	/^CConcept::operator float() {$/;"	f	class:CConcept	signature:()
operator float	DMCore/Concepts/Concept.h	/^	virtual operator float();$/;"	p	class:CConcept	access:public	signature:()
operator float	DMCore/Concepts/FloatConcept.cpp	/^CFloatConcept::operator float() {$/;"	f	class:CFloatConcept	signature:()
operator float	DMCore/Concepts/FloatConcept.h	/^	virtual operator float();$/;"	p	class:CFloatConcept	access:public	signature:()
operator int	DMCore/Concepts/BoolConcept.cpp	/^CBoolConcept::operator int() {$/;"	f	class:CBoolConcept	signature:()
operator int	DMCore/Concepts/BoolConcept.h	/^    virtual operator int();$/;"	p	class:CBoolConcept	access:public	signature:()
operator int	DMCore/Concepts/Concept.cpp	/^CConcept::operator int() {$/;"	f	class:CConcept	signature:()
operator int	DMCore/Concepts/Concept.h	/^	virtual operator int();$/;"	p	class:CConcept	access:public	signature:()
operator int	DMCore/Concepts/FloatConcept.cpp	/^CFloatConcept::operator int() {$/;"	f	class:CFloatConcept	signature:()
operator int	DMCore/Concepts/FloatConcept.h	/^    virtual operator int();$/;"	p	class:CFloatConcept	access:public	signature:()
operator int	DMCore/Concepts/IntConcept.cpp	/^CIntConcept::operator int() {$/;"	f	class:CIntConcept	signature:()
operator int	DMCore/Concepts/IntConcept.h	/^    virtual operator int();$/;"	p	class:CIntConcept	access:public	signature:()
operator int	spdlog/fmt/bundled/format.h	/^    operator int() const$/;"	f	struct:fmt::internal::DummyInt	access:public	signature:() const
operator string	DMCore/Concepts/Concept.cpp	/^CConcept::operator string() {$/;"	f	class:CConcept	signature:()
operator string	DMCore/Concepts/Concept.h	/^	virtual operator string();$/;"	p	class:CConcept	access:public	signature:()
os	spdlog/common.h	/^namespace os$/;"	n	namespace:spdlog::details
os	spdlog/details/os.h	/^namespace os$/;"	n	namespace:spdlog::details
ostream_sink	spdlog/sinks/ostream_sink.h	/^    explicit ostream_sink(std::ostream& os, bool force_flush=false) :_ostream(os), _force_flush(force_flush) {}$/;"	f	class:spdlog::sinks::ostream_sink	access:public	signature:(std::ostream& os, bool force_flush=false)
ostream_sink	spdlog/sinks/ostream_sink.h	/^    ostream_sink(const ostream_sink&) = delete;$/;"	p	class:spdlog::sinks::ostream_sink	access:public	signature:(const ostream_sink&)
ostream_sink	spdlog/sinks/ostream_sink.h	/^class ostream_sink: public base_sink<Mutex>$/;"	c	namespace:spdlog::sinks	inherits:base_sink
ostream_sink_mt	spdlog/sinks/ostream_sink.h	/^typedef ostream_sink<std::mutex> ostream_sink_mt;$/;"	t	namespace:spdlog::sinks
ostream_sink_st	spdlog/sinks/ostream_sink.h	/^typedef ostream_sink<details::null_mutex> ostream_sink_st;$/;"	t	namespace:spdlog::sinks
other	spdlog/details/async_log_helper.h	/^        async_msg& operator=(const async_msg& other) = delete;$/;"	m	struct:spdlog::details::async_log_helper::async_msg	access:public
other	spdlog/details/log_msg.h	/^    log_msg& operator=(log_msg&& other) = delete;$/;"	m	struct:spdlog::details::log_msg	access:public
other	spdlog/details/log_msg.h	/^    log_msg(const log_msg& other)  = delete;$/;"	m	struct:spdlog::details::log_msg	access:public
other	spdlog/details/log_msg.h	/^    log_msg(log_msg&& other) = delete;$/;"	m	struct:spdlog::details::log_msg	access:public
other	spdlog/sinks/ansicolor_sink.h	/^    ansicolor_sink& operator=(const ansicolor_sink& other) = delete;$/;"	m	class:spdlog::sinks::ansicolor_sink	access:public
other	spdlog/sinks/ansicolor_sink.h	/^    ansicolor_sink(const ansicolor_sink& other) = delete;$/;"	m	class:spdlog::sinks::ansicolor_sink	access:public
other	spdlog/sinks/wincolor_sink.h	/^    wincolor_sink& operator=(const wincolor_sink& other) = delete;$/;"	m	class:spdlog::sinks::wincolor_sink	access:public
other	spdlog/sinks/wincolor_sink.h	/^    wincolor_sink(const wincolor_sink& other) = delete;$/;"	m	class:spdlog::sinks::wincolor_sink	access:public
out_handle_	spdlog/sinks/wincolor_sink.h	/^    HANDLE out_handle_;$/;"	m	class:spdlog::sinks::wincolor_sink	access:private
output	DMCore/Agents/CoreAgents/OutputManagerAgent.cpp	/^string COutputManagerAgent::output(COutput* pOutput) {$/;"	f	class:COutputManagerAgent	signature:(COutput* pOutput)
output	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^	string output(COutput* pOutput);$/;"	p	class:COutputManagerAgent	access:private	signature:(COutput* pOutput)
output	main.cpp	/^std::string output(std::string prompt) {$/;"	f	signature:(std::string prompt)
output_queue	DMCore/message/message.h	/^threadsafe_queue<std::string> output_queue;$/;"	v
output_queue	main.cpp	/^threadsafe_queue<std::string> output_queue;$/;"	v
overflow	spdlog/fmt/bundled/ostream.h	/^    int_type overflow(int_type ch = traits_type::eof())$/;"	f	class:fmt::internal::FormatBuf	access:public	signature:(int_type ch = traits_type::eof())
override	spdlog/async_logger.h	/^    void _set_formatter(spdlog::formatter_ptr msg_formatter) override;$/;"	m	class:spdlog::async_logger	access:protected
override	spdlog/async_logger.h	/^    void _set_pattern(const std::string& pattern) override;$/;"	m	class:spdlog::async_logger	access:protected
override	spdlog/async_logger.h	/^    void _sink_it(details::log_msg& msg) override;$/;"	m	class:spdlog::async_logger	access:protected
override	spdlog/async_logger.h	/^    void flush() override;$/;"	m	class:spdlog::async_logger	access:public
override	spdlog/formatter.h	/^    void format(details::log_msg& msg) override;$/;"	m	class:spdlog::pattern_formatter	access:public
override	spdlog/sinks/ansicolor_sink.h	/^    virtual void flush() override;$/;"	m	class:spdlog::sinks::ansicolor_sink	access:public
override	spdlog/sinks/ansicolor_sink.h	/^    virtual void log(const details::log_msg& msg) override;$/;"	m	class:spdlog::sinks::ansicolor_sink	access:public
pConcept	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    CConcept* pConcept;$/;"	m	struct:__anon39	access:public
pConcept	DMCore/Agents/CoreAgents/TrafficManagerAgent.h	/^	CConcept* pConcept;$/;"	m	struct:__anon36	access:public
pConcept	DMCore/Grounding/GroundingModels/GMConcept.h	/^    CConcept* pConcept;		\/\/ pointer to the concept it is handling$/;"	m	class:CGMConcept	access:protected
pDMCore	DMCore/DMCore.cpp	/^CDMCoreAgent			*pDMCore;$/;"	v
pDTTManager	DMCore/DMCore.cpp	/^CDTTManagerAgent		*pDTTManager;$/;"	v
pDialogAgent	DMCore/Agents/DialogAgents/DialogAgent.h	/^	CDialogAgent* pDialogAgent;		\/\/ which agent expects this$/;"	m	struct:__anon57	access:public
pGroundingManager	DMCore/DMCore.cpp	/^CGroundingManagerAgent  *pGroundingManager;$/;"	v
pGroundingModel	DMCore/Agents/DialogAgents/DialogAgent.h	/^    CGroundingModel* pGroundingModel;$/;"	m	class:CDialogAgent	access:protected
pGroundingModel	DMCore/Concepts/Concept.h	/^    CGMConcept* pGroundingModel;$/;"	m	class:CConcept	access:protected
pInteractionEventManager	DMCore/DMCore.cpp	/^CInteractionEventManagerAgent	*pInteractionEventManager;$/;"	v
pItemMap	DMCore/Concepts/StructConcept.h	/^	TItemMap* pItemMap;$/;"	m	class:CStructHyp	access:protected
pOutputManager	DMCore/DMCore.cpp	/^COutputManagerAgent		*pOutputManager;$/;"	v
pOwnerConcept	DMCore/Concepts/Concept.h	/^    CConcept* pOwnerConcept;$/;"	m	class:CConcept	access:protected
pOwnerDialogAgent	DMCore/Concepts/Concept.h	/^    CDialogAgent* pOwnerDialogAgent;$/;"	m	class:CConcept	access:protected
pPolicy	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    TPolicy pPolicy;    \/\/ the policy for the model: for each state, a$/;"	m	class:CGroundingModel	access:protected
pPrevConcept	DMCore/Concepts/Concept.h	/^    CConcept* pPrevConcept;            $/;"	m	class:CConcept	access:protected
pRequestAgent	DMCore/Grounding/GroundingModels/GMRequestAgent.h	/^    CDialogAgent* pRequestAgent;		\/\/ pointer to the dialogue agent $/;"	m	class:CGMRequestAgent	access:protected
pStateManager	DMCore/DMCore.cpp	/^CStateManagerAgent		*pStateManager;$/;"	v
pTrafficManager	DMCore/DMCore.cpp	/^CTrafficManagerAgent	*pTrafficManager;$/;"	v
p_formatter	spdlog/details/pattern_formatter_impl.h	/^class p_formatter:public flag_formatter$/;"	c	namespace:spdlog::details	inherits:flag_formatter
pad	spdlog/fmt/bundled/format.h	/^IntFormatSpec<int, AlignTypeSpec<TYPE_CODE>, Char> pad($/;"	p	namespace:fmt	signature:( int value, unsigned width, Char fill = Ã)
pad	spdlog/fmt/bundled/format.h	/^inline StrFormatSpec<Char> pad($/;"	f	namespace:fmt	signature:( const Char *str, unsigned width, Char fill = Ã)
pad	spdlog/fmt/bundled/format.h	/^inline StrFormatSpec<wchar_t> pad($/;"	f	namespace:fmt	signature:( const wchar_t *str, unsigned width, char fill = Ã)
pad0_	spdlog/details/mpmc_bounded_q.h	/^    cacheline_pad_t         pad0_;$/;"	m	class:spdlog::details::mpmc_bounded_queue	access:private
pad1_	spdlog/details/mpmc_bounded_q.h	/^    cacheline_pad_t         pad1_;$/;"	m	class:spdlog::details::mpmc_bounded_queue	access:private
pad2_	spdlog/details/mpmc_bounded_q.h	/^    cacheline_pad_t         pad2_;$/;"	m	class:spdlog::details::mpmc_bounded_queue	access:private
pad3_	spdlog/details/mpmc_bounded_q.h	/^    cacheline_pad_t         pad3_;$/;"	m	class:spdlog::details::mpmc_bounded_queue	access:private
pad_n_join	spdlog/details/pattern_formatter_impl.h	/^static fmt::MemoryWriter& pad_n_join(fmt::MemoryWriter& w, int v1, int v2, char sep)$/;"	f	namespace:spdlog::details	signature:(fmt::MemoryWriter& w, int v1, int v2, char sep)
pad_n_join	spdlog/details/pattern_formatter_impl.h	/^static fmt::MemoryWriter& pad_n_join(fmt::MemoryWriter& w, int v1, int v2, int v3, char sep)$/;"	f	namespace:spdlog::details	signature:(fmt::MemoryWriter& w, int v1, int v2, int v3, char sep)
parseGrammarMapping	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^void CDialogAgent::parseGrammarMapping(string sConceptNames, $/;"	f	class:CDialogAgent	signature:(string sConceptNames, string sGrammarMapping, TConceptExpectationList& rcelExpectationList)
parseGrammarMapping	DMCore/Agents/DialogAgents/DialogAgent.h	/^	void parseGrammarMapping(string sConceptNames, string sGrammarMapping, $/;"	p	class:CDialogAgent	access:protected	signature:(string sConceptNames, string sGrammarMapping, TConceptExpectationList& rcelExpectationList)
parse_arg_index	spdlog/fmt/bundled/format.h	/^    internal::Arg parse_arg_index(const Char *&s);$/;"	p	class:fmt::BasicFormatter	access:private	signature:(const Char *&s)
parse_arg_name	spdlog/fmt/bundled/format.h	/^    internal::Arg parse_arg_name(const Char *&s);$/;"	p	class:fmt::BasicFormatter	access:private	signature:(const Char *&s)
parse_flags	spdlog/fmt/bundled/printf.h	/^    void parse_flags(FormatSpec &spec, const Char *&s);$/;"	p	class:fmt::PrintfFormatter	access:private	signature:(FormatSpec &spec, const Char *&s)
parse_flags	spdlog/fmt/bundled/printf.h	/^void PrintfFormatter<Char, AF>::parse_flags(FormatSpec &spec, const Char *&s)$/;"	f	class:fmt::PrintfFormatter	signature:(FormatSpec &spec, const Char *&s)
parse_header	spdlog/fmt/bundled/printf.h	/^    unsigned parse_header(const Char *&s, FormatSpec &spec);$/;"	p	class:fmt::PrintfFormatter	access:private	signature:(const Char *&s, FormatSpec &spec)
parse_header	spdlog/fmt/bundled/printf.h	/^unsigned PrintfFormatter<Char, AF>::parse_header($/;"	f	class:fmt::PrintfFormatter	signature:( const Char *&s, FormatSpec &spec)
pattern_formatter	spdlog/details/pattern_formatter_impl.h	/^inline spdlog::pattern_formatter::pattern_formatter(const std::string& pattern)$/;"	f	class:spdlog::pattern_formatter	signature:(const std::string& pattern)
pattern_formatter	spdlog/formatter.h	/^    explicit pattern_formatter(const std::string& pattern);$/;"	p	class:spdlog::pattern_formatter	access:public	signature:(const std::string& pattern)
pattern_formatter	spdlog/formatter.h	/^    pattern_formatter(const pattern_formatter&) = delete;$/;"	p	class:spdlog::pattern_formatter	access:public	signature:(const pattern_formatter&)
pattern_formatter	spdlog/formatter.h	/^class pattern_formatter : public formatter$/;"	c	namespace:spdlog	inherits:formatter
pdaAgent	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	CDialogAgent* pdaAgent;			\/\/ the agent that is on the stack$/;"	m	struct:__anon47	access:public
pdaContextAgent	DMCore/Agents/DialogAgents/DialogAgent.h	/^	CDialogAgent* pdaContextAgent;$/;"	m	class:CDialogAgent	access:protected
pdaDialogTaskRoot	DMCore/Agents/CoreAgents/DTTManagerAgent.h	/^	CDialogAgent* pdaDialogTaskRoot;		\/\/ the dialog task root$/;"	m	class:CDTTManagerAgent	access:private
pdaGenerator	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	CDialogAgent* pdaGenerator;		\/\/ the agent that represents that level$/;"	m	struct:__anon45	access:public
pdaParent	DMCore/Agents/DialogAgents/DialogAgent.h	/^	CDialogAgent* pdaParent;$/;"	m	class:CDialogAgent	access:protected
pepiExternalPolicy	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    CExternalPolicyInterface* pepiExternalPolicy;$/;"	m	class:CGroundingModel	access:protected
performConceptBinding	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^void CDMCoreAgent::performConceptBinding(string sSlotName, string sSlotValue,$/;"	f	class:CDMCoreAgent	signature:(string sSlotName, string sSlotValue, float fConfidence, int iExpectationIndex, bool bIsComplete)
performConceptBinding	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	void performConceptBinding(string sSlotName, string sSlotValue,$/;"	p	class:CDMCoreAgent	access:private	signature:(string sSlotName, string sSlotValue, float fConfidence, int iExpectationIndex, bool bIsComplete)
performCustomConceptBinding	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^    void performCustomConceptBinding(int iExpectationIndex);$/;"	p	class:CDMCoreAgent	access:private	signature:(int iExpectationIndex)
performForcedConceptUpdates	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^void CDMCoreAgent::performForcedConceptUpdates(TBindingsDescr& rbdBindings) {$/;"	f	class:CDMCoreAgent	signature:(TBindingsDescr& rbdBindings)
performForcedConceptUpdates	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	void performForcedConceptUpdates(TBindingsDescr& rbdBindings);$/;"	p	class:CDMCoreAgent	access:private	signature:(TBindingsDescr& rbdBindings)
pfVar	DMCore/Grounding/GroundingModels/GMRequestAgent_LR.h	/^	float* pfVar;$/;"	m	struct:__anon61	access:public
pid	spdlog/details/os.h	/^inline int pid()$/;"	f	namespace:spdlog::details::os	signature:()
pid_formatter	spdlog/details/pattern_formatter_impl.h	/^class pid_formatter:public flag_formatter$/;"	c	namespace:spdlog::details	inherits:flag_formatter
pieLastEvent	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.h	/^	CInteractionEvent *pieLastEvent;$/;"	m	class:CInteractionEventManagerAgent	access:private
pieLastInput	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.h	/^	CInteractionEvent *pieLastInput;$/;"	m	class:CInteractionEventManagerAgent	access:private
pointer	spdlog/fmt/bundled/format.h	/^        const void *pointer;$/;"	m	union:fmt::internal::Value::__anon18	access:public
popAgentFromExecutionStack	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^void CDMCoreAgent::popAgentFromExecutionStack(CDialogAgent* pdaADialogAgent,$/;"	f	class:CDMCoreAgent	signature:(CDialogAgent* pdaADialogAgent, TStringVector& rvsAgentsEliminated)
popAgentFromExecutionStack	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	void popAgentFromExecutionStack(CDialogAgent *pdaADialogAgent,$/;"	p	class:CDMCoreAgent	access:private	signature:(CDialogAgent *pdaADialogAgent, TStringVector& rvsAgentsEliminated)
popCompletedFromExecutionStack	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^int CDMCoreAgent::popCompletedFromExecutionStack() {$/;"	f	class:CDMCoreAgent	signature:()
popCompletedFromExecutionStack	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	int popCompletedFromExecutionStack();$/;"	p	class:CDMCoreAgent	access:private	signature:()
popGroundingAgentsFromExecutionStack	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^void CDMCoreAgent::popGroundingAgentsFromExecutionStack(TStringVector& rvsAgentsEliminated) {$/;"	f	class:CDMCoreAgent	signature:(TStringVector& rvsAgentsEliminated)
popGroundingAgentsFromExecutionStack	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	void popGroundingAgentsFromExecutionStack(TStringVector& rvsAgentsEliminated);$/;"	p	class:CDMCoreAgent	access:private	signature:(TStringVector& rvsAgentsEliminated)
popTopicFromExecutionStack	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^void CDMCoreAgent::popTopicFromExecutionStack(CDialogAgent* pdaADialogAgent,$/;"	f	class:CDMCoreAgent	signature:(CDialogAgent* pdaADialogAgent, TStringVector& rvsAgentsEliminated)
popTopicFromExecutionStack	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	void popTopicFromExecutionStack(CDialogAgent *pdaADialogAgent,$/;"	p	class:CDMCoreAgent	access:private	signature:(CDialogAgent *pdaADialogAgent, TStringVector& rvsAgentsEliminated)
precision	spdlog/fmt/bundled/format.h	/^    int precision() const$/;"	f	struct:fmt::AlignSpec	access:public	signature:() const
precision	spdlog/fmt/bundled/format.h	/^    int precision() const$/;"	f	struct:fmt::FormatSpec	access:public	signature:() const
precision	spdlog/fmt/bundled/format.h	/^    int precision() const$/;"	f	struct:fmt::TypeSpec	access:public	signature:() const
precision_	spdlog/fmt/bundled/format.h	/^    int precision_;$/;"	m	struct:fmt::FormatSpec	access:public
prepare_int_buffer	spdlog/fmt/bundled/format.h	/^    CharPtr prepare_int_buffer(unsigned num_digits,$/;"	f	class:BasicWriter	access:private	signature:(unsigned num_digits, const EmptySpec &, const char *prefix, unsigned prefix_size)
prepare_int_buffer	spdlog/fmt/bundled/format.h	/^    CharPtr prepare_int_buffer(unsigned num_digits,$/;"	p	class:BasicWriter	access:private	signature:(unsigned num_digits, const Spec &spec, const char *prefix, unsigned prefix_size)
prepare_int_buffer	spdlog/fmt/bundled/format.h	/^BasicWriter<Char>::prepare_int_buffer($/;"	f	class:BasicWriter	signature:( unsigned num_digits, const Spec &spec, const char *prefix, unsigned prefix_size)
prevent_child_fd	spdlog/details/os.h	/^inline void prevent_child_fd(FILE *f)$/;"	f	namespace:spdlog::details::os	signature:(FILE *f)
print	spdlog/fmt/bundled/format.cc	/^	FMT_FUNC void print(CStringRef format_str, ArgList args)$/;"	f	namespace:fmt	signature:(CStringRef format_str, ArgList args)
print	spdlog/fmt/bundled/format.cc	/^	FMT_FUNC void print(std::FILE *f, CStringRef format_str, ArgList args)$/;"	f	namespace:fmt	signature:(std::FILE *f, CStringRef format_str, ArgList args)
print	spdlog/fmt/bundled/format.h	/^FMT_API void print(CStringRef format_str, ArgList args);$/;"	p	signature:(CStringRef format_str, ArgList args)
print	spdlog/fmt/bundled/format.h	/^FMT_API void print(std::FILE *f, CStringRef format_str, ArgList args);$/;"	p	signature:(std::FILE *f, CStringRef format_str, ArgList args)
print	spdlog/fmt/bundled/ostream.cc	/^	FMT_FUNC void print(std::ostream &os, CStringRef format_str, ArgList args)$/;"	f	namespace:fmt	signature:(std::ostream &os, CStringRef format_str, ArgList args)
print	spdlog/fmt/bundled/ostream.h	/^FMT_API void print(std::ostream &os, CStringRef format_str, ArgList args);$/;"	p	namespace:fmt	signature:(std::ostream &os, CStringRef format_str, ArgList args)
print_colored	spdlog/fmt/bundled/format.cc	/^	FMT_FUNC void print_colored(Color c, CStringRef format, ArgList args)$/;"	f	namespace:fmt	signature:(Color c, CStringRef format, ArgList args)
print_colored	spdlog/fmt/bundled/format.h	/^FMT_API void print_colored(Color c, CStringRef format, ArgList args);$/;"	p	signature:(Color c, CStringRef format, ArgList args)
printf	spdlog/fmt/bundled/printf.h	/^inline int printf(CStringRef format, ArgList args)$/;"	f	namespace:fmt	signature:(CStringRef format, ArgList args)
printf	spdlog/fmt/bundled/printf.h	/^void printf(BasicWriter<Char> &w, BasicCStringRef<Char> format, ArgList args)$/;"	f	namespace:fmt	signature:(BasicWriter<Char> &w, BasicCStringRef<Char> format, ArgList args)
processNonUnderstanding	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^void CDMCoreAgent::processNonUnderstanding() {$/;"	f	class:CDMCoreAgent	signature:()
processNonUnderstanding	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	void processNonUnderstanding();$/;"	p	class:CDMCoreAgent	access:private	signature:()
process_next_msg	spdlog/details/async_log_helper.h	/^    bool process_next_msg(log_clock::time_point& last_pop, log_clock::time_point& last_flush);$/;"	p	class:spdlog::details::async_log_helper	access:private	signature:(log_clock::time_point& last_pop, log_clock::time_point& last_flush)
process_next_msg	spdlog/details/async_log_helper.h	/^inline bool spdlog::details::async_log_helper::process_next_msg(log_clock::time_point& last_pop, log_clock::time_point& last_flush)$/;"	f	class:spdlog::details::async_log_helper	signature:(log_clock::time_point& last_pop, log_clock::time_point& last_flush)
psvItems	DMCore/Concepts/StructConcept.h	/^	TStringVector* psvItems;$/;"	m	class:CStructHyp	access:protected
ptr_	spdlog/fmt/bundled/format.h	/^    T *ptr_;$/;"	m	class:fmt::Buffer	access:protected
push	DMCore/message/threadsafe_queue.h	/^  void push(T new_value);$/;"	p	class:threadsafe_queue	access:public	signature:(T new_value)
push	DMCore/message/threadsafe_queue.h	/^void  threadsafe_queue<T>::push(T new_value) {$/;"	f	class:threadsafe_queue	signature:(T new_value)
pushMessage	DMCore/message/message.h	/^void pushMessage(threadsafe_queue<T> &q,T value) {$/;"	f	signature:(threadsafe_queue<T> &q,T value)
push_back	spdlog/fmt/bundled/format.h	/^    void push_back(const T &value)$/;"	f	class:fmt::Buffer	access:public	signature:(const T &value)
push_msg	spdlog/details/async_log_helper.h	/^    void push_msg(async_msg&& new_msg);$/;"	p	class:spdlog::details::async_log_helper	access:private	signature:(async_msg&& new_msg)
push_msg	spdlog/details/async_log_helper.h	/^inline void spdlog::details::async_log_helper::push_msg(details::async_log_helper::async_msg&& new_msg)$/;"	f	class:spdlog::details::async_log_helper	signature:(details::async_log_helper::async_msg&& new_msg)
qnxnto	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v
qnxnto	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v
qpieEventQueue	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.h	/^  queue <CInteractionEvent*, list<CInteractionEvent*> > qpieEventQueue;$/;"	m	class:CInteractionEventManagerAgent	access:private
r_formatter	spdlog/details/pattern_formatter_impl.h	/^class r_formatter:public flag_formatter$/;"	c	namespace:spdlog::details	inherits:flag_formatter
raw	spdlog/details/log_msg.h	/^    fmt::MemoryWriter raw;$/;"	m	struct:spdlog::details::log_msg	access:public
red	spdlog/sinks/ansicolor_sink.h	/^    const std::string red        = "\\033[31m";$/;"	m	class:spdlog::sinks::ansicolor_sink	access:public
register_logger	spdlog/details/registry.h	/^    void register_logger(std::shared_ptr<logger> logger)$/;"	f	class:spdlog::details::registry_t	access:public	signature:(std::shared_ptr<logger> logger)
register_logger	spdlog/details/spdlog_impl.h	/^inline void spdlog::register_logger(std::shared_ptr<logger> logger)$/;"	f	class:spdlog	signature:(std::shared_ptr<logger> logger)
register_logger	spdlog/spdlog.h	/^void register_logger(std::shared_ptr<logger> logger);$/;"	p	namespace:spdlog	signature:(std::shared_ptr<logger> logger)
registry	spdlog/details/registry.h	/^typedef registry_t<spdlog::details::null_mutex> registry;$/;"	t	namespace:spdlog::details
registry	spdlog/details/registry.h	/^typedef registry_t<std::mutex> registry;$/;"	t	namespace:spdlog::details
registry_t	spdlog/details/registry.h	/^    registry_t<Mutex>() {}$/;"	f	class:spdlog::details::registry_t	access:private	signature:()
registry_t	spdlog/details/registry.h	/^    registry_t<Mutex>(const registry_t<Mutex>&) = delete;$/;"	p	class:spdlog::details::registry_t	access:private	signature:(const registry_t<Mutex>&)
registry_t	spdlog/details/registry.h	/^template <class Mutex> class registry_t$/;"	c	namespace:spdlog::details
remove	spdlog/details/os.h	/^inline int remove(const filename_t &filename)$/;"	f	namespace:spdlog::details::os	signature:(const filename_t &filename)
remove_sink	spdlog/sinks/dist_sink.h	/^    void remove_sink(std::shared_ptr<sink> sink)$/;"	f	class:spdlog::sinks::dist_sink	access:public	signature:(std::shared_ptr<sink> sink)
rename	spdlog/details/os.h	/^inline int rename(const filename_t& filename1, const filename_t& filename2)$/;"	f	namespace:spdlog::details::os	signature:(const filename_t& filename1, const filename_t& filename2)
reopen	spdlog/details/file_helper.h	/^    void reopen(bool truncate)$/;"	f	class:spdlog::details::file_helper	access:public	signature:(bool truncate)
report_unhandled_arg	spdlog/fmt/bundled/format.h	/^    void report_unhandled_arg()$/;"	f	class:fmt::ArgVisitor	access:public	signature:()
report_unhandled_arg	spdlog/fmt/bundled/printf.h	/^    void report_unhandled_arg()$/;"	f	class:fmt::internal::PrecisionHandler	access:public	signature:()
report_unhandled_arg	spdlog/fmt/bundled/printf.h	/^    void report_unhandled_arg()$/;"	f	class:fmt::internal::WidthHandler	access:public	signature:()
report_unknown_type	spdlog/fmt/bundled/format.cc	/^	FMT_FUNC void internal::report_unknown_type(char code, const char *type)$/;"	f	class:fmt::internal	signature:(char code, const char *type)
reserve	spdlog/fmt/bundled/format.h	/^    void reserve(std::size_t capacity)$/;"	f	class:fmt::Buffer	access:public	signature:(std::size_t capacity)
reset	spdlog/sinks/ansicolor_sink.h	/^    const std::string reset      = "\\033[00m";$/;"	m	class:spdlog::sinks::ansicolor_sink	access:public
resize	spdlog/fmt/bundled/format.h	/^    void resize(std::size_t new_size)$/;"	f	class:fmt::Buffer	access:public	signature:(std::size_t new_size)
resolveFocusShift	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^void CDMCoreAgent::resolveFocusShift() {$/;"	f	class:CDMCoreAgent	signature:()
resolveFocusShift	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	void resolveFocusShift();$/;"	p	class:CDMCoreAgent	access:private	signature:()
reverse	spdlog/sinks/ansicolor_sink.h	/^    const std::string reverse    = "\\033[7m";$/;"	m	class:spdlog::sinks::ansicolor_sink	access:public
rollBackDialogState	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^void CDMCoreAgent::rollBackDialogState(int iState) {$/;"	f	class:CDMCoreAgent	signature:(int iState)
rollBackDialogState	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	void rollBackDialogState(int iState);$/;"	p	class:CDMCoreAgent	access:private	signature:(int iState)
rotating_file_sink	spdlog/sinks/file_sinks.h	/^    rotating_file_sink(const filename_t &base_filename,$/;"	f	class:spdlog::sinks::rotating_file_sink	access:public	signature:(const filename_t &base_filename, std::size_t max_size, std::size_t max_files)
rotating_file_sink	spdlog/sinks/file_sinks.h	/^class rotating_file_sink : public base_sink < Mutex >$/;"	c	namespace:spdlog::sinks	inherits:base_sink
rotating_file_sink_mt	spdlog/sinks/file_sinks.h	/^typedef rotating_file_sink<std::mutex> rotating_file_sink_mt;$/;"	t	namespace:spdlog::sinks
rotating_file_sink_st	spdlog/sinks/file_sinks.h	/^typedef rotating_file_sink<details::null_mutex>rotating_file_sink_st;$/;"	t	namespace:spdlog::sinks
rotating_logger_mt	spdlog/details/spdlog_impl.h	/^inline std::shared_ptr<spdlog::logger> spdlog::rotating_logger_mt(const std::string& logger_name, const filename_t& filename, size_t max_file_size, size_t max_files)$/;"	f	class:spdlog	signature:(const std::string& logger_name, const filename_t& filename, size_t max_file_size, size_t max_files)
rotating_logger_mt	spdlog/spdlog.h	/^std::shared_ptr<logger> rotating_logger_mt(const std::string& logger_name, const filename_t& filename, size_t max_file_size, size_t max_files);$/;"	p	namespace:spdlog	signature:(const std::string& logger_name, const filename_t& filename, size_t max_file_size, size_t max_files)
rotating_logger_st	spdlog/details/spdlog_impl.h	/^inline std::shared_ptr<spdlog::logger> spdlog::rotating_logger_st(const std::string& logger_name, const filename_t& filename, size_t max_file_size, size_t max_files)$/;"	f	class:spdlog	signature:(const std::string& logger_name, const filename_t& filename, size_t max_file_size, size_t max_files)
rotating_logger_st	spdlog/spdlog.h	/^std::shared_ptr<logger> rotating_logger_st(const std::string& logger_name, const filename_t& filename, size_t max_file_size, size_t max_files);$/;"	p	namespace:spdlog	signature:(const std::string& logger_name, const filename_t& filename, size_t max_file_size, size_t max_files)
s2bffFilters	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^    STRING2BFF s2bffFilters;                \/\/ the register of binding $/;"	m	class:CDMCoreAgent	access:private
s2fBeliefUpdatingFeatures	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^	STRING2FLOAT s2fBeliefUpdatingFeatures;$/;"	m	class:CGroundingManagerAgent	access:private
s2fConstantParameters	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    STRING2FLOAT s2fConstantParameters;$/;"	m	class:CGroundingManagerAgent	access:private
s2s2vfBeliefUpdatingModels	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^	STRING2STRING2FLOATVECTOR s2s2vfBeliefUpdatingModels;$/;"	m	class:CGroundingManagerAgent	access:private
s2s2vfConceptValuesInfo	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^	STRING2STRING2FLOATVECTOR s2s2vfConceptValuesInfo;$/;"	m	class:CGroundingManagerAgent	access:private
s2sConceptTypeInfo	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^	STRING2STRING s2sConceptTypeInfo;$/;"	m	class:CGroundingManagerAgent	access:private
s2sConfiguration	DMCore/Agents/Agent.h	/^	STRING2STRING s2sConfiguration;		\/\/ hash of parameters$/;"	m	class:CAgent	access:protected
s2sConfiguration	DMCore/Grounding/GroundingActions/GroundingAction.h	/^	STRING2STRING s2sConfiguration;$/;"	m	class:CGroundingAction	access:protected
s2sDialogStateNames	DMCore/Agents/CoreAgents/StateManagerAgent.h	/^	STRING2STRING s2sDialogStateNames;$/;"	m	class:CStateManagerAgent	access:public
s2sInputLineConfiguration	DMCore/Agents/DialogAgents/DialogAgent.h	/^	STRING2STRING s2sInputLineConfiguration;$/;"	m	class:CDialogAgent	access:protected
s2sPolicies	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    STRING2STRING s2sPolicies;$/;"	m	class:CGroundingManagerAgent	access:private
s2sProperties	DMCore/Events/InteractionEvent.h	/^	STRING2STRING s2sProperties;$/;"	m	class:CInteractionEvent	access:protected
s2sStateVars	DMCore/Grounding/GroundingUtils.h	/^    STRING2STRING s2sStateVars;$/;"	m	class:CState	access:private
sAct	DMCore/Outputs/Output.h	/^	string sAct;						\/\/ the act (dialog move)$/;"	m	class:COutput	access:protected
sActionName	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    string sActionName;                 \/\/ the name of the grounding action$/;"	m	struct:__anon40	access:public
sAgentName	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	string sAgentName;				\/\/ the name of the agent that declared the $/;"	m	struct:__anon49	access:public
sAgentName	DMCore/Agents/DialogAgents/DialogAgent.h	/^	string sAgentName;				\/\/ the name of the agent that claims focus$/;"	m	struct:__anon58	access:public
sAllLoggingStreams	DMCore/Log.cpp	/^string sAllLoggingStreams = (string)CORETHREAD_STREAM + ";" + $/;"	v
sBeliefUpdatingModelName	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^	string sBeliefUpdatingModelName;	$/;"	m	struct:__anon38	access:public
sBindingFilterName	DMCore/Agents/DialogAgents/DialogAgent.h	/^    string sBindingFilterName;      \/\/ the name of the registered custom $/;"	m	struct:__anon57	access:public
sConceptGM	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    string sConceptGM;$/;"	m	struct:__anon38	access:public
sConceptName	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	string sConceptName;			\/\/ the name of the concept that had a $/;"	m	struct:__anon50	access:public
sConceptName	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	string sConceptName;			\/\/ the name of the concept that will bind$/;"	m	struct:__anon49	access:public
sConceptName	DMCore/Agents/DialogAgents/DialogAgent.h	/^	string sConceptName;			\/\/ the name of the concept that we will$/;"	m	struct:__anon57	access:public
sCurrentAgent	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	string sCurrentAgent;			\/\/ the name of the agent that is executed$/;"	m	struct:__anon48	access:public
sCurrentAgentType	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	string sCurrentAgentType;		\/\/ the type of that agent$/;"	m	struct:__anon48	access:public
sDAConfiguration	DMCore/Agents/CoreAgents/DTTManagerAgent.h	/^	string sDAConfiguration;$/;"	m	struct:__anon43	access:public
sDAName	DMCore/Agents/CoreAgents/DTTManagerAgent.h	/^	string sDAName;$/;"	m	struct:__anon43	access:public
sDAType	DMCore/Agents/CoreAgents/DTTManagerAgent.h	/^	string sDAType;$/;"	m	struct:__anon43	access:public
sDialogAgentName	DMCore/Agents/DialogAgents/DialogAgent.h	/^	string sDialogAgentName;	$/;"	m	class:CDialogAgent	access:protected
sDialogState	DMCore/Outputs/Output.h	/^	string sDialogState;				\/\/ a string representing the dialog $/;"	m	class:COutput	access:protected
sDynamicAgentID	DMCore/Agents/DialogAgents/DialogAgent.h	/^    string sDynamicAgentID;$/;"	m	class:CDialogAgent	access:protected
sElementGroundingModelSpec	DMCore/Concepts/ArrayConcept.h	/^	string sElementGroundingModelSpec;$/;"	m	class:CArrayConcept	access:protected
sEventType	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	string sEventType;				\/\/ the type of event to which this$/;"	m	struct:__anon51	access:public
sExpectationType	DMCore/Agents/DialogAgents/DialogAgent.h	/^    string sExpectationType;        \/\/ indicates the type of this expectation$/;"	m	struct:__anon57	access:public
sExplicitValue	DMCore/Agents/DialogAgents/DialogAgent.h	/^	string sExplicitValue;			\/\/ the value bound to the concept in case$/;"	m	struct:__anon57	access:public
sExplicitlyConfirmedHyp	DMCore/Concepts/Concept.h	/^    string sExplicitlyConfirmedHyp;$/;"	m	class:CConcept	access:protected
sExplicitlyDisconfirmedHyp	DMCore/Concepts/Concept.h	/^    string sExplicitlyDisconfirmedHyp;$/;"	m	class:CConcept	access:protected
sExplorationMode	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    string sExplorationMode;  $/;"	m	class:CGroundingModel	access:protected
sExternalPolicyHost	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    string sExternalPolicyHost; $/;"	m	class:CGroundingModel	access:protected
sFeature	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.h	/^	string sFeature;$/;"	m	class:CCondition	access:protected
sFocusedAgentName	DMCore/Agents/CoreAgents/StateManagerAgent.h	/^    string sFocusedAgentName;			\/\/ the name of the focused agent$/;"	m	struct:__anon44	access:public
sGeneratorAgentName	DMCore/Outputs/Output.h	/^	string sGeneratorAgentName;			\/\/ name of the agent that ordered this$/;"	m	class:COutput	access:protected
sGrammarExpectation	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	string sGrammarExpectation;		\/\/ the expected grammar slot$/;"	m	struct:__anon49	access:public
sGrammarExpectation	DMCore/Agents/DialogAgents/DialogAgent.h	/^	string sGrammarExpectation;		\/\/ the grammar slot that is expected$/;"	m	struct:__anon57	access:public
sGroundingManagerConfiguration	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    string sGroundingManagerConfiguration;$/;"	m	struct:__anon38	access:public
sGroundingModelName	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    string sGroundingModelName;         \/\/ the name of the grounding model that$/;"	m	struct:__anon40	access:public
sInputLineConfiguration	DMCore/Agents/CoreAgents/StateManagerAgent.h	/^	string sInputLineConfiguration;		\/\/ string representation of the input$/;"	m	struct:__anon44	access:public
sLogFilename	DMCore/Log.h	/^static string sLogFilename = DEFAULT_LOG_FILENAME;$/;"	v
sLogFolder	DMCore/Log.h	/^static string sLogFolder = ".\\\\";			\/\/ needs to end with a backslash$/;"	v
sModelPolicy	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    string sModelPolicy;\/\/ the model policy name$/;"	m	class:CGroundingModel	access:protected
sModuleFunction	DMCore/Agents/CoreAgents/TrafficManagerAgent.h	/^	string sModuleFunction;$/;"	m	struct:__anon37	access:public
sName	DMCore/Agents/Agent.h	/^	string sName;		\/\/ name of agent$/;"	m	class:CAgent	access:protected
sName	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^	string sName;			\/\/ name of the output device$/;"	m	struct:__anon41	access:public
sName	DMCore/Concepts/Concept.h	/^	string sName;						$/;"	m	class:CConcept	access:protected
sName	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.h	/^	string sName;$/;"	m	class:CGMState	access:protected
sName	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    string sName;       \/\/ the model name$/;"	m	class:CGroundingModel	access:protected
sObject	DMCore/Outputs/Output.h	/^	string sObject;					    \/\/ the object (acted on or with)$/;"	m	class:COutput	access:protected
sOutputClass	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^    string sOutputClass;$/;"	m	class:COutputManagerAgent	access:private
sOutputDeviceName	DMCore/Outputs/Output.h	/^	string sOutputDeviceName;			\/\/ the name of the device this output$/;"	m	class:COutput	access:protected
sReasonDisabled	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	string sReasonDisabled;			\/\/ if the binding was blocked, the reason$/;"	m	struct:__anon49	access:public
sReasonDisabled	DMCore/Agents/DialogAgents/DialogAgent.h	/^	string sReasonDisabled;			\/\/ indicates why the expectation is $/;"	m	struct:__anon57	access:public
sScheduledBy	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	string sScheduledBy;			\/\/ the agent that scheduled this one for$/;"	m	struct:__anon48	access:public
sServerCall	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^	string sServerCall;		\/\/ external server name (module.function for galaxy)$/;"	m	struct:__anon41	access:public
sSlotName	DMCore/Agents/CoreAgents/TrafficManagerAgent.h	/^	string sSlotName;$/;"	m	struct:__anon35	access:public
sSlotName	DMCore/Agents/CoreAgents/TrafficManagerAgent.h	/^	string sSlotName;$/;"	m	struct:__anon36	access:public
sSlotValue	DMCore/Agents/CoreAgents/TrafficManagerAgent.h	/^	string sSlotValue;$/;"	m	struct:__anon35	access:public
sSocket	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    unsigned long int sSocket;         \/\/ the socket connection$/;"	m	class:CExternalPolicyInterface	access:private
sStateBroadcastAddress	DMCore/Agents/CoreAgents/StateManagerAgent.h	/^    string sStateBroadcastAddress;$/;"	m	class:CStateManagerAgent	access:public
sStateName	DMCore/Agents/CoreAgents/StateManagerAgent.h	/^	string sStateName;					\/\/ the name of the current dialog state$/;"	m	struct:__anon44	access:public
sStateName	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    string sStateName;  \/\/ the name of the state$/;"	m	struct:__anon62	access:public
sSystemAction	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	string sSystemAction;$/;"	m	struct:__anon53	access:public
sTestValue	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.h	/^	string sTestValue;$/;"	m	class:CCondition	access:protected
sTriggerCommandsGroundingModelSpec	DMCore/Agents/DialogAgents/DialogAgent.h	/^    string sTriggerCommandsGroundingModelSpec;$/;"	m	class:CDialogAgent	access:protected
sTriggeredByCommands	DMCore/Agents/DialogAgents/DialogAgent.h	/^    string sTriggeredByCommands;$/;"	m	class:CDialogAgent	access:protected
sTurnGM	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    string sTurnGM;$/;"	m	struct:__anon38	access:public
sType	DMCore/Agents/Agent.h	/^	string sType;		\/\/ type of agent$/;"	m	class:CAgent	access:protected
sType	DMCore/Events/InteractionEvent.h	/^	string sType;$/;"	m	class:CInteractionEvent	access:protected
sValue	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	string sValue;					\/\/ the value in the binding$/;"	m	struct:__anon49	access:public
sValue	DMCore/Concepts/StringConcept.h	/^	string sValue;$/;"	m	class:CStringHyp	access:protected
saSystemAction	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	TSystemAction saSystemAction;			\/\/ the current system action$/;"	m	class:CDMCoreAgent	access:private
saSystemAction	DMCore/Agents/CoreAgents/StateManagerAgent.h	/^	TSystemAction saSystemAction;		\/\/ the current system action$/;"	m	struct:__anon44	access:public
sep_	spdlog/fmt/bundled/format.h	/^    fmt::StringRef sep_;$/;"	m	class:fmt::internal::ThousandsSep	access:private
sequence_	spdlog/details/mpmc_bounded_q.h	/^        std::atomic<size_t>   sequence_;$/;"	m	struct:spdlog::details::mpmc_bounded_queue::cell_t	access:public
set_async_mode	spdlog/details/registry.h	/^    void set_async_mode(size_t q_size, const async_overflow_policy overflow_policy, const std::function<void()>& worker_warmup_cb, const std::chrono::milliseconds& flush_interval_ms, const std::function<void()>& worker_teardown_cb)$/;"	f	class:spdlog::details::registry_t	access:public	signature:(size_t q_size, const async_overflow_policy overflow_policy, const std::function<void()>& worker_warmup_cb, const std::chrono::milliseconds& flush_interval_ms, const std::function<void()>& worker_teardown_cb)
set_async_mode	spdlog/details/spdlog_impl.h	/^inline void spdlog::set_async_mode(size_t queue_size, const async_overflow_policy overflow_policy, const std::function<void()>& worker_warmup_cb, const std::chrono::milliseconds& flush_interval_ms, const std::function<void()>& worker_teardown_cb)$/;"	f	class:spdlog	signature:(size_t queue_size, const async_overflow_policy overflow_policy, const std::function<void()>& worker_warmup_cb, const std::chrono::milliseconds& flush_interval_ms, const std::function<void()>& worker_teardown_cb)
set_async_mode	spdlog/spdlog.h	/^void set_async_mode(size_t queue_size, const async_overflow_policy overflow_policy = async_overflow_policy::block_retry, const std::function<void()>& worker_warmup_cb = nullptr, const std::chrono::milliseconds& flush_interval_ms = std::chrono::milliseconds::zero(), const std::function<void()>& worker_teardown_cb = nullptr);$/;"	p	namespace:spdlog	signature:(size_t queue_size, const async_overflow_policy overflow_policy = async_overflow_policy::block_retry, const std::function<void()>& worker_warmup_cb = nullptr, const std::chrono::milliseconds& flush_interval_ms = std::chrono::milliseconds::zero(), const std::function<void()>& worker_teardown_cb = nullptr)
set_color	spdlog/sinks/ansicolor_sink.h	/^    void set_color(level::level_enum color_level, const std::string& color);$/;"	p	class:spdlog::sinks::ansicolor_sink	access:public	signature:(level::level_enum color_level, const std::string& color)
set_color	spdlog/sinks/ansicolor_sink.h	/^inline void ansicolor_sink::set_color(level::level_enum color_level, const std::string& color)$/;"	f	class:spdlog::sinks::ansicolor_sink	signature:(level::level_enum color_level, const std::string& color)
set_color	spdlog/sinks/wincolor_sink.h	/^    void set_color(level::level_enum level, WORD color)$/;"	f	class:spdlog::sinks::wincolor_sink	access:public	signature:(level::level_enum level, WORD color)
set_console_attribs	spdlog/sinks/wincolor_sink.h	/^    WORD set_console_attribs(WORD attribs)$/;"	f	class:spdlog::sinks::wincolor_sink	access:private	signature:(WORD attribs)
set_error_handler	spdlog/details/logger_impl.h	/^inline void spdlog::logger::set_error_handler(spdlog::log_err_handler err_handler)$/;"	f	class:spdlog::logger	signature:(spdlog::log_err_handler err_handler)
set_error_handler	spdlog/details/registry.h	/^    void set_error_handler(log_err_handler handler)$/;"	f	class:spdlog::details::registry_t	access:public	signature:(log_err_handler handler)
set_error_handler	spdlog/details/spdlog_impl.h	/^inline void spdlog::set_error_handler(log_err_handler handler)$/;"	f	class:spdlog	signature:(log_err_handler handler)
set_error_handler	spdlog/logger.h	/^    void set_error_handler(log_err_handler);$/;"	p	class:spdlog::logger	access:public	signature:(log_err_handler)
set_error_handler	spdlog/spdlog.h	/^void set_error_handler(log_err_handler);$/;"	p	namespace:spdlog	signature:(log_err_handler)
set_force_flush	spdlog/sinks/file_sinks.h	/^    void set_force_flush(bool force_flush)$/;"	f	class:spdlog::sinks::simple_file_sink	access:public	signature:(bool force_flush)
set_formatter	spdlog/details/async_log_helper.h	/^    void set_formatter(formatter_ptr);$/;"	p	class:spdlog::details::async_log_helper	access:public	signature:(formatter_ptr)
set_formatter	spdlog/details/async_log_helper.h	/^inline void spdlog::details::async_log_helper::set_formatter(formatter_ptr msg_formatter)$/;"	f	class:spdlog::details::async_log_helper	signature:(formatter_ptr msg_formatter)
set_formatter	spdlog/details/logger_impl.h	/^inline void spdlog::logger::set_formatter(spdlog::formatter_ptr msg_formatter)$/;"	f	class:spdlog::logger	signature:(spdlog::formatter_ptr msg_formatter)
set_formatter	spdlog/details/spdlog_impl.h	/^inline void spdlog::set_formatter(spdlog::formatter_ptr f)$/;"	f	class:spdlog	signature:(spdlog::formatter_ptr f)
set_formatter	spdlog/logger.h	/^    void set_formatter(formatter_ptr);$/;"	p	class:spdlog::logger	access:public	signature:(formatter_ptr)
set_formatter	spdlog/spdlog.h	/^void set_formatter(formatter_ptr f);$/;"	p	namespace:spdlog	signature:(formatter_ptr f)
set_level	spdlog/details/logger_impl.h	/^inline void spdlog::logger::set_level(spdlog::level::level_enum log_level)$/;"	f	class:spdlog::logger	signature:(spdlog::level::level_enum log_level)
set_level	spdlog/details/registry.h	/^    void set_level(level::level_enum log_level)$/;"	f	class:spdlog::details::registry_t	access:public	signature:(level::level_enum log_level)
set_level	spdlog/details/spdlog_impl.h	/^inline void spdlog::set_level(level::level_enum log_level)$/;"	f	class:spdlog	signature:(level::level_enum log_level)
set_level	spdlog/logger.h	/^    void set_level(level::level_enum);$/;"	p	class:spdlog::logger	access:public	signature:(level::level_enum)
set_level	spdlog/sinks/sink.h	/^    void set_level(level::level_enum log_level);$/;"	p	class:spdlog::sinks::sink	access:public	signature:(level::level_enum log_level)
set_level	spdlog/sinks/sink.h	/^inline void sink::set_level(level::level_enum log_level)$/;"	f	class:spdlog::sinks::sink	signature:(level::level_enum log_level)
set_level	spdlog/spdlog.h	/^void set_level(level::level_enum log_level);$/;"	p	namespace:spdlog	signature:(level::level_enum log_level)
set_pattern	spdlog/details/logger_impl.h	/^inline void spdlog::logger::set_pattern(const std::string& pattern)$/;"	f	class:spdlog::logger	signature:(const std::string& pattern)
set_pattern	spdlog/details/registry.h	/^    void set_pattern(const std::string& pattern)$/;"	f	class:spdlog::details::registry_t	access:public	signature:(const std::string& pattern)
set_pattern	spdlog/details/spdlog_impl.h	/^inline void spdlog::set_pattern(const std::string& format_string)$/;"	f	class:spdlog	signature:(const std::string& format_string)
set_pattern	spdlog/logger.h	/^    void set_pattern(const std::string&);$/;"	p	class:spdlog::logger	access:public	signature:(const std::string&)
set_pattern	spdlog/spdlog.h	/^void set_pattern(const std::string& format_string);$/;"	p	namespace:spdlog	signature:(const std::string& format_string)
set_string	spdlog/fmt/bundled/format.h	/^    void set_string(StringRef str)$/;"	f	class:fmt::internal::MakeValue	access:private	signature:(StringRef str)
set_string	spdlog/fmt/bundled/format.h	/^    void set_string(WStringRef str)$/;"	f	class:fmt::internal::MakeValue	access:private	signature:(WStringRef str)
set_sync_mode	spdlog/details/registry.h	/^    void set_sync_mode()$/;"	f	class:spdlog::details::registry_t	access:public	signature:()
set_sync_mode	spdlog/details/spdlog_impl.h	/^inline void spdlog::set_sync_mode()$/;"	f	class:spdlog	signature:()
set_sync_mode	spdlog/spdlog.h	/^void set_sync_mode();$/;"	p	namespace:spdlog	signature:()
setcpExplicitConfirms	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	set<CConcept *> setcpExplicitConfirms;$/;"	m	struct:__anon52	access:public
setcpImplicitConfirms	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	set<CConcept *> setcpImplicitConfirms;$/;"	m	struct:__anon52	access:public
setcpRequests	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	set<CConcept *> setcpRequests;$/;"	m	struct:__anon52	access:public
setcpUnplannedImplicitConfirms	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	set<CConcept *> setcpUnplannedImplicitConfirms;$/;"	m	struct:__anon52	access:public
short_level_formatter	spdlog/details/pattern_formatter_impl.h	/^class short_level_formatter:public flag_formatter$/;"	c	namespace:spdlog::details	inherits:flag_formatter
should_log	spdlog/details/logger_impl.h	/^inline bool spdlog::logger::should_log(spdlog::level::level_enum msg_level) const$/;"	f	class:spdlog::logger	signature:(spdlog::level::level_enum msg_level) const
should_log	spdlog/logger.h	/^    bool should_log(level::level_enum) const;$/;"	p	class:spdlog::logger	access:public	signature:(level::level_enum) const
should_log	spdlog/sinks/sink.h	/^    bool should_log(level::level_enum msg_level) const;$/;"	p	class:spdlog::sinks::sink	access:public	signature:(level::level_enum msg_level) const
should_log	spdlog/sinks/sink.h	/^inline bool sink::should_log(level::level_enum msg_level) const$/;"	f	class:spdlog::sinks::sink	signature:(level::level_enum msg_level) const
signbit	spdlog/fmt/bundled/format.h	/^inline DummyInt signbit(...)$/;"	f	namespace:fmt::internal	signature:(....)
simple_file_sink	spdlog/sinks/file_sinks.h	/^    explicit simple_file_sink(const filename_t &filename, bool truncate = false):_force_flush(false)$/;"	f	class:spdlog::sinks::simple_file_sink	access:public	signature:(const filename_t &filename, bool truncate = false)
simple_file_sink	spdlog/sinks/file_sinks.h	/^class simple_file_sink : public base_sink < Mutex >$/;"	c	namespace:spdlog::sinks	inherits:base_sink
simple_file_sink_mt	spdlog/sinks/file_sinks.h	/^typedef simple_file_sink<std::mutex> simple_file_sink_mt;$/;"	t	namespace:spdlog::sinks
simple_file_sink_st	spdlog/sinks/file_sinks.h	/^typedef simple_file_sink<details::null_mutex> simple_file_sink_st;$/;"	t	namespace:spdlog::sinks
sink	spdlog/sinks/sink.h	/^    sink()$/;"	f	class:spdlog::sinks::sink	access:public	signature:()
sink	spdlog/sinks/sink.h	/^class sink$/;"	c	namespace:spdlog::sinks
sink_	spdlog/sinks/ansicolor_sink.h	/^    sink_ptr sink_;$/;"	m	class:spdlog::sinks::ansicolor_sink	access:protected
sinks	spdlog/common.h	/^namespace sinks$/;"	n	namespace:spdlog
sinks	spdlog/details/logger_impl.h	/^inline const std::vector<spdlog::sink_ptr>& spdlog::logger::sinks() const$/;"	f	class:spdlog::logger	signature:() const
sinks	spdlog/logger.h	/^    const std::vector<sink_ptr>& sinks() const;$/;"	p	class:spdlog::logger	access:public	signature:() const
sinks	spdlog/sinks/android_sink.h	/^namespace sinks$/;"	n	namespace:spdlog
sinks	spdlog/sinks/ansicolor_sink.h	/^namespace sinks$/;"	n	namespace:spdlog
sinks	spdlog/sinks/base_sink.h	/^namespace sinks$/;"	n	namespace:spdlog
sinks	spdlog/sinks/dist_sink.h	/^namespace sinks$/;"	n	namespace:spdlog
sinks	spdlog/sinks/file_sinks.h	/^namespace sinks$/;"	n	namespace:spdlog
sinks	spdlog/sinks/msvc_sink.h	/^namespace sinks$/;"	n	namespace:spdlog
sinks	spdlog/sinks/null_sink.h	/^namespace sinks$/;"	n	namespace:spdlog
sinks	spdlog/sinks/ostream_sink.h	/^namespace sinks$/;"	n	namespace:spdlog
sinks	spdlog/sinks/sink.h	/^namespace sinks$/;"	n	namespace:spdlog
sinks	spdlog/sinks/stdout_sinks.h	/^namespace sinks$/;"	n	namespace:spdlog
sinks	spdlog/sinks/syslog_sink.h	/^namespace sinks$/;"	n	namespace:spdlog
sinks	spdlog/sinks/wincolor_sink.h	/^namespace sinks$/;"	n	namespace:spdlog
size	spdlog/details/file_helper.h	/^    size_t size()$/;"	f	class:spdlog::details::file_helper	access:public	signature:()
size	spdlog/fmt/bundled/format.h	/^        std::size_t size;$/;"	m	struct:fmt::internal::Value::StringValue	access:public
size	spdlog/fmt/bundled/format.h	/^    size_t size() const$/;"	f	class:fmt::internal::UTF16ToUTF8	access:public	signature:() const
size	spdlog/fmt/bundled/format.h	/^    size_t size() const$/;"	f	class:fmt::internal::UTF8ToUTF16	access:public	signature:() const
size	spdlog/fmt/bundled/format.h	/^    std::size_t size() const$/;"	f	class:BasicWriter	access:public	signature:() const
size	spdlog/fmt/bundled/format.h	/^    std::size_t size() const$/;"	f	class:FormatInt	access:public	signature:() const
size	spdlog/fmt/bundled/format.h	/^    std::size_t size() const$/;"	f	class:fmt::BasicStringRef	access:public	signature:() const
size	spdlog/fmt/bundled/format.h	/^    std::size_t size() const$/;"	f	class:fmt::Buffer	access:public	signature:() const
size	spdlog/fmt/bundled/ostream.h	/^    size_t size() const$/;"	f	class:fmt::internal::FormatBuf	access:public	signature:() const
size_	spdlog/fmt/bundled/format.h	/^    std::size_t size_;$/;"	m	class:fmt::BasicStringRef	access:private
size_	spdlog/fmt/bundled/format.h	/^    std::size_t size_;$/;"	m	class:fmt::Buffer	access:protected
sleep_or_yield	spdlog/details/async_log_helper.h	/^    static void sleep_or_yield(const spdlog::log_clock::time_point& now, const log_clock::time_point& last_op_time);$/;"	p	class:spdlog::details::async_log_helper	access:private	signature:(const spdlog::log_clock::time_point& now, const log_clock::time_point& last_op_time)
sleep_or_yield	spdlog/details/async_log_helper.h	/^inline void spdlog::details::async_log_helper::sleep_or_yield(const spdlog::log_clock::time_point& now, const spdlog::log_clock::time_point& last_op_time)$/;"	f	class:spdlog::details::async_log_helper	signature:(const spdlog::log_clock::time_point& now, const spdlog::log_clock::time_point& last_op_time)
spdlog	spdlog/async_logger.h	/^namespace spdlog$/;"	n
spdlog	spdlog/common.h	/^namespace spdlog$/;"	n
spdlog	spdlog/details/async_log_helper.h	/^namespace spdlog$/;"	n
spdlog	spdlog/details/file_helper.h	/^namespace spdlog$/;"	n
spdlog	spdlog/details/log_msg.h	/^namespace spdlog$/;"	n
spdlog	spdlog/details/mpmc_bounded_q.h	/^namespace spdlog$/;"	n
spdlog	spdlog/details/null_mutex.h	/^namespace spdlog$/;"	n
spdlog	spdlog/details/os.h	/^namespace spdlog$/;"	n
spdlog	spdlog/details/pattern_formatter_impl.h	/^namespace spdlog$/;"	n
spdlog	spdlog/details/registry.h	/^namespace spdlog$/;"	n
spdlog	spdlog/formatter.h	/^namespace spdlog$/;"	n
spdlog	spdlog/logger.h	/^namespace spdlog$/;"	n
spdlog	spdlog/sinks/android_sink.h	/^namespace spdlog$/;"	n
spdlog	spdlog/sinks/ansicolor_sink.h	/^namespace spdlog$/;"	n
spdlog	spdlog/sinks/base_sink.h	/^namespace spdlog$/;"	n
spdlog	spdlog/sinks/dist_sink.h	/^namespace spdlog$/;"	n
spdlog	spdlog/sinks/file_sinks.h	/^namespace spdlog$/;"	n
spdlog	spdlog/sinks/msvc_sink.h	/^namespace spdlog$/;"	n
spdlog	spdlog/sinks/null_sink.h	/^namespace spdlog$/;"	n
spdlog	spdlog/sinks/ostream_sink.h	/^namespace spdlog$/;"	n
spdlog	spdlog/sinks/sink.h	/^namespace spdlog$/;"	n
spdlog	spdlog/sinks/stdout_sinks.h	/^namespace spdlog$/;"	n
spdlog	spdlog/sinks/syslog_sink.h	/^namespace spdlog$/;"	n
spdlog	spdlog/sinks/wincolor_sink.h	/^namespace spdlog$/;"	n
spdlog	spdlog/spdlog.h	/^namespace spdlog$/;"	n
spdlog::android_logger	spdlog/details/spdlog_impl.h	/^inline std::shared_ptr<spdlog::logger> spdlog::android_logger(const std::string& logger_name, const std::string& tag)$/;"	f	class:spdlog	signature:(const std::string& logger_name, const std::string& tag)
spdlog::android_logger	spdlog/spdlog.h	/^std::shared_ptr<logger> android_logger(const std::string& logger_name, const std::string& tag = "spdlog");$/;"	p	namespace:spdlog	signature:(const std::string& logger_name, const std::string& tag = Ó)
spdlog::apply_all	spdlog/details/spdlog_impl.h	/^inline void spdlog::apply_all(std::function<void(std::shared_ptr<logger>)> fun)$/;"	f	class:spdlog	signature:(std::function<void(std::shared_ptr<logger>)> fun)
spdlog::apply_all	spdlog/spdlog.h	/^void apply_all(std::function<void(std::shared_ptr<logger>)> fun);$/;"	p	namespace:spdlog	signature:(std::function<void(std::shared_ptr<logger>)> fun)
spdlog::async_logger	spdlog/async_logger.h	/^class async_logger :public logger$/;"	c	namespace:spdlog	inherits:logger
spdlog::async_logger::_async_log_helper	spdlog/async_logger.h	/^    std::unique_ptr<details::async_log_helper> _async_log_helper;$/;"	m	class:spdlog::async_logger	access:private
spdlog::async_logger::_set_formatter	spdlog/details/async_logger_impl.h	/^inline void spdlog::async_logger::_set_formatter(spdlog::formatter_ptr msg_formatter)$/;"	f	class:spdlog::async_logger	signature:(spdlog::formatter_ptr msg_formatter)
spdlog::async_logger::_set_pattern	spdlog/details/async_logger_impl.h	/^inline void spdlog::async_logger::_set_pattern(const std::string& pattern)$/;"	f	class:spdlog::async_logger	signature:(const std::string& pattern)
spdlog::async_logger::_sink_it	spdlog/details/async_logger_impl.h	/^inline void spdlog::async_logger::_sink_it(details::log_msg& msg)$/;"	f	class:spdlog::async_logger	signature:(details::log_msg& msg)
spdlog::async_logger::async_logger	spdlog/async_logger.h	/^    async_logger(const std::string& logger_name,$/;"	p	class:spdlog::async_logger	access:public	signature:(const std::string& logger_name, sink_ptr single_sink, size_t queue_size, const async_overflow_policy overflow_policy = async_overflow_policy::block_retry, const std::function<void()>& worker_warmup_cb = nullptr, const std::chrono::milliseconds& flush_interval_ms = std::chrono::milliseconds::zero(), const std::function<void()>& worker_teardown_cb = nullptr)
spdlog::async_logger::async_logger	spdlog/async_logger.h	/^    async_logger(const std::string& logger_name,$/;"	p	class:spdlog::async_logger	access:public	signature:(const std::string& logger_name, sinks_init_list sinks, size_t queue_size, const async_overflow_policy overflow_policy = async_overflow_policy::block_retry, const std::function<void()>& worker_warmup_cb = nullptr, const std::chrono::milliseconds& flush_interval_ms = std::chrono::milliseconds::zero(), const std::function<void()>& worker_teardown_cb = nullptr)
spdlog::async_logger::async_logger	spdlog/async_logger.h	/^    async_logger(const std::string& name,$/;"	p	class:spdlog::async_logger	access:public	signature:(const std::string& name, const It& begin, const It& end, size_t queue_size, const async_overflow_policy overflow_policy = async_overflow_policy::block_retry, const std::function<void()>& worker_warmup_cb = nullptr, const std::chrono::milliseconds& flush_interval_ms = std::chrono::milliseconds::zero(), const std::function<void()>& worker_teardown_cb = nullptr)
spdlog::async_logger::async_logger	spdlog/details/async_logger_impl.h	/^inline spdlog::async_logger::async_logger(const std::string& logger_name,$/;"	f	class:spdlog::async_logger	signature:(const std::string& logger_name, const It& begin, const It& end, size_t queue_size, const async_overflow_policy overflow_policy, const std::function<void()>& worker_warmup_cb, const std::chrono::milliseconds& flush_interval_ms, const std::function<void()>& worker_teardown_cb)
spdlog::async_logger::async_logger	spdlog/details/async_logger_impl.h	/^inline spdlog::async_logger::async_logger(const std::string& logger_name,$/;"	f	class:spdlog::async_logger	signature:(const std::string& logger_name, sink_ptr single_sink, size_t queue_size, const async_overflow_policy overflow_policy, const std::function<void()>& worker_warmup_cb, const std::chrono::milliseconds& flush_interval_ms, const std::function<void()>& worker_teardown_cb)
spdlog::async_logger::async_logger	spdlog/details/async_logger_impl.h	/^inline spdlog::async_logger::async_logger(const std::string& logger_name,$/;"	f	class:spdlog::async_logger	signature:(const std::string& logger_name, sinks_init_list sinks_list, size_t queue_size, const async_overflow_policy overflow_policy, const std::function<void()>& worker_warmup_cb, const std::chrono::milliseconds& flush_interval_ms, const std::function<void()>& worker_teardown_cb)
spdlog::async_logger::flush	spdlog/details/async_logger_impl.h	/^inline void spdlog::async_logger::flush()$/;"	f	class:spdlog::async_logger	signature:()
spdlog::async_logger::override	spdlog/async_logger.h	/^    void _set_formatter(spdlog::formatter_ptr msg_formatter) override;$/;"	m	class:spdlog::async_logger	access:protected
spdlog::async_logger::override	spdlog/async_logger.h	/^    void _set_pattern(const std::string& pattern) override;$/;"	m	class:spdlog::async_logger	access:protected
spdlog::async_logger::override	spdlog/async_logger.h	/^    void _sink_it(details::log_msg& msg) override;$/;"	m	class:spdlog::async_logger	access:protected
spdlog::async_logger::override	spdlog/async_logger.h	/^    void flush() override;$/;"	m	class:spdlog::async_logger	access:public
spdlog::async_overflow_policy	spdlog/common.h	/^enum class async_overflow_policy$/;"	c	namespace:spdlog
spdlog::async_overflow_policy::block_retry	spdlog/common.h	/^    block_retry, \/\/ Block \/ yield \/ sleep until message can be enqueued$/;"	m	class:spdlog::async_overflow_policy	access:private
spdlog::basic_logger_mt	spdlog/details/spdlog_impl.h	/^inline std::shared_ptr<spdlog::logger> spdlog::basic_logger_mt(const std::string& logger_name, const filename_t& filename, bool truncate)$/;"	f	class:spdlog	signature:(const std::string& logger_name, const filename_t& filename, bool truncate)
spdlog::basic_logger_mt	spdlog/spdlog.h	/^std::shared_ptr<logger> basic_logger_mt(const std::string& logger_name, const filename_t& filename, bool truncate = false);$/;"	p	namespace:spdlog	signature:(const std::string& logger_name, const filename_t& filename, bool truncate = false)
spdlog::basic_logger_st	spdlog/details/spdlog_impl.h	/^inline std::shared_ptr<spdlog::logger> spdlog::basic_logger_st(const std::string& logger_name, const filename_t& filename, bool truncate)$/;"	f	class:spdlog	signature:(const std::string& logger_name, const filename_t& filename, bool truncate)
spdlog::basic_logger_st	spdlog/spdlog.h	/^std::shared_ptr<logger> basic_logger_st(const std::string& logger_name, const filename_t& filename, bool truncate = false);$/;"	p	namespace:spdlog	signature:(const std::string& logger_name, const filename_t& filename, bool truncate = false)
spdlog::create	spdlog/details/spdlog_impl.h	/^inline std::shared_ptr<spdlog::logger> spdlog::create(const std::string& logger_name, Args... args)$/;"	f	class:spdlog	signature:(const std::string& logger_name, Args... args)
spdlog::create	spdlog/details/spdlog_impl.h	/^inline std::shared_ptr<spdlog::logger> spdlog::create(const std::string& logger_name, const It& sinks_begin, const It& sinks_end)$/;"	f	class:spdlog	signature:(const std::string& logger_name, const It& sinks_begin, const It& sinks_end)
spdlog::create	spdlog/details/spdlog_impl.h	/^inline std::shared_ptr<spdlog::logger> spdlog::create(const std::string& logger_name, const spdlog::sink_ptr& sink)$/;"	f	class:spdlog	signature:(const std::string& logger_name, const spdlog::sink_ptr& sink)
spdlog::create	spdlog/details/spdlog_impl.h	/^inline std::shared_ptr<spdlog::logger> spdlog::create(const std::string& logger_name, spdlog::sinks_init_list sinks)$/;"	f	class:spdlog	signature:(const std::string& logger_name, spdlog::sinks_init_list sinks)
spdlog::create	spdlog/spdlog.h	/^std::shared_ptr<logger> create(const std::string& logger_name, const It& sinks_begin, const It& sinks_end);$/;"	p	namespace:spdlog	signature:(const std::string& logger_name, const It& sinks_begin, const It& sinks_end)
spdlog::create	spdlog/spdlog.h	/^std::shared_ptr<logger> create(const std::string& logger_name, const sink_ptr& sink);$/;"	p	namespace:spdlog	signature:(const std::string& logger_name, const sink_ptr& sink)
spdlog::create	spdlog/spdlog.h	/^std::shared_ptr<logger> create(const std::string& logger_name, sinks_init_list sinks);$/;"	p	namespace:spdlog	signature:(const std::string& logger_name, sinks_init_list sinks)
spdlog::create	spdlog/spdlog.h	/^std::shared_ptr<spdlog::logger> create(const std::string& logger_name, Args...);$/;"	p	namespace:spdlog	signature:(const std::string& logger_name, Args...)
spdlog::daily_logger_mt	spdlog/details/spdlog_impl.h	/^inline std::shared_ptr<spdlog::logger> spdlog::daily_logger_mt(const std::string& logger_name, const filename_t& filename, int hour, int minute)$/;"	f	class:spdlog	signature:(const std::string& logger_name, const filename_t& filename, int hour, int minute)
spdlog::daily_logger_mt	spdlog/spdlog.h	/^std::shared_ptr<logger> daily_logger_mt(const std::string& logger_name, const filename_t& filename, int hour=0, int minute=0);$/;"	p	namespace:spdlog	signature:(const std::string& logger_name, const filename_t& filename, int hour=0, int minute=0)
spdlog::daily_logger_st	spdlog/details/spdlog_impl.h	/^inline std::shared_ptr<spdlog::logger> spdlog::daily_logger_st(const std::string& logger_name, const filename_t& filename, int hour, int minute)$/;"	f	class:spdlog	signature:(const std::string& logger_name, const filename_t& filename, int hour, int minute)
spdlog::daily_logger_st	spdlog/spdlog.h	/^std::shared_ptr<logger> daily_logger_st(const std::string& logger_name, const filename_t& filename, int hour=0, int minute=0);$/;"	p	namespace:spdlog	signature:(const std::string& logger_name, const filename_t& filename, int hour=0, int minute=0)
spdlog::details	spdlog/async_logger.h	/^namespace details$/;"	n	namespace:spdlog
spdlog::details	spdlog/common.h	/^namespace details$/;"	n	namespace:spdlog
spdlog::details	spdlog/details/async_log_helper.h	/^namespace details$/;"	n	namespace:spdlog
spdlog::details	spdlog/details/file_helper.h	/^namespace details$/;"	n	namespace:spdlog
spdlog::details	spdlog/details/log_msg.h	/^namespace details$/;"	n	namespace:spdlog
spdlog::details	spdlog/details/mpmc_bounded_q.h	/^namespace details$/;"	n	namespace:spdlog
spdlog::details	spdlog/details/null_mutex.h	/^namespace details$/;"	n	namespace:spdlog
spdlog::details	spdlog/details/os.h	/^namespace details$/;"	n	namespace:spdlog
spdlog::details	spdlog/details/pattern_formatter_impl.h	/^namespace details$/;"	n	namespace:spdlog
spdlog::details	spdlog/details/registry.h	/^namespace details$/;"	n	namespace:spdlog
spdlog::details	spdlog/formatter.h	/^namespace details$/;"	n	namespace:spdlog
spdlog::details::A_formatter	spdlog/details/pattern_formatter_impl.h	/^class A_formatter:public flag_formatter$/;"	c	namespace:spdlog::details	inherits:flag_formatter
spdlog::details::B_formatter	spdlog/details/pattern_formatter_impl.h	/^class B_formatter:public flag_formatter$/;"	c	namespace:spdlog::details	inherits:flag_formatter
spdlog::details::C_formatter	spdlog/details/pattern_formatter_impl.h	/^class C_formatter:public flag_formatter$/;"	c	namespace:spdlog::details	inherits:flag_formatter
spdlog::details::D_formatter	spdlog/details/pattern_formatter_impl.h	/^class D_formatter:public flag_formatter$/;"	c	namespace:spdlog::details	inherits:flag_formatter
spdlog::details::F_formatter	spdlog/details/pattern_formatter_impl.h	/^class F_formatter:public flag_formatter$/;"	c	namespace:spdlog::details	inherits:flag_formatter
spdlog::details::H_formatter	spdlog/details/pattern_formatter_impl.h	/^class H_formatter:public flag_formatter$/;"	c	namespace:spdlog::details	inherits:flag_formatter
spdlog::details::I_formatter	spdlog/details/pattern_formatter_impl.h	/^class I_formatter:public flag_formatter$/;"	c	namespace:spdlog::details	inherits:flag_formatter
spdlog::details::M_formatter	spdlog/details/pattern_formatter_impl.h	/^class M_formatter:public flag_formatter$/;"	c	namespace:spdlog::details	inherits:flag_formatter
spdlog::details::R_formatter	spdlog/details/pattern_formatter_impl.h	/^class R_formatter:public flag_formatter$/;"	c	namespace:spdlog::details	inherits:flag_formatter
spdlog::details::S_formatter	spdlog/details/pattern_formatter_impl.h	/^class S_formatter:public flag_formatter$/;"	c	namespace:spdlog::details	inherits:flag_formatter
spdlog::details::T_formatter	spdlog/details/pattern_formatter_impl.h	/^class T_formatter:public flag_formatter$/;"	c	namespace:spdlog::details	inherits:flag_formatter
spdlog::details::Y_formatter	spdlog/details/pattern_formatter_impl.h	/^class Y_formatter:public flag_formatter$/;"	c	namespace:spdlog::details	inherits:flag_formatter
spdlog::details::__anon1::name_formatter	spdlog/details/pattern_formatter_impl.h	/^class name_formatter:public flag_formatter$/;"	c	namespace:spdlog::details::__anon1	inherits:flag_formatter
spdlog::details::a_formatter	spdlog/details/pattern_formatter_impl.h	/^class a_formatter:public flag_formatter$/;"	c	namespace:spdlog::details	inherits:flag_formatter
spdlog::details::aggregate_formatter	spdlog/details/pattern_formatter_impl.h	/^class aggregate_formatter:public flag_formatter$/;"	c	namespace:spdlog::details	inherits:flag_formatter
spdlog::details::aggregate_formatter::_str	spdlog/details/pattern_formatter_impl.h	/^    std::string _str;$/;"	m	class:spdlog::details::aggregate_formatter	access:private
spdlog::details::aggregate_formatter::add_ch	spdlog/details/pattern_formatter_impl.h	/^    void add_ch(char ch)$/;"	f	class:spdlog::details::aggregate_formatter	access:public	signature:(char ch)
spdlog::details::aggregate_formatter::aggregate_formatter	spdlog/details/pattern_formatter_impl.h	/^    aggregate_formatter()$/;"	f	class:spdlog::details::aggregate_formatter	access:public	signature:()
spdlog::details::ampm	spdlog/details/pattern_formatter_impl.h	/^static const char* ampm(const tm& t)$/;"	f	namespace:spdlog::details	signature:(const tm& t)
spdlog::details::async_log_helper	spdlog/details/async_log_helper.h	/^class async_log_helper$/;"	c	namespace:spdlog::details
spdlog::details::async_log_helper::_err_handler	spdlog/details/async_log_helper.h	/^    log_err_handler _err_handler;$/;"	m	class:spdlog::details::async_log_helper	access:private
spdlog::details::async_log_helper::_flush_interval_ms	spdlog/details/async_log_helper.h	/^    const std::chrono::milliseconds _flush_interval_ms;$/;"	m	class:spdlog::details::async_log_helper	access:private
spdlog::details::async_log_helper::_flush_requested	spdlog/details/async_log_helper.h	/^    bool _flush_requested;$/;"	m	class:spdlog::details::async_log_helper	access:private
spdlog::details::async_log_helper::_formatter	spdlog/details/async_log_helper.h	/^    formatter_ptr _formatter;$/;"	m	class:spdlog::details::async_log_helper	access:private
spdlog::details::async_log_helper::_overflow_policy	spdlog/details/async_log_helper.h	/^    const async_overflow_policy _overflow_policy;$/;"	m	class:spdlog::details::async_log_helper	access:private
spdlog::details::async_log_helper::_q	spdlog/details/async_log_helper.h	/^    q_type _q;$/;"	m	class:spdlog::details::async_log_helper	access:private
spdlog::details::async_log_helper::_sinks	spdlog/details/async_log_helper.h	/^    std::vector<std::shared_ptr<sinks::sink>> _sinks;$/;"	m	class:spdlog::details::async_log_helper	access:private
spdlog::details::async_log_helper::_terminate_requested	spdlog/details/async_log_helper.h	/^    bool _terminate_requested;$/;"	m	class:spdlog::details::async_log_helper	access:private
spdlog::details::async_log_helper::_worker_teardown_cb	spdlog/details/async_log_helper.h	/^    const std::function<void()> _worker_teardown_cb;$/;"	m	class:spdlog::details::async_log_helper	access:private
spdlog::details::async_log_helper::_worker_thread	spdlog/details/async_log_helper.h	/^    std::thread _worker_thread;$/;"	m	class:spdlog::details::async_log_helper	access:private
spdlog::details::async_log_helper::_worker_warmup_cb	spdlog/details/async_log_helper.h	/^    const std::function<void()> _worker_warmup_cb;$/;"	m	class:spdlog::details::async_log_helper	access:private
spdlog::details::async_log_helper::async_log_helper	spdlog/details/async_log_helper.h	/^inline spdlog::details::async_log_helper::async_log_helper($/;"	f	class:spdlog::details::async_log_helper	signature:( formatter_ptr formatter, const std::vector<sink_ptr>& sinks, size_t queue_size, log_err_handler err_handler, const async_overflow_policy overflow_policy, const std::function<void()>& worker_warmup_cb, const std::chrono::milliseconds& flush_interval_ms, const std::function<void()>& worker_teardown_cb)
spdlog::details::async_log_helper::async_msg	spdlog/details/async_log_helper.h	/^    struct async_msg$/;"	s	class:spdlog::details::async_log_helper	access:private
spdlog::details::async_log_helper::async_msg::SPDLOG_NOEXCEPT	spdlog/details/async_log_helper.h	/^async_msg(async_msg&& other) SPDLOG_NOEXCEPT:$/;"	m	struct:spdlog::details::async_log_helper::async_msg	access:public
spdlog::details::async_log_helper::async_msg::async_msg	spdlog/details/async_log_helper.h	/^        async_msg() = default;$/;"	p	struct:spdlog::details::async_log_helper::async_msg	access:public	signature:()
spdlog::details::async_log_helper::async_msg::async_msg	spdlog/details/async_log_helper.h	/^        async_msg(async_msg_type m_type) :msg_type(m_type)$/;"	f	struct:spdlog::details::async_log_helper::async_msg	access:public	signature:(async_msg_type m_type)
spdlog::details::async_log_helper::async_msg::async_msg	spdlog/details/async_log_helper.h	/^        async_msg(const async_msg&) = delete;$/;"	p	struct:spdlog::details::async_log_helper::async_msg	access:public	signature:(const async_msg&)
spdlog::details::async_log_helper::async_msg::async_msg	spdlog/details/async_log_helper.h	/^        async_msg(const details::log_msg& m) :$/;"	f	struct:spdlog::details::async_log_helper::async_msg	access:public	signature:(const details::log_msg& m)
spdlog::details::async_log_helper::async_msg::fill_log_msg	spdlog/details/async_log_helper.h	/^        void fill_log_msg(log_msg &msg)$/;"	f	struct:spdlog::details::async_log_helper::async_msg	access:public	signature:(log_msg &msg)
spdlog::details::async_log_helper::async_msg::level	spdlog/details/async_log_helper.h	/^        level::level_enum level;$/;"	m	struct:spdlog::details::async_log_helper::async_msg	access:public
spdlog::details::async_log_helper::async_msg::logger_name	spdlog/details/async_log_helper.h	/^        std::string logger_name;$/;"	m	struct:spdlog::details::async_log_helper::async_msg	access:public
spdlog::details::async_log_helper::async_msg::move	spdlog/details/async_log_helper.h	/^                    msg_type(std::move(other.msg_type))$/;"	f	struct:spdlog::details::async_log_helper::async_msg	access:public	signature:(other.msg_type)
spdlog::details::async_log_helper::async_msg::msg_type	spdlog/details/async_log_helper.h	/^        async_msg_type msg_type;$/;"	m	struct:spdlog::details::async_log_helper::async_msg	access:public
spdlog::details::async_log_helper::async_msg::other	spdlog/details/async_log_helper.h	/^        async_msg& operator=(const async_msg& other) = delete;$/;"	m	struct:spdlog::details::async_log_helper::async_msg	access:public
spdlog::details::async_log_helper::async_msg::thread_id	spdlog/details/async_log_helper.h	/^        size_t thread_id;$/;"	m	struct:spdlog::details::async_log_helper::async_msg	access:public
spdlog::details::async_log_helper::async_msg::time	spdlog/details/async_log_helper.h	/^        log_clock::time_point time;$/;"	m	struct:spdlog::details::async_log_helper::async_msg	access:public
spdlog::details::async_log_helper::async_msg::txt	spdlog/details/async_log_helper.h	/^        std::string txt;$/;"	m	struct:spdlog::details::async_log_helper::async_msg	access:public
spdlog::details::async_log_helper::async_msg::~async_msg	spdlog/details/async_log_helper.h	/^        ~async_msg() = default;$/;"	p	struct:spdlog::details::async_log_helper::async_msg	access:public	signature:()
spdlog::details::async_log_helper::async_msg_type	spdlog/details/async_log_helper.h	/^    enum class async_msg_type$/;"	c	class:spdlog::details::async_log_helper	access:private
spdlog::details::async_log_helper::async_msg_type::flush	spdlog/details/async_log_helper.h	/^        flush,$/;"	m	class:spdlog::details::async_log_helper::async_msg_type	access:private
spdlog::details::async_log_helper::async_msg_type::log	spdlog/details/async_log_helper.h	/^        log,$/;"	m	class:spdlog::details::async_log_helper::async_msg_type	access:private
spdlog::details::async_log_helper::flush	spdlog/details/async_log_helper.h	/^    void flush(bool wait_for_q);$/;"	p	class:spdlog::details::async_log_helper	access:public	signature:(bool wait_for_q)
spdlog::details::async_log_helper::flush	spdlog/details/async_log_helper.h	/^inline void spdlog::details::async_log_helper::flush(bool wait_for_q)$/;"	f	class:spdlog::details::async_log_helper	signature:(bool wait_for_q)
spdlog::details::async_log_helper::handle_flush_interval	spdlog/details/async_log_helper.h	/^    void handle_flush_interval(log_clock::time_point& now, log_clock::time_point& last_flush);$/;"	p	class:spdlog::details::async_log_helper	access:private	signature:(log_clock::time_point& now, log_clock::time_point& last_flush)
spdlog::details::async_log_helper::handle_flush_interval	spdlog/details/async_log_helper.h	/^inline void spdlog::details::async_log_helper::handle_flush_interval(log_clock::time_point& now, log_clock::time_point& last_flush)$/;"	f	class:spdlog::details::async_log_helper	signature:(log_clock::time_point& now, log_clock::time_point& last_flush)
spdlog::details::async_log_helper::log	spdlog/details/async_log_helper.h	/^    void log(const details::log_msg& msg);$/;"	p	class:spdlog::details::async_log_helper	access:public	signature:(const details::log_msg& msg)
spdlog::details::async_log_helper::log	spdlog/details/async_log_helper.h	/^inline void spdlog::details::async_log_helper::log(const details::log_msg& msg)$/;"	f	class:spdlog::details::async_log_helper	signature:(const details::log_msg& msg)
spdlog::details::async_log_helper::process_next_msg	spdlog/details/async_log_helper.h	/^    bool process_next_msg(log_clock::time_point& last_pop, log_clock::time_point& last_flush);$/;"	p	class:spdlog::details::async_log_helper	access:private	signature:(log_clock::time_point& last_pop, log_clock::time_point& last_flush)
spdlog::details::async_log_helper::process_next_msg	spdlog/details/async_log_helper.h	/^inline bool spdlog::details::async_log_helper::process_next_msg(log_clock::time_point& last_pop, log_clock::time_point& last_flush)$/;"	f	class:spdlog::details::async_log_helper	signature:(log_clock::time_point& last_pop, log_clock::time_point& last_flush)
spdlog::details::async_log_helper::push_msg	spdlog/details/async_log_helper.h	/^    void push_msg(async_msg&& new_msg);$/;"	p	class:spdlog::details::async_log_helper	access:private	signature:(async_msg&& new_msg)
spdlog::details::async_log_helper::push_msg	spdlog/details/async_log_helper.h	/^inline void spdlog::details::async_log_helper::push_msg(details::async_log_helper::async_msg&& new_msg)$/;"	f	class:spdlog::details::async_log_helper	signature:(details::async_log_helper::async_msg&& new_msg)
spdlog::details::async_log_helper::set_formatter	spdlog/details/async_log_helper.h	/^    void set_formatter(formatter_ptr);$/;"	p	class:spdlog::details::async_log_helper	access:public	signature:(formatter_ptr)
spdlog::details::async_log_helper::set_formatter	spdlog/details/async_log_helper.h	/^inline void spdlog::details::async_log_helper::set_formatter(formatter_ptr msg_formatter)$/;"	f	class:spdlog::details::async_log_helper	signature:(formatter_ptr msg_formatter)
spdlog::details::async_log_helper::sleep_or_yield	spdlog/details/async_log_helper.h	/^    static void sleep_or_yield(const spdlog::log_clock::time_point& now, const log_clock::time_point& last_op_time);$/;"	p	class:spdlog::details::async_log_helper	access:private	signature:(const spdlog::log_clock::time_point& now, const log_clock::time_point& last_op_time)
spdlog::details::async_log_helper::sleep_or_yield	spdlog/details/async_log_helper.h	/^inline void spdlog::details::async_log_helper::sleep_or_yield(const spdlog::log_clock::time_point& now, const spdlog::log_clock::time_point& last_op_time)$/;"	f	class:spdlog::details::async_log_helper	signature:(const spdlog::log_clock::time_point& now, const spdlog::log_clock::time_point& last_op_time)
spdlog::details::async_log_helper::wait_empty_q	spdlog/details/async_log_helper.h	/^    void wait_empty_q();$/;"	p	class:spdlog::details::async_log_helper	access:private	signature:()
spdlog::details::async_log_helper::wait_empty_q	spdlog/details/async_log_helper.h	/^inline void spdlog::details::async_log_helper::wait_empty_q()$/;"	f	class:spdlog::details::async_log_helper	signature:()
spdlog::details::async_log_helper::worker_loop	spdlog/details/async_log_helper.h	/^    void worker_loop();$/;"	p	class:spdlog::details::async_log_helper	access:private	signature:()
spdlog::details::async_log_helper::worker_loop	spdlog/details/async_log_helper.h	/^inline void spdlog::details::async_log_helper::worker_loop()$/;"	f	class:spdlog::details::async_log_helper	signature:()
spdlog::details::async_log_helper::~async_log_helper	spdlog/details/async_log_helper.h	/^    ~async_log_helper();$/;"	p	class:spdlog::details::async_log_helper	access:public	signature:()
spdlog::details::async_log_helper::~async_log_helper	spdlog/details/async_log_helper.h	/^inline spdlog::details::async_log_helper::~async_log_helper()$/;"	f	class:spdlog::details::async_log_helper	signature:()
spdlog::details::b_formatter	spdlog/details/pattern_formatter_impl.h	/^class b_formatter:public flag_formatter$/;"	c	namespace:spdlog::details	inherits:flag_formatter
spdlog::details::c_formatter	spdlog/details/pattern_formatter_impl.h	/^class c_formatter:public flag_formatter$/;"	c	namespace:spdlog::details	inherits:flag_formatter
spdlog::details::ch_formatter	spdlog/details/pattern_formatter_impl.h	/^class ch_formatter:public flag_formatter$/;"	c	namespace:spdlog::details	inherits:flag_formatter
spdlog::details::ch_formatter::_ch	spdlog/details/pattern_formatter_impl.h	/^    char _ch;$/;"	m	class:spdlog::details::ch_formatter	access:private
spdlog::details::ch_formatter::ch_formatter	spdlog/details/pattern_formatter_impl.h	/^    explicit ch_formatter(char ch): _ch(ch)$/;"	f	class:spdlog::details::ch_formatter	access:public	signature:(char ch)
spdlog::details::d_formatter	spdlog/details/pattern_formatter_impl.h	/^class d_formatter:public flag_formatter$/;"	c	namespace:spdlog::details	inherits:flag_formatter
spdlog::details::days	spdlog/details/pattern_formatter_impl.h	/^static const days_array& days()$/;"	f	namespace:spdlog::details	signature:()
spdlog::details::e_formatter	spdlog/details/pattern_formatter_impl.h	/^class e_formatter:public flag_formatter$/;"	c	namespace:spdlog::details	inherits:flag_formatter
spdlog::details::f_formatter	spdlog/details/pattern_formatter_impl.h	/^class f_formatter:public flag_formatter$/;"	c	namespace:spdlog::details	inherits:flag_formatter
spdlog::details::file_helper	spdlog/details/file_helper.h	/^class file_helper$/;"	c	namespace:spdlog::details
spdlog::details::file_helper::_fd	spdlog/details/file_helper.h	/^    FILE* _fd;$/;"	m	class:spdlog::details::file_helper	access:private
spdlog::details::file_helper::_filename	spdlog/details/file_helper.h	/^    filename_t _filename;$/;"	m	class:spdlog::details::file_helper	access:private
spdlog::details::file_helper::close	spdlog/details/file_helper.h	/^    void close()$/;"	f	class:spdlog::details::file_helper	access:public	signature:()
spdlog::details::file_helper::file_exists	spdlog/details/file_helper.h	/^    static bool file_exists(const filename_t& name)$/;"	f	class:spdlog::details::file_helper	access:public	signature:(const filename_t& name)
spdlog::details::file_helper::file_helper	spdlog/details/file_helper.h	/^    explicit file_helper() :$/;"	f	class:spdlog::details::file_helper	access:public	signature:()
spdlog::details::file_helper::file_helper	spdlog/details/file_helper.h	/^    file_helper(const file_helper&) = delete;$/;"	p	class:spdlog::details::file_helper	access:public	signature:(const file_helper&)
spdlog::details::file_helper::filename	spdlog/details/file_helper.h	/^    const filename_t& filename() const$/;"	f	class:spdlog::details::file_helper	access:public	signature:() const
spdlog::details::file_helper::flush	spdlog/details/file_helper.h	/^    void flush()$/;"	f	class:spdlog::details::file_helper	access:public	signature:()
spdlog::details::file_helper::open	spdlog/details/file_helper.h	/^    void open(const filename_t& fname, bool truncate = false)$/;"	f	class:spdlog::details::file_helper	access:public	signature:(const filename_t& fname, bool truncate = false)
spdlog::details::file_helper::open_interval	spdlog/details/file_helper.h	/^    const int open_interval = 10;$/;"	m	class:spdlog::details::file_helper	access:public
spdlog::details::file_helper::open_tries	spdlog/details/file_helper.h	/^    const int open_tries = 5;$/;"	m	class:spdlog::details::file_helper	access:public
spdlog::details::file_helper::operator =	spdlog/details/file_helper.h	/^    file_helper& operator=(const file_helper&) = delete;$/;"	p	class:spdlog::details::file_helper	access:public	signature:(const file_helper&)
spdlog::details::file_helper::reopen	spdlog/details/file_helper.h	/^    void reopen(bool truncate)$/;"	f	class:spdlog::details::file_helper	access:public	signature:(bool truncate)
spdlog::details::file_helper::size	spdlog/details/file_helper.h	/^    size_t size()$/;"	f	class:spdlog::details::file_helper	access:public	signature:()
spdlog::details::file_helper::write	spdlog/details/file_helper.h	/^    void write(const log_msg& msg)$/;"	f	class:spdlog::details::file_helper	access:public	signature:(const log_msg& msg)
spdlog::details::file_helper::~file_helper	spdlog/details/file_helper.h	/^    ~file_helper()$/;"	f	class:spdlog::details::file_helper	access:public	signature:()
spdlog::details::flag_formatter	spdlog/details/pattern_formatter_impl.h	/^class flag_formatter$/;"	c	namespace:spdlog::details
spdlog::details::flag_formatter::format	spdlog/details/pattern_formatter_impl.h	/^    virtual void format(details::log_msg& msg, const std::tm& tm_time) = 0;$/;"	p	class:spdlog::details::flag_formatter	access:public	signature:(details::log_msg& msg, const std::tm& tm_time)
spdlog::details::flag_formatter::~flag_formatter	spdlog/details/pattern_formatter_impl.h	/^    virtual ~flag_formatter()$/;"	f	class:spdlog::details::flag_formatter	access:public	signature:()
spdlog::details::full_days	spdlog/details/pattern_formatter_impl.h	/^static const days_array& full_days()$/;"	f	namespace:spdlog::details	signature:()
spdlog::details::full_formatter	spdlog/details/pattern_formatter_impl.h	/^class full_formatter:public flag_formatter$/;"	c	namespace:spdlog::details	inherits:flag_formatter
spdlog::details::full_months	spdlog/details/pattern_formatter_impl.h	/^static const months_array& full_months()$/;"	f	namespace:spdlog::details	signature:()
spdlog::details::level_formatter	spdlog/details/pattern_formatter_impl.h	/^class level_formatter:public flag_formatter$/;"	c	namespace:spdlog::details	inherits:flag_formatter
spdlog::details::log_msg	spdlog/details/log_msg.h	/^struct log_msg$/;"	s	namespace:spdlog::details
spdlog::details::log_msg::formatted	spdlog/details/log_msg.h	/^    fmt::MemoryWriter formatted;$/;"	m	struct:spdlog::details::log_msg	access:public
spdlog::details::log_msg::level	spdlog/details/log_msg.h	/^    level::level_enum level;$/;"	m	struct:spdlog::details::log_msg	access:public
spdlog::details::log_msg::log_msg	spdlog/details/log_msg.h	/^    log_msg() = default;$/;"	p	struct:spdlog::details::log_msg	access:public	signature:()
spdlog::details::log_msg::log_msg	spdlog/details/log_msg.h	/^    log_msg(const std::string *loggers_name, level::level_enum lvl) : logger_name(loggers_name), level(lvl)$/;"	f	struct:spdlog::details::log_msg	access:public	signature:(const std::string *loggers_name, level::level_enum lvl)
spdlog::details::log_msg::logger_name	spdlog/details/log_msg.h	/^    const std::string *logger_name;$/;"	m	struct:spdlog::details::log_msg	access:public
spdlog::details::log_msg::other	spdlog/details/log_msg.h	/^    log_msg& operator=(log_msg&& other) = delete;$/;"	m	struct:spdlog::details::log_msg	access:public
spdlog::details::log_msg::other	spdlog/details/log_msg.h	/^    log_msg(const log_msg& other)  = delete;$/;"	m	struct:spdlog::details::log_msg	access:public
spdlog::details::log_msg::other	spdlog/details/log_msg.h	/^    log_msg(log_msg&& other) = delete;$/;"	m	struct:spdlog::details::log_msg	access:public
spdlog::details::log_msg::raw	spdlog/details/log_msg.h	/^    fmt::MemoryWriter raw;$/;"	m	struct:spdlog::details::log_msg	access:public
spdlog::details::log_msg::thread_id	spdlog/details/log_msg.h	/^    size_t thread_id;$/;"	m	struct:spdlog::details::log_msg	access:public
spdlog::details::log_msg::time	spdlog/details/log_msg.h	/^    log_clock::time_point time;$/;"	m	struct:spdlog::details::log_msg	access:public
spdlog::details::m_formatter	spdlog/details/pattern_formatter_impl.h	/^class m_formatter:public flag_formatter$/;"	c	namespace:spdlog::details	inherits:flag_formatter
spdlog::details::months	spdlog/details/pattern_formatter_impl.h	/^static const months_array& months()$/;"	f	namespace:spdlog::details	signature:()
spdlog::details::mpmc_bounded_queue	spdlog/details/mpmc_bounded_q.h	/^class mpmc_bounded_queue$/;"	c	namespace:spdlog::details
spdlog::details::mpmc_bounded_queue::approx_size	spdlog/details/mpmc_bounded_q.h	/^    size_t approx_size()$/;"	f	class:spdlog::details::mpmc_bounded_queue	access:public	signature:()
spdlog::details::mpmc_bounded_queue::buffer_	spdlog/details/mpmc_bounded_q.h	/^    cell_t* const           buffer_;$/;"	m	class:spdlog::details::mpmc_bounded_queue	access:private
spdlog::details::mpmc_bounded_queue::buffer_mask_	spdlog/details/mpmc_bounded_q.h	/^    size_t const            buffer_mask_;$/;"	m	class:spdlog::details::mpmc_bounded_queue	access:private
spdlog::details::mpmc_bounded_queue::cacheline_pad_t	spdlog/details/mpmc_bounded_q.h	/^    typedef char            cacheline_pad_t [cacheline_size];$/;"	t	class:spdlog::details::mpmc_bounded_queue	access:private
spdlog::details::mpmc_bounded_queue::cacheline_size	spdlog/details/mpmc_bounded_q.h	/^    static size_t const     cacheline_size = 64;$/;"	m	class:spdlog::details::mpmc_bounded_queue	access:private
spdlog::details::mpmc_bounded_queue::cell_t	spdlog/details/mpmc_bounded_q.h	/^    struct cell_t$/;"	s	class:spdlog::details::mpmc_bounded_queue	access:private
spdlog::details::mpmc_bounded_queue::cell_t::data_	spdlog/details/mpmc_bounded_q.h	/^        T                     data_;$/;"	m	struct:spdlog::details::mpmc_bounded_queue::cell_t	access:public
spdlog::details::mpmc_bounded_queue::cell_t::sequence_	spdlog/details/mpmc_bounded_q.h	/^        std::atomic<size_t>   sequence_;$/;"	m	struct:spdlog::details::mpmc_bounded_queue::cell_t	access:public
spdlog::details::mpmc_bounded_queue::dequeue	spdlog/details/mpmc_bounded_q.h	/^    bool dequeue(T& data)$/;"	f	class:spdlog::details::mpmc_bounded_queue	access:public	signature:(T& data)
spdlog::details::mpmc_bounded_queue::dequeue_pos_	spdlog/details/mpmc_bounded_q.h	/^    std::atomic<size_t>     dequeue_pos_;$/;"	m	class:spdlog::details::mpmc_bounded_queue	access:private
spdlog::details::mpmc_bounded_queue::enqueue	spdlog/details/mpmc_bounded_q.h	/^    bool enqueue(T&& data)$/;"	f	class:spdlog::details::mpmc_bounded_queue	access:public	signature:(T&& data)
spdlog::details::mpmc_bounded_queue::enqueue_pos_	spdlog/details/mpmc_bounded_q.h	/^    std::atomic<size_t>     enqueue_pos_;$/;"	m	class:spdlog::details::mpmc_bounded_queue	access:private
spdlog::details::mpmc_bounded_queue::max_size_	spdlog/details/mpmc_bounded_q.h	/^    size_t const max_size_;$/;"	m	class:spdlog::details::mpmc_bounded_queue	access:private
spdlog::details::mpmc_bounded_queue::mpmc_bounded_queue	spdlog/details/mpmc_bounded_q.h	/^    mpmc_bounded_queue(mpmc_bounded_queue const&) = delete;$/;"	p	class:spdlog::details::mpmc_bounded_queue	access:private	signature:(mpmc_bounded_queue const&)
spdlog::details::mpmc_bounded_queue::mpmc_bounded_queue	spdlog/details/mpmc_bounded_q.h	/^    mpmc_bounded_queue(size_t buffer_size)$/;"	f	class:spdlog::details::mpmc_bounded_queue	access:public	signature:(size_t buffer_size)
spdlog::details::mpmc_bounded_queue::operator =	spdlog/details/mpmc_bounded_q.h	/^    void operator= (mpmc_bounded_queue const&) = delete;$/;"	p	class:spdlog::details::mpmc_bounded_queue	access:private	signature:(mpmc_bounded_queue const&)
spdlog::details::mpmc_bounded_queue::pad0_	spdlog/details/mpmc_bounded_q.h	/^    cacheline_pad_t         pad0_;$/;"	m	class:spdlog::details::mpmc_bounded_queue	access:private
spdlog::details::mpmc_bounded_queue::pad1_	spdlog/details/mpmc_bounded_q.h	/^    cacheline_pad_t         pad1_;$/;"	m	class:spdlog::details::mpmc_bounded_queue	access:private
spdlog::details::mpmc_bounded_queue::pad2_	spdlog/details/mpmc_bounded_q.h	/^    cacheline_pad_t         pad2_;$/;"	m	class:spdlog::details::mpmc_bounded_queue	access:private
spdlog::details::mpmc_bounded_queue::pad3_	spdlog/details/mpmc_bounded_q.h	/^    cacheline_pad_t         pad3_;$/;"	m	class:spdlog::details::mpmc_bounded_queue	access:private
spdlog::details::mpmc_bounded_queue::~mpmc_bounded_queue	spdlog/details/mpmc_bounded_q.h	/^    ~mpmc_bounded_queue()$/;"	f	class:spdlog::details::mpmc_bounded_queue	access:public	signature:()
spdlog::details::null_atomic_int	spdlog/details/null_mutex.h	/^struct null_atomic_int$/;"	s	namespace:spdlog::details
spdlog::details::null_atomic_int::load	spdlog/details/null_mutex.h	/^    int load(std::memory_order) const$/;"	f	struct:spdlog::details::null_atomic_int	access:public	signature:(std::memory_order) const
spdlog::details::null_atomic_int::null_atomic_int	spdlog/details/null_mutex.h	/^    null_atomic_int() = default;$/;"	p	struct:spdlog::details::null_atomic_int	access:public	signature:()
spdlog::details::null_atomic_int::null_atomic_int	spdlog/details/null_mutex.h	/^    null_atomic_int(int val):value(val)$/;"	f	struct:spdlog::details::null_atomic_int	access:public	signature:(int val)
spdlog::details::null_atomic_int::store	spdlog/details/null_mutex.h	/^    void store(int val)$/;"	f	struct:spdlog::details::null_atomic_int	access:public	signature:(int val)
spdlog::details::null_atomic_int::value	spdlog/details/null_mutex.h	/^    int value;$/;"	m	struct:spdlog::details::null_atomic_int	access:public
spdlog::details::null_mutex	spdlog/details/null_mutex.h	/^struct null_mutex$/;"	s	namespace:spdlog::details
spdlog::details::null_mutex::lock	spdlog/details/null_mutex.h	/^    void lock() {}$/;"	f	struct:spdlog::details::null_mutex	access:public	signature:()
spdlog::details::null_mutex::try_lock	spdlog/details/null_mutex.h	/^    bool try_lock()$/;"	f	struct:spdlog::details::null_mutex	access:public	signature:()
spdlog::details::null_mutex::unlock	spdlog/details/null_mutex.h	/^    void unlock() {}$/;"	f	struct:spdlog::details::null_mutex	access:public	signature:()
spdlog::details::os	spdlog/common.h	/^namespace os$/;"	n	namespace:spdlog::details
spdlog::details::os	spdlog/details/os.h	/^namespace os$/;"	n	namespace:spdlog::details
spdlog::details::os::_thread_id	spdlog/details/os.h	/^inline size_t _thread_id()$/;"	f	namespace:spdlog::details::os	signature:()
spdlog::details::os::eol	spdlog/details/os.h	/^SPDLOG_CONSTEXPR static const char* eol = SPDLOG_EOL;$/;"	m	namespace:spdlog::details::os
spdlog::details::os::eol_size	spdlog/details/os.h	/^SPDLOG_CONSTEXPR static int eol_size = sizeof(SPDLOG_EOL) - 1;$/;"	m	namespace:spdlog::details::os
spdlog::details::os::errno_str	spdlog/common.h	/^std::string errno_str(int err_num);$/;"	p	namespace:spdlog::details::os	signature:(int err_num)
spdlog::details::os::errno_str	spdlog/details/os.h	/^inline std::string errno_str(int err_num)$/;"	f	namespace:spdlog::details::os	signature:(int err_num)
spdlog::details::os::file_exists	spdlog/details/os.h	/^inline bool file_exists(const filename_t& filename)$/;"	f	namespace:spdlog::details::os	signature:(const filename_t& filename)
spdlog::details::os::filename_to_str	spdlog/details/os.h	/^inline std::string filename_to_str(const filename_t& filename)$/;"	f	namespace:spdlog::details::os	signature:(const filename_t& filename)
spdlog::details::os::filesize	spdlog/details/os.h	/^inline size_t filesize(FILE *f)$/;"	f	namespace:spdlog::details::os	signature:(FILE *f)
spdlog::details::os::fopen_s	spdlog/details/os.h	/^inline int fopen_s(FILE** fp, const filename_t& filename, const filename_t& mode)$/;"	f	namespace:spdlog::details::os	signature:(FILE** fp, const filename_t& filename, const filename_t& mode)
spdlog::details::os::gmtime	spdlog/details/os.h	/^inline std::tm gmtime()$/;"	f	namespace:spdlog::details::os	signature:()
spdlog::details::os::gmtime	spdlog/details/os.h	/^inline std::tm gmtime(const std::time_t &time_tt)$/;"	f	namespace:spdlog::details::os	signature:(const std::time_t &time_tt)
spdlog::details::os::localtime	spdlog/details/os.h	/^inline std::tm localtime()$/;"	f	namespace:spdlog::details::os	signature:()
spdlog::details::os::localtime	spdlog/details/os.h	/^inline std::tm localtime(const std::time_t &time_tt)$/;"	f	namespace:spdlog::details::os	signature:(const std::time_t &time_tt)
spdlog::details::os::now	spdlog/details/os.h	/^inline spdlog::log_clock::time_point now()$/;"	f	namespace:spdlog::details::os	signature:()
spdlog::details::os::operator !=	spdlog/details/os.h	/^inline bool operator!=(const std::tm& tm1, const std::tm& tm2)$/;"	f	namespace:spdlog::details::os	signature:(const std::tm& tm1, const std::tm& tm2)
spdlog::details::os::operator ==	spdlog/details/os.h	/^inline bool operator==(const std::tm& tm1, const std::tm& tm2)$/;"	f	namespace:spdlog::details::os	signature:(const std::tm& tm1, const std::tm& tm2)
spdlog::details::os::pid	spdlog/details/os.h	/^inline int pid()$/;"	f	namespace:spdlog::details::os	signature:()
spdlog::details::os::prevent_child_fd	spdlog/details/os.h	/^inline void prevent_child_fd(FILE *f)$/;"	f	namespace:spdlog::details::os	signature:(FILE *f)
spdlog::details::os::remove	spdlog/details/os.h	/^inline int remove(const filename_t &filename)$/;"	f	namespace:spdlog::details::os	signature:(const filename_t &filename)
spdlog::details::os::rename	spdlog/details/os.h	/^inline int rename(const filename_t& filename1, const filename_t& filename2)$/;"	f	namespace:spdlog::details::os	signature:(const filename_t& filename1, const filename_t& filename2)
spdlog::details::os::thread_id	spdlog/details/os.h	/^inline size_t thread_id()$/;"	f	namespace:spdlog::details::os	signature:()
spdlog::details::os::utc_minutes_offset	spdlog/details/os.h	/^inline int utc_minutes_offset(const std::tm& tm = details::os::localtime())$/;"	f	namespace:spdlog::details::os	signature:(const std::tm& tm = details::os::localtime())
spdlog::details::p_formatter	spdlog/details/pattern_formatter_impl.h	/^class p_formatter:public flag_formatter$/;"	c	namespace:spdlog::details	inherits:flag_formatter
spdlog::details::pad_n_join	spdlog/details/pattern_formatter_impl.h	/^static fmt::MemoryWriter& pad_n_join(fmt::MemoryWriter& w, int v1, int v2, char sep)$/;"	f	namespace:spdlog::details	signature:(fmt::MemoryWriter& w, int v1, int v2, char sep)
spdlog::details::pad_n_join	spdlog/details/pattern_formatter_impl.h	/^static fmt::MemoryWriter& pad_n_join(fmt::MemoryWriter& w, int v1, int v2, int v3, char sep)$/;"	f	namespace:spdlog::details	signature:(fmt::MemoryWriter& w, int v1, int v2, int v3, char sep)
spdlog::details::pid_formatter	spdlog/details/pattern_formatter_impl.h	/^class pid_formatter:public flag_formatter$/;"	c	namespace:spdlog::details	inherits:flag_formatter
spdlog::details::r_formatter	spdlog/details/pattern_formatter_impl.h	/^class r_formatter:public flag_formatter$/;"	c	namespace:spdlog::details	inherits:flag_formatter
spdlog::details::registry	spdlog/details/registry.h	/^typedef registry_t<spdlog::details::null_mutex> registry;$/;"	t	namespace:spdlog::details
spdlog::details::registry	spdlog/details/registry.h	/^typedef registry_t<std::mutex> registry;$/;"	t	namespace:spdlog::details
spdlog::details::registry_t	spdlog/details/registry.h	/^template <class Mutex> class registry_t$/;"	c	namespace:spdlog::details
spdlog::details::registry_t::_async_mode	spdlog/details/registry.h	/^    bool _async_mode = false;$/;"	m	class:spdlog::details::registry_t	access:private
spdlog::details::registry_t::_async_q_size	spdlog/details/registry.h	/^    size_t _async_q_size = 0;$/;"	m	class:spdlog::details::registry_t	access:private
spdlog::details::registry_t::_err_handler	spdlog/details/registry.h	/^    log_err_handler _err_handler;$/;"	m	class:spdlog::details::registry_t	access:private
spdlog::details::registry_t::_flush_interval_ms	spdlog/details/registry.h	/^    std::chrono::milliseconds _flush_interval_ms;$/;"	m	class:spdlog::details::registry_t	access:private
spdlog::details::registry_t::_formatter	spdlog/details/registry.h	/^    formatter_ptr _formatter;$/;"	m	class:spdlog::details::registry_t	access:private
spdlog::details::registry_t::_level	spdlog/details/registry.h	/^    level::level_enum _level = level::info;$/;"	m	class:spdlog::details::registry_t	access:private
spdlog::details::registry_t::_loggers	spdlog/details/registry.h	/^    std::unordered_map <std::string, std::shared_ptr<logger>> _loggers;$/;"	m	class:spdlog::details::registry_t	access:private
spdlog::details::registry_t::_mutex	spdlog/details/registry.h	/^    Mutex _mutex;$/;"	m	class:spdlog::details::registry_t	access:private
spdlog::details::registry_t::_overflow_policy	spdlog/details/registry.h	/^    async_overflow_policy _overflow_policy = async_overflow_policy::block_retry;$/;"	m	class:spdlog::details::registry_t	access:private
spdlog::details::registry_t::_worker_teardown_cb	spdlog/details/registry.h	/^    std::function<void()> _worker_teardown_cb = nullptr;$/;"	m	class:spdlog::details::registry_t	access:private
spdlog::details::registry_t::_worker_warmup_cb	spdlog/details/registry.h	/^    std::function<void()> _worker_warmup_cb = nullptr;$/;"	m	class:spdlog::details::registry_t	access:private
spdlog::details::registry_t::apply_all	spdlog/details/registry.h	/^    void apply_all(std::function<void(std::shared_ptr<logger>)> fun)$/;"	f	class:spdlog::details::registry_t	access:public	signature:(std::function<void(std::shared_ptr<logger>)> fun)
spdlog::details::registry_t::create	spdlog/details/registry.h	/^    std::shared_ptr<logger> create(const std::string& logger_name, const It& sinks_begin, const It& sinks_end)$/;"	f	class:spdlog::details::registry_t	access:public	signature:(const std::string& logger_name, const It& sinks_begin, const It& sinks_end)
spdlog::details::registry_t::create	spdlog/details/registry.h	/^    std::shared_ptr<logger> create(const std::string& logger_name, sink_ptr sink)$/;"	f	class:spdlog::details::registry_t	access:public	signature:(const std::string& logger_name, sink_ptr sink)
spdlog::details::registry_t::create	spdlog/details/registry.h	/^    std::shared_ptr<logger> create(const std::string& logger_name, sinks_init_list sinks)$/;"	f	class:spdlog::details::registry_t	access:public	signature:(const std::string& logger_name, sinks_init_list sinks)
spdlog::details::registry_t::drop	spdlog/details/registry.h	/^    void drop(const std::string& logger_name)$/;"	f	class:spdlog::details::registry_t	access:public	signature:(const std::string& logger_name)
spdlog::details::registry_t::drop_all	spdlog/details/registry.h	/^    void drop_all()$/;"	f	class:spdlog::details::registry_t	access:public	signature:()
spdlog::details::registry_t::formatter	spdlog/details/registry.h	/^    void formatter(formatter_ptr f)$/;"	f	class:spdlog::details::registry_t	access:public	signature:(formatter_ptr f)
spdlog::details::registry_t::get	spdlog/details/registry.h	/^    std::shared_ptr<logger> get(const std::string& logger_name)$/;"	f	class:spdlog::details::registry_t	access:public	signature:(const std::string& logger_name)
spdlog::details::registry_t::instance	spdlog/details/registry.h	/^    static registry_t<Mutex>& instance()$/;"	f	class:spdlog::details::registry_t	access:public	signature:()
spdlog::details::registry_t::operator =	spdlog/details/registry.h	/^    registry_t<Mutex>& operator=(const registry_t<Mutex>&) = delete;$/;"	p	class:spdlog::details::registry_t	access:private	signature:(const registry_t<Mutex>&)
spdlog::details::registry_t::register_logger	spdlog/details/registry.h	/^    void register_logger(std::shared_ptr<logger> logger)$/;"	f	class:spdlog::details::registry_t	access:public	signature:(std::shared_ptr<logger> logger)
spdlog::details::registry_t::registry_t	spdlog/details/registry.h	/^    registry_t<Mutex>() {}$/;"	f	class:spdlog::details::registry_t	access:private	signature:()
spdlog::details::registry_t::registry_t	spdlog/details/registry.h	/^    registry_t<Mutex>(const registry_t<Mutex>&) = delete;$/;"	p	class:spdlog::details::registry_t	access:private	signature:(const registry_t<Mutex>&)
spdlog::details::registry_t::set_async_mode	spdlog/details/registry.h	/^    void set_async_mode(size_t q_size, const async_overflow_policy overflow_policy, const std::function<void()>& worker_warmup_cb, const std::chrono::milliseconds& flush_interval_ms, const std::function<void()>& worker_teardown_cb)$/;"	f	class:spdlog::details::registry_t	access:public	signature:(size_t q_size, const async_overflow_policy overflow_policy, const std::function<void()>& worker_warmup_cb, const std::chrono::milliseconds& flush_interval_ms, const std::function<void()>& worker_teardown_cb)
spdlog::details::registry_t::set_error_handler	spdlog/details/registry.h	/^    void set_error_handler(log_err_handler handler)$/;"	f	class:spdlog::details::registry_t	access:public	signature:(log_err_handler handler)
spdlog::details::registry_t::set_level	spdlog/details/registry.h	/^    void set_level(level::level_enum log_level)$/;"	f	class:spdlog::details::registry_t	access:public	signature:(level::level_enum log_level)
spdlog::details::registry_t::set_pattern	spdlog/details/registry.h	/^    void set_pattern(const std::string& pattern)$/;"	f	class:spdlog::details::registry_t	access:public	signature:(const std::string& pattern)
spdlog::details::registry_t::set_sync_mode	spdlog/details/registry.h	/^    void set_sync_mode()$/;"	f	class:spdlog::details::registry_t	access:public	signature:()
spdlog::details::registry_t::throw_if_exists	spdlog/details/registry.h	/^    void throw_if_exists(const std::string &logger_name)$/;"	f	class:spdlog::details::registry_t	access:private	signature:(const std::string &logger_name)
spdlog::details::short_level_formatter	spdlog/details/pattern_formatter_impl.h	/^class short_level_formatter:public flag_formatter$/;"	c	namespace:spdlog::details	inherits:flag_formatter
spdlog::details::t_formatter	spdlog/details/pattern_formatter_impl.h	/^class t_formatter:public flag_formatter$/;"	c	namespace:spdlog::details	inherits:flag_formatter
spdlog::details::to12h	spdlog/details/pattern_formatter_impl.h	/^static int to12h(const tm& t)$/;"	f	namespace:spdlog::details	signature:(const tm& t)
spdlog::details::v_formatter	spdlog/details/pattern_formatter_impl.h	/^class v_formatter:public flag_formatter$/;"	c	namespace:spdlog::details	inherits:flag_formatter
spdlog::details::z_formatter	spdlog/details/pattern_formatter_impl.h	/^class z_formatter:public flag_formatter$/;"	c	namespace:spdlog::details	inherits:flag_formatter
spdlog::details::z_formatter::_last_update	spdlog/details/pattern_formatter_impl.h	/^    log_clock::time_point _last_update;$/;"	m	class:spdlog::details::z_formatter	access:private
spdlog::details::z_formatter::_mutex	spdlog/details/pattern_formatter_impl.h	/^    std::mutex _mutex;$/;"	m	class:spdlog::details::z_formatter	access:private
spdlog::details::z_formatter::_offset_minutes	spdlog/details/pattern_formatter_impl.h	/^    int _offset_minutes;$/;"	m	class:spdlog::details::z_formatter	access:private
spdlog::details::z_formatter::cache_refresh	spdlog/details/pattern_formatter_impl.h	/^    const std::chrono::seconds cache_refresh = std::chrono::seconds(5);$/;"	m	class:spdlog::details::z_formatter	access:public
spdlog::details::z_formatter::get_cached_offset	spdlog/details/pattern_formatter_impl.h	/^    int get_cached_offset(const log_msg& msg, const std::tm& tm_time)$/;"	f	class:spdlog::details::z_formatter	access:private	signature:(const log_msg& msg, const std::tm& tm_time)
spdlog::details::z_formatter::operator =	spdlog/details/pattern_formatter_impl.h	/^    z_formatter& operator=(const z_formatter&) = delete;$/;"	p	class:spdlog::details::z_formatter	access:public	signature:(const z_formatter&)
spdlog::details::z_formatter::z_formatter	spdlog/details/pattern_formatter_impl.h	/^    z_formatter():_last_update(std::chrono::seconds(0))$/;"	f	class:spdlog::details::z_formatter	access:public	signature:()
spdlog::details::z_formatter::z_formatter	spdlog/details/pattern_formatter_impl.h	/^    z_formatter(const z_formatter&) = delete;$/;"	p	class:spdlog::details::z_formatter	access:public	signature:(const z_formatter&)
spdlog::drop	spdlog/details/spdlog_impl.h	/^inline void spdlog::drop(const std::string &name)$/;"	f	class:spdlog	signature:(const std::string &name)
spdlog::drop	spdlog/spdlog.h	/^void drop(const std::string &name);$/;"	p	namespace:spdlog	signature:(const std::string &name)
spdlog::drop_all	spdlog/details/spdlog_impl.h	/^inline void spdlog::drop_all()$/;"	f	class:spdlog	signature:()
spdlog::drop_all	spdlog/spdlog.h	/^void drop_all();$/;"	p	namespace:spdlog	signature:()
spdlog::formatter	spdlog/formatter.h	/^class formatter$/;"	c	namespace:spdlog
spdlog::formatter::format	spdlog/formatter.h	/^    virtual void format(details::log_msg& msg) = 0;$/;"	p	class:spdlog::formatter	access:public	signature:(details::log_msg& msg)
spdlog::formatter::~formatter	spdlog/formatter.h	/^    virtual ~formatter() {}$/;"	f	class:spdlog::formatter	access:public	signature:()
spdlog::get	spdlog/details/spdlog_impl.h	/^inline std::shared_ptr<spdlog::logger> spdlog::get(const std::string& name)$/;"	f	class:spdlog	signature:(const std::string& name)
spdlog::get	spdlog/spdlog.h	/^std::shared_ptr<logger> get(const std::string& name);$/;"	p	namespace:spdlog	signature:(const std::string& name)
spdlog::level	spdlog/common.h	/^namespace level$/;"	n	namespace:spdlog
spdlog::level::critical	spdlog/common.h	/^    critical = 5,$/;"	e	enum:spdlog::level::__anon34
spdlog::level::debug	spdlog/common.h	/^    debug = 1,$/;"	e	enum:spdlog::level::__anon34
spdlog::level::err	spdlog/common.h	/^    err = 4,$/;"	e	enum:spdlog::level::__anon34
spdlog::level::info	spdlog/common.h	/^    info = 2,$/;"	e	enum:spdlog::level::__anon34
spdlog::level::level_enum	spdlog/common.h	/^} level_enum;$/;"	t	namespace:spdlog::level	typeref:enum:spdlog::level::__anon34
spdlog::level::off	spdlog/common.h	/^    off = 6$/;"	e	enum:spdlog::level::__anon34
spdlog::level::to_short_str	spdlog/common.h	/^inline const char* to_short_str(spdlog::level::level_enum l)$/;"	f	namespace:spdlog::level	signature:(spdlog::level::level_enum l)
spdlog::level::to_str	spdlog/common.h	/^inline const char* to_str(spdlog::level::level_enum l)$/;"	f	namespace:spdlog::level	signature:(spdlog::level::level_enum l)
spdlog::level::trace	spdlog/common.h	/^    trace = 0,$/;"	e	enum:spdlog::level::__anon34
spdlog::level::warn	spdlog/common.h	/^    warn = 3,$/;"	e	enum:spdlog::level::__anon34
spdlog::logger	spdlog/logger.h	/^class logger$/;"	c	namespace:spdlog
spdlog::logger::_default_err_handler	spdlog/details/logger_impl.h	/^inline void spdlog::logger::_default_err_handler(const std::string &msg)$/;"	f	class:spdlog::logger	signature:(const std::string &msg)
spdlog::logger::_default_err_handler	spdlog/logger.h	/^    virtual void _default_err_handler(const std::string &msg);$/;"	p	class:spdlog::logger	access:protected	signature:(const std::string &msg)
spdlog::logger::_err_handler	spdlog/logger.h	/^    log_err_handler _err_handler;$/;"	m	class:spdlog::logger	access:protected
spdlog::logger::_flush_level	spdlog/logger.h	/^    spdlog::level_t _flush_level;$/;"	m	class:spdlog::logger	access:protected
spdlog::logger::_formatter	spdlog/logger.h	/^    formatter_ptr _formatter;$/;"	m	class:spdlog::logger	access:protected
spdlog::logger::_last_err_time	spdlog/logger.h	/^    std::atomic<time_t> _last_err_time;$/;"	m	class:spdlog::logger	access:protected
spdlog::logger::_level	spdlog/logger.h	/^    spdlog::level_t _level;$/;"	m	class:spdlog::logger	access:protected
spdlog::logger::_name	spdlog/logger.h	/^    const std::string _name;$/;"	m	class:spdlog::logger	access:protected
spdlog::logger::_set_formatter	spdlog/details/logger_impl.h	/^inline void spdlog::logger::_set_formatter(formatter_ptr msg_formatter)$/;"	f	class:spdlog::logger	signature:(formatter_ptr msg_formatter)
spdlog::logger::_set_formatter	spdlog/logger.h	/^    virtual void _set_formatter(formatter_ptr);$/;"	p	class:spdlog::logger	access:protected	signature:(formatter_ptr)
spdlog::logger::_set_pattern	spdlog/details/logger_impl.h	/^inline void spdlog::logger::_set_pattern(const std::string& pattern)$/;"	f	class:spdlog::logger	signature:(const std::string& pattern)
spdlog::logger::_set_pattern	spdlog/logger.h	/^    virtual void _set_pattern(const std::string&);$/;"	p	class:spdlog::logger	access:protected	signature:(const std::string&)
spdlog::logger::_should_flush_on	spdlog/details/logger_impl.h	/^inline bool spdlog::logger::_should_flush_on(const details::log_msg &msg)$/;"	f	class:spdlog::logger	signature:(const details::log_msg &msg)
spdlog::logger::_should_flush_on	spdlog/logger.h	/^    bool _should_flush_on(const details::log_msg&);$/;"	p	class:spdlog::logger	access:protected	signature:(const details::log_msg&)
spdlog::logger::_sink_it	spdlog/details/logger_impl.h	/^inline void spdlog::logger::_sink_it(details::log_msg& msg)$/;"	f	class:spdlog::logger	signature:(details::log_msg& msg)
spdlog::logger::_sink_it	spdlog/logger.h	/^    virtual void _sink_it(details::log_msg&);$/;"	p	class:spdlog::logger	access:protected	signature:(details::log_msg&)
spdlog::logger::_sinks	spdlog/logger.h	/^    std::vector<sink_ptr> _sinks;$/;"	m	class:spdlog::logger	access:protected
spdlog::logger::critical	spdlog/details/logger_impl.h	/^inline void spdlog::logger::critical(const T& msg)$/;"	f	class:spdlog::logger	signature:(const T& msg)
spdlog::logger::critical	spdlog/details/logger_impl.h	/^inline void spdlog::logger::critical(const char* fmt, const Args&... args)$/;"	f	class:spdlog::logger	signature:(const char* fmt, const Args&... args)
spdlog::logger::critical	spdlog/logger.h	/^    template <typename T> void critical(const T&);$/;"	p	class:spdlog::logger	access:public	signature:(const T&)
spdlog::logger::critical	spdlog/logger.h	/^    template <typename... Args> void critical(const char* fmt, const Args&... args);$/;"	p	class:spdlog::logger	access:public	signature:(const char* fmt, const Args&... args)
spdlog::logger::debug	spdlog/details/logger_impl.h	/^inline void spdlog::logger::debug(const T& msg)$/;"	f	class:spdlog::logger	signature:(const T& msg)
spdlog::logger::debug	spdlog/details/logger_impl.h	/^inline void spdlog::logger::debug(const char* fmt, const Args&... args)$/;"	f	class:spdlog::logger	signature:(const char* fmt, const Args&... args)
spdlog::logger::debug	spdlog/logger.h	/^    template <typename T> void debug(const T&);$/;"	p	class:spdlog::logger	access:public	signature:(const T&)
spdlog::logger::debug	spdlog/logger.h	/^    template <typename... Args> void debug(const char* fmt, const Args&... args);$/;"	p	class:spdlog::logger	access:public	signature:(const char* fmt, const Args&... args)
spdlog::logger::error	spdlog/details/logger_impl.h	/^inline void spdlog::logger::error(const T& msg)$/;"	f	class:spdlog::logger	signature:(const T& msg)
spdlog::logger::error	spdlog/details/logger_impl.h	/^inline void spdlog::logger::error(const char* fmt, const Args&... args)$/;"	f	class:spdlog::logger	signature:(const char* fmt, const Args&... args)
spdlog::logger::error	spdlog/logger.h	/^    template <typename T> void error(const T&);$/;"	p	class:spdlog::logger	access:public	signature:(const T&)
spdlog::logger::error	spdlog/logger.h	/^    template <typename... Args> void error(const char* fmt, const Args&... args);$/;"	p	class:spdlog::logger	access:public	signature:(const char* fmt, const Args&... args)
spdlog::logger::error_handler	spdlog/details/logger_impl.h	/^inline spdlog::log_err_handler spdlog::logger::error_handler()$/;"	f	class:spdlog::logger	signature:()
spdlog::logger::error_handler	spdlog/logger.h	/^    log_err_handler error_handler();$/;"	p	class:spdlog::logger	access:public	signature:()
spdlog::logger::flush	spdlog/details/logger_impl.h	/^inline void spdlog::logger::flush()$/;"	f	class:spdlog::logger	signature:()
spdlog::logger::flush	spdlog/logger.h	/^    virtual void flush();$/;"	p	class:spdlog::logger	access:public	signature:()
spdlog::logger::flush_on	spdlog/details/logger_impl.h	/^inline void spdlog::logger::flush_on(level::level_enum log_level)$/;"	f	class:spdlog::logger	signature:(level::level_enum log_level)
spdlog::logger::flush_on	spdlog/logger.h	/^    void flush_on(level::level_enum log_level);$/;"	p	class:spdlog::logger	access:public	signature:(level::level_enum log_level)
spdlog::logger::info	spdlog/details/logger_impl.h	/^inline void spdlog::logger::info(const T& msg)$/;"	f	class:spdlog::logger	signature:(const T& msg)
spdlog::logger::info	spdlog/details/logger_impl.h	/^inline void spdlog::logger::info(const char* fmt, const Args&... args)$/;"	f	class:spdlog::logger	signature:(const char* fmt, const Args&... args)
spdlog::logger::info	spdlog/logger.h	/^    template <typename T> void info(const T&);$/;"	p	class:spdlog::logger	access:public	signature:(const T&)
spdlog::logger::info	spdlog/logger.h	/^    template <typename... Args> void info(const char* fmt, const Args&... args);$/;"	p	class:spdlog::logger	access:public	signature:(const char* fmt, const Args&... args)
spdlog::logger::level	spdlog/details/logger_impl.h	/^inline spdlog::level::level_enum spdlog::logger::level() const$/;"	f	class:spdlog::logger	signature:() const
spdlog::logger::level	spdlog/logger.h	/^    level::level_enum level() const;$/;"	p	class:spdlog::logger	access:public	signature:() const
spdlog::logger::log	spdlog/details/logger_impl.h	/^inline void spdlog::logger::log(level::level_enum lvl, const T& msg)$/;"	f	class:spdlog::logger	signature:(level::level_enum lvl, const T& msg)
spdlog::logger::log	spdlog/details/logger_impl.h	/^inline void spdlog::logger::log(level::level_enum lvl, const char* fmt, const Args&... args)$/;"	f	class:spdlog::logger	signature:(level::level_enum lvl, const char* fmt, const Args&... args)
spdlog::logger::log	spdlog/details/logger_impl.h	/^inline void spdlog::logger::log(level::level_enum lvl, const char* msg)$/;"	f	class:spdlog::logger	signature:(level::level_enum lvl, const char* msg)
spdlog::logger::log	spdlog/logger.h	/^    template <typename T> void log(level::level_enum lvl, const T&);$/;"	p	class:spdlog::logger	access:public	signature:(level::level_enum lvl, const T&)
spdlog::logger::log	spdlog/logger.h	/^    template <typename... Args> void log(level::level_enum lvl, const char* fmt, const Args&... args);$/;"	p	class:spdlog::logger	access:public	signature:(level::level_enum lvl, const char* fmt, const Args&... args)
spdlog::logger::log	spdlog/logger.h	/^    template <typename... Args> void log(level::level_enum lvl, const char* msg);$/;"	p	class:spdlog::logger	access:public	signature:(level::level_enum lvl, const char* msg)
spdlog::logger::logger	spdlog/details/logger_impl.h	/^inline spdlog::logger::logger(const std::string& logger_name, const It& begin, const It& end):$/;"	f	class:spdlog::logger	signature:(const std::string& logger_name, const It& begin, const It& end)
spdlog::logger::logger	spdlog/details/logger_impl.h	/^inline spdlog::logger::logger(const std::string& logger_name, sinks_init_list sinks_list):$/;"	f	class:spdlog::logger	signature:(const std::string& logger_name, sinks_init_list sinks_list)
spdlog::logger::logger	spdlog/details/logger_impl.h	/^inline spdlog::logger::logger(const std::string& logger_name, spdlog::sink_ptr single_sink):$/;"	f	class:spdlog::logger	signature:(const std::string& logger_name, spdlog::sink_ptr single_sink)
spdlog::logger::logger	spdlog/logger.h	/^    logger(const logger&) = delete;$/;"	p	class:spdlog::logger	access:public	signature:(const logger&)
spdlog::logger::logger	spdlog/logger.h	/^    logger(const std::string& logger_name, sink_ptr single_sink);$/;"	p	class:spdlog::logger	access:public	signature:(const std::string& logger_name, sink_ptr single_sink)
spdlog::logger::logger	spdlog/logger.h	/^    logger(const std::string& name, const It& begin, const It& end);$/;"	p	class:spdlog::logger	access:public	signature:(const std::string& name, const It& begin, const It& end)
spdlog::logger::logger	spdlog/logger.h	/^    logger(const std::string& name, sinks_init_list);$/;"	p	class:spdlog::logger	access:public	signature:(const std::string& name, sinks_init_list)
spdlog::logger::name	spdlog/details/logger_impl.h	/^inline const std::string& spdlog::logger::name() const$/;"	f	class:spdlog::logger	signature:() const
spdlog::logger::name	spdlog/logger.h	/^    const std::string& name() const;$/;"	p	class:spdlog::logger	access:public	signature:() const
spdlog::logger::operator =	spdlog/logger.h	/^    logger& operator=(const logger&) = delete;$/;"	p	class:spdlog::logger	access:public	signature:(const logger&)
spdlog::logger::set_error_handler	spdlog/details/logger_impl.h	/^inline void spdlog::logger::set_error_handler(spdlog::log_err_handler err_handler)$/;"	f	class:spdlog::logger	signature:(spdlog::log_err_handler err_handler)
spdlog::logger::set_error_handler	spdlog/logger.h	/^    void set_error_handler(log_err_handler);$/;"	p	class:spdlog::logger	access:public	signature:(log_err_handler)
spdlog::logger::set_formatter	spdlog/details/logger_impl.h	/^inline void spdlog::logger::set_formatter(spdlog::formatter_ptr msg_formatter)$/;"	f	class:spdlog::logger	signature:(spdlog::formatter_ptr msg_formatter)
spdlog::logger::set_formatter	spdlog/logger.h	/^    void set_formatter(formatter_ptr);$/;"	p	class:spdlog::logger	access:public	signature:(formatter_ptr)
spdlog::logger::set_level	spdlog/details/logger_impl.h	/^inline void spdlog::logger::set_level(spdlog::level::level_enum log_level)$/;"	f	class:spdlog::logger	signature:(spdlog::level::level_enum log_level)
spdlog::logger::set_level	spdlog/logger.h	/^    void set_level(level::level_enum);$/;"	p	class:spdlog::logger	access:public	signature:(level::level_enum)
spdlog::logger::set_pattern	spdlog/details/logger_impl.h	/^inline void spdlog::logger::set_pattern(const std::string& pattern)$/;"	f	class:spdlog::logger	signature:(const std::string& pattern)
spdlog::logger::set_pattern	spdlog/logger.h	/^    void set_pattern(const std::string&);$/;"	p	class:spdlog::logger	access:public	signature:(const std::string&)
spdlog::logger::should_log	spdlog/details/logger_impl.h	/^inline bool spdlog::logger::should_log(spdlog::level::level_enum msg_level) const$/;"	f	class:spdlog::logger	signature:(spdlog::level::level_enum msg_level) const
spdlog::logger::should_log	spdlog/logger.h	/^    bool should_log(level::level_enum) const;$/;"	p	class:spdlog::logger	access:public	signature:(level::level_enum) const
spdlog::logger::sinks	spdlog/details/logger_impl.h	/^inline const std::vector<spdlog::sink_ptr>& spdlog::logger::sinks() const$/;"	f	class:spdlog::logger	signature:() const
spdlog::logger::sinks	spdlog/logger.h	/^    const std::vector<sink_ptr>& sinks() const;$/;"	p	class:spdlog::logger	access:public	signature:() const
spdlog::logger::trace	spdlog/details/logger_impl.h	/^inline void spdlog::logger::trace(const T& msg)$/;"	f	class:spdlog::logger	signature:(const T& msg)
spdlog::logger::trace	spdlog/details/logger_impl.h	/^inline void spdlog::logger::trace(const char* fmt, const Args&... args)$/;"	f	class:spdlog::logger	signature:(const char* fmt, const Args&... args)
spdlog::logger::trace	spdlog/logger.h	/^    template <typename T> void trace(const T&);$/;"	p	class:spdlog::logger	access:public	signature:(const T&)
spdlog::logger::trace	spdlog/logger.h	/^    template <typename... Args> void trace(const char* fmt, const Args&... args);$/;"	p	class:spdlog::logger	access:public	signature:(const char* fmt, const Args&... args)
spdlog::logger::warn	spdlog/details/logger_impl.h	/^inline void spdlog::logger::warn(const T& msg)$/;"	f	class:spdlog::logger	signature:(const T& msg)
spdlog::logger::warn	spdlog/details/logger_impl.h	/^inline void spdlog::logger::warn(const char* fmt, const Args&... args)$/;"	f	class:spdlog::logger	signature:(const char* fmt, const Args&... args)
spdlog::logger::warn	spdlog/logger.h	/^    template <typename T> void warn(const T&);$/;"	p	class:spdlog::logger	access:public	signature:(const T&)
spdlog::logger::warn	spdlog/logger.h	/^    template <typename... Args> void warn(const char* fmt, const Args&... args);$/;"	p	class:spdlog::logger	access:public	signature:(const char* fmt, const Args&... args)
spdlog::logger::~logger	spdlog/details/logger_impl.h	/^inline spdlog::logger::~logger() = default;$/;"	p	class:spdlog::logger	signature:()
spdlog::logger::~logger	spdlog/logger.h	/^    virtual ~logger();$/;"	p	class:spdlog::logger	access:public	signature:()
spdlog::pattern_formatter	spdlog/formatter.h	/^class pattern_formatter : public formatter$/;"	c	namespace:spdlog	inherits:formatter
spdlog::pattern_formatter::_formatters	spdlog/formatter.h	/^    std::vector<std::unique_ptr<details::flag_formatter>> _formatters;$/;"	m	class:spdlog::pattern_formatter	access:private
spdlog::pattern_formatter::_pattern	spdlog/formatter.h	/^    const std::string _pattern;$/;"	m	class:spdlog::pattern_formatter	access:private
spdlog::pattern_formatter::compile_pattern	spdlog/details/pattern_formatter_impl.h	/^inline void spdlog::pattern_formatter::compile_pattern(const std::string& pattern)$/;"	f	class:spdlog::pattern_formatter	signature:(const std::string& pattern)
spdlog::pattern_formatter::compile_pattern	spdlog/formatter.h	/^    void compile_pattern(const std::string& pattern);$/;"	p	class:spdlog::pattern_formatter	access:private	signature:(const std::string& pattern)
spdlog::pattern_formatter::format	spdlog/details/pattern_formatter_impl.h	/^inline void spdlog::pattern_formatter::format(details::log_msg& msg)$/;"	f	class:spdlog::pattern_formatter	signature:(details::log_msg& msg)
spdlog::pattern_formatter::handle_flag	spdlog/details/pattern_formatter_impl.h	/^inline void spdlog::pattern_formatter::handle_flag(char flag)$/;"	f	class:spdlog::pattern_formatter	signature:(char flag)
spdlog::pattern_formatter::handle_flag	spdlog/formatter.h	/^    void handle_flag(char flag);$/;"	p	class:spdlog::pattern_formatter	access:private	signature:(char flag)
spdlog::pattern_formatter::operator =	spdlog/formatter.h	/^    pattern_formatter& operator=(const pattern_formatter&) = delete;$/;"	p	class:spdlog::pattern_formatter	access:public	signature:(const pattern_formatter&)
spdlog::pattern_formatter::override	spdlog/formatter.h	/^    void format(details::log_msg& msg) override;$/;"	m	class:spdlog::pattern_formatter	access:public
spdlog::pattern_formatter::pattern_formatter	spdlog/details/pattern_formatter_impl.h	/^inline spdlog::pattern_formatter::pattern_formatter(const std::string& pattern)$/;"	f	class:spdlog::pattern_formatter	signature:(const std::string& pattern)
spdlog::pattern_formatter::pattern_formatter	spdlog/formatter.h	/^    explicit pattern_formatter(const std::string& pattern);$/;"	p	class:spdlog::pattern_formatter	access:public	signature:(const std::string& pattern)
spdlog::pattern_formatter::pattern_formatter	spdlog/formatter.h	/^    pattern_formatter(const pattern_formatter&) = delete;$/;"	p	class:spdlog::pattern_formatter	access:public	signature:(const pattern_formatter&)
spdlog::register_logger	spdlog/details/spdlog_impl.h	/^inline void spdlog::register_logger(std::shared_ptr<logger> logger)$/;"	f	class:spdlog	signature:(std::shared_ptr<logger> logger)
spdlog::register_logger	spdlog/spdlog.h	/^void register_logger(std::shared_ptr<logger> logger);$/;"	p	namespace:spdlog	signature:(std::shared_ptr<logger> logger)
spdlog::rotating_logger_mt	spdlog/details/spdlog_impl.h	/^inline std::shared_ptr<spdlog::logger> spdlog::rotating_logger_mt(const std::string& logger_name, const filename_t& filename, size_t max_file_size, size_t max_files)$/;"	f	class:spdlog	signature:(const std::string& logger_name, const filename_t& filename, size_t max_file_size, size_t max_files)
spdlog::rotating_logger_mt	spdlog/spdlog.h	/^std::shared_ptr<logger> rotating_logger_mt(const std::string& logger_name, const filename_t& filename, size_t max_file_size, size_t max_files);$/;"	p	namespace:spdlog	signature:(const std::string& logger_name, const filename_t& filename, size_t max_file_size, size_t max_files)
spdlog::rotating_logger_st	spdlog/details/spdlog_impl.h	/^inline std::shared_ptr<spdlog::logger> spdlog::rotating_logger_st(const std::string& logger_name, const filename_t& filename, size_t max_file_size, size_t max_files)$/;"	f	class:spdlog	signature:(const std::string& logger_name, const filename_t& filename, size_t max_file_size, size_t max_files)
spdlog::rotating_logger_st	spdlog/spdlog.h	/^std::shared_ptr<logger> rotating_logger_st(const std::string& logger_name, const filename_t& filename, size_t max_file_size, size_t max_files);$/;"	p	namespace:spdlog	signature:(const std::string& logger_name, const filename_t& filename, size_t max_file_size, size_t max_files)
spdlog::set_async_mode	spdlog/details/spdlog_impl.h	/^inline void spdlog::set_async_mode(size_t queue_size, const async_overflow_policy overflow_policy, const std::function<void()>& worker_warmup_cb, const std::chrono::milliseconds& flush_interval_ms, const std::function<void()>& worker_teardown_cb)$/;"	f	class:spdlog	signature:(size_t queue_size, const async_overflow_policy overflow_policy, const std::function<void()>& worker_warmup_cb, const std::chrono::milliseconds& flush_interval_ms, const std::function<void()>& worker_teardown_cb)
spdlog::set_async_mode	spdlog/spdlog.h	/^void set_async_mode(size_t queue_size, const async_overflow_policy overflow_policy = async_overflow_policy::block_retry, const std::function<void()>& worker_warmup_cb = nullptr, const std::chrono::milliseconds& flush_interval_ms = std::chrono::milliseconds::zero(), const std::function<void()>& worker_teardown_cb = nullptr);$/;"	p	namespace:spdlog	signature:(size_t queue_size, const async_overflow_policy overflow_policy = async_overflow_policy::block_retry, const std::function<void()>& worker_warmup_cb = nullptr, const std::chrono::milliseconds& flush_interval_ms = std::chrono::milliseconds::zero(), const std::function<void()>& worker_teardown_cb = nullptr)
spdlog::set_error_handler	spdlog/details/spdlog_impl.h	/^inline void spdlog::set_error_handler(log_err_handler handler)$/;"	f	class:spdlog	signature:(log_err_handler handler)
spdlog::set_error_handler	spdlog/spdlog.h	/^void set_error_handler(log_err_handler);$/;"	p	namespace:spdlog	signature:(log_err_handler)
spdlog::set_formatter	spdlog/details/spdlog_impl.h	/^inline void spdlog::set_formatter(spdlog::formatter_ptr f)$/;"	f	class:spdlog	signature:(spdlog::formatter_ptr f)
spdlog::set_formatter	spdlog/spdlog.h	/^void set_formatter(formatter_ptr f);$/;"	p	namespace:spdlog	signature:(formatter_ptr f)
spdlog::set_level	spdlog/details/spdlog_impl.h	/^inline void spdlog::set_level(level::level_enum log_level)$/;"	f	class:spdlog	signature:(level::level_enum log_level)
spdlog::set_level	spdlog/spdlog.h	/^void set_level(level::level_enum log_level);$/;"	p	namespace:spdlog	signature:(level::level_enum log_level)
spdlog::set_pattern	spdlog/details/spdlog_impl.h	/^inline void spdlog::set_pattern(const std::string& format_string)$/;"	f	class:spdlog	signature:(const std::string& format_string)
spdlog::set_pattern	spdlog/spdlog.h	/^void set_pattern(const std::string& format_string);$/;"	p	namespace:spdlog	signature:(const std::string& format_string)
spdlog::set_sync_mode	spdlog/details/spdlog_impl.h	/^inline void spdlog::set_sync_mode()$/;"	f	class:spdlog	signature:()
spdlog::set_sync_mode	spdlog/spdlog.h	/^void set_sync_mode();$/;"	p	namespace:spdlog	signature:()
spdlog::sinks	spdlog/common.h	/^namespace sinks$/;"	n	namespace:spdlog
spdlog::sinks	spdlog/sinks/android_sink.h	/^namespace sinks$/;"	n	namespace:spdlog
spdlog::sinks	spdlog/sinks/ansicolor_sink.h	/^namespace sinks$/;"	n	namespace:spdlog
spdlog::sinks	spdlog/sinks/base_sink.h	/^namespace sinks$/;"	n	namespace:spdlog
spdlog::sinks	spdlog/sinks/dist_sink.h	/^namespace sinks$/;"	n	namespace:spdlog
spdlog::sinks	spdlog/sinks/file_sinks.h	/^namespace sinks$/;"	n	namespace:spdlog
spdlog::sinks	spdlog/sinks/msvc_sink.h	/^namespace sinks$/;"	n	namespace:spdlog
spdlog::sinks	spdlog/sinks/null_sink.h	/^namespace sinks$/;"	n	namespace:spdlog
spdlog::sinks	spdlog/sinks/ostream_sink.h	/^namespace sinks$/;"	n	namespace:spdlog
spdlog::sinks	spdlog/sinks/sink.h	/^namespace sinks$/;"	n	namespace:spdlog
spdlog::sinks	spdlog/sinks/stdout_sinks.h	/^namespace sinks$/;"	n	namespace:spdlog
spdlog::sinks	spdlog/sinks/syslog_sink.h	/^namespace sinks$/;"	n	namespace:spdlog
spdlog::sinks	spdlog/sinks/wincolor_sink.h	/^namespace sinks$/;"	n	namespace:spdlog
spdlog::sinks::android_sink	spdlog/sinks/android_sink.h	/^class android_sink : public sink$/;"	c	namespace:spdlog::sinks	inherits:sink
spdlog::sinks::android_sink::_tag	spdlog/sinks/android_sink.h	/^    std::string _tag;$/;"	m	class:spdlog::sinks::android_sink	access:private
spdlog::sinks::android_sink::android_sink	spdlog/sinks/android_sink.h	/^    explicit android_sink(const std::string& tag = "spdlog"): _tag(tag) {}$/;"	f	class:spdlog::sinks::android_sink	access:public	signature:(const std::string& tag = Ó)
spdlog::sinks::android_sink::convert_to_android	spdlog/sinks/android_sink.h	/^    static android_LogPriority convert_to_android(spdlog::level::level_enum level)$/;"	f	class:spdlog::sinks::android_sink	access:private	signature:(spdlog::level::level_enum level)
spdlog::sinks::ansicolor_sink	spdlog/sinks/ansicolor_sink.h	/^class ansicolor_sink : public sink$/;"	c	namespace:spdlog::sinks	inherits:sink
spdlog::sinks::ansicolor_sink::ansicolor_sink	spdlog/sinks/ansicolor_sink.h	/^    ansicolor_sink(sink_ptr wrapped_sink);$/;"	p	class:spdlog::sinks::ansicolor_sink	access:public	signature:(sink_ptr wrapped_sink)
spdlog::sinks::ansicolor_sink::ansicolor_sink	spdlog/sinks/ansicolor_sink.h	/^inline ansicolor_sink::ansicolor_sink(sink_ptr wrapped_sink) : sink_(wrapped_sink)$/;"	f	class:spdlog::sinks::ansicolor_sink	signature:(sink_ptr wrapped_sink)
spdlog::sinks::ansicolor_sink::blink	spdlog/sinks/ansicolor_sink.h	/^    const std::string blink      = "\\033[5m";$/;"	m	class:spdlog::sinks::ansicolor_sink	access:public
spdlog::sinks::ansicolor_sink::blue	spdlog/sinks/ansicolor_sink.h	/^    const std::string blue       = "\\033[34m";$/;"	m	class:spdlog::sinks::ansicolor_sink	access:public
spdlog::sinks::ansicolor_sink::bold	spdlog/sinks/ansicolor_sink.h	/^    const std::string bold       = "\\033[1m";$/;"	m	class:spdlog::sinks::ansicolor_sink	access:public
spdlog::sinks::ansicolor_sink::colors_	spdlog/sinks/ansicolor_sink.h	/^    std::map<level::level_enum, std::string> colors_;$/;"	m	class:spdlog::sinks::ansicolor_sink	access:protected
spdlog::sinks::ansicolor_sink::concealed	spdlog/sinks/ansicolor_sink.h	/^    const std::string concealed  = "\\033[8m";$/;"	m	class:spdlog::sinks::ansicolor_sink	access:public
spdlog::sinks::ansicolor_sink::cyan	spdlog/sinks/ansicolor_sink.h	/^    const std::string cyan       = "\\033[36m";$/;"	m	class:spdlog::sinks::ansicolor_sink	access:public
spdlog::sinks::ansicolor_sink::dark	spdlog/sinks/ansicolor_sink.h	/^    const std::string dark       = "\\033[2m";$/;"	m	class:spdlog::sinks::ansicolor_sink	access:public
spdlog::sinks::ansicolor_sink::flush	spdlog/sinks/ansicolor_sink.h	/^inline void ansicolor_sink::flush()$/;"	f	class:spdlog::sinks::ansicolor_sink	signature:()
spdlog::sinks::ansicolor_sink::green	spdlog/sinks/ansicolor_sink.h	/^    const std::string green      = "\\033[32m";$/;"	m	class:spdlog::sinks::ansicolor_sink	access:public
spdlog::sinks::ansicolor_sink::grey	spdlog/sinks/ansicolor_sink.h	/^    const std::string grey       = "\\033[30m";$/;"	m	class:spdlog::sinks::ansicolor_sink	access:public
spdlog::sinks::ansicolor_sink::log	spdlog/sinks/ansicolor_sink.h	/^inline void ansicolor_sink::log(const details::log_msg& msg)$/;"	f	class:spdlog::sinks::ansicolor_sink	signature:(const details::log_msg& msg)
spdlog::sinks::ansicolor_sink::magenta	spdlog/sinks/ansicolor_sink.h	/^    const std::string magenta    = "\\033[35m";$/;"	m	class:spdlog::sinks::ansicolor_sink	access:public
spdlog::sinks::ansicolor_sink::on_blue	spdlog/sinks/ansicolor_sink.h	/^    const std::string on_blue    = "\\033[44m";$/;"	m	class:spdlog::sinks::ansicolor_sink	access:public
spdlog::sinks::ansicolor_sink::on_cyan	spdlog/sinks/ansicolor_sink.h	/^    const std::string on_cyan    = "\\033[46m";$/;"	m	class:spdlog::sinks::ansicolor_sink	access:public
spdlog::sinks::ansicolor_sink::on_green	spdlog/sinks/ansicolor_sink.h	/^    const std::string on_green   = "\\033[42m";$/;"	m	class:spdlog::sinks::ansicolor_sink	access:public
spdlog::sinks::ansicolor_sink::on_grey	spdlog/sinks/ansicolor_sink.h	/^    const std::string on_grey    = "\\033[40m";$/;"	m	class:spdlog::sinks::ansicolor_sink	access:public
spdlog::sinks::ansicolor_sink::on_magenta	spdlog/sinks/ansicolor_sink.h	/^    const std::string on_magenta = "\\033[45m";$/;"	m	class:spdlog::sinks::ansicolor_sink	access:public
spdlog::sinks::ansicolor_sink::on_red	spdlog/sinks/ansicolor_sink.h	/^    const std::string on_red     = "\\033[41m";$/;"	m	class:spdlog::sinks::ansicolor_sink	access:public
spdlog::sinks::ansicolor_sink::on_white	spdlog/sinks/ansicolor_sink.h	/^    const std::string on_white   = "\\033[47m";$/;"	m	class:spdlog::sinks::ansicolor_sink	access:public
spdlog::sinks::ansicolor_sink::on_yellow	spdlog/sinks/ansicolor_sink.h	/^    const std::string on_yellow  = "\\033[43m";$/;"	m	class:spdlog::sinks::ansicolor_sink	access:public
spdlog::sinks::ansicolor_sink::other	spdlog/sinks/ansicolor_sink.h	/^    ansicolor_sink& operator=(const ansicolor_sink& other) = delete;$/;"	m	class:spdlog::sinks::ansicolor_sink	access:public
spdlog::sinks::ansicolor_sink::other	spdlog/sinks/ansicolor_sink.h	/^    ansicolor_sink(const ansicolor_sink& other) = delete;$/;"	m	class:spdlog::sinks::ansicolor_sink	access:public
spdlog::sinks::ansicolor_sink::override	spdlog/sinks/ansicolor_sink.h	/^    virtual void flush() override;$/;"	m	class:spdlog::sinks::ansicolor_sink	access:public
spdlog::sinks::ansicolor_sink::override	spdlog/sinks/ansicolor_sink.h	/^    virtual void log(const details::log_msg& msg) override;$/;"	m	class:spdlog::sinks::ansicolor_sink	access:public
spdlog::sinks::ansicolor_sink::red	spdlog/sinks/ansicolor_sink.h	/^    const std::string red        = "\\033[31m";$/;"	m	class:spdlog::sinks::ansicolor_sink	access:public
spdlog::sinks::ansicolor_sink::reset	spdlog/sinks/ansicolor_sink.h	/^    const std::string reset      = "\\033[00m";$/;"	m	class:spdlog::sinks::ansicolor_sink	access:public
spdlog::sinks::ansicolor_sink::reverse	spdlog/sinks/ansicolor_sink.h	/^    const std::string reverse    = "\\033[7m";$/;"	m	class:spdlog::sinks::ansicolor_sink	access:public
spdlog::sinks::ansicolor_sink::set_color	spdlog/sinks/ansicolor_sink.h	/^    void set_color(level::level_enum color_level, const std::string& color);$/;"	p	class:spdlog::sinks::ansicolor_sink	access:public	signature:(level::level_enum color_level, const std::string& color)
spdlog::sinks::ansicolor_sink::set_color	spdlog/sinks/ansicolor_sink.h	/^inline void ansicolor_sink::set_color(level::level_enum color_level, const std::string& color)$/;"	f	class:spdlog::sinks::ansicolor_sink	signature:(level::level_enum color_level, const std::string& color)
spdlog::sinks::ansicolor_sink::sink_	spdlog/sinks/ansicolor_sink.h	/^    sink_ptr sink_;$/;"	m	class:spdlog::sinks::ansicolor_sink	access:protected
spdlog::sinks::ansicolor_sink::underline	spdlog/sinks/ansicolor_sink.h	/^    const std::string underline  = "\\033[4m";$/;"	m	class:spdlog::sinks::ansicolor_sink	access:public
spdlog::sinks::ansicolor_sink::white	spdlog/sinks/ansicolor_sink.h	/^    const std::string white      = "\\033[37m";$/;"	m	class:spdlog::sinks::ansicolor_sink	access:public
spdlog::sinks::ansicolor_sink::yellow	spdlog/sinks/ansicolor_sink.h	/^    const std::string yellow     = "\\033[33m";$/;"	m	class:spdlog::sinks::ansicolor_sink	access:public
spdlog::sinks::ansicolor_sink::~ansicolor_sink	spdlog/sinks/ansicolor_sink.h	/^    virtual ~ansicolor_sink();$/;"	p	class:spdlog::sinks::ansicolor_sink	access:public	signature:()
spdlog::sinks::ansicolor_sink::~ansicolor_sink	spdlog/sinks/ansicolor_sink.h	/^inline ansicolor_sink::~ansicolor_sink()$/;"	f	class:spdlog::sinks::ansicolor_sink	signature:()
spdlog::sinks::base_sink	spdlog/sinks/base_sink.h	/^class base_sink:public sink$/;"	c	namespace:spdlog::sinks	inherits:sink
spdlog::sinks::base_sink::_mutex	spdlog/sinks/base_sink.h	/^    Mutex _mutex;$/;"	m	class:spdlog::sinks::base_sink	access:protected
spdlog::sinks::base_sink::_sink_it	spdlog/sinks/base_sink.h	/^    virtual void _sink_it(const details::log_msg& msg) = 0;$/;"	p	class:spdlog::sinks::base_sink	access:protected	signature:(const details::log_msg& msg)
spdlog::sinks::base_sink::base_sink	spdlog/sinks/base_sink.h	/^    base_sink():_mutex() {}$/;"	f	class:spdlog::sinks::base_sink	access:public	signature:()
spdlog::sinks::base_sink::base_sink	spdlog/sinks/base_sink.h	/^    base_sink(const base_sink&) = delete;$/;"	p	class:spdlog::sinks::base_sink	access:public	signature:(const base_sink&)
spdlog::sinks::base_sink::operator =	spdlog/sinks/base_sink.h	/^    base_sink& operator=(const base_sink&) = delete;$/;"	p	class:spdlog::sinks::base_sink	access:public	signature:(const base_sink&)
spdlog::sinks::base_sink::~base_sink	spdlog/sinks/base_sink.h	/^    virtual ~base_sink() = default;$/;"	p	class:spdlog::sinks::base_sink	access:public	signature:()
spdlog::sinks::daily_file_sink	spdlog/sinks/file_sinks.h	/^class daily_file_sink :public base_sink < Mutex >$/;"	c	namespace:spdlog::sinks	inherits:base_sink
spdlog::sinks::daily_file_sink::_base_filename	spdlog/sinks/file_sinks.h	/^    filename_t _base_filename;$/;"	m	class:spdlog::sinks::daily_file_sink	access:private
spdlog::sinks::daily_file_sink::_file_helper	spdlog/sinks/file_sinks.h	/^    details::file_helper _file_helper;$/;"	m	class:spdlog::sinks::daily_file_sink	access:private
spdlog::sinks::daily_file_sink::_next_rotation_tp	spdlog/sinks/file_sinks.h	/^    std::chrono::system_clock::time_point _next_rotation_tp()$/;"	f	class:spdlog::sinks::daily_file_sink	access:private	signature:()
spdlog::sinks::daily_file_sink::_rotation_h	spdlog/sinks/file_sinks.h	/^    int _rotation_h;$/;"	m	class:spdlog::sinks::daily_file_sink	access:private
spdlog::sinks::daily_file_sink::_rotation_m	spdlog/sinks/file_sinks.h	/^    int _rotation_m;$/;"	m	class:spdlog::sinks::daily_file_sink	access:private
spdlog::sinks::daily_file_sink::_rotation_tp	spdlog/sinks/file_sinks.h	/^    std::chrono::system_clock::time_point _rotation_tp;$/;"	m	class:spdlog::sinks::daily_file_sink	access:private
spdlog::sinks::daily_file_sink::daily_file_sink	spdlog/sinks/file_sinks.h	/^    daily_file_sink($/;"	f	class:spdlog::sinks::daily_file_sink	access:public	signature:( const filename_t& base_filename, int rotation_hour, int rotation_minute)
spdlog::sinks::daily_file_sink_mt	spdlog/sinks/file_sinks.h	/^typedef daily_file_sink<std::mutex> daily_file_sink_mt;$/;"	t	namespace:spdlog::sinks
spdlog::sinks::daily_file_sink_st	spdlog/sinks/file_sinks.h	/^typedef daily_file_sink<details::null_mutex> daily_file_sink_st;$/;"	t	namespace:spdlog::sinks
spdlog::sinks::dateonly_daily_file_name_calculator	spdlog/sinks/file_sinks.h	/^struct dateonly_daily_file_name_calculator$/;"	s	namespace:spdlog::sinks
spdlog::sinks::dateonly_daily_file_name_calculator::calc_filename	spdlog/sinks/file_sinks.h	/^    static filename_t calc_filename(const filename_t& basename)$/;"	f	struct:spdlog::sinks::dateonly_daily_file_name_calculator	access:public	signature:(const filename_t& basename)
spdlog::sinks::default_daily_file_name_calculator	spdlog/sinks/file_sinks.h	/^struct default_daily_file_name_calculator$/;"	s	namespace:spdlog::sinks
spdlog::sinks::default_daily_file_name_calculator::calc_filename	spdlog/sinks/file_sinks.h	/^    static filename_t calc_filename(const filename_t& basename)$/;"	f	struct:spdlog::sinks::default_daily_file_name_calculator	access:public	signature:(const filename_t& basename)
spdlog::sinks::dist_sink	spdlog/sinks/dist_sink.h	/^class dist_sink: public base_sink<Mutex>$/;"	c	namespace:spdlog::sinks	inherits:base_sink
spdlog::sinks::dist_sink::_sinks	spdlog/sinks/dist_sink.h	/^    std::vector<std::shared_ptr<sink>> _sinks;$/;"	m	class:spdlog::sinks::dist_sink	access:protected
spdlog::sinks::dist_sink::add_sink	spdlog/sinks/dist_sink.h	/^    void add_sink(std::shared_ptr<sink> sink)$/;"	f	class:spdlog::sinks::dist_sink	access:public	signature:(std::shared_ptr<sink> sink)
spdlog::sinks::dist_sink::dist_sink	spdlog/sinks/dist_sink.h	/^    dist_sink(const dist_sink&) = delete;$/;"	p	class:spdlog::sinks::dist_sink	access:public	signature:(const dist_sink&)
spdlog::sinks::dist_sink::dist_sink	spdlog/sinks/dist_sink.h	/^    explicit dist_sink() :_sinks() {}$/;"	f	class:spdlog::sinks::dist_sink	access:public	signature:()
spdlog::sinks::dist_sink::operator =	spdlog/sinks/dist_sink.h	/^    dist_sink& operator=(const dist_sink&) = delete;$/;"	p	class:spdlog::sinks::dist_sink	access:public	signature:(const dist_sink&)
spdlog::sinks::dist_sink::remove_sink	spdlog/sinks/dist_sink.h	/^    void remove_sink(std::shared_ptr<sink> sink)$/;"	f	class:spdlog::sinks::dist_sink	access:public	signature:(std::shared_ptr<sink> sink)
spdlog::sinks::dist_sink::~dist_sink	spdlog/sinks/dist_sink.h	/^    virtual ~dist_sink() = default;$/;"	p	class:spdlog::sinks::dist_sink	access:public	signature:()
spdlog::sinks::dist_sink_mt	spdlog/sinks/dist_sink.h	/^typedef dist_sink<std::mutex> dist_sink_mt;$/;"	t	namespace:spdlog::sinks
spdlog::sinks::dist_sink_st	spdlog/sinks/dist_sink.h	/^typedef dist_sink<details::null_mutex> dist_sink_st;$/;"	t	namespace:spdlog::sinks
spdlog::sinks::msvc_sink	spdlog/sinks/msvc_sink.h	/^class msvc_sink : public base_sink < Mutex >$/;"	c	namespace:spdlog::sinks	inherits:base_sink
spdlog::sinks::msvc_sink::msvc_sink	spdlog/sinks/msvc_sink.h	/^    explicit msvc_sink()$/;"	f	class:spdlog::sinks::msvc_sink	access:public	signature:()
spdlog::sinks::msvc_sink_mt	spdlog/sinks/msvc_sink.h	/^typedef msvc_sink<std::mutex> msvc_sink_mt;$/;"	t	namespace:spdlog::sinks
spdlog::sinks::msvc_sink_st	spdlog/sinks/msvc_sink.h	/^typedef msvc_sink<details::null_mutex> msvc_sink_st;$/;"	t	namespace:spdlog::sinks
spdlog::sinks::null_sink	spdlog/sinks/null_sink.h	/^class null_sink : public base_sink < Mutex >$/;"	c	namespace:spdlog::sinks	inherits:base_sink
spdlog::sinks::null_sink_mt	spdlog/sinks/null_sink.h	/^typedef null_sink<details::null_mutex> null_sink_mt;$/;"	t	namespace:spdlog::sinks
spdlog::sinks::null_sink_st	spdlog/sinks/null_sink.h	/^typedef null_sink<details::null_mutex> null_sink_st;$/;"	t	namespace:spdlog::sinks
spdlog::sinks::ostream_sink	spdlog/sinks/ostream_sink.h	/^class ostream_sink: public base_sink<Mutex>$/;"	c	namespace:spdlog::sinks	inherits:base_sink
spdlog::sinks::ostream_sink::_force_flush	spdlog/sinks/ostream_sink.h	/^    bool _force_flush;$/;"	m	class:spdlog::sinks::ostream_sink	access:protected
spdlog::sinks::ostream_sink::_ostream	spdlog/sinks/ostream_sink.h	/^    std::ostream& _ostream;$/;"	m	class:spdlog::sinks::ostream_sink	access:protected
spdlog::sinks::ostream_sink::operator =	spdlog/sinks/ostream_sink.h	/^    ostream_sink& operator=(const ostream_sink&) = delete;$/;"	p	class:spdlog::sinks::ostream_sink	access:public	signature:(const ostream_sink&)
spdlog::sinks::ostream_sink::ostream_sink	spdlog/sinks/ostream_sink.h	/^    explicit ostream_sink(std::ostream& os, bool force_flush=false) :_ostream(os), _force_flush(force_flush) {}$/;"	f	class:spdlog::sinks::ostream_sink	access:public	signature:(std::ostream& os, bool force_flush=false)
spdlog::sinks::ostream_sink::ostream_sink	spdlog/sinks/ostream_sink.h	/^    ostream_sink(const ostream_sink&) = delete;$/;"	p	class:spdlog::sinks::ostream_sink	access:public	signature:(const ostream_sink&)
spdlog::sinks::ostream_sink::~ostream_sink	spdlog/sinks/ostream_sink.h	/^    virtual ~ostream_sink() = default;$/;"	p	class:spdlog::sinks::ostream_sink	access:public	signature:()
spdlog::sinks::ostream_sink_mt	spdlog/sinks/ostream_sink.h	/^typedef ostream_sink<std::mutex> ostream_sink_mt;$/;"	t	namespace:spdlog::sinks
spdlog::sinks::ostream_sink_st	spdlog/sinks/ostream_sink.h	/^typedef ostream_sink<details::null_mutex> ostream_sink_st;$/;"	t	namespace:spdlog::sinks
spdlog::sinks::rotating_file_sink	spdlog/sinks/file_sinks.h	/^class rotating_file_sink : public base_sink < Mutex >$/;"	c	namespace:spdlog::sinks	inherits:base_sink
spdlog::sinks::rotating_file_sink::_base_filename	spdlog/sinks/file_sinks.h	/^    filename_t _base_filename;$/;"	m	class:spdlog::sinks::rotating_file_sink	access:private
spdlog::sinks::rotating_file_sink::_current_size	spdlog/sinks/file_sinks.h	/^    std::size_t _current_size;$/;"	m	class:spdlog::sinks::rotating_file_sink	access:private
spdlog::sinks::rotating_file_sink::_file_helper	spdlog/sinks/file_sinks.h	/^    details::file_helper _file_helper;$/;"	m	class:spdlog::sinks::rotating_file_sink	access:private
spdlog::sinks::rotating_file_sink::_max_files	spdlog/sinks/file_sinks.h	/^    std::size_t _max_files;$/;"	m	class:spdlog::sinks::rotating_file_sink	access:private
spdlog::sinks::rotating_file_sink::_max_size	spdlog/sinks/file_sinks.h	/^    std::size_t _max_size;$/;"	m	class:spdlog::sinks::rotating_file_sink	access:private
spdlog::sinks::rotating_file_sink::_rotate	spdlog/sinks/file_sinks.h	/^    void _rotate()$/;"	f	class:spdlog::sinks::rotating_file_sink	access:private	signature:()
spdlog::sinks::rotating_file_sink::calc_filename	spdlog/sinks/file_sinks.h	/^    static filename_t calc_filename(const filename_t& filename, std::size_t index)$/;"	f	class:spdlog::sinks::rotating_file_sink	access:private	signature:(const filename_t& filename, std::size_t index)
spdlog::sinks::rotating_file_sink::rotating_file_sink	spdlog/sinks/file_sinks.h	/^    rotating_file_sink(const filename_t &base_filename,$/;"	f	class:spdlog::sinks::rotating_file_sink	access:public	signature:(const filename_t &base_filename, std::size_t max_size, std::size_t max_files)
spdlog::sinks::rotating_file_sink_mt	spdlog/sinks/file_sinks.h	/^typedef rotating_file_sink<std::mutex> rotating_file_sink_mt;$/;"	t	namespace:spdlog::sinks
spdlog::sinks::rotating_file_sink_st	spdlog/sinks/file_sinks.h	/^typedef rotating_file_sink<details::null_mutex>rotating_file_sink_st;$/;"	t	namespace:spdlog::sinks
spdlog::sinks::simple_file_sink	spdlog/sinks/file_sinks.h	/^class simple_file_sink : public base_sink < Mutex >$/;"	c	namespace:spdlog::sinks	inherits:base_sink
spdlog::sinks::simple_file_sink::_file_helper	spdlog/sinks/file_sinks.h	/^    details::file_helper _file_helper;$/;"	m	class:spdlog::sinks::simple_file_sink	access:private
spdlog::sinks::simple_file_sink::_force_flush	spdlog/sinks/file_sinks.h	/^    bool _force_flush;$/;"	m	class:spdlog::sinks::simple_file_sink	access:private
spdlog::sinks::simple_file_sink::set_force_flush	spdlog/sinks/file_sinks.h	/^    void set_force_flush(bool force_flush)$/;"	f	class:spdlog::sinks::simple_file_sink	access:public	signature:(bool force_flush)
spdlog::sinks::simple_file_sink::simple_file_sink	spdlog/sinks/file_sinks.h	/^    explicit simple_file_sink(const filename_t &filename, bool truncate = false):_force_flush(false)$/;"	f	class:spdlog::sinks::simple_file_sink	access:public	signature:(const filename_t &filename, bool truncate = false)
spdlog::sinks::simple_file_sink_mt	spdlog/sinks/file_sinks.h	/^typedef simple_file_sink<std::mutex> simple_file_sink_mt;$/;"	t	namespace:spdlog::sinks
spdlog::sinks::simple_file_sink_st	spdlog/sinks/file_sinks.h	/^typedef simple_file_sink<details::null_mutex> simple_file_sink_st;$/;"	t	namespace:spdlog::sinks
spdlog::sinks::sink	spdlog/sinks/sink.h	/^class sink$/;"	c	namespace:spdlog::sinks
spdlog::sinks::sink::_level	spdlog/sinks/sink.h	/^    level_t _level;$/;"	m	class:spdlog::sinks::sink	access:private
spdlog::sinks::sink::flush	spdlog/sinks/sink.h	/^    virtual void flush() = 0;$/;"	p	class:spdlog::sinks::sink	access:public	signature:()
spdlog::sinks::sink::level	spdlog/sinks/sink.h	/^    level::level_enum level() const;$/;"	p	class:spdlog::sinks::sink	access:public	signature:() const
spdlog::sinks::sink::level	spdlog/sinks/sink.h	/^inline level::level_enum sink::level() const$/;"	f	class:spdlog::sinks::sink	signature:() const
spdlog::sinks::sink::log	spdlog/sinks/sink.h	/^    virtual void log(const details::log_msg& msg) = 0;$/;"	p	class:spdlog::sinks::sink	access:public	signature:(const details::log_msg& msg)
spdlog::sinks::sink::set_level	spdlog/sinks/sink.h	/^    void set_level(level::level_enum log_level);$/;"	p	class:spdlog::sinks::sink	access:public	signature:(level::level_enum log_level)
spdlog::sinks::sink::set_level	spdlog/sinks/sink.h	/^inline void sink::set_level(level::level_enum log_level)$/;"	f	class:spdlog::sinks::sink	signature:(level::level_enum log_level)
spdlog::sinks::sink::should_log	spdlog/sinks/sink.h	/^    bool should_log(level::level_enum msg_level) const;$/;"	p	class:spdlog::sinks::sink	access:public	signature:(level::level_enum msg_level) const
spdlog::sinks::sink::should_log	spdlog/sinks/sink.h	/^inline bool sink::should_log(level::level_enum msg_level) const$/;"	f	class:spdlog::sinks::sink	signature:(level::level_enum msg_level) const
spdlog::sinks::sink::sink	spdlog/sinks/sink.h	/^    sink()$/;"	f	class:spdlog::sinks::sink	access:public	signature:()
spdlog::sinks::sink::~sink	spdlog/sinks/sink.h	/^    virtual ~sink() {}$/;"	f	class:spdlog::sinks::sink	access:public	signature:()
spdlog::sinks::stderr_sink	spdlog/sinks/stdout_sinks.h	/^class stderr_sink: public base_sink<Mutex>$/;"	c	namespace:spdlog::sinks	inherits:base_sink
spdlog::sinks::stderr_sink::instance	spdlog/sinks/stdout_sinks.h	/^    static std::shared_ptr<MyType> instance()$/;"	f	class:spdlog::sinks::stderr_sink	access:public	signature:()
spdlog::sinks::stderr_sink::stderr_sink	spdlog/sinks/stdout_sinks.h	/^    stderr_sink()$/;"	f	class:spdlog::sinks::stderr_sink	access:public	signature:()
spdlog::sinks::stderr_sink_mt	spdlog/sinks/stdout_sinks.h	/^typedef stderr_sink<std::mutex> stderr_sink_mt;$/;"	t	namespace:spdlog::sinks
spdlog::sinks::stderr_sink_st	spdlog/sinks/stdout_sinks.h	/^typedef stderr_sink<details::null_mutex> stderr_sink_st;$/;"	t	namespace:spdlog::sinks
spdlog::sinks::stdout_sink	spdlog/sinks/stdout_sinks.h	/^class stdout_sink: public base_sink<Mutex>$/;"	c	namespace:spdlog::sinks	inherits:base_sink
spdlog::sinks::stdout_sink::instance	spdlog/sinks/stdout_sinks.h	/^    static std::shared_ptr<MyType> instance()$/;"	f	class:spdlog::sinks::stdout_sink	access:public	signature:()
spdlog::sinks::stdout_sink::stdout_sink	spdlog/sinks/stdout_sinks.h	/^    stdout_sink()$/;"	f	class:spdlog::sinks::stdout_sink	access:public	signature:()
spdlog::sinks::stdout_sink_mt	spdlog/sinks/stdout_sinks.h	/^typedef stdout_sink<std::mutex> stdout_sink_mt;$/;"	t	namespace:spdlog::sinks
spdlog::sinks::stdout_sink_st	spdlog/sinks/stdout_sinks.h	/^typedef stdout_sink<details::null_mutex> stdout_sink_st;$/;"	t	namespace:spdlog::sinks
spdlog::sinks::syslog_sink	spdlog/sinks/syslog_sink.h	/^class syslog_sink : public sink$/;"	c	namespace:spdlog::sinks	inherits:sink
spdlog::sinks::syslog_sink::_ident	spdlog/sinks/syslog_sink.h	/^    const std::string _ident;$/;"	m	class:spdlog::sinks::syslog_sink	access:private
spdlog::sinks::syslog_sink::_priorities	spdlog/sinks/syslog_sink.h	/^    std::array<int, 7> _priorities;$/;"	m	class:spdlog::sinks::syslog_sink	access:private
spdlog::sinks::syslog_sink::operator =	spdlog/sinks/syslog_sink.h	/^    syslog_sink& operator=(const syslog_sink&) = delete;$/;"	p	class:spdlog::sinks::syslog_sink	access:public	signature:(const syslog_sink&)
spdlog::sinks::syslog_sink::syslog_prio_from_level	spdlog/sinks/syslog_sink.h	/^    int syslog_prio_from_level(const details::log_msg &msg) const$/;"	f	class:spdlog::sinks::syslog_sink	access:private	signature:(const details::log_msg &msg) const
spdlog::sinks::syslog_sink::syslog_sink	spdlog/sinks/syslog_sink.h	/^    syslog_sink(const std::string& ident = "", int syslog_option=0, int syslog_facility=LOG_USER):$/;"	f	class:spdlog::sinks::syslog_sink	access:public	signature:(const std::string& ident = Ó, int syslog_option=0, int syslog_facility=LOG_USER)
spdlog::sinks::syslog_sink::syslog_sink	spdlog/sinks/syslog_sink.h	/^    syslog_sink(const syslog_sink&) = delete;$/;"	p	class:spdlog::sinks::syslog_sink	access:public	signature:(const syslog_sink&)
spdlog::sinks::syslog_sink::~syslog_sink	spdlog/sinks/syslog_sink.h	/^    ~syslog_sink()$/;"	f	class:spdlog::sinks::syslog_sink	access:public	signature:()
spdlog::sinks::wincolor_sink	spdlog/sinks/wincolor_sink.h	/^class wincolor_sink: public  base_sink<Mutex>$/;"	c	namespace:spdlog::sinks	inherits:base_sink
spdlog::sinks::wincolor_sink::BOLD	spdlog/sinks/wincolor_sink.h	/^    const WORD BOLD = FOREGROUND_INTENSITY;$/;"	m	class:spdlog::sinks::wincolor_sink	access:public
spdlog::sinks::wincolor_sink::CYAN	spdlog/sinks/wincolor_sink.h	/^    const WORD CYAN = FOREGROUND_GREEN | FOREGROUND_BLUE;$/;"	m	class:spdlog::sinks::wincolor_sink	access:public
spdlog::sinks::wincolor_sink::RED	spdlog/sinks/wincolor_sink.h	/^    const WORD RED = FOREGROUND_RED;$/;"	m	class:spdlog::sinks::wincolor_sink	access:public
spdlog::sinks::wincolor_sink::WHITE	spdlog/sinks/wincolor_sink.h	/^    const WORD WHITE = FOREGROUND_RED | FOREGROUND_GREEN | FOREGROUND_BLUE;$/;"	m	class:spdlog::sinks::wincolor_sink	access:public
spdlog::sinks::wincolor_sink::YELLOW	spdlog/sinks/wincolor_sink.h	/^    const WORD YELLOW = FOREGROUND_RED | FOREGROUND_GREEN;$/;"	m	class:spdlog::sinks::wincolor_sink	access:public
spdlog::sinks::wincolor_sink::colors_	spdlog/sinks/wincolor_sink.h	/^    std::map<level::level_enum, WORD> colors_;$/;"	m	class:spdlog::sinks::wincolor_sink	access:private
spdlog::sinks::wincolor_sink::other	spdlog/sinks/wincolor_sink.h	/^    wincolor_sink& operator=(const wincolor_sink& other) = delete;$/;"	m	class:spdlog::sinks::wincolor_sink	access:public
spdlog::sinks::wincolor_sink::other	spdlog/sinks/wincolor_sink.h	/^    wincolor_sink(const wincolor_sink& other) = delete;$/;"	m	class:spdlog::sinks::wincolor_sink	access:public
spdlog::sinks::wincolor_sink::out_handle_	spdlog/sinks/wincolor_sink.h	/^    HANDLE out_handle_;$/;"	m	class:spdlog::sinks::wincolor_sink	access:private
spdlog::sinks::wincolor_sink::set_color	spdlog/sinks/wincolor_sink.h	/^    void set_color(level::level_enum level, WORD color)$/;"	f	class:spdlog::sinks::wincolor_sink	access:public	signature:(level::level_enum level, WORD color)
spdlog::sinks::wincolor_sink::set_console_attribs	spdlog/sinks/wincolor_sink.h	/^    WORD set_console_attribs(WORD attribs)$/;"	f	class:spdlog::sinks::wincolor_sink	access:private	signature:(WORD attribs)
spdlog::sinks::wincolor_sink::wincolor_sink	spdlog/sinks/wincolor_sink.h	/^    wincolor_sink(HANDLE std_handle): out_handle_(std_handle)$/;"	f	class:spdlog::sinks::wincolor_sink	access:public	signature:(HANDLE std_handle)
spdlog::sinks::wincolor_sink::~wincolor_sink	spdlog/sinks/wincolor_sink.h	/^    virtual ~wincolor_sink()$/;"	f	class:spdlog::sinks::wincolor_sink	access:public	signature:()
spdlog::sinks::wincolor_stderr_sink	spdlog/sinks/wincolor_sink.h	/^class wincolor_stderr_sink: public wincolor_sink<Mutex>$/;"	c	namespace:spdlog::sinks	inherits:wincolor_sink
spdlog::sinks::wincolor_stderr_sink::wincolor_stderr_sink	spdlog/sinks/wincolor_sink.h	/^    wincolor_stderr_sink() : wincolor_sink<Mutex>(GetStdHandle(STD_ERROR_HANDLE))$/;"	f	class:spdlog::sinks::wincolor_stderr_sink	access:public	signature:()
spdlog::sinks::wincolor_stderr_sink_mt	spdlog/sinks/wincolor_sink.h	/^typedef wincolor_stderr_sink<std::mutex> wincolor_stderr_sink_mt;$/;"	t	namespace:spdlog::sinks
spdlog::sinks::wincolor_stderr_sink_st	spdlog/sinks/wincolor_sink.h	/^typedef wincolor_stderr_sink<details::null_mutex> wincolor_stderr_sink_st;$/;"	t	namespace:spdlog::sinks
spdlog::sinks::wincolor_stdout_sink	spdlog/sinks/wincolor_sink.h	/^class wincolor_stdout_sink: public wincolor_sink<Mutex>$/;"	c	namespace:spdlog::sinks	inherits:wincolor_sink
spdlog::sinks::wincolor_stdout_sink::wincolor_stdout_sink	spdlog/sinks/wincolor_sink.h	/^    wincolor_stdout_sink() : wincolor_sink<Mutex>(GetStdHandle(STD_OUTPUT_HANDLE))$/;"	f	class:spdlog::sinks::wincolor_stdout_sink	access:public	signature:()
spdlog::sinks::wincolor_stdout_sink_mt	spdlog/sinks/wincolor_sink.h	/^typedef wincolor_stdout_sink<std::mutex> wincolor_stdout_sink_mt;$/;"	t	namespace:spdlog::sinks
spdlog::sinks::wincolor_stdout_sink_st	spdlog/sinks/wincolor_sink.h	/^typedef wincolor_stdout_sink<details::null_mutex> wincolor_stdout_sink_st;$/;"	t	namespace:spdlog::sinks
spdlog::spdlog_ex	spdlog/common.h	/^class spdlog_ex: public std::exception$/;"	c	namespace:spdlog	inherits:std::exception
spdlog::spdlog_ex::_msg	spdlog/common.h	/^    std::string _msg;$/;"	m	class:spdlog::spdlog_ex	access:private
spdlog::spdlog_ex::spdlog_ex	spdlog/common.h	/^    spdlog_ex(const std::string& msg):_msg(msg)$/;"	f	class:spdlog::spdlog_ex	access:public	signature:(const std::string& msg)
spdlog::spdlog_ex::spdlog_ex	spdlog/common.h	/^    spdlog_ex(const std::string& msg, int last_errno)$/;"	f	class:spdlog::spdlog_ex	access:public	signature:(const std::string& msg, int last_errno)
spdlog::stderr_color_mt	spdlog/details/spdlog_impl.h	/^inline std::shared_ptr<spdlog::logger> spdlog::stderr_color_mt(const std::string& logger_name)$/;"	f	class:spdlog	signature:(const std::string& logger_name)
spdlog::stderr_color_mt	spdlog/spdlog.h	/^std::shared_ptr<logger> stderr_color_mt(const std::string& logger_name);$/;"	p	namespace:spdlog	signature:(const std::string& logger_name)
spdlog::stderr_color_st	spdlog/details/spdlog_impl.h	/^inline std::shared_ptr<spdlog::logger> spdlog::stderr_color_st(const std::string& logger_name)$/;"	f	class:spdlog	signature:(const std::string& logger_name)
spdlog::stderr_color_st	spdlog/spdlog.h	/^std::shared_ptr<logger> stderr_color_st(const std::string& logger_name);$/;"	p	namespace:spdlog	signature:(const std::string& logger_name)
spdlog::stderr_logger_mt	spdlog/details/spdlog_impl.h	/^inline std::shared_ptr<spdlog::logger> spdlog::stderr_logger_mt(const std::string& logger_name)$/;"	f	class:spdlog	signature:(const std::string& logger_name)
spdlog::stderr_logger_mt	spdlog/spdlog.h	/^std::shared_ptr<logger> stderr_logger_mt(const std::string& logger_name);$/;"	p	namespace:spdlog	signature:(const std::string& logger_name)
spdlog::stderr_logger_st	spdlog/details/spdlog_impl.h	/^inline std::shared_ptr<spdlog::logger> spdlog::stderr_logger_st(const std::string& logger_name)$/;"	f	class:spdlog	signature:(const std::string& logger_name)
spdlog::stderr_logger_st	spdlog/spdlog.h	/^std::shared_ptr<logger> stderr_logger_st(const std::string& logger_name);$/;"	p	namespace:spdlog	signature:(const std::string& logger_name)
spdlog::stdout_color_mt	spdlog/details/spdlog_impl.h	/^inline std::shared_ptr<spdlog::logger> spdlog::stdout_color_mt(const std::string& logger_name)$/;"	f	class:spdlog	signature:(const std::string& logger_name)
spdlog::stdout_color_mt	spdlog/spdlog.h	/^std::shared_ptr<logger> stdout_color_mt(const std::string& logger_name);$/;"	p	namespace:spdlog	signature:(const std::string& logger_name)
spdlog::stdout_color_st	spdlog/details/spdlog_impl.h	/^inline std::shared_ptr<spdlog::logger> spdlog::stdout_color_st(const std::string& logger_name)$/;"	f	class:spdlog	signature:(const std::string& logger_name)
spdlog::stdout_color_st	spdlog/spdlog.h	/^std::shared_ptr<logger> stdout_color_st(const std::string& logger_name);$/;"	p	namespace:spdlog	signature:(const std::string& logger_name)
spdlog::stdout_logger_mt	spdlog/details/spdlog_impl.h	/^inline std::shared_ptr<spdlog::logger> spdlog::stdout_logger_mt(const std::string& logger_name)$/;"	f	class:spdlog	signature:(const std::string& logger_name)
spdlog::stdout_logger_mt	spdlog/spdlog.h	/^std::shared_ptr<logger> stdout_logger_mt(const std::string& logger_name);$/;"	p	namespace:spdlog	signature:(const std::string& logger_name)
spdlog::stdout_logger_st	spdlog/details/spdlog_impl.h	/^inline std::shared_ptr<spdlog::logger> spdlog::stdout_logger_st(const std::string& logger_name)$/;"	f	class:spdlog	signature:(const std::string& logger_name)
spdlog::stdout_logger_st	spdlog/spdlog.h	/^std::shared_ptr<logger> stdout_logger_st(const std::string& logger_name);$/;"	p	namespace:spdlog	signature:(const std::string& logger_name)
spdlog::syslog_logger	spdlog/details/spdlog_impl.h	/^inline std::shared_ptr<spdlog::logger> spdlog::syslog_logger(const std::string& logger_name, const std::string& syslog_ident, int syslog_option)$/;"	f	class:spdlog	signature:(const std::string& logger_name, const std::string& syslog_ident, int syslog_option)
spdlog::syslog_logger	spdlog/spdlog.h	/^std::shared_ptr<logger> syslog_logger(const std::string& logger_name, const std::string& ident = "", int syslog_option = 0);$/;"	p	namespace:spdlog	signature:(const std::string& logger_name, const std::string& ident = Ó, int syslog_option = 0)
spdlog_ex	spdlog/common.h	/^    spdlog_ex(const std::string& msg):_msg(msg)$/;"	f	class:spdlog::spdlog_ex	access:public	signature:(const std::string& msg)
spdlog_ex	spdlog/common.h	/^    spdlog_ex(const std::string& msg, int last_errno)$/;"	f	class:spdlog::spdlog_ex	access:public	signature:(const std::string& msg, int last_errno)
spdlog_ex	spdlog/common.h	/^class spdlog_ex: public std::exception$/;"	c	namespace:spdlog	inherits:std::exception
spec	spdlog/fmt/bundled/format.h	/^    FormatSpec &spec()$/;"	f	class:fmt::internal::ArgFormatterBase	access:protected	signature:()
spec_	spdlog/fmt/bundled/format.h	/^    FormatSpec &spec_;$/;"	m	class:fmt::internal::ArgFormatterBase	access:private
spec_	spdlog/fmt/bundled/printf.h	/^    FormatSpec &spec_;$/;"	m	class:fmt::internal::WidthHandler	access:private
sprintf	spdlog/fmt/bundled/printf.h	/^inline std::string sprintf(CStringRef format, ArgList args)$/;"	f	namespace:fmt	signature:(CStringRef format, ArgList args)
sprintf	spdlog/fmt/bundled/printf.h	/^inline std::wstring sprintf(WCStringRef format, ArgList args)$/;"	f	namespace:fmt	signature:(WCStringRef format, ArgList args)
sstring	spdlog/fmt/bundled/format.h	/^        StringValue<signed char> sstring;$/;"	m	union:fmt::internal::Value::__anon18	access:public
stFullState	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    CState stFullState;$/;"	m	class:CGroundingModel	access:protected
start_	spdlog/fmt/bundled/ostream.h	/^    Char *start_;$/;"	m	class:fmt::internal::FormatBuf	access:private
std	spdlog/fmt/bundled/format.h	/^namespace std$/;"	n
std::numeric_limits	spdlog/fmt/bundled/format.h	/^class numeric_limits<fmt::internal::DummyInt>:$/;"	c	namespace:std	inherits:std::numeric_limits
std::numeric_limits::isinfinity	spdlog/fmt/bundled/format.h	/^    static bool isinfinity(T x)$/;"	f	class:std::numeric_limits	access:public	signature:(T x)
std::numeric_limits::isnegative	spdlog/fmt/bundled/format.h	/^    static bool isnegative(double x)$/;"	f	class:std::numeric_limits	access:public	signature:(double x)
std::numeric_limits::isnotanumber	spdlog/fmt/bundled/format.h	/^    static bool isnotanumber(T x)$/;"	f	class:std::numeric_limits	access:public	signature:(T x)
stderr_color_mt	spdlog/details/spdlog_impl.h	/^inline std::shared_ptr<spdlog::logger> spdlog::stderr_color_mt(const std::string& logger_name)$/;"	f	class:spdlog	signature:(const std::string& logger_name)
stderr_color_mt	spdlog/spdlog.h	/^std::shared_ptr<logger> stderr_color_mt(const std::string& logger_name);$/;"	p	namespace:spdlog	signature:(const std::string& logger_name)
stderr_color_st	spdlog/details/spdlog_impl.h	/^inline std::shared_ptr<spdlog::logger> spdlog::stderr_color_st(const std::string& logger_name)$/;"	f	class:spdlog	signature:(const std::string& logger_name)
stderr_color_st	spdlog/spdlog.h	/^std::shared_ptr<logger> stderr_color_st(const std::string& logger_name);$/;"	p	namespace:spdlog	signature:(const std::string& logger_name)
stderr_logger_mt	spdlog/details/spdlog_impl.h	/^inline std::shared_ptr<spdlog::logger> spdlog::stderr_logger_mt(const std::string& logger_name)$/;"	f	class:spdlog	signature:(const std::string& logger_name)
stderr_logger_mt	spdlog/spdlog.h	/^std::shared_ptr<logger> stderr_logger_mt(const std::string& logger_name);$/;"	p	namespace:spdlog	signature:(const std::string& logger_name)
stderr_logger_st	spdlog/details/spdlog_impl.h	/^inline std::shared_ptr<spdlog::logger> spdlog::stderr_logger_st(const std::string& logger_name)$/;"	f	class:spdlog	signature:(const std::string& logger_name)
stderr_logger_st	spdlog/spdlog.h	/^std::shared_ptr<logger> stderr_logger_st(const std::string& logger_name);$/;"	p	namespace:spdlog	signature:(const std::string& logger_name)
stderr_sink	spdlog/sinks/stdout_sinks.h	/^    stderr_sink()$/;"	f	class:spdlog::sinks::stderr_sink	access:public	signature:()
stderr_sink	spdlog/sinks/stdout_sinks.h	/^class stderr_sink: public base_sink<Mutex>$/;"	c	namespace:spdlog::sinks	inherits:base_sink
stderr_sink_mt	spdlog/sinks/stdout_sinks.h	/^typedef stderr_sink<std::mutex> stderr_sink_mt;$/;"	t	namespace:spdlog::sinks
stderr_sink_st	spdlog/sinks/stdout_sinks.h	/^typedef stderr_sink<details::null_mutex> stderr_sink_st;$/;"	t	namespace:spdlog::sinks
stdout_color_mt	spdlog/details/spdlog_impl.h	/^inline std::shared_ptr<spdlog::logger> spdlog::stdout_color_mt(const std::string& logger_name)$/;"	f	class:spdlog	signature:(const std::string& logger_name)
stdout_color_mt	spdlog/spdlog.h	/^std::shared_ptr<logger> stdout_color_mt(const std::string& logger_name);$/;"	p	namespace:spdlog	signature:(const std::string& logger_name)
stdout_color_st	spdlog/details/spdlog_impl.h	/^inline std::shared_ptr<spdlog::logger> spdlog::stdout_color_st(const std::string& logger_name)$/;"	f	class:spdlog	signature:(const std::string& logger_name)
stdout_color_st	spdlog/spdlog.h	/^std::shared_ptr<logger> stdout_color_st(const std::string& logger_name);$/;"	p	namespace:spdlog	signature:(const std::string& logger_name)
stdout_logger_mt	spdlog/details/spdlog_impl.h	/^inline std::shared_ptr<spdlog::logger> spdlog::stdout_logger_mt(const std::string& logger_name)$/;"	f	class:spdlog	signature:(const std::string& logger_name)
stdout_logger_mt	spdlog/spdlog.h	/^std::shared_ptr<logger> stdout_logger_mt(const std::string& logger_name);$/;"	p	namespace:spdlog	signature:(const std::string& logger_name)
stdout_logger_st	spdlog/details/spdlog_impl.h	/^inline std::shared_ptr<spdlog::logger> spdlog::stdout_logger_st(const std::string& logger_name)$/;"	f	class:spdlog	signature:(const std::string& logger_name)
stdout_logger_st	spdlog/spdlog.h	/^std::shared_ptr<logger> stdout_logger_st(const std::string& logger_name);$/;"	p	namespace:spdlog	signature:(const std::string& logger_name)
stdout_sink	spdlog/sinks/stdout_sinks.h	/^    stdout_sink()$/;"	f	class:spdlog::sinks::stdout_sink	access:public	signature:()
stdout_sink	spdlog/sinks/stdout_sinks.h	/^class stdout_sink: public base_sink<Mutex>$/;"	c	namespace:spdlog::sinks	inherits:base_sink
stdout_sink_mt	spdlog/sinks/stdout_sinks.h	/^typedef stdout_sink<std::mutex> stdout_sink_mt;$/;"	t	namespace:spdlog::sinks
stdout_sink_st	spdlog/sinks/stdout_sinks.h	/^typedef stdout_sink<details::null_mutex> stdout_sink_st;$/;"	t	namespace:spdlog::sinks
store	spdlog/details/null_mutex.h	/^    void store(int val)$/;"	f	struct:spdlog::details::null_atomic_int	access:public	signature:(int val)
str	spdlog/fmt/bundled/format.h	/^    const Char *str() const$/;"	f	class:fmt::StrFormatSpec	access:public	signature:() const
str	spdlog/fmt/bundled/format.h	/^    std::basic_string<Char> str() const$/;"	f	class:BasicWriter	access:public	signature:() const
str	spdlog/fmt/bundled/format.h	/^    std::string str() const$/;"	f	class:FormatInt	access:public	signature:() const
str	spdlog/fmt/bundled/format.h	/^    std::string str() const$/;"	f	class:fmt::internal::UTF16ToUTF8	access:public	signature:() const
str	spdlog/fmt/bundled/format.h	/^    std::wstring str() const$/;"	f	class:fmt::internal::UTF8ToUTF16	access:public	signature:() const
str_	spdlog/fmt/bundled/format.h	/^    char *str_;$/;"	m	class:FormatInt	access:private
str_	spdlog/fmt/bundled/format.h	/^    const Char *str_;$/;"	m	class:fmt::StrFormatSpec	access:private
strerror_r	spdlog/fmt/bundled/format.cc	/^static inline fmt::internal::Null<> strerror_r(int, char *, ...)$/;"	f	file:	signature:(int, char *, ...)
strerror_s	spdlog/fmt/bundled/format.cc	/^static inline fmt::internal::Null<> strerror_s(char *, std::size_t, ...)$/;"	f	file:	signature:(char *, std::size_t, ...)
string	spdlog/fmt/bundled/format.h	/^        StringValue<char> string;$/;"	m	union:fmt::internal::Value::__anon18	access:public
svItems	DMCore/Concepts/StructConcept.h	/^	TStringVector svItems;$/;"	m	class:CStructConcept	access:protected
syslog_logger	spdlog/details/spdlog_impl.h	/^inline std::shared_ptr<spdlog::logger> spdlog::syslog_logger(const std::string& logger_name, const std::string& syslog_ident, int syslog_option)$/;"	f	class:spdlog	signature:(const std::string& logger_name, const std::string& syslog_ident, int syslog_option)
syslog_logger	spdlog/spdlog.h	/^std::shared_ptr<logger> syslog_logger(const std::string& logger_name, const std::string& ident = "", int syslog_option = 0);$/;"	p	namespace:spdlog	signature:(const std::string& logger_name, const std::string& ident = Ó, int syslog_option = 0)
syslog_prio_from_level	spdlog/sinks/syslog_sink.h	/^    int syslog_prio_from_level(const details::log_msg &msg) const$/;"	f	class:spdlog::sinks::syslog_sink	access:private	signature:(const details::log_msg &msg) const
syslog_sink	spdlog/sinks/syslog_sink.h	/^    syslog_sink(const std::string& ident = "", int syslog_option=0, int syslog_facility=LOG_USER):$/;"	f	class:spdlog::sinks::syslog_sink	access:public	signature:(const std::string& ident = Ó, int syslog_option=0, int syslog_facility=LOG_USER)
syslog_sink	spdlog/sinks/syslog_sink.h	/^    syslog_sink(const syslog_sink&) = delete;$/;"	p	class:spdlog::sinks::syslog_sink	access:public	signature:(const syslog_sink&)
syslog_sink	spdlog/sinks/syslog_sink.h	/^class syslog_sink : public sink$/;"	c	namespace:spdlog::sinks	inherits:sink
systemActionToString	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^string CDMCoreAgent::systemActionToString(TSystemAction saASystemAction) {$/;"	f	class:CDMCoreAgent	signature:(TSystemAction saASystemAction)
systemActionToString	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	string systemActionToString(TSystemAction saASystemAction);$/;"	p	class:CDMCoreAgent	access:private	signature:(TSystemAction saASystemAction)
szBuffer	Utils/Utils.cpp	/^static char szBuffer[STRING_MAX];$/;"	v	file:
t_formatter	spdlog/details/pattern_formatter_impl.h	/^class t_formatter:public flag_formatter$/;"	c	namespace:spdlog::details	inherits:flag_formatter
thousands_sep	spdlog/fmt/bundled/format.h	/^inline StringRef thousands_sep($/;"	f	namespace:fmt::internal	signature:( LConv *lc, LConvCheck<char *LConv::*, &LConv::thousands_sep> = 0)
thousands_sep	spdlog/fmt/bundled/format.h	/^inline fmt::StringRef thousands_sep(...)$/;"	f	namespace:fmt::internal	signature:(....)
thread_id	spdlog/details/async_log_helper.h	/^        size_t thread_id;$/;"	m	struct:spdlog::details::async_log_helper::async_msg	access:public
thread_id	spdlog/details/log_msg.h	/^    size_t thread_id;$/;"	m	struct:spdlog::details::log_msg	access:public
thread_id	spdlog/details/os.h	/^inline size_t thread_id()$/;"	f	namespace:spdlog::details::os	signature:()
threadsafe_queue	DMCore/message/threadsafe_queue.h	/^  threadsafe_queue();$/;"	p	class:threadsafe_queue	access:public	signature:()
threadsafe_queue	DMCore/message/threadsafe_queue.h	/^class threadsafe_queue {$/;"	c
threadsafe_queue	DMCore/message/threadsafe_queue.h	/^threadsafe_queue<T>::threadsafe_queue(){$/;"	f	class:threadsafe_queue	signature:()
threadsafe_queue::data_cond	DMCore/message/threadsafe_queue.h	/^  std::condition_variable data_cond;$/;"	m	class:threadsafe_queue	access:public
threadsafe_queue::data_queue	DMCore/message/threadsafe_queue.h	/^  std::queue<std::shared_ptr<T> > data_queue;$/;"	m	class:threadsafe_queue	access:public
threadsafe_queue::empty	DMCore/message/threadsafe_queue.h	/^  bool empty() const;$/;"	p	class:threadsafe_queue	access:public	signature:() const
threadsafe_queue::empty	DMCore/message/threadsafe_queue.h	/^bool threadsafe_queue<T>::empty() const {$/;"	f	class:threadsafe_queue	signature:() const
threadsafe_queue::mut	DMCore/message/threadsafe_queue.h	/^  mutable std::mutex mut;$/;"	m	class:threadsafe_queue	access:public
threadsafe_queue::push	DMCore/message/threadsafe_queue.h	/^  void push(T new_value);$/;"	p	class:threadsafe_queue	access:public	signature:(T new_value)
threadsafe_queue::push	DMCore/message/threadsafe_queue.h	/^void  threadsafe_queue<T>::push(T new_value) {$/;"	f	class:threadsafe_queue	signature:(T new_value)
threadsafe_queue::threadsafe_queue	DMCore/message/threadsafe_queue.h	/^  threadsafe_queue();$/;"	p	class:threadsafe_queue	access:public	signature:()
threadsafe_queue::threadsafe_queue	DMCore/message/threadsafe_queue.h	/^threadsafe_queue<T>::threadsafe_queue(){$/;"	f	class:threadsafe_queue	signature:()
threadsafe_queue::try_pop	DMCore/message/threadsafe_queue.h	/^  bool try_pop(T& value);$/;"	p	class:threadsafe_queue	access:public	signature:(T& value)
threadsafe_queue::try_pop	DMCore/message/threadsafe_queue.h	/^  std::shared_ptr<T> try_pop();$/;"	p	class:threadsafe_queue	access:public	signature:()
threadsafe_queue::try_pop	DMCore/message/threadsafe_queue.h	/^bool threadsafe_queue<T>::try_pop(T& value) {$/;"	f	class:threadsafe_queue	signature:(T& value)
threadsafe_queue::try_pop	DMCore/message/threadsafe_queue.h	/^std::shared_ptr<T> threadsafe_queue<T>::try_pop() {$/;"	f	class:threadsafe_queue	signature:()
threadsafe_queue::wait_and_pop	DMCore/message/threadsafe_queue.h	/^  std::shared_ptr<T> wait_and_pop();$/;"	p	class:threadsafe_queue	access:public	signature:()
threadsafe_queue::wait_and_pop	DMCore/message/threadsafe_queue.h	/^  void wait_and_pop(T& value);$/;"	p	class:threadsafe_queue	access:public	signature:(T& value)
threadsafe_queue::wait_and_pop	DMCore/message/threadsafe_queue.h	/^std::shared_ptr<T> threadsafe_queue<T>::wait_and_pop() {$/;"	f	class:threadsafe_queue	signature:()
threadsafe_queue::wait_and_pop	DMCore/message/threadsafe_queue.h	/^void threadsafe_queue<T>::wait_and_pop(T& value) {$/;"	f	class:threadsafe_queue	signature:(T& value)
threadsafe_queue::~threadsafe_queue	DMCore/message/threadsafe_queue.h	/^  ~threadsafe_queue();$/;"	p	class:threadsafe_queue	access:public	signature:()
threadsafe_queue::~threadsafe_queue	DMCore/message/threadsafe_queue.h	/^threadsafe_queue<T>::~threadsafe_queue(){}$/;"	f	class:threadsafe_queue	signature:()
throw_if_exists	spdlog/details/registry.h	/^    void throw_if_exists(const std::string &logger_name)$/;"	f	class:spdlog::details::registry_t	access:private	signature:(const std::string &logger_name)
time	spdlog/details/async_log_helper.h	/^        log_clock::time_point time;$/;"	m	struct:spdlog::details::async_log_helper::async_msg	access:public
time	spdlog/details/log_msg.h	/^    log_clock::time_point time;$/;"	m	struct:spdlog::details::log_msg	access:public
timeScheduled	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	timeb timeScheduled;			\/\/ the time when the agent was scheduled$/;"	m	struct:__anon48	access:public
timeTerminated	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	timeb timeTerminated;			\/\/ the time when the agent completed $/;"	m	struct:__anon48	access:public
to12h	spdlog/details/pattern_formatter_impl.h	/^static int to12h(const tm& t)$/;"	f	namespace:spdlog::details	signature:(const tm& t)
to_short_str	spdlog/common.h	/^inline const char* to_short_str(spdlog::level::level_enum l)$/;"	f	namespace:spdlog::level	signature:(spdlog::level::level_enum l)
to_str	spdlog/common.h	/^inline const char* to_str(spdlog::level::level_enum l)$/;"	f	namespace:spdlog::level	signature:(spdlog::level::level_enum l)
to_string	spdlog/fmt/bundled/format.h	/^    std::basic_string<Char> to_string() const$/;"	f	class:fmt::BasicStringRef	access:public	signature:() const
to_unsigned	spdlog/fmt/bundled/format.h	/^inline typename MakeUnsigned<Int>::Type to_unsigned(Int value)$/;"	f	namespace:fmt::internal	signature:(Int value)
trace	spdlog/common.h	/^    trace = 0,$/;"	e	enum:spdlog::level::__anon34
trace	spdlog/details/logger_impl.h	/^inline void spdlog::logger::trace(const T& msg)$/;"	f	class:spdlog::logger	signature:(const T& msg)
trace	spdlog/details/logger_impl.h	/^inline void spdlog::logger::trace(const char* fmt, const Args&... args)$/;"	f	class:spdlog::logger	signature:(const char* fmt, const Args&... args)
trace	spdlog/logger.h	/^    template <typename T> void trace(const T&);$/;"	p	class:spdlog::logger	access:public	signature:(const T&)
trace	spdlog/logger.h	/^    template <typename... Args> void trace(const char* fmt, const Args&... args);$/;"	p	class:spdlog::logger	access:public	signature:(const char* fmt, const Args&... args)
traits_type	spdlog/fmt/bundled/ostream.h	/^    typedef typename std::basic_streambuf<Char>::traits_type traits_type;$/;"	t	class:fmt::internal::FormatBuf	access:private
try_lock	spdlog/details/null_mutex.h	/^    bool try_lock()$/;"	f	struct:spdlog::details::null_mutex	access:public	signature:()
try_pop	DMCore/message/threadsafe_queue.h	/^  bool try_pop(T& value);$/;"	p	class:threadsafe_queue	access:public	signature:(T& value)
try_pop	DMCore/message/threadsafe_queue.h	/^  std::shared_ptr<T> try_pop();$/;"	p	class:threadsafe_queue	access:public	signature:()
try_pop	DMCore/message/threadsafe_queue.h	/^bool threadsafe_queue<T>::try_pop(T& value) {$/;"	f	class:threadsafe_queue	signature:(T& value)
try_pop	DMCore/message/threadsafe_queue.h	/^std::shared_ptr<T> threadsafe_queue<T>::try_pop() {$/;"	f	class:threadsafe_queue	signature:()
txt	spdlog/details/async_log_helper.h	/^        std::string txt;$/;"	m	struct:spdlog::details::async_log_helper::async_msg	access:public
type	spdlog/fmt/bundled/format.h	/^    Type type;$/;"	m	struct:fmt::internal::Arg	access:public
type	spdlog/fmt/bundled/format.h	/^    char type() const$/;"	f	struct:fmt::AlignTypeSpec	access:public	signature:() const
type	spdlog/fmt/bundled/format.h	/^    char type() const$/;"	f	struct:fmt::FormatSpec	access:public	signature:() const
type	spdlog/fmt/bundled/format.h	/^    char type() const$/;"	f	struct:fmt::TypeSpec	access:public	signature:() const
type	spdlog/fmt/bundled/format.h	/^    internal::Arg::Type type(unsigned index) const$/;"	f	class:fmt::ArgList	access:private	signature:(unsigned index) const
type	spdlog/fmt/bundled/format.h	/^    static internal::Arg::Type type(uint64_t types, unsigned index)$/;"	f	class:fmt::ArgList	access:public	signature:(uint64_t types, unsigned index)
type	spdlog/fmt/bundled/format.h	/^    static uint64_t type(const NamedArg<Char_> &)$/;"	f	class:fmt::internal::MakeValue	access:public	signature:(const NamedArg<Char_> &)
type	spdlog/fmt/bundled/format.h	/^    static uint64_t type(const NamedArgWithType<Char_, T> &)$/;"	f	class:fmt::internal::MakeValue	access:public	signature:(const NamedArgWithType<Char_, T> &)
type	spdlog/fmt/bundled/format.h	/^    static uint64_t type(const T &)$/;"	f	class:fmt::internal::MakeValue	access:public	signature:(const T &)
type	spdlog/fmt/bundled/format.h	/^    static uint64_t type(long)$/;"	f	class:fmt::internal::MakeValue	access:public	signature:(long)
type	spdlog/fmt/bundled/format.h	/^    static uint64_t type(unsigned long)$/;"	f	class:fmt::internal::MakeValue	access:public	signature:(unsigned long)
type	spdlog/fmt/bundled/format.h	/^    static uint64_t type(wchar_t)$/;"	f	class:fmt::internal::MakeValue	access:public	signature:(wchar_t)
type	spdlog/fmt/bundled/format.h	/^    typedef F type;$/;"	t	struct:fmt::internal::Conditional	access:public
type	spdlog/fmt/bundled/format.h	/^    typedef T type;$/;"	t	struct:fmt::internal::Conditional	access:public
type	spdlog/fmt/bundled/format.h	/^    typedef T type;$/;"	t	struct:fmt::internal::EnableIf	access:public
type	spdlog/fmt/bundled/format.h	/^    uint64_t type;$/;"	m	struct:fmt::ArgType	access:public
type_	spdlog/fmt/bundled/format.h	/^    char type_;$/;"	m	struct:fmt::FormatSpec	access:public
type_	spdlog/fmt/bundled/printf.h	/^    wchar_t type_;$/;"	m	class:fmt::internal::ArgConverter	access:private
types	spdlog/fmt/bundled/format.h	/^    uint64_t types() const$/;"	f	class:fmt::ArgList	access:public	signature:() const
types_	spdlog/fmt/bundled/format.h	/^    uint64_t types_;$/;"	m	class:fmt::ArgList	access:private
uiCurrentID	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^	unsigned int uiCurrentID;			\/\/ next id to be added to history$/;"	m	class:COutputHistory	access:private
uint32_t	spdlog/fmt/bundled/format.h	/^typedef unsigned __int32 uint32_t;$/;"	t
uint64_t	spdlog/fmt/bundled/format.h	/^typedef unsigned __int64 uint64_t;$/;"	t
uint_value	spdlog/fmt/bundled/format.h	/^        unsigned uint_value;$/;"	m	union:fmt::internal::Value::__anon18	access:public
ulong_long_value	spdlog/fmt/bundled/format.h	/^        ULongLong ulong_long_value;$/;"	m	union:fmt::internal::Value::__anon18	access:public
underline	spdlog/sinks/ansicolor_sink.h	/^    const std::string underline  = "\\033[4m";$/;"	m	class:spdlog::sinks::ansicolor_sink	access:public
unlock	spdlog/details/null_mutex.h	/^    void unlock() {}$/;"	f	struct:spdlog::details::null_mutex	access:public	signature:()
updateFromString	DMCore/Concepts/FrameConcept.cpp	/^void CFrameConcept::updateFromString(void* pUpdateData, string sUpdateType) {$/;"	f	class:CFrameConcept	signature:(void* pUpdateData, string sUpdateType)
updateFromString	DMCore/Concepts/FrameConcept.h	/^	void updateFromString(void* pUpdateData, string sUpdateType);$/;"	p	class:CFrameConcept	access:protected	signature:(void* pUpdateData, string sUpdateType)
updateFromString	DMCore/Concepts/StructConcept.cpp	/^void CStructConcept::updateFromString(void* pUpdateData, string sUpdateType) {$/;"	f	class:CStructConcept	signature:(void* pUpdateData, string sUpdateType)
updateFromString	DMCore/Concepts/StructConcept.h	/^	virtual void updateFromString(void* pUpdateData, string sUpdateType);$/;"	p	class:CStructConcept	access:protected	signature:(void* pUpdateData, string sUpdateType)
updateInputLineConfiguration	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^void CDMCoreAgent::updateInputLineConfiguration() {$/;"	f	class:CDMCoreAgent	signature:()
updateInputLineConfiguration	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	void updateInputLineConfiguration();$/;"	p	class:CDMCoreAgent	access:private	signature:()
ustring	spdlog/fmt/bundled/format.h	/^        StringValue<unsigned char> ustring;$/;"	m	union:fmt::internal::Value::__anon18	access:public
utc_minutes_offset	spdlog/details/os.h	/^inline int utc_minutes_offset(const std::tm& tm = details::os::localtime())$/;"	f	namespace:spdlog::details::os	signature:(const std::tm& tm = details::os::localtime())
vCompiledExpectations	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^		vCompiledExpectations;$/;"	m	struct:__anon46	access:public
vFromParams	DMCore/Agents/CoreAgents/TrafficManagerAgent.h	/^	vector<TSlotConceptPair, allocator<TSlotConceptPair> > vFromParams;$/;"	m	struct:__anon37	access:public
vLRModels	DMCore/Grounding/GroundingModels/GMRequestAgent_LR.h	/^	vector<TLRModel> vLRModels;$/;"	m	class:CGMRequestAgent_LR	access:protected
vStateHistory	DMCore/Agents/CoreAgents/StateManagerAgent.h	/^	vector<TDialogState, allocator<TDialogState> > vStateHistory;$/;"	m	class:CStateManagerAgent	access:public
vToParams	DMCore/Agents/CoreAgents/TrafficManagerAgent.h	/^	vector<TSlotValuePair, allocator<TSlotValuePair> > vToParams;$/;"	m	struct:__anon37	access:public
v_formatter	spdlog/details/pattern_formatter_impl.h	/^class v_formatter:public flag_formatter$/;"	c	namespace:spdlog::details	inherits:flag_formatter
value	spdlog/details/null_mutex.h	/^    int value;$/;"	m	struct:spdlog::details::null_atomic_int	access:public
value	spdlog/fmt/bundled/format.h	/^        const Char *value;$/;"	m	struct:fmt::internal::Value::StringValue	access:public
value	spdlog/fmt/bundled/format.h	/^        const void *value;$/;"	m	struct:fmt::internal::Value::CustomValue	access:public
value	spdlog/fmt/bundled/format.h	/^        value = 0$/;"	e	enum:fmt::internal::False::__anon26
value	spdlog/fmt/bundled/format.h	/^        value = 0$/;"	e	enum:fmt::internal::Not::__anon24
value	spdlog/fmt/bundled/format.h	/^        value = 1$/;"	e	enum:fmt::internal::Not::__anon25
value	spdlog/fmt/bundled/format.h	/^        value = ConvertToIntImpl2<T, enable_conversion>::value$/;"	e	enum:fmt::internal::ConvertToInt::__anon23
value	spdlog/fmt/bundled/format.h	/^        value = ConvertToIntImpl<T, !std::numeric_limits<T>::is_specialized>::value$/;"	e	enum:fmt::internal::ConvertToIntImpl2::__anon21
value	spdlog/fmt/bundled/format.h	/^        value = ENABLE_CONVERSION$/;"	e	enum:fmt::internal::ConvertToIntImpl::__anon19
value	spdlog/fmt/bundled/format.h	/^        value = false$/;"	e	enum:fmt::internal::ConvertToIntImpl2::__anon20
value	spdlog/fmt/bundled/format.h	/^    T value() const$/;"	f	class:fmt::IntFormatSpec	access:public	signature:() const
value	spdlog/fmt/bundled/ostream.h	/^        value = sizeof(convert(get<DummyStream>() << get<T>())) == sizeof(No)$/;"	e	enum:fmt::internal::ConvertToIntImpl::__anon33
value	spdlog/fmt/bundled/printf.h	/^        value = 0$/;"	e	enum:fmt::internal::is_same::__anon31
value	spdlog/fmt/bundled/printf.h	/^        value = 1$/;"	e	enum:fmt::internal::is_same::__anon32
value_	spdlog/fmt/bundled/format.h	/^    T value_;$/;"	m	class:fmt::IntFormatSpec	access:private
values_	spdlog/fmt/bundled/format.h	/^        const internal::Value *values_;$/;"	m	union:fmt::ArgList::__anon27	access:public
vbBindings	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	vector<TBinding> vbBindings;	\/\/ the vector of bindings$/;"	m	struct:__anon51	access:public
vbNotifyConcept	DMCore/Outputs/Output.h	/^  vector<bool> vbNotifyConcept;       \/\/ parallel vector indicating whether$/;"	m	class:COutput	access:protected
vcConditions	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.h	/^	vector<CCondition> vcConditions;$/;"	m	class:CGMState	access:protected
vcgrConceptGroundingRequests	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    TConceptGroundingRequests vcgrConceptGroundingRequests;$/;"	m	class:CGroundingManagerAgent	access:private
vcpConcepts	DMCore/Outputs/Output.h	/^	vector<CConcept *> vcpConcepts;		\/\/ the list of concepts referred in $/;"	m	class:COutput	access:protected
vdaiDAInfo	DMCore/Agents/CoreAgents/DTTManagerAgent.h	/^	vector<TDiscourseAgentInfo, allocator<TDiscourseAgentInfo> > vdaiDAInfo;$/;"	m	class:CDTTManagerAgent	access:private
vfCoefs	DMCore/Grounding/GroundingModels/GMRequestAgent_LR.h	/^	vector<float> vfCoefs;$/;"	m	struct:__anon61	access:public
vfProbability	DMCore/Grounding/GroundingUtils.h	/^    vector<float> vfProbability;$/;"	m	class:CBeliefDistribution	access:private
vfProbabilityHiBound	DMCore/Grounding/GroundingUtils.h	/^	vector<float> vfProbabilityHiBound;$/;"	m	class:CBeliefDistribution	access:private
vfProbabilityLowBound	DMCore/Grounding/GroundingUtils.h	/^	vector<float> vfProbabilityLowBound;$/;"	m	class:CBeliefDistribution	access:private
vfcuForcedUpdates	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	vector<TForcedConceptUpdate> vfcuForcedUpdates;$/;"	m	struct:__anon51	access:public
vgahiGroundingActionsHistory	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    vector<TGroundingActionHistoryItems> vgahiGroundingActionsHistory;$/;"	m	class:CGroundingManagerAgent	access:private
vhCurrentHypSet	DMCore/Concepts/Concept.h	/^    vector<CHyp*, allocator<CHyp*> > vhCurrentHypSet;$/;"	m	class:CConcept	access:protected
vhPartialHypSet	DMCore/Concepts/Concept.h	/^    vector<CHyp*, allocator<CHyp*> > vhPartialHypSet;$/;"	m	class:CConcept	access:protected
viActionMappings	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    vector<int> viActionMappings; $/;"	m	class:CGroundingModel	access:protected
visit	spdlog/fmt/bundled/format.h	/^    Result visit(const Arg &arg)$/;"	f	class:fmt::ArgVisitor	access:public	signature:(const Arg &arg)
visit_any_double	spdlog/fmt/bundled/format.h	/^    Result visit_any_double(T)$/;"	f	class:fmt::ArgVisitor	access:public	signature:(T)
visit_any_double	spdlog/fmt/bundled/format.h	/^    void visit_any_double(T value)$/;"	f	class:fmt::internal::ArgFormatterBase	access:public	signature:(T value)
visit_any_int	spdlog/fmt/bundled/format.h	/^    Result visit_any_int(T)$/;"	f	class:fmt::ArgVisitor	access:public	signature:(T)
visit_any_int	spdlog/fmt/bundled/format.h	/^    void visit_any_int(T value)$/;"	f	class:fmt::internal::ArgFormatterBase	access:public	signature:(T value)
visit_any_int	spdlog/fmt/bundled/printf.h	/^    bool visit_any_int(T value)$/;"	f	class:fmt::internal::IsZeroInt	access:public	signature:(T value)
visit_any_int	spdlog/fmt/bundled/printf.h	/^    int visit_any_int(T value)$/;"	f	class:fmt::internal::PrecisionHandler	access:public	signature:(T value)
visit_any_int	spdlog/fmt/bundled/printf.h	/^    unsigned visit_any_int(T value)$/;"	f	class:fmt::internal::WidthHandler	access:public	signature:(T value)
visit_any_int	spdlog/fmt/bundled/printf.h	/^    void visit_any_int(T value)$/;"	f	class:fmt::internal::CharConverter	access:public	signature:(T value)
visit_any_int	spdlog/fmt/bundled/printf.h	/^    void visit_any_int(U value)$/;"	f	class:fmt::internal::ArgConverter	access:public	signature:(U value)
visit_bool	spdlog/fmt/bundled/format.h	/^    Result visit_bool(bool value)$/;"	f	class:fmt::ArgVisitor	access:public	signature:(bool value)
visit_bool	spdlog/fmt/bundled/format.h	/^    void visit_bool(bool value)$/;"	f	class:fmt::internal::ArgFormatterBase	access:public	signature:(bool value)
visit_bool	spdlog/fmt/bundled/printf.h	/^    void visit_bool(bool value)$/;"	f	class:fmt::BasicPrintfArgFormatter	access:public	signature:(bool value)
visit_bool	spdlog/fmt/bundled/printf.h	/^    void visit_bool(bool value)$/;"	f	class:fmt::internal::ArgConverter	access:public	signature:(bool value)
visit_char	spdlog/fmt/bundled/format.h	/^    Result visit_char(int value)$/;"	f	class:fmt::ArgVisitor	access:public	signature:(int value)
visit_char	spdlog/fmt/bundled/format.h	/^    void visit_char(int value)$/;"	f	class:fmt::internal::ArgFormatterBase	access:public	signature:(int value)
visit_char	spdlog/fmt/bundled/printf.h	/^    void visit_char(int value)$/;"	f	class:fmt::BasicPrintfArgFormatter	access:public	signature:(int value)
visit_cstring	spdlog/fmt/bundled/format.h	/^    Result visit_cstring(const char *)$/;"	f	class:fmt::ArgVisitor	access:public	signature:(const char *)
visit_cstring	spdlog/fmt/bundled/format.h	/^    void visit_cstring(const char *value)$/;"	f	class:fmt::internal::ArgFormatterBase	access:public	signature:(const char *value)
visit_cstring	spdlog/fmt/bundled/printf.h	/^    void visit_cstring(const char *value)$/;"	f	class:fmt::BasicPrintfArgFormatter	access:public	signature:(const char *value)
visit_custom	spdlog/fmt/bundled/format.h	/^    Result visit_custom(Arg::CustomValue)$/;"	f	class:fmt::ArgVisitor	access:public	signature:(Arg::CustomValue)
visit_custom	spdlog/fmt/bundled/format.h	/^    void visit_custom(internal::Arg::CustomValue c)$/;"	f	class:fmt::BasicArgFormatter	access:public	signature:(internal::Arg::CustomValue c)
visit_custom	spdlog/fmt/bundled/printf.h	/^    void visit_custom(internal::Arg::CustomValue c)$/;"	f	class:fmt::BasicPrintfArgFormatter	access:public	signature:(internal::Arg::CustomValue c)
visit_double	spdlog/fmt/bundled/format.h	/^    Result visit_double(double value)$/;"	f	class:fmt::ArgVisitor	access:public	signature:(double value)
visit_int	spdlog/fmt/bundled/format.h	/^    Result visit_int(int value)$/;"	f	class:fmt::ArgVisitor	access:public	signature:(int value)
visit_long_double	spdlog/fmt/bundled/format.h	/^    Result visit_long_double(long double value)$/;"	f	class:fmt::ArgVisitor	access:public	signature:(long double value)
visit_long_long	spdlog/fmt/bundled/format.h	/^    Result visit_long_long(LongLong value)$/;"	f	class:fmt::ArgVisitor	access:public	signature:(LongLong value)
visit_pointer	spdlog/fmt/bundled/format.h	/^    Result visit_pointer(const void *)$/;"	f	class:fmt::ArgVisitor	access:public	signature:(const void *)
visit_pointer	spdlog/fmt/bundled/format.h	/^    void visit_pointer(const void *value)$/;"	f	class:fmt::internal::ArgFormatterBase	access:public	signature:(const void *value)
visit_pointer	spdlog/fmt/bundled/printf.h	/^    void visit_pointer(const void *value)$/;"	f	class:fmt::BasicPrintfArgFormatter	access:public	signature:(const void *value)
visit_string	spdlog/fmt/bundled/format.h	/^    Result visit_string(Arg::StringValue<char>)$/;"	f	class:fmt::ArgVisitor	access:public	signature:(Arg::StringValue<char>)
visit_string	spdlog/fmt/bundled/format.h	/^    void visit_string(Arg::StringValue<char> value)$/;"	f	class:fmt::internal::ArgFormatterBase	access:public	signature:(Arg::StringValue<char> value)
visit_uint	spdlog/fmt/bundled/format.h	/^    Result visit_uint(unsigned value)$/;"	f	class:fmt::ArgVisitor	access:public	signature:(unsigned value)
visit_ulong_long	spdlog/fmt/bundled/format.h	/^    Result visit_ulong_long(ULongLong value)$/;"	f	class:fmt::ArgVisitor	access:public	signature:(ULongLong value)
visit_unhandled_arg	spdlog/fmt/bundled/format.h	/^    Result visit_unhandled_arg()$/;"	f	class:fmt::ArgVisitor	access:public	signature:()
visit_wstring	spdlog/fmt/bundled/format.h	/^    Result visit_wstring(Arg::StringValue<wchar_t>)$/;"	f	class:fmt::ArgVisitor	access:public	signature:(Arg::StringValue<wchar_t>)
visit_wstring	spdlog/fmt/bundled/format.h	/^    void visit_wstring(Arg::StringValue<Char> value)$/;"	f	class:fmt::internal::ArgFormatterBase	access:public	signature:(Arg::StringValue<Char> value)
voOutputs	DMCore/Agents/DialogAgents/BasicAgents/MAInform.h	/^	vector<COutput*> voOutputs;$/;"	m	class:CMAInform	access:protected
voOutputs	DMCore/Agents/DialogAgents/BasicAgents/MARequest.h	/^	vector<COutput*> voOutputs;$/;"	m	class:CMARequest	access:protected
vodOutputDevices	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^	vector <TOutputDevice> vodOutputDevices;$/;"	m	class:COutputManagerAgent	access:private
vopOutputs	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^	vector<COutput*> vopOutputs;		\/\/ history of outputs$/;"	m	class:COutputHistory	access:private
vopRecentOutputs	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^	vector <COutput *> vopRecentOutputs; 	$/;"	m	class:COutputManagerAgent	access:private
vpgaActions	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    vector < CGroundingAction * > vpgaActions;$/;"	m	class:CGroundingManagerAgent	access:private
vpieEventHistory	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.h	/^	vector <CInteractionEvent*> vpieEventHistory;$/;"	m	class:CInteractionEventManagerAgent	access:private
vsActionNames	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^    TStringVector vsActionNames;$/;"	m	class:CGroundingManagerAgent	access:private
vsFeatures	DMCore/Grounding/GroundingModels/GMRequestAgent_LR.h	/^	TStringVector vsFeatures;$/;"	m	struct:__anon61	access:public
vsFlags	DMCore/Outputs/Output.h	/^	vector<string> vsFlags;				\/\/ flags for the output$/;"	m	class:COutput	access:protected
vsFloorStatusLabels	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^vector<string> vsFloorStatusLabels;$/;"	v
vsGRS	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^char vsGRS[7][20] = {"UNPROCESSED", "PENDING", "READY", "SCHEDULED", $/;"	v
vsOtherConceptNames	DMCore/Agents/DialogAgents/DialogAgent.h	/^	TStringVector vsOtherConceptNames;$/;"	m	struct:__anon57	access:public
vsSlotNames	DMCore/Outputs/FrameOutput.h	/^	vector<string> vsSlotNames;$/;"	m	class:CFrameOutput	access:protected
vsStates	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.h	/^	vector<CGMState> vsStates;$/;"	m	class:CGMRequestAgent_HandCrafted	access:protected
vsUtterances	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^	vector<string> vsUtterances;		\/\/ history of utterances as strings$/;"	m	class:COutputHistory	access:private
vsValues	DMCore/Outputs/FrameOutput.h	/^	vector<string> vsValues;$/;"	m	class:CFrameOutput	access:protected
vtExecutionTimes	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^		vtExecutionTimes;			\/\/ the times when the agent was actually$/;"	m	struct:__anon48	access:public
vtValueType	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.h	/^	TValueType vtValueType;$/;"	m	class:CCondition	access:protected
waitMessage	DMCore/message/message.h	/^std::shared_ptr<T> waitMessage(threadsafe_queue<T> &q) {$/;"	f	signature:(threadsafe_queue<T> &q)
wait_and_pop	DMCore/message/threadsafe_queue.h	/^  std::shared_ptr<T> wait_and_pop();$/;"	p	class:threadsafe_queue	access:public	signature:()
wait_and_pop	DMCore/message/threadsafe_queue.h	/^  void wait_and_pop(T& value);$/;"	p	class:threadsafe_queue	access:public	signature:(T& value)
wait_and_pop	DMCore/message/threadsafe_queue.h	/^std::shared_ptr<T> threadsafe_queue<T>::wait_and_pop() {$/;"	f	class:threadsafe_queue	signature:()
wait_and_pop	DMCore/message/threadsafe_queue.h	/^void threadsafe_queue<T>::wait_and_pop(T& value) {$/;"	f	class:threadsafe_queue	signature:(T& value)
wait_empty_q	spdlog/details/async_log_helper.h	/^    void wait_empty_q();$/;"	p	class:spdlog::details::async_log_helper	access:private	signature:()
wait_empty_q	spdlog/details/async_log_helper.h	/^inline void spdlog::details::async_log_helper::wait_empty_q()$/;"	f	class:spdlog::details::async_log_helper	signature:()
warn	spdlog/common.h	/^    warn = 3,$/;"	e	enum:spdlog::level::__anon34
warn	spdlog/details/logger_impl.h	/^inline void spdlog::logger::warn(const T& msg)$/;"	f	class:spdlog::logger	signature:(const T& msg)
warn	spdlog/details/logger_impl.h	/^inline void spdlog::logger::warn(const char* fmt, const Args&... args)$/;"	f	class:spdlog::logger	signature:(const char* fmt, const Args&... args)
warn	spdlog/logger.h	/^    template <typename T> void warn(const T&);$/;"	p	class:spdlog::logger	access:public	signature:(const T&)
warn	spdlog/logger.h	/^    template <typename... Args> void warn(const char* fmt, const Args&... args);$/;"	p	class:spdlog::logger	access:public	signature:(const char* fmt, const Args&... args)
white	spdlog/sinks/ansicolor_sink.h	/^    const std::string white      = "\\033[37m";$/;"	m	class:spdlog::sinks::ansicolor_sink	access:public
width	spdlog/fmt/bundled/format.h	/^    unsigned width() const$/;"	f	struct:fmt::TypeSpec	access:public	signature:() const
width	spdlog/fmt/bundled/format.h	/^    unsigned width() const$/;"	f	struct:fmt::WidthSpec	access:public	signature:() const
width_	spdlog/fmt/bundled/format.h	/^    unsigned width_;$/;"	m	struct:fmt::WidthSpec	access:public
wincolor_sink	spdlog/sinks/wincolor_sink.h	/^    wincolor_sink(HANDLE std_handle): out_handle_(std_handle)$/;"	f	class:spdlog::sinks::wincolor_sink	access:public	signature:(HANDLE std_handle)
wincolor_sink	spdlog/sinks/wincolor_sink.h	/^class wincolor_sink: public  base_sink<Mutex>$/;"	c	namespace:spdlog::sinks	inherits:base_sink
wincolor_stderr_sink	spdlog/sinks/wincolor_sink.h	/^    wincolor_stderr_sink() : wincolor_sink<Mutex>(GetStdHandle(STD_ERROR_HANDLE))$/;"	f	class:spdlog::sinks::wincolor_stderr_sink	access:public	signature:()
wincolor_stderr_sink	spdlog/sinks/wincolor_sink.h	/^class wincolor_stderr_sink: public wincolor_sink<Mutex>$/;"	c	namespace:spdlog::sinks	inherits:wincolor_sink
wincolor_stderr_sink_mt	spdlog/sinks/wincolor_sink.h	/^typedef wincolor_stderr_sink<std::mutex> wincolor_stderr_sink_mt;$/;"	t	namespace:spdlog::sinks
wincolor_stderr_sink_st	spdlog/sinks/wincolor_sink.h	/^typedef wincolor_stderr_sink<details::null_mutex> wincolor_stderr_sink_st;$/;"	t	namespace:spdlog::sinks
wincolor_stdout_sink	spdlog/sinks/wincolor_sink.h	/^    wincolor_stdout_sink() : wincolor_sink<Mutex>(GetStdHandle(STD_OUTPUT_HANDLE))$/;"	f	class:spdlog::sinks::wincolor_stdout_sink	access:public	signature:()
wincolor_stdout_sink	spdlog/sinks/wincolor_sink.h	/^class wincolor_stdout_sink: public wincolor_sink<Mutex>$/;"	c	namespace:spdlog::sinks	inherits:wincolor_sink
wincolor_stdout_sink_mt	spdlog/sinks/wincolor_sink.h	/^typedef wincolor_stdout_sink<std::mutex> wincolor_stdout_sink_mt;$/;"	t	namespace:spdlog::sinks
wincolor_stdout_sink_st	spdlog/sinks/wincolor_sink.h	/^typedef wincolor_stdout_sink<details::null_mutex> wincolor_stdout_sink_st;$/;"	t	namespace:spdlog::sinks
worker_loop	spdlog/details/async_log_helper.h	/^    void worker_loop();$/;"	p	class:spdlog::details::async_log_helper	access:private	signature:()
worker_loop	spdlog/details/async_log_helper.h	/^inline void spdlog::details::async_log_helper::worker_loop()$/;"	f	class:spdlog::details::async_log_helper	signature:()
write	spdlog/details/file_helper.h	/^    void write(const log_msg& msg)$/;"	f	class:spdlog::details::file_helper	access:public	signature:(const log_msg& msg)
write	spdlog/fmt/bundled/format.h	/^    void write(BasicCStringRef<Char> format, ArgList args)$/;"	f	class:BasicWriter	access:public	signature:(BasicCStringRef<Char> format, ArgList args)
write	spdlog/fmt/bundled/format.h	/^    void write(BasicWriter<Char> &w, const Char *start, const Char *end)$/;"	f	class:fmt::internal::FormatterBase	access:protected	signature:(BasicWriter<Char> &w, const Char *start, const Char *end)
write	spdlog/fmt/bundled/format.h	/^    void write(bool value)$/;"	f	class:fmt::internal::ArgFormatterBase	access:protected	signature:(bool value)
write	spdlog/fmt/bundled/format.h	/^    void write(const char *value)$/;"	f	class:fmt::internal::ArgFormatterBase	access:protected	signature:(const char *value)
write	spdlog/fmt/bundled/ostream.cc	/^		FMT_FUNC void write(std::ostream &os, Writer &w)$/;"	f	namespace:fmt::internal	signature:(std::ostream &os, Writer &w)
write	spdlog/fmt/bundled/ostream.h	/^void write(std::ostream &os, Writer &w);$/;"	p	namespace:fmt::internal	signature:(std::ostream &os, Writer &w)
write_decimal	spdlog/fmt/bundled/format.h	/^    void write_decimal(Int value)$/;"	f	class:BasicWriter	access:private	signature:(Int value)
write_double	spdlog/fmt/bundled/format.h	/^    void write_double(T value, const FormatSpec &spec);$/;"	p	class:BasicWriter	access:private	signature:(T value, const FormatSpec &spec)
write_double	spdlog/fmt/bundled/format.h	/^void BasicWriter<Char>::write_double(T value, const FormatSpec &spec)$/;"	f	class:BasicWriter	signature:(T value, const FormatSpec &spec)
write_int	spdlog/fmt/bundled/format.h	/^    void write_int(T value, Spec spec);$/;"	p	class:BasicWriter	access:private	signature:(T value, Spec spec)
write_int	spdlog/fmt/bundled/format.h	/^void BasicWriter<Char>::write_int(T value, Spec spec)$/;"	f	class:BasicWriter	signature:(T value, Spec spec)
write_null_pointer	spdlog/fmt/bundled/printf.h	/^    void write_null_pointer()$/;"	f	class:fmt::BasicPrintfArgFormatter	access:private	signature:()
write_pointer	spdlog/fmt/bundled/format.h	/^    void write_pointer(const void *p)$/;"	f	class:fmt::internal::ArgFormatterBase	access:private	signature:(const void *p)
write_str	spdlog/fmt/bundled/format.h	/^    CharPtr write_str(const StrChar *s, std::size_t size, const AlignSpec &spec);$/;"	p	class:BasicWriter	access:private	signature:(const StrChar *s, std::size_t size, const AlignSpec &spec)
write_str	spdlog/fmt/bundled/format.h	/^    void write_str(const internal::Arg::StringValue<StrChar> &str,$/;"	p	class:BasicWriter	access:private	signature:(const internal::Arg::StringValue<StrChar> &str, const FormatSpec &spec)
write_str	spdlog/fmt/bundled/format.h	/^typename BasicWriter<Char>::CharPtr BasicWriter<Char>::write_str($/;"	f	class:BasicWriter	signature:( const StrChar *s, std::size_t size, const AlignSpec &spec)
write_str	spdlog/fmt/bundled/format.h	/^void BasicWriter<Char>::write_str($/;"	f	class:BasicWriter	signature:( const internal::Arg::StringValue<StrChar> &s, const FormatSpec &spec)
write_unsigned_decimal	spdlog/fmt/bundled/format.h	/^    Char *write_unsigned_decimal(UInt value, unsigned prefix_size = 0)$/;"	f	class:BasicWriter	access:private	signature:(UInt value, unsigned prefix_size = 0)
writer	spdlog/fmt/bundled/format.h	/^    BasicWriter<Char> &writer()$/;"	f	class:fmt::BasicFormatter	access:public	signature:()
writer	spdlog/fmt/bundled/format.h	/^    BasicWriter<Char> &writer()$/;"	f	class:fmt::internal::ArgFormatterBase	access:protected	signature:()
writer_	spdlog/fmt/bundled/format.h	/^    BasicWriter<Char> &writer_;$/;"	m	class:fmt::BasicFormatter	access:private
writer_	spdlog/fmt/bundled/format.h	/^    BasicWriter<Char> &writer_;$/;"	m	class:fmt::internal::ArgFormatterBase	access:private
writer_	spdlog/fmt/bundled/printf.h	/^    BasicWriter<Char> &writer_;$/;"	m	class:fmt::PrintfFormatter	access:private
wstring	spdlog/fmt/bundled/format.h	/^        StringValue<wchar_t> wstring;$/;"	m	union:fmt::internal::Value::__anon18	access:public
yellow	spdlog/sinks/ansicolor_sink.h	/^    const std::string yellow     = "\\033[33m";$/;"	m	class:spdlog::sinks::ansicolor_sink	access:public
z_formatter	spdlog/details/pattern_formatter_impl.h	/^    z_formatter():_last_update(std::chrono::seconds(0))$/;"	f	class:spdlog::details::z_formatter	access:public	signature:()
z_formatter	spdlog/details/pattern_formatter_impl.h	/^    z_formatter(const z_formatter&) = delete;$/;"	p	class:spdlog::details::z_formatter	access:public	signature:(const z_formatter&)
z_formatter	spdlog/details/pattern_formatter_impl.h	/^class z_formatter:public flag_formatter$/;"	c	namespace:spdlog::details	inherits:flag_formatter
~BasicWriter	spdlog/fmt/bundled/format.h	/^    virtual ~BasicWriter()$/;"	f	class:BasicWriter	access:public	signature:()
~Buffer	spdlog/fmt/bundled/format.h	/^    virtual ~Buffer()$/;"	f	class:fmt::Buffer	access:public	signature:()
~CAgent	DMCore/Agents/Agent.cpp	/^CAgent::~CAgent() {$/;"	f	class:CAgent	signature:()
~CAgent	DMCore/Agents/Agent.h	/^	virtual ~CAgent();$/;"	p	class:CAgent	access:public	signature:()
~CArrayConcept	DMCore/Concepts/ArrayConcept.cpp	/^CArrayConcept::~CArrayConcept() {$/;"	f	class:CArrayConcept	signature:()
~CArrayConcept	DMCore/Concepts/ArrayConcept.h	/^	virtual ~CArrayConcept();$/;"	p	class:CArrayConcept	access:public	signature:()
~CBeliefDistribution	DMCore/Grounding/GroundingUtils.cpp	/^CBeliefDistribution::~CBeliefDistribution() {$/;"	f	class:CBeliefDistribution	signature:()
~CBeliefDistribution	DMCore/Grounding/GroundingUtils.h	/^    ~CBeliefDistribution();$/;"	p	class:CBeliefDistribution	access:public	signature:()
~CConcept	DMCore/Concepts/Concept.cpp	/^CConcept::~CConcept() {    $/;"	f	class:CConcept	signature:()
~CConcept	DMCore/Concepts/Concept.h	/^	virtual ~CConcept();$/;"	p	class:CConcept	access:public	signature:()
~CDMCoreAgent	DMCore/Agents/CoreAgents/DMCoreAgent.cpp	/^CDMCoreAgent::~CDMCoreAgent() {$/;"	f	class:CDMCoreAgent	signature:()
~CDMCoreAgent	DMCore/Agents/CoreAgents/DMCoreAgent.h	/^	virtual ~CDMCoreAgent();$/;"	p	class:CDMCoreAgent	access:public	signature:()
~CDTTManagerAgent	DMCore/Agents/CoreAgents/DTTManagerAgent.cpp	/^CDTTManagerAgent::~CDTTManagerAgent() {$/;"	f	class:CDTTManagerAgent	signature:()
~CDTTManagerAgent	DMCore/Agents/CoreAgents/DTTManagerAgent.h	/^	virtual ~CDTTManagerAgent();$/;"	p	class:CDTTManagerAgent	access:public	signature:()
~CDialogAgency	DMCore/Agents/DialogAgents/BasicAgents/DialogAgency.cpp	/^CDialogAgency::~CDialogAgency() {$/;"	f	class:CDialogAgency	signature:()
~CDialogAgency	DMCore/Agents/DialogAgents/BasicAgents/DialogAgency.h	/^	virtual ~CDialogAgency();$/;"	p	class:CDialogAgency	access:public	signature:()
~CDialogAgent	DMCore/Agents/DialogAgents/DialogAgent.cpp	/^CDialogAgent::~CDialogAgent() {$/;"	f	class:CDialogAgent	signature:()
~CDialogAgent	DMCore/Agents/DialogAgents/DialogAgent.h	/^	virtual ~CDialogAgent();$/;"	p	class:CDialogAgent	access:public	signature:()
~CExternalPolicyInterface	DMCore/Grounding/GroundingModels/GroundingModel.cpp	/^CExternalPolicyInterface::~CExternalPolicyInterface() {$/;"	f	class:CExternalPolicyInterface	signature:()
~CExternalPolicyInterface	DMCore/Grounding/GroundingModels/GroundingModel.h	/^    ~CExternalPolicyInterface();$/;"	p	class:CExternalPolicyInterface	access:public	signature:()
~CFrameConcept	DMCore/Concepts/FrameConcept.cpp	/^CFrameConcept::~CFrameConcept() {$/;"	f	class:CFrameConcept	signature:()
~CFrameConcept	DMCore/Concepts/FrameConcept.h	/^	~CFrameConcept();$/;"	p	class:CFrameConcept	access:public	signature:()
~CFrameOutput	DMCore/Outputs/FrameOutput.cpp	/^CFrameOutput::~CFrameOutput() {  $/;"	f	class:CFrameOutput	signature:()
~CFrameOutput	DMCore/Outputs/FrameOutput.h	/^	virtual ~CFrameOutput();$/;"	p	class:CFrameOutput	access:public	signature:()
~CGMConcept	DMCore/Grounding/GroundingModels/GMConcept.cpp	/^CGMConcept::~CGMConcept() {$/;"	f	class:CGMConcept	signature:()
~CGMConcept	DMCore/Grounding/GroundingModels/GMConcept.h	/^    virtual ~CGMConcept();$/;"	p	class:CGMConcept	access:public	signature:()
~CGMRequestAgent	DMCore/Grounding/GroundingModels/GMRequestAgent.cpp	/^CGMRequestAgent::~CGMRequestAgent() {$/;"	f	class:CGMRequestAgent	signature:()
~CGMRequestAgent	DMCore/Grounding/GroundingModels/GMRequestAgent.h	/^    virtual ~CGMRequestAgent();$/;"	p	class:CGMRequestAgent	access:public	signature:()
~CGMRequestAgent_Experiment	DMCore/Grounding/GroundingModels/GMRequestAgent_Experiment.cpp	/^CGMRequestAgent_Experiment::~CGMRequestAgent_Experiment() {$/;"	f	class:CGMRequestAgent_Experiment	signature:()
~CGMRequestAgent_Experiment	DMCore/Grounding/GroundingModels/GMRequestAgent_Experiment.h	/^    virtual ~CGMRequestAgent_Experiment();$/;"	p	class:CGMRequestAgent_Experiment	access:public	signature:()
~CGMRequestAgent_HandCrafted	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.cpp	/^CGMRequestAgent_HandCrafted::~CGMRequestAgent_HandCrafted() {$/;"	f	class:CGMRequestAgent_HandCrafted	signature:()
~CGMRequestAgent_HandCrafted	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.h	/^    virtual ~CGMRequestAgent_HandCrafted();$/;"	p	class:CGMRequestAgent_HandCrafted	access:public	signature:()
~CGMRequestAgent_LR	DMCore/Grounding/GroundingModels/GMRequestAgent_LR.cpp	/^CGMRequestAgent_LR::~CGMRequestAgent_LR() {$/;"	f	class:CGMRequestAgent_LR	signature:()
~CGMRequestAgent_LR	DMCore/Grounding/GroundingModels/GMRequestAgent_LR.h	/^    virtual ~CGMRequestAgent_LR();$/;"	p	class:CGMRequestAgent_LR	access:public	signature:()
~CGMRequestAgent_NumNonu	DMCore/Grounding/GroundingModels/GMRequestAgent_NumNonu.cpp	/^CGMRequestAgent_NumNonu::~CGMRequestAgent_NumNonu() {$/;"	f	class:CGMRequestAgent_NumNonu	signature:()
~CGMRequestAgent_NumNonu	DMCore/Grounding/GroundingModels/GMRequestAgent_NumNonu.h	/^    virtual ~CGMRequestAgent_NumNonu();$/;"	p	class:CGMRequestAgent_NumNonu	access:public	signature:()
~CGMState	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.cpp	/^CGMState::~CGMState() {}$/;"	f	class:CGMState	signature:()
~CGMState	DMCore/Grounding/GroundingModels/GMRequestAgent_HandCrafted.h	/^	~CGMState();$/;"	p	class:CGMState	access:public	signature:()
~CGroundingAction	DMCore/Grounding/GroundingActions/GroundingAction.h	/^    virtual ~CGroundingAction() {};$/;"	f	class:CGroundingAction	access:public	signature:()
~CGroundingManagerAgent	DMCore/Agents/CoreAgents/GroundingManagerAgent.cpp	/^CGroundingManagerAgent::~CGroundingManagerAgent() {$/;"	f	class:CGroundingManagerAgent	signature:()
~CGroundingManagerAgent	DMCore/Agents/CoreAgents/GroundingManagerAgent.h	/^	virtual ~CGroundingManagerAgent();$/;"	p	class:CGroundingManagerAgent	access:public	signature:()
~CGroundingModel	DMCore/Grounding/GroundingModels/GroundingModel.cpp	/^CGroundingModel::~CGroundingModel() {$/;"	f	class:CGroundingModel	signature:()
~CGroundingModel	DMCore/Grounding/GroundingModels/GroundingModel.h	/^	virtual ~CGroundingModel();$/;"	p	class:CGroundingModel	access:public	signature:()
~CHyp	DMCore/Concepts/Concept.cpp	/^CHyp::~CHyp() {$/;"	f	class:CHyp	signature:()
~CHyp	DMCore/Concepts/Concept.h	/^	virtual ~CHyp();$/;"	p	class:CHyp	access:public	signature:()
~CInteractionEvent	DMCore/Events/InteractionEvent.cpp	/^CInteractionEvent::~CInteractionEvent() {}$/;"	f	class:CInteractionEvent	signature:()
~CInteractionEvent	DMCore/Events/InteractionEvent.h	/^	virtual ~CInteractionEvent();$/;"	p	class:CInteractionEvent	access:public	signature:()
~CInteractionEventManagerAgent	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.cpp	/^CInteractionEventManagerAgent::~CInteractionEventManagerAgent() {}$/;"	f	class:CInteractionEventManagerAgent	signature:()
~CInteractionEventManagerAgent	DMCore/Agents/CoreAgents/InteractionEventManagerAgent.h	/^	virtual ~CInteractionEventManagerAgent();$/;"	p	class:CInteractionEventManagerAgent	access:public	signature:()
~CMAExecute	DMCore/Agents/DialogAgents/BasicAgents/MAExecute.cpp	/^CMAExecute::~CMAExecute() {$/;"	f	class:CMAExecute	signature:()
~CMAExecute	DMCore/Agents/DialogAgents/BasicAgents/MAExecute.h	/^	virtual ~CMAExecute();$/;"	p	class:CMAExecute	access:public	signature:()
~CMAExpect	DMCore/Agents/DialogAgents/BasicAgents/MAExpect.cpp	/^CMAExpect::~CMAExpect() {$/;"	f	class:CMAExpect	signature:()
~CMAExpect	DMCore/Agents/DialogAgents/BasicAgents/MAExpect.h	/^	virtual ~CMAExpect();$/;"	p	class:CMAExpect	access:public	signature:()
~CMAInform	DMCore/Agents/DialogAgents/BasicAgents/MAInform.cpp	/^CMAInform::~CMAInform() {$/;"	f	class:CMAInform	signature:()
~CMAInform	DMCore/Agents/DialogAgents/BasicAgents/MAInform.h	/^	virtual ~CMAInform();$/;"	p	class:CMAInform	access:public	signature:()
~CMARequest	DMCore/Agents/DialogAgents/BasicAgents/MARequest.cpp	/^CMARequest::~CMARequest() {$/;"	f	class:CMARequest	signature:()
~CMARequest	DMCore/Agents/DialogAgents/BasicAgents/MARequest.h	/^	virtual ~CMARequest();$/;"	p	class:CMARequest	access:public	signature:()
~COutput	DMCore/Outputs/Output.cpp	/^COutput::~COutput() {$/;"	f	class:COutput	signature:()
~COutput	DMCore/Outputs/Output.h	/^	virtual ~COutput();$/;"	p	class:COutput	access:public	signature:()
~COutputHistory	DMCore/Agents/CoreAgents/OutputManagerAgent.cpp	/^COutputHistory::~COutputHistory() {$/;"	f	class:COutputHistory	signature:()
~COutputHistory	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^	virtual ~COutputHistory();$/;"	p	class:COutputHistory	access:public	signature:()
~COutputManagerAgent	DMCore/Agents/CoreAgents/OutputManagerAgent.cpp	/^COutputManagerAgent::~COutputManagerAgent() {$/;"	f	class:COutputManagerAgent	signature:()
~COutputManagerAgent	DMCore/Agents/CoreAgents/OutputManagerAgent.h	/^	virtual ~COutputManagerAgent();$/;"	p	class:COutputManagerAgent	access:public	signature:()
~CStateManagerAgent	DMCore/Agents/CoreAgents/StateManagerAgent.cpp	/^CStateManagerAgent::~CStateManagerAgent() {$/;"	f	class:CStateManagerAgent	signature:()
~CStateManagerAgent	DMCore/Agents/CoreAgents/StateManagerAgent.h	/^	virtual ~CStateManagerAgent();$/;"	p	class:CStateManagerAgent	access:public	signature:()
~CStructConcept	DMCore/Concepts/StructConcept.cpp	/^CStructConcept::~CStructConcept() {$/;"	f	class:CStructConcept	signature:()
~CStructConcept	DMCore/Concepts/StructConcept.h	/^    ~CStructConcept();$/;"	p	class:CStructConcept	access:public	signature:()
~CTrafficManagerAgent	DMCore/Agents/CoreAgents/TrafficManagerAgent.cpp	/^CTrafficManagerAgent::~CTrafficManagerAgent() {$/;"	f	class:CTrafficManagerAgent	signature:()
~CTrafficManagerAgent	DMCore/Agents/CoreAgents/TrafficManagerAgent.h	/^	virtual ~CTrafficManagerAgent();$/;"	p	class:CTrafficManagerAgent	access:public	signature:()
~MemoryBuffer	spdlog/fmt/bundled/format.h	/^    ~MemoryBuffer()$/;"	f	class:fmt::internal::MemoryBuffer	access:public	signature:()
~ansicolor_sink	spdlog/sinks/ansicolor_sink.h	/^    virtual ~ansicolor_sink();$/;"	p	class:spdlog::sinks::ansicolor_sink	access:public	signature:()
~ansicolor_sink	spdlog/sinks/ansicolor_sink.h	/^inline ansicolor_sink::~ansicolor_sink()$/;"	f	class:spdlog::sinks::ansicolor_sink	signature:()
~async_log_helper	spdlog/details/async_log_helper.h	/^    ~async_log_helper();$/;"	p	class:spdlog::details::async_log_helper	access:public	signature:()
~async_log_helper	spdlog/details/async_log_helper.h	/^inline spdlog::details::async_log_helper::~async_log_helper()$/;"	f	class:spdlog::details::async_log_helper	signature:()
~async_msg	spdlog/details/async_log_helper.h	/^        ~async_msg() = default;$/;"	p	struct:spdlog::details::async_log_helper::async_msg	access:public	signature:()
~base_sink	spdlog/sinks/base_sink.h	/^    virtual ~base_sink() = default;$/;"	p	class:spdlog::sinks::base_sink	access:public	signature:()
~dist_sink	spdlog/sinks/dist_sink.h	/^    virtual ~dist_sink() = default;$/;"	p	class:spdlog::sinks::dist_sink	access:public	signature:()
~file_helper	spdlog/details/file_helper.h	/^    ~file_helper()$/;"	f	class:spdlog::details::file_helper	access:public	signature:()
~flag_formatter	spdlog/details/pattern_formatter_impl.h	/^    virtual ~flag_formatter()$/;"	f	class:spdlog::details::flag_formatter	access:public	signature:()
~formatter	spdlog/formatter.h	/^    virtual ~formatter() {}$/;"	f	class:spdlog::formatter	access:public	signature:()
~logger	spdlog/details/logger_impl.h	/^inline spdlog::logger::~logger() = default;$/;"	p	class:spdlog::logger	signature:()
~logger	spdlog/logger.h	/^    virtual ~logger();$/;"	p	class:spdlog::logger	access:public	signature:()
~mpmc_bounded_queue	spdlog/details/mpmc_bounded_q.h	/^    ~mpmc_bounded_queue()$/;"	f	class:spdlog::details::mpmc_bounded_queue	access:public	signature:()
~ostream_sink	spdlog/sinks/ostream_sink.h	/^    virtual ~ostream_sink() = default;$/;"	p	class:spdlog::sinks::ostream_sink	access:public	signature:()
~sink	spdlog/sinks/sink.h	/^    virtual ~sink() {}$/;"	f	class:spdlog::sinks::sink	access:public	signature:()
~syslog_sink	spdlog/sinks/syslog_sink.h	/^    ~syslog_sink()$/;"	f	class:spdlog::sinks::syslog_sink	access:public	signature:()
~threadsafe_queue	DMCore/message/threadsafe_queue.h	/^  ~threadsafe_queue();$/;"	p	class:threadsafe_queue	access:public	signature:()
~threadsafe_queue	DMCore/message/threadsafe_queue.h	/^threadsafe_queue<T>::~threadsafe_queue(){}$/;"	f	class:threadsafe_queue	signature:()
~wincolor_sink	spdlog/sinks/wincolor_sink.h	/^    virtual ~wincolor_sink()$/;"	f	class:spdlog::sinks::wincolor_sink	access:public	signature:()
